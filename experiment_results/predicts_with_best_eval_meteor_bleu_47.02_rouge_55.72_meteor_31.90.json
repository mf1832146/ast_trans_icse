[{"predict": "returns a 0 - based depth within the object graph of the current object being serialized", "true": "returns a 0 - based depth within the object graph of the current object being serialized", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the scheme alters the training data set during training", "true": "checks whether the scheme alters the training data set during building", "bleu": 0.9036020036098448, "rouge": 0.9090909090909091}, {"predict": "compute the union of two bit sets", "true": "compute the union size of two bit sets", "bleu": 0.5993954153807813, "rouge": 0.9222462203023757}, {"predict": "test 2 keys with candidates in reverse order", "true": "tests local candidates with remote version in the middle on key 2", "bleu": 0.1223065774797558, "rouge": 0.1930379746835443}, {"predict": "handle closing of the user", "true": "actions to perform when the user has closed the dialog with the ok button", "bleu": 0.059392570240942286, "rouge": 0.19395866454689983}, {"predict": "return a string describing the extension as a string of the classes , in it to display the list of class", "true": "prints out the class i fier", "bleu": 0.06429451441231726, "rouge": 0.16464237516869096}, {"predict": "returns a new sector whose angles are the extremes of the this sector and another", "true": "returns a new sector whose angles are the extremes of the this sector and another", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the double value is equal to double values", "true": "checks if is double values are equal", "bleu": 0.17827531042796255, "rouge": 0.4629981024667932}, {"predict": "integer value of a positive big decimal", "true": "integer value of a positive big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "main recursive method to examine the directory hierarchy", "true": "main recursive method to examine the directory hierarchy", "bleu": 1.0, "rouge": 1.0}, {"predict": "get a sorted array containing all column values for a given tuple iterator and field", "true": "get a sorted array containing all column values for a given tuple iterator and field", "bleu": 1.0, "rouge": 1.0}, {"predict": "divide with invalid rounding mode", "true": "divide with invalid rounding mode", "bleu": 1.0, "rouge": 1.0}, {"predict": "called when a data set is needed to perform a clear event", "true": "receives notification of a change to the plot ' s data set", "bleu": 0.15537125692760353, "rouge": 0.25}, {"predict": "schedule the provided scheduler", "true": "invoke the on scheduler ( ) in i scheduler directly as a library", "bleu": 0.041910459064397936, "rouge": 0.2147887323943662}, {"predict": "indicates whether the given type is a string", "true": "returns true if specified type is java", "bleu": 0.21105340631872638, "rouge": 0.26991150442477874}, {"predict": "api method", "true": "api method", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates a sql statement", "true": "validates the given sql statement where its position in the list of statement is the given index", "bleu": 0.01970244478305109, "rouge": 0.2570224719101124}, {"predict": "converts to object array", "true": "converts to object array", "bleu": 1.0, "rouge": 1.0}, {"predict": "is this logger instance enabled for the fine level ?", "true": "is this logger instance enabled for the finest level ?", "bleu": 0.7419446627365011, "rouge": 0.9}, {"predict": "use the specific ramming item , and add the immediate signing certificate", "true": "remove an used up missile from an attacking player", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "instantiate s a new search instance with filters", "true": "creates a new match er for running coa p over tcp", "bleu": 0.14505474341517546, "rouge": 0.20469798657718125}, {"predict": "determines the maximum level for the given level , starting from the given level , and make it is a new levels in the maximum levels ( i", "true": "recursively does the work", "bleu": 0.04327969719414172, "rouge": 0.07227488151658767}, {"predict": "ask to the user for retyping the pass code just entered before saving it as the current pass code", "true": "ask to the user for retyping the pass code just entered before saving it as the current pass code", "bleu": 1.0, "rouge": 1.0}, {"predict": "rolls back the worker thread creation", "true": "rolls back the worker thread creation", "bleu": 1.0, "rouge": 1.0}, {"predict": "insert functionality test # test insert 4 ( )", "true": "insert functionality test # test insert 4 ( )", "bleu": 1.0, "rouge": 1.0}, {"predict": "general method to parse xml content entry", "true": "writes one entry to the local id map on disk", "bleu": 0.13391424795650428, "rouge": 0.11401869158878504}, {"predict": "receive notification of the end of an element", "true": "receive notification of the end of an element", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a fatal error log message", "true": "send a fatal error log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "this function is used to delete the leaf which is associated with the given name", "true": "leaves can be used for many - to - many relations", "bleu": 0.09103526405546068, "rouge": 0.1582360570687419}, {"predict": "returns a string representation of this vector", "true": "returns a string representation of this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "verifies that the two characters that are the identical to the power of the two characters that are identical to the previous sub - endian", "true": "validate the uri characters within a specific component", "bleu": 0.05377336385080629, "rouge": 0.13362541073384449}, {"predict": "build the final bitmap - pieces to draw in animation", "true": "build the final bitmap - pieces to draw in animation", "bleu": 1.0, "rouge": 1.0}, {"predict": "un registers a previously registered vm shutdown hook", "true": "de - registers a previously - registered virtual - machine shutdown hook", "bleu": 0.22374550494929327, "rouge": 0.5791139240506329}, {"predict": "fill to the new thread", "true": "a seperate thread collects our input so that we can block in the do continue on the main thread and then allow the user to interrupt us via keyboard input on this thread", "bleu": 0.0012005777045415158, "rouge": 0.09291698400609291}, {"predict": "bounds the current scroll if necessary , but does not synchronize the stack view with the model", "true": "bounds the current scroll if necessary", "bleu": 0.32702929224554894, "rouge": 0.5709828393135725}, {"predict": "tests confusion matrix for the confusion", "true": "adds the statistics encapsulated in the supplied evaluation object into this one", "bleu": 0.0812630644213965, "rouge": 0.10481099656357389}, {"predict": "this method is used to check for volumes that new request is ready to be merged with the request", "true": "scans all sites until all volumes involved in the recover point protection are visible", "bleu": 0.0712695567709093, "rouge": 0.12461695607763024}, {"predict": "starts any services that will be invoked when service is built", "true": "this method is called immediately following cache creation in the spawned process , but prior to setting the running flag in the status file", "bleu": 0.034937857872216656, "rouge": 0.053555750658472345}, {"predict": "updates the top and child view", "true": "update the content of the outline view", "bleu": 0.20693220168471366, "rouge": 0.3034825870646766}, {"predict": "paints the image on the window", "true": "paints the image on the window", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if , at this time , the object will accept a connection for re cie ving events described by the named event this object is made", "true": "returns true if , at this time , the object will accept a connection with respect to the named event", "bleu": 0.5397618144067732, "rouge": 0.7302816901408451}, {"predict": "it checks if the name is prefixed ( contains the character ' : ' )", "true": "it returns true if the attribute is prefixed ( used the \" : \" character )", "bleu": 0.1981969856852273, "rouge": 0.5772870662460569}, {"predict": "releases any connection being cleaned up after the database", "true": "release a non - shard - specific connection", "bleu": 0.14113991930789777, "rouge": 0.1189083820662768}, {"predict": "adds a new actions to the quick action view", "true": "adds a collection of actions to the quick action view", "bleu": 0.6327469489917781, "rouge": 0.8341880341880341}, {"predict": "adds a simple render er to the multiple render er", "true": "adds a simple render er to the multiple render er", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies stream , fires progress events by listener , can be interrupted by listener", "true": "copies stream , fires progress events by listener , can be interrupted by listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the needed angle for a given value", "true": "calculates the needed angle for a given value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "true": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance", "true": "creates a new instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a new char seq containing the given two chars represented by this char seq", "true": "append string of the given char seq to this char seq", "bleu": 0.20687206010259407, "rouge": 0.39559014267185466}, {"predict": "handles the \" get \" body \"", "true": "this method processes all of the http get requests routed to the ser v let by the web container", "bleu": 0.03702100183468252, "rouge": 0.14202561117578577}, {"predict": "notify current state change", "true": "change the stored state value and do notification , but don ' t change anything in the hardware", "bleu": 0.012007547560562644, "rouge": 0.16310160427807485}, {"predict": "test for get order ( ) method", "true": "test for get order ( ) method", "bleu": 1.0, "rouge": 1.0}, {"predict": "formats and logs a message with a throw able", "true": "formats and logs a message with a throw able", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs the red is key used to increment and get the local cache for jobs in the queue", "true": "constructs the red is queue sorted set key name given a queue name , shard id and priority", "bleu": 0.21314568971111159, "rouge": 0.3333333333333333}, {"predict": "helper method that decodes a string into its original char set using the specified char set", "true": "decodes the string into specified char set", "bleu": 0.18295654224495206, "rouge": 0.5613496932515337}, {"predict": "adds a new domain name to the restricted list", "true": "adds specified domain name to the list of restricted domains", "bleu": 0.395332692783972, "rouge": 0.6256410256410255}, {"predict": "create a new instance", "true": "create a new read lock from the given lock", "bleu": 0.19159730522949137, "rouge": 0.43160377358490565}, {"predict": "tests fail : always returns false , failing statements commented out", "true": "tests fail : always returns false , failing statements commented out", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the jr mp \" interface hash \" of this remote method", "true": "computes the \" interface hash \" of the stub / skeleton pair for this remote implementation class", "bleu": 0.3100876476940687, "rouge": 0.6019736842105263}, {"predict": "copy the contents of the given byte array to the given output stream", "true": "copy the contents of the given byte array to the given output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the list box has no items", "true": "returns true whether this page doesn ' t contain items , returns false if it does", "bleu": 0.06528905536667998, "rouge": 0.07860824742268041}, {"predict": "draws frame data , either on c", "true": "decodes a frame if needed", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "encode parts of the message using text compaction as described in iso / iec 15438 : 2001 ( e ) , chapter 4", "true": "encode parts of the message using text compaction as described in iso / iec 15438 : 2001 ( e ) , chapter 4", "bleu": 1.0, "rouge": 1.0}, {"predict": "check to see if a string is a valid nc name according to 4 from the xml namespaces 1", "true": "check to see if a string is a valid nc name according to 4 from the xml namespaces 1", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends the specified element to the end of this list", "true": "appends the specified element to the end of this list", "bleu": 1.0, "rouge": 1.0}, {"predict": "prepare the data set required for running test cases", "true": "prepare the data set required for running test cases", "bleu": 1.0, "rouge": 1.0}, {"predict": "retrieves discarded event lease for each service registrar ' s discarded event containing each element in each service getting discarded", "true": "returns array of service registrar created from the proxy reg set", "bleu": 0.08039313477786734, "rouge": 0.1361607142857143}, {"predict": "checks whether the value specified by the range of values is valid", "true": "check if the supplied value is a valid value", "bleu": 0.13065113298388567, "rouge": 0.39102564102564097}, {"predict": "execute primary cleanup volume cleanup", "true": "find a new primary , adding any failed servers we encounter to the excluded servers list first we try to make a backup server the primary , but if run out of backup servers we will try to find a new server", "bleu": 0.0001668793915548367, "rouge": 0.03726328649969456}, {"predict": "creates a new journal that omits redundant information", "true": "creates a new journal that omits redundant information", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the recurrence from persist ant store", "true": "removes the recurrence from persist ant store", "bleu": 1.0, "rouge": 1.0}, {"predict": "copy nodelist members into this nodelist , adding in document order", "true": "copy nodelist members into this nodelist , adding in document order", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method resets fetch time interval fetch data , fetch time interval of time since fetch", "true": "fetches data if it hasn ' t been fetched in a while", "bleu": 0.07692375026049747, "rouge": 0.07331730769230768}, {"predict": "creates a new document type for the given public id , public id and public id", "true": "introduced in dom level 2", "bleu": 0.06468490584192432, "rouge": 0.0}, {"predict": "services a command line request", "true": "services a command line request", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the field array to bytes", "true": "serializes this nested object into byte", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "creates a new css style object from the given style name", "true": "returns first e num constant found in at space - separated list of style names", "bleu": 0.07918230184187261, "rouge": 0.07484662576687118}, {"predict": "click file for click file", "true": "<unk> mpeg next a <unk> <unk> - skip one video frame", "bleu": 0.0691466264618537, "rouge": 0.0}, {"predict": "a map of export mask export mask", "true": "given a set of export mask uris , return a map of export mask uri to export mask object", "bleu": 0.13780769678473323, "rouge": 0.4970896391152503}, {"predict": "inserts the given object at the specified index", "true": "insert an entry at this index", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "write a graphic to the printout", "true": "write a graphic to the printout", "bleu": 1.0, "rouge": 1.0}, {"predict": "put the source tree root node in the document cache", "true": "put the source tree root node in the document cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "copy a input stream to a output resource", "true": "copy a input resource to a output resource", "bleu": 0.5969491792019646, "rouge": 0.875}, {"predict": "starts the audio audio file by the desired length", "true": "fade audio file sox out file fade", "bleu": 0.18575057999133596, "rouge": 0.2557651991614256}, {"predict": "draw into the provided canvas", "true": "to do : to be implemented", "bleu": 0.18796001821050234, "rouge": 0.0}, {"predict": "loads properties from the given class", "true": "for all the classes , loads all properties from each class annotations for the given platform", "bleu": 0.07510361915747192, "rouge": 0.42011019283746553}, {"predict": "add a number to zero", "true": "add a number to zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to get gps timestamp stamp", "true": "fixes the gps timestamp in ex if", "bleu": 0.24608524656663955, "rouge": 0.3034825870646766}, {"predict": "check whether the given event type ' s size matches the events of the given cell type ( and it ' s size )", "true": "check if a cell consumes the specified event type", "bleu": 0.07929026506841375, "rouge": 0.264069264069264}, {"predict": "read a single character", "true": "read a single character", "bleu": 1.0, "rouge": 1.0}, {"predict": "this function is used to plot the y axis and its breakdown with its value", "true": "this function is used to plot the y axis and its breakdown with value", "bleu": 0.8761560783209453, "rouge": 0.9715585893060297}, {"predict": "get the maximum if this map size is bigger than the current value", "true": "get running - maximum time - delta , in nanoseconds", "bleu": 0.10571070857151538, "rouge": 0.1781021897810219}, {"predict": "prints the specified file to the stream", "true": "prints a file with the native desktop printing facility , using the associated application ' s print command", "bleu": 0.04852353400948068, "rouge": 0.2223572296476306}, {"predict": "adds an item to the set of alternative assignments", "true": "extends the existing groundings with the alternative groundings", "bleu": 0.15619699684601276, "rouge": 0.2378167641325536}, {"predict": "parses a token from the stream , with the missing values", "true": "this will attempt to read string matching the given pattern from the document at the current point indicated by the cursor", "bleu": 0.06490157276489836, "rouge": 0.17749757516973808}, {"predict": "test demand types", "true": "test for bug <unk> bug in 0", "bleu": 0.14162677936694862, "rouge": 0.18654434250764526}, {"predict": "this method will be used to check whether stream is already present in cache or not for file path if not present then create it and then add to cache , other wise get from cache", "true": "this method will be used to check whether stream is already present in cache or not for file path if not present then create it and then add to cache , other wise get from cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a listener from the set of listeners", "true": "removes a listener from the set of listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns what the serialization specification calls \" descriptor \" given a field signature", "true": "returns what the serialization specification calls \" descriptor \" given a field signature", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new request body to the request body", "true": "adds an array of parameters to be used in the post request body", "bleu": 0.1416341262365823, "rouge": 0.4401154401154401}, {"predict": "returns the annotation object used to represent this annotation object", "true": "creates an annotation name from a class name", "bleu": 0.12605968092174913, "rouge": 0.11338289962825278}, {"predict": "tests if a resource support object has been support for a resource represented by the id", "true": "checks whether a given resource id supports advanced <unk> or not", "bleu": 0.09147827112247602, "rouge": 0.22989949748743718}, {"predict": "a service wrapper for the create electronic text method method method", "true": "a service wrapper for the create electronic text method method", "bleu": 0.9036020036098448, "rouge": 0.9606299212598426}, {"predict": "validate a term : return true if it can be thought of expressions", "true": "ctor - for use to create a pattern expression tree , without pattern child expression", "bleu": 0.08189957223751165, "rouge": 0.07052023121387282}, {"predict": "compute the intersection of two line segments", "true": "compute the intersection of two line segments", "bleu": 1.0, "rouge": 1.0}, {"predict": "method which removes the specified object class from original set and returns the set of object classes that were removed", "true": "method which removes the specified object class from original set and returns the set of object classes that were removed", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the unix timestamp in milliseconds", "true": "get the seconds since 1970 - 01 - 01 00 : 00 : 00 utc", "bleu": 0.06486736672746916, "rouge": 0.17681159420289855}, {"predict": "tests if the license is currently running", "true": "is there a pdf license", "bleu": 0.20556680845025982, "rouge": 0.17183098591549298}, {"predict": "draws the grid background", "true": "draws the grid background", "bleu": 1.0, "rouge": 1.0}, {"predict": "opens a zip file to an entry in the jar", "true": "opens a stream to an entry in the jar", "bleu": 0.6315552371794037, "rouge": 0.8501742160278747}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will be called before the native file has been initialized", "true": "process the result of copy and upload content uris task", "bleu": 0.10390302174233558, "rouge": 0.09242424242424242}, {"predict": "creates an om graphic list containing graphics from all spatial index objects and shape files", "true": "create the om graphics using the shape file and spatial index", "bleu": 0.13380161378318955, "rouge": 0.3164721141374838}, {"predict": "returns common pool queue for a thread that has submitted at least one task", "true": "returns common pool queue for a thread that has submitted at least one task", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the given attribute is a private class", "true": "checks if the given field has package - private visibility", "bleu": 0.24808415001701817, "rouge": 0.4}, {"predict": "divide : rounding mode is round half up , result is positive ; distance = - 1", "true": "divide : rounding mode is round half up , result is positive ; distance = - 1", "bleu": 1.0, "rouge": 1.0}, {"predict": "api method", "true": "helper method", "bleu": 0.7598356856515925, "rouge": 0.5}, {"predict": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "true": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the ' characters ' into account '", "true": "converts all color and format codes", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "load the text from the specified input stream", "true": "loads the database from the given input stream", "bleu": 0.2777619034011791, "rouge": 0.625}, {"predict": "calculate selector radius the selector radius can be calculated by a simple math calculation of the larger side", "true": "calculate selector radius the selector radius can be calculated by a simple math calculation of the larger side", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines the width of this view", "true": "determines the width of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "test bulk get / put byte methods", "true": "test bulk get / put byte methods", "bleu": 1.0, "rouge": 1.0}, {"predict": "set the title sprite", "true": "an object was added", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "s can forward until you hit a terminating character for a s", "true": "parser for the local phone #", "bleu": 0.10390302174233558, "rouge": 0.1182170542635659}, {"predict": "transforms multiple paths will all matrices", "true": "transforms multiple paths will all matrices", "bleu": 1.0, "rouge": 1.0}, {"predict": "decodes a byte array from base 64 format", "true": "decodes a byte array from base 64 format", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures the truth of an expression involving the state of the calling instance", "true": "ensures the truth of an expression involving the state of the calling instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "item will slide from top of the screen to its natural position", "true": "item will slide from top of the screen to its natural position", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new mutable big integer", "true": "construct a new mutable big integer with a magnitude equal to the specified mutable big integer", "bleu": 0.18887560283756186, "rouge": 0.5041322314049587}, {"predict": "handle request sent with a wrong binding", "true": "handle request sent with a wrong binding", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads from the checkpoint manager", "true": "loads the checkpoints from the given stream", "bleu": 0.24084874887188915, "rouge": 0.32360742705570295}, {"predict": "load from the store", "true": "load from the store", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the string describing the ' info ' of the database", "true": "provides a string representation of whether this connection is closed or not", "bleu": 0.11510518494396255, "rouge": 0.17256011315417258}, {"predict": "puts given parameter value into a list", "true": "puts the given parameter value into a new list object then adds it to the map", "bleu": 0.20211771013895866, "rouge": 0.5685752330226365}, {"predict": "returns the minimum dimensions the target container can use to lay out the components in the specified target container", "true": "returns the minimum dimensions needed to lay out the components contained in the specified target container", "bleu": 0.537700339214563, "rouge": 0.81255946717412}, {"predict": "solve the internal function like \" real \" and set the requirements always be like \" quotation \"", "true": "a coordinate descent algorithm for l 1 - loss and l 2 - loss epsilon - s vr dual problem min \\ beta 0", "bleu": 0.048791471827262345, "rouge": 0.04642313546423135}, {"predict": "select the given position in the list using the given position", "true": "select a view from position in the adapter", "bleu": 0.22416933501922287, "rouge": 0.433392539964476}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "ign or able whitespace", "true": "ign or able whitespace", "bleu": 1.0, "rouge": 1.0}, {"predict": "wait for the specified editor to be active", "true": "get editor for provided file , returns once editor is active or after time out", "bleu": 0.07949903911132591, "rouge": 0.24729729729729732}, {"predict": "computes the solutions in the single objective value at the objective value", "true": "returns the solution with the largest objective value for the given objective", "bleu": 0.1690062198556585, "rouge": 0.5}, {"predict": "converts a vertical mercator coord s to the y and y axis", "true": "returns the y position based on latitude", "bleu": 0.1367440667823257, "rouge": 0.22101449275362317}, {"predict": "register a listener for a service found entry", "true": "registration for event change notifications", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "parses an ascii property list from an input stream", "true": "parses an ascii property list from an input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate score for a given score by applying the current score ( index 0 ) and return the score for each node in the current iteration", "true": "function to be minimized : - log likelihood", "bleu": 0.03925345689749394, "rouge": 0.0}, {"predict": "creates a new instance of grammatical it y estimator , using a given word - gram", "true": "creates a new instance of grammatical it y estimator , using a given set of documents for training", "bleu": 0.7106855248313476, "rouge": 0.7566793893129771}, {"predict": "check that the zone link link is in the standard format", "true": "change this should review zone", "bleu": 0.11390778025531027, "rouge": 0.13406593406593406}, {"predict": "checks a poisson distribution with a random sample value from the distribution", "true": "verifies that next poisson ( mean ) generates an empirical distribution of values consistent with poisson distribution i mpl by generating 1000 values , computing a grouped frequency distribution of the observed values and comparing this distribution to the corresponding expected distribution computed using poisson distribution i mpl", "bleu": 0.008414324222547915, "rouge": 0.1804733727810651}, {"predict": "check that x contains infinity", "true": "loop and ensure all elements are non - in fi it e and non - nan , throws an exception if one is", "bleu": 0.006272840429486897, "rouge": 0.0}, {"predict": "measure and layout all currently visible children", "true": "measure and layout all currently visible children", "bleu": 1.0, "rouge": 1.0}, {"predict": "process the connection and sends all the connection events to the event", "true": "processes game events occurring on this connection by dispatching them to any registered game listener objects", "bleu": 0.08853619422215007, "rouge": 0.13926940639269406}, {"predict": "returns a new number that keeps only the settings of values falling within the specified range", "true": "gets the percent of values within the specified value range", "bleu": 0.18295654224495206, "rouge": 0.5618421052631578}, {"predict": "quietly closes the given close able ignoring any io exceptions", "true": "closes resource without reporting any error", "bleu": 0.13950796967929133, "rouge": 0.26180257510729615}, {"predict": "release a request for the give request for execution", "true": "similar to the release page context method , but take luce e page context as entry", "bleu": 0.07176093398791644, "rouge": 0.07615480649188515}, {"predict": "adds a new event listener to this dialog", "true": "adds a new event listener to this dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts string to byte array", "true": "returns this java string as a null - terminated byte array", "bleu": 0.11629030063732083, "rouge": 0.35124760076775424}, {"predict": "load in a file from the class path given the class path and return the class path of the given class path", "true": "atomic ally load the properties file at the given location within the designated class loader", "bleu": 0.09314939614341396, "rouge": 0.3357798165137615}, {"predict": "override to test for equality", "true": "returns true if the object is a graph with the same content", "bleu": 0.0566124695559154, "rouge": 0.0}, {"predict": "parses a name - value - pair with the given parser", "true": "parses a name - value - pair with the given parser", "bleu": 1.0, "rouge": 1.0}, {"predict": "actions a pull event", "true": "actions a pull event", "bleu": 1.0, "rouge": 1.0}, {"predict": "get an object at a vector location of a vector", "true": "returns the mapping object at the location in map indicated by loc", "bleu": 0.14595947916189678, "rouge": 0.2683284457478006}, {"predict": "compile the template and return the result", "true": "parse the file to string with the json", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "find the differences between two texts", "true": "find the differences between two texts", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance of a new domain", "true": "construct a new repository with the given default domain", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "returns the number of un processed tokens remaining in the string", "true": "returns the number of un processed tokens remaining in the string", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the index files that do not already been parsed and adds them to the index queue", "true": "possibly better in <unk> low memory environments ? <unk> the above method by creating a queue with one element and passes it in", "bleu": 0.06036030497379183, "rouge": 0.09736632083000799}, {"predict": "reset all common components before parsing", "true": "reset all common components before parsing", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the label and its labels and no ones", "true": "updates the label field of the invalid t gt , and if the volume is <unk> by a v plex volume , also updates the target v plex volume label", "bleu": 0.026935118370575124, "rouge": 0.18697318007662836}, {"predict": "handles a message in a directory", "true": "shows the given errors to the user", "bleu": 0.15723447135049806, "rouge": 0.0}, {"predict": "reads the case of an object from the bean", "true": "handle serialization a little bit better , replacing the i 18 n and bean context child support", "bleu": 0.06421450514370824, "rouge": 0.14575866188769412}, {"predict": "paint the arrow in the foreground color", "true": "paint the arrow in enabled state", "bleu": 0.5169731539571706, "rouge": 0.6240409207161125}, {"predict": "logs a thrown exception", "true": "logs a thrown exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a small big decimal to big integer", "true": "convert a small big decimal to big integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "called when the accuracy of the sensor has changed", "true": "called when the accuracy of the sensor has changed", "bleu": 1.0, "rouge": 1.0}, {"predict": "set max c rl number ( big integer max c rl ) method testing", "true": "set max c rl number ( big integer max c rl ) method testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes the context menu that shows a bookmark menu", "true": "checks if the given mouse event is a popup trigger and creates a new popup menu if necessary", "bleu": 0.061746576272781344, "rouge": 0.20962199312714777}, {"predict": "first pending tasks that are tasks in the queue , and returns true if they are no task in the list of the task is full , or the tasks that are skipped", "true": "remove a task if it has index > = min", "bleu": 0.0405185766962521, "rouge": 0.05147679324894515}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures that all the files exist in the path", "true": "ensures that the given path exists with no data , the current a cl and no flags", "bleu": 0.09081302407530907, "rouge": 0.29151732377538825}, {"predict": "load a class", "true": "override load class so we can check package access", "bleu": 0.08047084086794415, "rouge": 0.30576441102756885}, {"predict": "determines the height of this view", "true": "determines the height of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "this only checks clipping along the bottom edge", "true": "this only checks clipping along the bottom edge", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new scheduling rule factory for the given work space", "true": "creates a new scheduling rule factory for the given work space", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a byte array to a file creating the file if it does not exist", "true": "writes a byte array to a file creating the file if it does not exist", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the specified item to the end of the list", "true": "adds the specified item to the end of the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if there is something on a local message", "true": "checks and flushes custom event messages if no nodes are attempting to join the grid", "bleu": 0.07246365075155338, "rouge": 0.07973856209150328}, {"predict": "determines the number of consecutive characters that are en cod able using numeric compaction", "true": "determines the number of consecutive characters that are en cod able using numeric compaction", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the current node and returns the number of elements added", "true": "parses the current node and returns the number of elements added", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the entity corresponding to a given parameters", "true": "calculates scramble image height multiplier to respect aspect ratio", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "verify that per - property dynamic types and attribute values are both \" native \" , others", "true": "unit test to verify that limited number of core types do not include type information , even if declared as object", "bleu": 0.08537483867290943, "rouge": 0.2066045723962743}, {"predict": "close callback , this cache callback and close callback", "true": "the listener is not closed until after the after region destroy event", "bleu": 0.08504083946364166, "rouge": 0.0}, {"predict": "static version of indexof , to allow repeated calls without needing to re - acquire array each time", "true": "static version of indexof , to allow repeated calls without needing to re - acquire array each time", "bleu": 1.0, "rouge": 1.0}, {"predict": "populate the profiles for the profiles", "true": "populate the profiles combo box and select the default", "bleu": 0.26367153725164694, "rouge": 0.5147679324894514}, {"predict": "validates the header for the file , validates the magic number , and checks the header for the bin log version", "true": "read the file header and return the log sequence number stored in the file header", "bleu": 0.10331208012220436, "rouge": 0.34366197183098596}, {"predict": "absolute value of the absolute value", "true": "absolute value of real component", "bleu": 0.4111336169005197, "rouge": 0.5545454545454546}, {"predict": "determines the n - th - th alpha value where this in the specified range", "true": "returns the type of the ex tre mum at the specified alpha values", "bleu": 0.12300686288463772, "rouge": 0.21708185053380782}, {"predict": "returns oid for a lg name", "true": "returns oid for a lg name", "bleu": 1.0, "rouge": 1.0}, {"predict": "provide reflective behavior to construct instance of generator given an array of string arguments", "true": "provide reflective behavior to construct instance of generator given an array of string arguments", "bleu": 1.0, "rouge": 1.0}, {"predict": "refills the input buffer", "true": "refills the input buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "in - list selection and list of mouse events", "true": "when there is an in place editor we \" listen \" all mouse event and finish editing by any mouse pressed or mouse released event", "bleu": 0.028367971685519765, "rouge": 0.16266666666666663}, {"predict": "add a module to the set of modules to load and register its services", "true": "add a module to the set of modules to load and register its services", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether there are any tables in the database", "true": "makes sure that all required bin navi database tables exist", "bleu": 0.1397712139461423, "rouge": 0.10427350427350426}, {"predict": "classifies the last feature vector configured on the pipe", "true": "this method classifies several instances at once", "bleu": 0.14113991930789777, "rouge": 0.1278825995807128}, {"predict": "to bind different view of holder and solve the bind header", "true": "bind header with provided view holder at specified position", "bleu": 0.17033186037639278, "rouge": 0.3055091819699499}, {"predict": "updates the selected line list", "true": "updates the displayed list of lines", "bleu": 0.31610981104846864, "rouge": 0.5366568914956013}, {"predict": "draws a rectangle of given half width and half height , centered on ( x , y )", "true": "draws a rectangle of given half width and half height , centered on ( x , y )", "bleu": 1.0, "rouge": 1.0}, {"predict": "re - measure the loading views height , and adjust internal padding as necessary", "true": "re - measure the loading views height , and adjust internal padding as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "replaces a split element with a given split element", "true": "replaces a split element with another one", "bleu": 0.5169731539571706, "rouge": 0.639412997903564}, {"predict": "called to start adding an item to an item list", "true": "called to start an item list", "bleu": 0.33932513407933634, "rouge": 0.7854077253218884}, {"predict": "get the number of rows between given number of records", "true": "pick a number of initial splits based on the number of records expected to be processed", "bleu": 0.18622558200190545, "rouge": 0.36924939467312345}, {"predict": "invoked when a mouse button has been clicked", "true": "invoked when the mouse has been clicked on a component", "bleu": 0.29704751687896164, "rouge": 0.6535714285714286}, {"predict": "source source source files to source directory", "true": "scans a single source dir for sources and includes only the files whose name match the patterns in source includes and excludes all files whose names match the patterns in source excludes", "bleu": 0.006566946218814477, "rouge": 0.1838733986435569}, {"predict": "returns true if there is another postponed route to try", "true": "returns true if there is another postponed route to try", "bleu": 1.0, "rouge": 1.0}, {"predict": "determine whether the selection has a single element", "true": "check if the selection has a single element", "bleu": 0.7259795291154771, "rouge": 0.75}, {"predict": "create i gfs path from uri", "true": "constructs a path from an uri", "bleu": 0.31239399369202553, "rouge": 0.5}, {"predict": "reads a xml element attribute an s cast it to a in t value", "true": "reads a xml element attribute an s cast it to a in t value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the remainder of ' reader ' as a string , closing it when done", "true": "returns the remainder of ' reader ' as a string , closing it when done", "bleu": 1.0, "rouge": 1.0}, {"predict": "here we add a check to the set of columns in the column being used for get ter", "true": "adds the get ter s for a property that is identified by a property number which indexes into array of get ter s per type", "bleu": 0.07507424233100876, "rouge": 0.18074074074074073}, {"predict": "moves the entry to the buffer", "true": "marks the specified entry as used by setting its last used time to the current time in nanoseconds", "bleu": 0.04470346785554712, "rouge": 0.30576441102756885}, {"predict": "execute a http request", "true": "default : just returns \" success \"", "bleu": 0.142719668098593, "rouge": 0.0}, {"predict": "handles the state left and up it to a sequence of tokens", "true": "handle node leaving the ring", "bleu": 0.10390302174233558, "rouge": 0.12708333333333333}, {"predict": "registers implementing class of the signature algorithm with algorithm uri", "true": "registers implementing class of the transform algorithm with algorithm uri", "bleu": 0.7016879391277371, "rouge": 0.9}, {"predict": "creates new key value based on the specified file", "true": "constructs ignite cache key / value persistence settings", "bleu": 0.15619699684601276, "rouge": 0.2378167641325536}, {"predict": "checks whether the input sequence contains characters", "true": "returns true if the input string contains a word - breaking character", "bleu": 0.1285981829222983, "rouge": 0.30148270181219106}, {"predict": "runs all nodes of a route of connecting s and interior vertex", "true": "checks all pairs of segments for intersections at an interior point of a segment", "bleu": 0.13765233317534833, "rouge": 0.22761194029850743}, {"predict": "removes the first occurrence , starting at the beginning and moving towards the end , of the specified object from this vector", "true": "removes the first occurrence , starting at the beginning and moving towards the end , of the specified object from this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a compose function with the given node , after taking care of which after the first and", "true": "compose two functions together into a single function", "bleu": 0.08097785064266204, "rouge": 0.16531165311653115}, {"predict": "add an array of column specifications", "true": "add cdc column specifications", "bleu": 0.31239399369202553, "rouge": 0.6224489795918368}, {"predict": "utility method that implements data binding ' s logic to convert a file name to a java field name", "true": "utility method to convert a variable name into java field name", "bleu": 0.19835441454182887, "rouge": 0.6303099885189437}, {"predict": "a function that generates random aes & h mac keys and prints out exceptions but doesn ' t throw them since none should be encountered", "true": "a function that generates random aes & h mac keys and prints out exceptions but doesn ' t throw them since none should be encountered", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures the truth of an expression involving one or more parameters to the calling method", "true": "ensures the truth of an expression involving one or more parameters to the calling method", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the form form form", "true": "use the parameter sq lite database to execute the passing sql s", "bleu": 0.06732395159376953, "rouge": 0.1095152603231598}, {"predict": "creates a new journal that omits redundant information", "true": "creates a new journal that omits redundant information", "bleu": 1.0, "rouge": 1.0}, {"predict": "refreshes the done button by the user", "true": "refreshes the done button", "bleu": 0.5169731539571706, "rouge": 0.7648902821316614}, {"predict": "create the migration task editor", "true": "create the basic editor", "bleu": 0.3860973950960897, "rouge": 0.6802973977695167}, {"predict": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "true": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures there is enough space in the buffer for the given number of additional bytes", "true": "ensures there is enough space in the buffer for the given number of additional bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "accepts an ipv 4 address of the form xxx", "true": "accepts an ipv 4 address of the form xxx", "bleu": 1.0, "rouge": 1.0}, {"predict": "close the given cursor and remove it from the map", "true": "close the given cursor and remove it from the map", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the input matched by the first capturing group", "true": "determines if the remaining g ser string matches the provided pattern", "bleu": 0.16108992769687397, "rouge": 0.2727272727272727}, {"predict": "generate the instruction to push an integer given the stack", "true": "push i on to our operand stack", "bleu": 0.14991106946711685, "rouge": 0.24302788844621517}, {"predict": "returns the xml node with the given name and content", "true": "create an xml node with optional attributes and content", "bleu": 0.27901593935858265, "rouge": 0.5313588850174217}, {"predict": "adds the specified item to the list", "true": "adds the specified item to the list with the specified position", "bleu": 0.5647181220077593, "rouge": 0.7478108581436078}, {"predict": "notify unsuccessful completion of the operation", "true": "notify unsuccessful completion of the operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "transform an xsl - fo stream source to the specified output format", "true": "transform an xsl - fo stream source to the specified output format", "bleu": 1.0, "rouge": 1.0}, {"predict": "splits the input string based on the default delimiter character , which means the delimiter is a product using our protocol", "true": "splits the input string based on the default delimiter , and also escapes delimiter", "bleu": 0.4308206906207312, "rouge": 0.652089407191448}, {"predict": "reads thread for last events that has already been registered", "true": "reads data with blocking", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "remove the parameters appropriate for parameters with parameters marked with the parameters appropriate for parameters", "true": "remove an <unk> from every state in the state set", "bleu": 0.09103526405546068, "rouge": 0.1659863945578231}, {"predict": "set bounds for the right text view including clip padding", "true": "set bounds for the right text view including clip padding", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the appropriate package content i mpl for the given data block and row name", "true": "creates a nes compound content for the given blob information", "bleu": 0.16943571815930883, "rouge": 0.4149659863945578}, {"predict": "checks if the cluster for the specified cluster is on the cluster", "true": "checks , whether all attributes are covered by cluster definitions and returns true in that case", "bleu": 0.08239221254954013, "rouge": 0.13926940639269406}, {"predict": "find all values of the specified string in the rule set", "true": "search for a string in the enumeration", "bleu": 0.21200626759025185, "rouge": 0.3472485768500949}, {"predict": "returns the first index of el t in the array if < len , else - 1", "true": "returns the first index of el t in the array if < len , else - 1", "bleu": 1.0, "rouge": 1.0}, {"predict": "append a value to a list", "true": "add a new value for name", "bleu": 0.24446151121745047, "rouge": 0.3333333333333333}, {"predict": "compares the argument to this certificate", "true": "compares the argument to this certificate", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a given cell to a row", "true": "appending the between operator clause", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "writes a long value", "true": "encode a unicode string", "bleu": 0.35930411196308426, "rouge": 0.25}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a new map with a unique time serie", "true": "build an occurrence count by value for the given time serie", "bleu": 0.14873743701255318, "rouge": 0.19645732689210954}, {"predict": "this function will take a song entry and update it to the latest week and increase the count for the current week by 1 if necessary", "true": "this function will take a song entry and update it to the latest week and increase the count for the current week by 1 if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "recursively assign node weights", "true": "recursively assign node weights", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance of search engine", "true": "creates a new instance of search engine", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a field to a list of possible query fields", "true": "adds a field to run the query string against", "bleu": 0.3672056269893592, "rouge": 0.5313588850174217}, {"predict": "combines a completion stage into a stage and returns the result", "true": "combines multiple stages by applying a function", "bleu": 0.12605968092174913, "rouge": 0.2314990512333966}, {"predict": "build the create statement to be used in an id", "true": "return a statement that will create the schema , null if no create schema can be given", "bleu": 0.07871455930916259, "rouge": 0.21229698375870074}, {"predict": "and for two negative numbers ; the first is shorter", "true": "and for a negative and a positive numbers ; the first is shorter", "bleu": 0.4803550589888314, "rouge": 0.7646239554317549}, {"predict": "create a new stream info manager based on a message", "true": "create a new manager object", "bleu": 0.24808415001701817, "rouge": 0.5674418604651164}, {"predict": "returns a new sentence can be derived from the sentence", "true": "returns the list of sentences in the knowledge base chained together as a single sentence", "bleu": 0.09614217984757345, "rouge": 0.23164556962025318}, {"predict": "determine if the expression form a form of it form a boolean", "true": "determine if the expression is a pronoun", "bleu": 0.3026643726685863, "rouge": 0.552536231884058}, {"predict": "output the sql type for a java short", "true": "output the sql type for a java short", "bleu": 1.0, "rouge": 1.0}, {"predict": "breaks a string to multiple strings", "true": "breaks a string to multiple strings ( similar to string token ize r )", "bleu": 0.2635971381157267, "rouge": 0.5596330275229358}, {"predict": "write all modified favorites to the data stream", "true": "write all modified favorites to the data stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the last average estimate of the last average time", "true": "update the fps counter", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "validates all payment product ids", "true": "validates all fields based on their value and their validation rules if a field is pre filled from the account on file , but it has been altered , it will be validated", "bleu": 0.0013286576388114103, "rouge": 0.09291698400609291}, {"predict": "create a new crypto result crypto", "true": "note , does not make a defensive copy of any of the data", "bleu": 0.06878769894132081, "rouge": 0.09870550161812298}, {"predict": "invoked when the target of the widget has changed of the frames at easy way of easy i", "true": "handle a change in the slider by updating the data set value", "bleu": 0.07535838128770536, "rouge": 0.13832199546485258}, {"predict": "run a delimited list of strings , separated by the delimiter", "true": "parse a list of substring s separated by a given delimiter", "bleu": 0.20504572236241866, "rouge": 0.5454545454545454}, {"predict": "creates the layout to be used and adds the layout private keys", "true": "lays out the panel", "bleu": 0.10390302174233558, "rouge": 0.13738738738738737}, {"predict": "indicates whether this frame is currently running", "true": "returns true if the gui is started and not paused , and false otherwise", "bleu": 0.06833381956448398, "rouge": 0.08983799705449189}, {"predict": "creates a default mosaic definition", "true": "creates a default mosaic definition", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the result of a join node that matches the equivalent to the probability using the first parameter", "true": "creates a result based on a single relational expression", "bleu": 0.07535838128770536, "rouge": 0.15762273901808785}, {"predict": "this method will trust the trust manager", "true": "set the default x 509 trust manager to an instance of a fake class that trust all certificates , even the self - signed ones", "bleu": 0.021228310944440526, "rouge": 0.17023255813953486}, {"predict": "checks if the component is in the form component", "true": "is the component in need of a form", "bleu": 0.2208959113415788, "rouge": 0.4756335282651072}, {"predict": "adds a listener to be notified when the chart has been registered", "true": "adds all internal listeners", "bleu": 0.10390302174233558, "rouge": 0.13738738738738737}, {"predict": "the \" safe \" square root of the input value , handling negative values by simply making them positive and then negating the return value", "true": "the \" safe \" square root of the input value , handling negative values by simply making them positive and then negating the return value", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs list of threads in given list of threads , returning them in threads", "true": "runs callable tasks each in separate threads", "bleu": 0.10511846841633776, "rouge": 0.30398671096345514}, {"predict": "receive a single or double to the string buffer", "true": "appends a character to parser ' s buffer", "bleu": 0.16784459625186196, "rouge": 0.35672514619883033}, {"predict": "initializes the owner references for the field set as field", "true": "sets the provided state manager as the owner for the provided field value", "bleu": 0.16810676226047, "rouge": 0.42479108635097496}, {"predict": "construct a select statement suitable for use in a group of select statements that will be joined through union operators in build union query", "true": "construct a select statement suitable for use in a group of select statements that will be joined through union operators in build union query", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new node object", "true": "constructs a node with the given location", "bleu": 0.20252884954471367, "rouge": 0.32360742705570295}, {"predict": "increase and add all accuracy of the grid and then make sure it is visible", "true": "adds an element to the counter or caches it to be added", "bleu": 0.09103526405546068, "rouge": 0.15117719950433703}, {"predict": "de serialization object to all the files found in the database", "true": "reverts the list of files we are passed", "bleu": 0.12605968092174913, "rouge": 0.216696269982238}, {"predict": "concatenates a list of float arrays into a single array", "true": "concatenates a list of float arrays into a single array", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a tagging decorator for the given string", "true": "iterator over all values following an occurrence of tag in a line", "bleu": 0.09726684100532913, "rouge": 0.09651898734177215}, {"predict": "creates a new tree tree node with the current path", "true": "move higher in the tree , beyond even an apparent root of tree", "bleu": 0.11105685174312292, "rouge": 0.16991643454039}, {"predict": "writes the contents of the internal buffer to the given array starting at the given offset", "true": "writes the contents of the internal buffer to the given array starting at the given offset", "bleu": 1.0, "rouge": 1.0}, {"predict": "called when the item is removed from the navigation box is removed for the item ' s display", "true": "dismisses item from the given position", "bleu": 0.09629943614188137, "rouge": 0.27477477477477474}, {"predict": "probability density function of the standard normal distribution using the specified variance", "true": "calculate a normal probability density function ( pdf ) based on a variance and mean value", "bleu": 0.15334918670155004, "rouge": 0.2785388127853881}, {"predict": "sorts an array of strings , returning a new array with the sorted items", "true": "sorts an array of strings , returning a new array with the sorted items", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new zoom listener", "true": "adds a new zoom listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize all registers of the function received from start instruction", "true": "initialize ( clear ) the d node field in register for all registers in this basic block by setting them to null", "bleu": 0.056776069823499774, "rouge": 0.17562380038387712}, {"predict": "fire when an annotation with the given annotation", "true": "fire when an annotation has been selected", "bleu": 0.44632361378533286, "rouge": 0.5398230088495575}, {"predict": "updates the timestamp and returns true if timestamp has passed in", "true": "updates the prediction stats and return whether prediction is allowed", "bleu": 0.16108992769687397, "rouge": 0.28818897637795277}, {"predict": "authenticates the server evidence message m 1 using the previously received values", "true": "authenticates the server evidence message m 2 received and saves it only if correct", "bleu": 0.41167649729202893, "rouge": 0.5310945273631842}, {"predict": "handles an rt f rt f rt f syntax and integer", "true": "handles any pure text ( containing no control characters ) in the input stream", "bleu": 0.08671803715615023, "rouge": 0.07830551989730423}, {"predict": "removes an existing uri from the listener list", "true": "remove a service from the registry and / or set of known aliases", "bleu": 0.11296874775996037, "rouge": 0.18263473053892215}, {"predict": "generate a canonical form that describes a name containing head and removing newlines", "true": "removes each two leading ' \\ ' , removes leading $ , removes { } examples : $ qq q - > qq q \\ $ qq q - > qq q if dummy attributes are collected too , null otherwise \\ \\ $ qq q - >", "bleu": 0.005439817074321565, "rouge": 0.0}, {"predict": "constructs an escaped writer around the given writer", "true": "constructs an escaped writer around the given writer", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if this cookie has expired", "true": "returns true if this cookie has expired", "bleu": 1.0, "rouge": 1.0}, {"predict": "copy the contents of the view hierarchy to the given builder", "true": "records the record builder i mpl , and verifies if required", "bleu": 0.12605968092174913, "rouge": 0.18181818181818182}, {"predict": "check if method is the method of the given method parameter", "true": "compare the method that was called to the intended method when the os x adapter instance was created ( e", "bleu": 0.07515606632432709, "rouge": 0.24522613065326637}, {"predict": "remainder of division of equal equal numbers", "true": "remainder of division of two positive numbers", "bleu": 0.5410822690539396, "rouge": 0.7142857142857143}, {"predict": "clear the metadata and get it property", "true": "resets the state of this builder", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "\\ brief distance ( this , b )", "true": "\\ brief distance ( vec 3 a , vec 3 b )", "bleu": 0.3219290164685343, "rouge": 0.6756329113924051}, {"predict": "check the backup info file to check for backup partition info", "true": "checks version and ips", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "converts the given string to lower case , based on the given string", "true": "convert to lower case , and check that all chars are ascii alphanumeric , ' - ' or '", "bleu": 0.16756772547233145, "rouge": 0.2418235877106045}, {"predict": "create a negative number from a sign and an array of bytes", "true": "create a negative number from a sign and an array of bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds and returns a opus comment", "true": "builds and returns a opus comment", "bleu": 1.0, "rouge": 1.0}, {"predict": "asserts that the properties of the property name matches the received values for", "true": "assert that the property values of a new event and a removed event match the expected insert and removed values", "bleu": 0.10035583274163877, "rouge": 0.29186602870813394}, {"predict": "returns the number of elements in this set", "true": "returns the number of elements in this set", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a string s rc to uppercase , using case insensitive manner", "true": "safely convert the string to uppercase", "bleu": 0.14694106251955755, "rouge": 0.3546511627906977}, {"predict": "return an iterator over the edges of the knowledge base that contains the background knowledge", "true": "iterator over the knowledge edge ' s representing required edges", "bleu": 0.18207052811092128, "rouge": 0.3319727891156462}, {"predict": "unlocks the given lock", "true": "unlocks the objects acquired from locking", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "creates and returns a string formatted so it will fit in a box suitable for a java doc header", "true": "creates and returns a string formatted so it will fit in a box suitable for a java doc header", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to convert a number to two - digit characters", "true": "force number string to two digits , this takes a string of digits , and forces it to be two digits long", "bleu": 0.05942382975385461, "rouge": 0.2341650671785029}, {"predict": "add an item to the list of items that should be dropped on the combo box ( this method is used for more items", "true": "adds a named item to the list of items that will be dropped on dead if clear drop item list hasn ' t been called first , this will change all creatures of this kind", "bleu": 0.21122526839055547, "rouge": 0.36075268817204303}, {"predict": "finds a list of the given type by its primary key", "true": "finds jp a entities by their primary keys", "bleu": 0.14323145079400493, "rouge": 0.433392539964476}, {"predict": "load work fl w and initialize the session attributes", "true": "load work fl w and initialize the session attributes", "bleu": 1.0, "rouge": 1.0}, {"predict": "implementation of the method to generate an instance", "true": "returns a hash code value for this certificate from its encoded form", "bleu": 0.08179133792443427, "rouge": 0.0}, {"predict": "removes the from tags", "true": "removes the from tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "verifies the given sec p 256 k 1 signature in native code", "true": "verifies the given sec p 256 k 1 signature in native code", "bleu": 1.0, "rouge": 1.0}, {"predict": "recursively delete the web app directory", "true": "recursively delete the web app directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "verifies that the iterator visits the same elements in the iterator and that the iterator results are in the iterator", "true": "verifies that the iterator visits the specified objects in some arbitrary ordering and that the iterator is exhausted once all expected objects have been visited", "bleu": 0.3136754143664472, "rouge": 0.4792857142857143}, {"predict": "returns the fixed in progress bar to be finished", "true": "formats the finished percentage of a <unk> group into a string with one digit after comma", "bleu": 0.07176093398791644, "rouge": 0.1523096129837703}, {"predict": "generate the host name for the host name", "true": "generates the hostname for a node", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "copies all properties from the specified file and removes them as a new one", "true": "transfer all the sequences listed in the supplied file , interpreting entries appropriately", "bleu": 0.10511846841633776, "rouge": 0.2237163814180929}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "unwraps expression and remove an expression", "true": "removes the outermost property from a nested get ter expression", "bleu": 0.11341174240707227, "rouge": 0.11960784313725491}, {"predict": "if we have all pie chart config then there is no point in reloading it", "true": "if we have all pie chart config then there is no point in reloading it", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the next event number so that the next generated number will be run", "true": "generates a ( random ) time difference between two events", "bleu": 0.07432998184513635, "rouge": 0.0}, {"predict": "creates the line structure for the given text", "true": "creates the line structure for the given text", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the positive square root of the specified value", "true": "returns the positive square root of the specified value", "bleu": 1.0, "rouge": 1.0}, {"predict": "counts the number of black / white transitions between two points , using something like bres en ham ' s algorithm", "true": "counts the number of black / white transitions between two points , using something like bres en ham ' s algorithm", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a number to a bit string", "true": "convert a number into a bit string with separators between each group of 8", "bleu": 0.18393972058572117, "rouge": 0.5390279823269514}, {"predict": "encodes an array of bytes into an array of url safe 7 - bit characters", "true": "encodes an array of bytes into an array of url safe 7 - bit characters", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new message token ize r", "true": "initializes with the string contents", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "wait for a resource to be logged at this node", "true": "waits for all threads to reach this barrier", "bleu": 0.14991106946711685, "rouge": 0.34014869888475835}, {"predict": "load the translation cache if not already been found in any", "true": "populates the translations cache map unless it is already populated", "bleu": 0.1354599427337814, "rouge": 0.28818897637795277}, {"predict": "drawing a new round mouse mode for handling events", "true": "construct a <unk> mouse mode", "bleu": 0.19960198807747329, "rouge": 0.4518518518518518}, {"predict": "adds a new event to the head of the queue", "true": "adds a new event to the queue", "bleu": 0.6132297420585351, "rouge": 0.850597609561753}, {"predict": "stops the timer with the specified name", "true": "stops the timer with the specified name", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the summary as string", "true": "returns the summary as string", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a temporary file in the directory given by java", "true": "create a hierarchy of directories ( a path ) in the designated temp dir", "bleu": 0.1398375243152994, "rouge": 0.32360742705570295}, {"predict": "performs a division of the notes data , except for zero and the boolean value to be sent to the current color", "true": "draws a horizontal span into the graph and optionally adds a legend", "bleu": 0.06586656967644004, "rouge": 0.18635437881873726}, {"predict": "select also all items belonging to any connected set of the current selected items", "true": "select also all items belonging to any connection of the current selected items", "bleu": 0.7241577342575828, "rouge": 0.8948655256723717}, {"predict": "create a new abstract key builder , with i classes describing assuming that the components are visible", "true": "create a new instance that optionally supports unicode sort keys", "bleu": 0.14216645907653844, "rouge": 0.31082802547770705}, {"predict": "removes from the list of nodes any that cannot be parents of x given the background knowledge", "true": "removes from the list of nodes any that cannot be parents of x given the background knowledge", "bleu": 1.0, "rouge": 1.0}, {"predict": "configures client - properties pairs from the specified root directory", "true": "called with an input stream for a properties file , used for reading tiles", "bleu": 0.08450033111870488, "rouge": 0.08090185676392574}, {"predict": "opens a new connection", "true": "open a new database connection", "bleu": 0.39573418216703893, "rouge": 0.6535714285714286}, {"predict": "a simple implementation of the add relations method which presents the general concept of the project", "true": "a simple implementation of the add relations method which presents the general concept of the method", "bleu": 0.9351334836242398, "rouge": 0.9375000000000001}, {"predict": "this method processes the backward processes in the marker set", "true": "the <unk> p packets are forwarded out of all the ports out of an open flow domain", "bleu": 0.06927760750451363, "rouge": 0.14153132250580047}, {"predict": "sleep the current thread", "true": "waits the specified number of milliseconds", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "verify that the write set does not exist", "true": "verify that the write set is not found ( no keys in 0 : 1000 ) )", "bleu": 0.1981917551665954, "rouge": 0.45073891625615764}, {"predict": "calculate the entropy of the b entropy", "true": "calculates the entropy corresponding to the input <unk>", "bleu": 0.22772101321113858, "rouge": 0.3952483801295896}, {"predict": "check to see if a string is a valid nm token according to 7 in the xml 1", "true": "check to see if a string is a valid nm token according to 7 in the xml 1", "bleu": 1.0, "rouge": 1.0}, {"predict": "search for the search popup if the user wants to perform the handle", "true": "determines what action the user wants to perform", "bleu": 0.3498761149110956, "rouge": 0.4975530179445351}, {"predict": "parses a double value from a string", "true": "parses out and converts the text located between first occurrences of the open and closed tags into double", "bleu": 0.04270613179243733, "rouge": 0.14823815309842042}, {"predict": "put a string into the log", "true": "place a string into the message ( using utf - 8 encoding )", "bleu": 0.19144701285352453, "rouge": 0.39482200647249194}, {"predict": "actions a pull event", "true": "actions a pull event", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a r tcp event listener", "true": "add a r tcp event listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new array of the given size if necessary and copies the data into the new array", "true": "creates a new array of the given size if necessary and copies the data into the new array", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method detects a code in a \" pure \" image - - that is , pure monochrome image which contains only an un rotated , un skewed , image of a code , with some white border around it", "true": "this method detects a code in a \" pure \" image - - that is , pure monochrome image which contains only an un rotated , un skewed , image of a code , with some white border around it", "bleu": 1.0, "rouge": 1.0}, {"predict": "process an error handler", "true": "reports an error", "bleu": 0.47287080450158786, "rouge": 0.5865384615384615}, {"predict": "connects socket ' fd ' to ' in et address ' on ' port ' , with no time out", "true": "connects socket ' fd ' to ' in et address ' on ' port ' , with no time out", "bleu": 1.0, "rouge": 1.0}, {"predict": "determine if the string - value of a node is whitespace", "true": "determine if the string - value of a node is whitespace", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new panel object", "true": "creates a new status panel", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "open an access file", "true": "open the pds file", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "de registers a spring from this base spring system , so it won ' t be iterated anymore", "true": "de registers a spring from this base spring system , so it won ' t be iterated anymore", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the name of the class file", "true": "returns current log file", "bleu": 0.20556680845025982, "rouge": 0.3824451410658307}, {"predict": "parses an n - triples node , creates an object for it using the supplied value factory and returns this object", "true": "parses an n - triples b node , creates an object for it using the supplied value factory and returns this object", "bleu": 0.8788691261950415, "rouge": 0.9726651480637813}, {"predict": "resets the psr list", "true": "resets the psr list", "bleu": 1.0, "rouge": 1.0}, {"predict": "sorts the specified array in ascending numerical order", "true": "sorts the specified array in ascending numerical order", "bleu": 1.0, "rouge": 1.0}, {"predict": "close this popup menu", "true": "close this popup menu", "bleu": 1.0, "rouge": 1.0}, {"predict": "free the object id", "true": "remove an object from the map", "bleu": 0.24117803988461298, "rouge": 0.1930379746835443}, {"predict": "positions on the view", "true": "expand the view vertically to the size of the cross size ( considering the view margins )", "bleu": 0.018335190851298155, "rouge": 0.17134831460674158}, {"predict": "android ' s address", "true": "convert a 32 char hex string into a in et 6 address", "bleu": 0.04862652376060361, "rouge": 0.11466165413533834}, {"predict": "track a failure - multiply the back off interval by the multiplier", "true": "track a failure - multiply the back off interval by the multiplier", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a double ( 64 bit ) from the source stream", "true": "reads a double ( 64 bit ) from the source stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines if a bar is at least as a specified bar", "true": "check if a scroll bar is at its maximum value", "bleu": 0.2521193618434983, "rouge": 0.4803149606299213}, {"predict": "case sensitive match test", "true": "case sensitive match test", "bleu": 1.0, "rouge": 1.0}, {"predict": "if it is a null map properties returns the map if it is a properties", "true": "given a url to a properties file describing a map tile set , create it and add it to the list", "bleu": 0.09273454500575382, "rouge": 0.2157382847038019}, {"predict": "computes the result for a double input value and a date object", "true": "computes the result for one input double value", "bleu": 0.32523403430389786, "rouge": 0.6224489795918368}, {"predict": "enables and validates the pan u to the correct actions , and that the pan u is broadcast", "true": "enables pan tethering on the local device and checks to make sure that tethering is enabled", "bleu": 0.09629943614188137, "rouge": 0.35672514619883033}, {"predict": "returns the distance between two points", "true": "calculate the number of cells on the shortest path between ( x 1 , z 1 ) and ( x 2 , z 2 )", "bleu": 0.010302547672789446, "rouge": 0.11619047619047619}, {"predict": "creates a new url of the given component parts", "true": "creates a new url of the given component parts", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a work flow", "true": "return a work flow", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a command line info with the specified parameters", "true": "example : 0 x <unk> , \" close \" , 0 x 0 , \" \"", "bleu": 0.054526518479707166, "rouge": 0.0}, {"predict": "flip to the flip operation", "true": "initializes the widget s in this page", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "this function will install a trust manager that will blindly trust all ssl certificates", "true": "this function will install a trust manager that will blindly trust all ssl certificates", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the probe ' s next sample", "true": "sample the active count", "bleu": 0.20556680845025982, "rouge": 0.19122257053291536}, {"predict": "creates a user code , consistent with the current request", "true": "handles get requests to the oauth 2 device / user endpoint , returning a form to allow the user to submit their user code", "bleu": 0.048652116885151184, "rouge": 0.1642728904847397}, {"predict": "test for a mission with at least one element of a mission into an xml", "true": "test for correct reading of a mission name", "bleu": 0.18207052811092128, "rouge": 0.46003016591251883}, {"predict": "checks if this object equals another", "true": "checks if this object equals another", "bleu": 1.0, "rouge": 1.0}, {"predict": "releases any resources we may have ( or inherit )", "true": "releases any resources we may have ( or inherit )", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds result of wei bull", "true": "computes the black equivalent volatility without validating parameters", "bleu": 0.1259933680597235, "rouge": 0.0}, {"predict": "close the any local filesystem", "true": "closes the utility instance and un registers any broadcast receivers", "bleu": 0.11115018927487523, "rouge": 0.2515463917525773}, {"predict": "internal copy files to internal vector", "true": "resolves all files it finds into a map , with relative paths as the key and absolute path as the value", "bleu": 0.01813224057849837, "rouge": 0.0673289183222958}, {"predict": "java x / crypto / exemption mechanism # get instance ( string algorithm , string provider ) checks exception order", "true": "java x / crypto / exemption mechanism # get instance ( string algorithm , string provider ) checks exception order", "bleu": 1.0, "rouge": 1.0}, {"predict": "reload the parameters used by the user", "true": "reload configuration from previously added resources", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "removes a message processor from the old list of running processors for this sip message", "true": "removes a message processor from this sip stack", "bleu": 0.3388714363186176, "rouge": 0.6440422322775264}, {"predict": "creates a x 509 x 509 certificate with the specified x 509 certificate", "true": "construct an x 509 issuer serial from an x 509 certificate", "bleu": 0.21142141714303078, "rouge": 0.42302357836338417}, {"predict": "add an item to an set of resources to be copied", "true": "add the set to an existing file", "bleu": 0.17033186037639278, "rouge": 0.3472485768500949}, {"predict": "put a byte array into the specified byte array", "true": "put an array of bytes in the buffer", "bleu": 0.16784459625186196, "rouge": 0.35672514619883033}, {"predict": "convenience method to return a string representation of a delimited array", "true": "convenience method to return a string array as a delimited ( e", "bleu": 0.5349911307625822, "rouge": 0.6902404526166903}, {"predict": "removes all items from the staging area", "true": "removes all items from the staging area", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse default background colors", "true": "parse attributes and return a dem pier e color", "bleu": 0.10294235160901445, "rouge": 0.14386792452830188}, {"predict": "returns a new returns a new instance with the current state", "true": "method that creates a new instance of lua state", "bleu": 0.22416933501922287, "rouge": 0.4073455759599332}, {"predict": "checks the adapter based on memory and the status of the memory adapter", "true": "checks memory for capacity to hold the preamble and returns the first 8 bytes", "bleu": 0.11640435130573178, "rouge": 0.2943305186972256}, {"predict": "read the next input from the input stream", "true": "read from the file", "bleu": 0.22679164443904004, "rouge": 0.5319767441860466}, {"predict": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "true": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "bleu": 1.0, "rouge": 1.0}, {"predict": "limit the clip such that it fits within the specified region", "true": "limit the clip such that it fits within the specified region", "bleu": 1.0, "rouge": 1.0}, {"predict": "shutdown the worker thread pool", "true": "shutdown all thread pools", "bleu": 0.3021375397356768, "rouge": 0.4535315985130111}, {"predict": "converts a list of ip addresses to an in et address", "true": "returns th a list of resolved in et addresses", "bleu": 0.2620251007173263, "rouge": 0.5091819699499166}, {"predict": "removes new line character from string", "true": "removes new line char actors", "bleu": 0.4111336169005197, "rouge": 0.5545454545454546}, {"predict": "calculate quan tile , which quan tile , which may still be scheduled", "true": "set unread counters for feeds and categories according to real amount of unread articles", "bleu": 0.07437575757105792, "rouge": 0.0}, {"predict": "appends the html representation of the given character to the string builder", "true": "append a character to a buffer , escaping html meta - characters when needed", "bleu": 0.12438292405881463, "rouge": 0.1517412935323383}, {"predict": "migrate the given columns into a row of the current table", "true": "loop through each of the columns in the given table , migrating each as a resource or relation", "bleu": 0.11219654529039101, "rouge": 0.2643553629469122}, {"predict": "retrieves row count of rows in the t", "true": "does a count on a given table", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "creates a new jar modifier with the given archive to be modified", "true": "creates a new jar modifier with the given archive to be modified", "bleu": 1.0, "rouge": 1.0}, {"predict": "add to a specific attribute with the specified attribute to this table", "true": "adds the attribute to the list of attributes assigning it a free column index", "bleu": 0.1315189295625006, "rouge": 0.22761194029850743}, {"predict": "associate the given value with the specified key", "true": "associate the given value with the specified key", "bleu": 1.0, "rouge": 1.0}, {"predict": "sorts the given array of values by the given offset in the given array", "true": "find the top limit values using given comparator and place them as in a full array sort , in descending order", "bleu": 0.07055935438592946, "rouge": 0.2757685352622061}, {"predict": "adds a special \" marked occurrence \" highlight", "true": "adds a special \" marked occurrence \" highlight", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "read a number of bytes into the buffer", "true": "does the read fully based on the input read", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "validate the given assumption", "true": "validate the given assumption", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds all products in a shopping cart to the cart", "true": "adds all products in a category according to quantity request parameter for each ; if no parameter for a certain product in the category , or if quantity is 0 , do not add", "bleu": 0.04501137266617492, "rouge": 0.2896879240162822}, {"predict": "add an item set", "true": "adds a frequent item set to this container", "bleu": 0.1739594473063345, "rouge": 0.31443298969072164}, {"predict": "skips bytes from the peek buffer", "true": "skips from the peek buffer", "bleu": 0.6434588841607617, "rouge": 0.9242424242424241}, {"predict": "a method the creates the work flow method for removing volumes from a v plex consistency group", "true": "a method that creates the work flow method for removing v plex volumes from a consistency group", "bleu": 0.558394826472418, "rouge": 0.8235294117647058}, {"predict": "show a number of urls and cancel all available urls", "true": "actually show the dialog that contain the given urls and give the user the option to open the url , copy it or cancel the dialog", "bleu": 0.03805813773781106, "rouge": 0.20573355817875214}, {"predict": "this method converts a mouse event to the native mouse events , this is for v in t", "true": "convert mouse", "bleu": 0.06809398432036522, "rouge": 0.11685823754789272}, {"predict": "computes a string of regular expression in a string and new name", "true": "computes a regular expression string where each instance of the old name can be fulfilled by either the old name or new name", "bleu": 0.08557423575471763, "rouge": 0.3785460992907802}, {"predict": "generate a call identifier", "true": "generate a call identifier", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse a hour value", "true": "parse a hour value", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to history entries in the user ' s input stream", "true": "changes the currently displayed command line when certain keys are pressed", "bleu": 0.11390778025531027, "rouge": 0.09090909090909091}, {"predict": "replaces the names of the given type , where the corresponding i / o types of the given type and returns the corresponding array", "true": "returns an array of types , where original types got substituted given a substitution", "bleu": 0.08520293472883594, "rouge": 0.276268115942029}, {"predict": "where magic happens", "true": "what magic happens", "bleu": 0.7071067811865475, "rouge": 0.6666666666666666}, {"predict": "get the list of cursors in the transport", "true": "returns the current list of known transports", "bleu": 0.22679164443904004, "rouge": 0.4048672566371681}, {"predict": "returns the seconds until the thread is locked in idle state", "true": "returns the seconds until idle lockout", "bleu": 0.33180774028439425, "rouge": 0.6211812627291243}, {"predict": "shows a to the client to send a hive table for the client to", "true": "show all databases in hive", "bleu": 0.08839374326825923, "rouge": 0.11509433962264153}, {"predict": "and for two negative numbers ; the first is shorter", "true": "and for two negative numbers ; the first is shorter", "bleu": 1.0, "rouge": 1.0}, {"predict": "complex condition ( running in the range 0 )", "true": "this hack y <unk> is <unk> <unk> with the width of the confidence interval normally specified with number of standard <unk>", "bleu": 0.03720407880344645, "rouge": 0.06218144750254842}, {"predict": "read the object from base 64 string", "true": "read the object from base 64 string", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies all the fields that have been removed from the document", "true": "creates a copy of the old document ; updating the retrieved document instance works ok for stored properties but indexed data gets lost when doing an index writer", "bleu": 0.028882082656764063, "rouge": 0.1426344505066251}, {"predict": "creates a matrix with a given matrix", "true": "construct the singular value decomposition", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "this method will be called if the internal region is not already held by the invocation", "true": "unlocks version generation for clear ( ) operations", "bleu": 0.06468490584192432, "rouge": 0.0}, {"predict": "static version of last indexof", "true": "static version of last indexof", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the entire contents of a byte buffer to the file", "true": "writes the buffer contents to the file", "bleu": 0.24384183193426084, "rouge": 0.5787476280834916}, {"predict": "subtract a value in python scripts on the compare tool", "true": "take modulo for double numbers according to lua math , and return a double result", "bleu": 0.07645906143263256, "rouge": 0.07721518987341772}, {"predict": "max ( big integer val )", "true": "max ( big integer val )", "bleu": 1.0, "rouge": 1.0}, {"predict": "function used to stop code that calls accept data set", "true": "function used to stop code that calls accept training set", "bleu": 0.8070557274927982, "rouge": 0.9}, {"predict": "offset the current mouse pointer to the offset grab point , and update the offset grab point to the offset grab point locations", "true": "called to set the offset grab point to the current mouse location , and update the offset grab point with all the other grab point locations , so everything can shift smoothly", "bleu": 0.4032422647991267, "rouge": 0.5651418645049219}, {"predict": "writes floats from the given float array , starting from the specified offset , to the current position and increases the position by the number of floats written", "true": "writes floats from the given float array , starting from the specified offset , to the current position and increases the position by the number of floats written", "bleu": 1.0, "rouge": 1.0}, {"predict": "the optimized version of sax 2 dtm", "true": "the optimized version of sax 2 dtm", "bleu": 1.0, "rouge": 1.0}, {"predict": "tells whether cidr string is alive", "true": "check whether the cidr address contains the ip address", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "accessed via reflection", "true": "accessed via reflection", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to check if a cookie name is in user name and list it is used for a single cookie name , look in user name ( e", "true": "check to see if the client has a cookie with optional value", "bleu": 0.06773638670879233, "rouge": 0.21554770318021202}, {"predict": "use the native import class dialog on the mac because the swing one is bad", "true": "use the native file dialog on the mac because the swing one is bad", "bleu": 0.7447819789879647, "rouge": 0.9021615472127418}, {"predict": "initializes the account with these parameters", "true": "creates the item using these parameters", "bleu": 0.31239399369202553, "rouge": 0.5}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes the application data into ssl / tls record", "true": "encodes the application data into ssl / tls record", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a byte containing the remainder of ' in ' , closing it when done", "true": "returns a byte containing the remainder of ' in ' , closing it when done", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse the sql statement and locate any placeholder s or named parameters", "true": "parse the sql statement and locate any placeholder s or named parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a long at the specified offset from this native object ' s base address", "true": "writes a long at the specified offset from this native object ' s base address", "bleu": 1.0, "rouge": 1.0}, {"predict": "called by the request when an event is being pressed", "true": "required method to be called if you are using request keeper to funnel your requests", "bleu": 0.08461586088475063, "rouge": 0.15443037974683543}, {"predict": "generate a salt for use with the b crypt", "true": "generate a salt for use with the b crypt", "bleu": 1.0, "rouge": 1.0}, {"predict": "if possible , validate the given key ' s hash code against any that was returned by the peer", "true": "if possible , validate the given key ' s hash code against any that was returned by the peer", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert number to string", "true": "function to format amount into to in <unk> an rupees format", "bleu": 0.06243769243378541, "rouge": 0.12298387096774194}, {"predict": "run in it method on the database for required resource", "true": "run an in it script from the class path", "bleu": 0.18850319022747347, "rouge": 0.42508710801393734}, {"predict": "parse an integer located between 2 given offsets in a string", "true": "parse an integer located between 2 given offsets in a string", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints an object to this output stream and then terminates the line", "true": "prints an object to this output stream and then terminates the line", "bleu": 1.0, "rouge": 1.0}, {"predict": "check that the doubles are a real number", "true": "check that all the elements are real numbers", "bleu": 0.25098621243978964, "rouge": 0.625}, {"predict": "initialize the keyboard buttons for a different view", "true": "in it the keyboard buttons ( onclick listener )", "bleu": 0.26340290082307516, "rouge": 0.34923664122137404}, {"predict": "is window auto - use ( if not set use default )", "true": "is window auto new record ( if not set use default )", "bleu": 0.6703420896351792, "rouge": 0.8333333333333334}, {"predict": "returns the relative path of the given directory path relative to the given directory and a relative path of the relative to a relative path ( i", "true": "determine the path to the file relative to the given directory path", "bleu": 0.22765893232556483, "rouge": 0.4959349593495934}, {"predict": "initialize client data", "true": "read fields to display", "bleu": 0.32372956394183194, "rouge": 0.0}, {"predict": "internal method to perform the normalization", "true": "internal method to perform the normalization", "bleu": 1.0, "rouge": 1.0}, {"predict": "reset the resources and releases a native resources to the underlying directory", "true": "reset the internal state of this singleton", "bleu": 0.1367440667823257, "rouge": 0.22101449275362317}, {"predict": "and not for a negative and a negative numbers ; the first is longer", "true": "and not for two negative numbers ; the first is longer", "bleu": 0.570282226440554, "rouge": 0.8176943699731903}, {"predict": "generate a random string of the characters in the characters", "true": "creates a random string which only consists of letters", "bleu": 0.24808415001701817, "rouge": 0.42508710801393734}, {"predict": "called by the server manager , which will use the environment when leaving an operation", "true": "constructs a new exchange rate manager and initial is es the most used rates", "bleu": 0.09103526405546068, "rouge": 0.13879408418657563}, {"predict": "removes the attribute with the specified name from the specified attribute", "true": "removes the attribute specified by the value parameter", "bleu": 0.23462350320527994, "rouge": 0.5417406749555951}, {"predict": "delete the file and key from it", "true": "delete the object previously saved", "bleu": 0.24446151121745047, "rouge": 0.34366197183098596}, {"predict": "determine if the index of an index is illegal in the bin", "true": "check if unique constraint exception ( aka or a - <unk> )", "bleu": 0.10390302174233558, "rouge": 0.08333333333333333}, {"predict": "construct a new instance with the specified detail string and exception", "true": "construct a new instance with the specified detail string and exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds fill components to empty cells in the first row and first column of the grid", "true": "adds fill components to empty cells in the first row and first column of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts all of the prefixes needed in form of declared prefixes en prefixes , and prefixes used in a namespace context - prefixes", "true": "inserts prefix mappings from an xml literal ' s context for all prefixes that are used in the xml literal and that are not defined in the xml literal itself", "bleu": 0.06941217517637607, "rouge": 0.22114803625377644}, {"predict": "increments the put time accumulator", "true": "increments the put time accumulator", "bleu": 1.0, "rouge": 1.0}, {"predict": "takes a big - size and returns the values of functions", "true": "pre compute hashes used to set mask bits for a data", "bleu": 0.11390778025531027, "rouge": 0.09090909090909091}, {"predict": "shows user home following home following page", "true": "shows user home following tags page", "bleu": 0.5410822690539396, "rouge": 0.7800511508951408}, {"predict": "return the elevation in a given lat / lon - elevation file of a given lat / lon - > )", "true": "the elevation at the closest sw post to the given lat / lon", "bleu": 0.18597237212366716, "rouge": 0.3685800604229607}, {"predict": "create a observed object for observed m observed m beans", "true": "factory method for observed object creation", "bleu": 0.1972940627795883, "rouge": 0.26180257510729615}, {"predict": "delete the children of the element", "true": "delete the children of the element", "bleu": 1.0, "rouge": 1.0}, {"predict": "saves the initial child component into the specified component", "true": "recursively create the initial state for the given component", "bleu": 0.21105340631872635, "rouge": 0.4444444444444444}, {"predict": "checks , if this item is overlap , and false otherwise", "true": "looks , if this trace is connected to the same object at its start and its end point", "bleu": 0.12416588812571398, "rouge": 0.33044420368364036}, {"predict": "ensures that the object is not null", "true": "ensure the given value is not null and return it", "bleu": 0.23813694985189848, "rouge": 0.45607476635514016}, {"predict": "read an array list from an input stream containing xml", "true": "read an array list from an input stream containing xml", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds padding to the beginning of a string with a repeating character if the string ' s length is less than the minimum length", "true": "adds padding to the end of a string with a repeating character if the string ' s length is less than the minimum length", "bleu": 0.8895260356363631, "rouge": 0.9583333333333334}, {"predict": "returns an enumeration of the additional measure names", "true": "returns an enumeration of the additional measure names", "bleu": 1.0, "rouge": 1.0}, {"predict": "method that sends the message complete and increment the message socket connection", "true": "this method should not raise any exceptions", "bleu": 0.10390302174233558, "rouge": 0.11050724637681159}, {"predict": "add buttons for the button panel", "true": "add button for showing preferences", "bleu": 0.2626909894424158, "rouge": 0.3696969696969697}, {"predict": "clears all unused files", "true": "clear unused pages from page pool", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "create fields from window de field", "true": "create fields", "bleu": 0.2907153684841096, "rouge": 0.5495495495495495}, {"predict": "constructs a short interleaved raster with the given sample model and data buffer", "true": "constructs a short interleaved raster with the given sample model and data buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will copy the given file to carbon store location", "true": "this method will copy the given file to carbon store location", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the ui object belongs to a j dk event", "true": "performs a backwards fling action with the default number of fling steps ( 5 )", "bleu": 0.08762962180865386, "rouge": 0.07484662576687118}, {"predict": "converts a string to a double", "true": "attempts to parse the string as double", "bleu": 0.22236312185643822, "rouge": 0.3034825870646766}, {"predict": "adds a listener that is notified about changes in the panel", "true": "adds a listener that is notified about changes in the filter", "bleu": 0.9036020036098448, "rouge": 0.9090909090909091}, {"predict": "writes the plain text file", "true": "takes a image , mirrors it using row - per - row in t reading , mirror it again using byte ( if possible ) and compares if the original was <unk> , compares with or ign i", "bleu": 0.0003713969160272093, "rouge": 0.04085733422638982}, {"predict": "checks to see if the current feature is present in the current store", "true": "returns true if gap is is considered stable ( non - experimental ) :", "bleu": 0.0978840017329239, "rouge": 0.1471652593486128}, {"predict": "calculates the approximate size of a text , depending on a demo text avoid repeated calls ( e", "true": "calculates the approximate size of a text , depending on a demo text avoid repeated calls ( e", "bleu": 1.0, "rouge": 1.0}, {"predict": "the values that are in the default values of all the panels components , to ensure that they are made", "true": "defaults was clicked", "bleu": 0.051366639095059514, "rouge": 0.0}, {"predict": "returns a string representation of the list , front to back", "true": "returns a string representation of the list , front to back", "bleu": 1.0, "rouge": 1.0}, {"predict": "write an image , x / y placement with an image icon", "true": "write an image , x / y placement with an image icon", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests if grid of declared class could be nearest neighbor and then that class loader to the class loader", "true": "tests job <unk> with peer deployment and different class loaders", "bleu": 0.07658412276041004, "rouge": 0.21916167664670658}, {"predict": "monitor changes to the scale slider", "true": "monitor changes to the scale slider", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the given content to a file with the provided content", "true": "save string into the file", "bleu": 0.12605968092174913, "rouge": 0.2681318681318681}, {"predict": "determine whether the given url points to a resource in the file system , that is , has protocol \" , \" , \" vf s file \" or \" vf s \"", "true": "determine whether the given url points to a resource in the file system , that is , has protocol \" file \" , \" vf s file \" or \" vf s \"", "bleu": 0.9210500207490827, "rouge": 0.9696969696969697}, {"predict": "convenience method to update a status object from a relay state ( goto ) to often called from a jsp", "true": "updates log out status based on current status and what stored in the internal map", "bleu": 0.06108557268562171, "rouge": 0.058653846153846154}, {"predict": "converts oid into array of in ts", "true": "converts oid into array of in ts", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a set of server instances for this site", "true": "returns the server instance names that belong to a site", "bleu": 0.15881076016027915, "rouge": 0.31282051282051276}, {"predict": "instantiate s a new dialog editor dialog", "true": "creates a modal dialog for the parent", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "checks for the s ld if contains in the line features", "true": "checks to see if s ld contains inline features", "bleu": 0.18527972555830952, "rouge": 0.5091819699499166}, {"predict": "decode the contents of the input stream into a buffer", "true": "decode the contents of the input stream into a buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "run a garbage collection", "true": "provides a hint to the virtual machine that it would be useful to attempt to perform any outstanding object final iz at ions", "bleu": 0.0031085896619325354, "rouge": 0.06573275862068965}, {"predict": "display all string defined in a string xml font", "true": "display the string defined in the string xml file : icon font string", "bleu": 0.2152373268412755, "rouge": 0.6161616161616162}, {"predict": "checks if http request length is enabled for the http request", "true": "checks content length of a http request to avoid dos attack", "bleu": 0.17033186037639278, "rouge": 0.36363636363636365}, {"predict": "adds the given foreign key constraint", "true": "public : add a foreign key constraint to the table", "bleu": 0.2231931376573339, "rouge": 0.3588235294117647}, {"predict": "called with the activity is first created", "true": "called with the activity is first created", "bleu": 1.0, "rouge": 1.0}, {"predict": "push a notification to re model", "true": "sends a notification to the apple push notification service", "bleu": 0.26367153725164694, "rouge": 0.3860759493670886}, {"predict": "appends a json encoded key / value pair to the given string builder", "true": "appends a json encoded key / value pair to the given string builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "update config file with configured parameters from resource", "true": "<unk> order of all keys , but overwrites all data keys with values from resources", "bleu": 0.0739821920909478, "rouge": 0.16486486486486487}, {"predict": "de selects a given item in the receiver", "true": "de selects the item at the given zero - relative index in the receiver", "bleu": 0.1801684263785962, "rouge": 0.5198863636363635}, {"predict": "return true if a data node is a leaf of this tree", "true": "gets the leaf attribute of the dom tree model object", "bleu": 0.1235622127262679, "rouge": 0.2772727272727273}, {"predict": "add a listener to the list of listeners", "true": "add a listener all callback s of the interface listener will be called within this function should be called in the main thread", "bleu": 0.05065566544723581, "rouge": 0.23735408560311283}, {"predict": "equals ( ) method for equality with other object", "true": "checks if this date - time is equal to another date - time , including the chronology", "bleu": 0.04879247254464727, "rouge": 0.0}, {"predict": "parses a string of text into a double array from the specified string", "true": "parse a string into a vector", "bleu": 0.15807437922444714, "rouge": 0.45101663585951934}, {"predict": "test the dl sn from the pipeline decoder", "true": "create an empty file and write some data on it", "bleu": 0.10502215675986959, "rouge": 0.0}, {"predict": "calls the super method and writes the kn n distance of this entry to the specified stream", "true": "calls the super method and writes the kn n distance of this entry to the specified stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new session wrapper for the given session", "true": "creates instance of cassandra driver session wrapper", "bleu": 0.18575057999133596, "rouge": 0.2557651991614256}, {"predict": "post a batch of input requests", "true": "returns a batch response based on the given batch request , by posting the request to the server", "bleu": 0.0393440467350332, "rouge": 0.15288220551378442}, {"predict": "returns the directory in this directory", "true": "returns the directory in which the main program is located", "bleu": 0.31564276230360666, "rouge": 0.47843137254901963}, {"predict": "clear the route sensors for this sensor", "true": "method to delete all control sensors from this route", "bleu": 0.16599826150636804, "rouge": 0.24448897795591182}, {"predict": "builds a key instance from a string", "true": "converts a string into the corresponding key store type", "bleu": 0.19740631366145517, "rouge": 0.24448897795591182}, {"predict": "pushes the next level properly", "true": "sets the new current nested level and pushes old current nested level down the stack returns that level", "bleu": 0.02411424781372451, "rouge": 0.2367399741267788}, {"predict": "converts a hexadecimal character to an integer", "true": "converts a hexadecimal character to an integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert the pod to json", "true": "convert <unk> pod list to json", "bleu": 0.3342454302942773, "rouge": 0.7155425219941348}, {"predict": "load a key store from the specified location", "true": "load a key store , auto - detecting the type , from a file accessed by a password", "bleu": 0.1390957214303005, "rouge": 0.35966981132075476}, {"predict": "remove a property change listener", "true": "remove a property change listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests whether cache cycle is enabled", "true": "returns true if pre caching is able to run", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "combines the two bit sets into this set", "true": "this = this and other", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "this method checks if the specified object equals the principal entry", "true": "test for equality between the specified object and this object", "bleu": 0.22416933501922287, "rouge": 0.28818897637795277}, {"predict": "is it valid authentication ?", "true": "test if profile is valid for <unk> , which requires ipv 4 address for both server and dns", "bleu": 0.02244083618904421, "rouge": 0.15782664941785254}, {"predict": "read a server response from the form \" action , including setting up to the appropriate representation", "true": "pulls the response from the server and returns the code as a number", "bleu": 0.15464260451973766, "rouge": 0.2732362821948488}, {"predict": "checks whether the extension of the filename is one of those specified", "true": "checks whether the extension of the filename is one of those specified", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance from the given outer join stream", "true": "ctor for an outer join between two streams", "bleu": 0.16590387014219712, "rouge": 0.22676579925650556}, {"predict": "see iso 16022 : 2006 , 5", "true": "see iso 16022 : 2006 , 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a k db database from a gs k db k db", "true": "construct a k db database from the supplied input stream", "bleu": 0.38058030016749456, "rouge": 0.46212121212121204}, {"predict": "decodes a single section 2 , 32 bit block safe", "true": "decodes an add operation", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "sorts the elements in place", "true": "sorts the array in place", "bleu": 0.45180100180492244, "rouge": 0.8}, {"predict": "rebuilds the panel to plot upon the previous active menu", "true": "trigger to rebuild the panel", "bleu": 0.17827531042796255, "rouge": 0.2837209302325582}, {"predict": "writes the chunk of bytes , starting at the given offset", "true": "feeds the in f later with the compressed bytes in poll mode , the caller should not call repeatedly this , without consuming first , checking is data ready for consumer ( )", "bleu": 0.019384268961597614, "rouge": 0.16678058783321942}, {"predict": "this method returns the absolute path to the supplied file", "true": "turns an object into a string for storing in the props", "bleu": 0.11406351620367239, "rouge": 0.09442724458204334}, {"predict": "navigates to the next page ( if not already there )", "true": "navigates to the next page ( if not already there )", "bleu": 1.0, "rouge": 1.0}, {"predict": "the following two methods exist because in , out , and err must be initialized to the same time set", "true": "the following two methods exist because in , out , and err must be initialized to null", "bleu": 0.7941054938007994, "rouge": 0.8776978417266187}, {"predict": "returns an immutable list of the types in this set", "true": "returns an immutable list", "bleu": 0.35084396956386854, "rouge": 0.6192893401015228}, {"predict": "method to delete the rules from the batch list for delete rules", "true": "the sql commands to be added to the batch list for deleting the rules in rules to delete", "bleu": 0.23083362053422252, "rouge": 0.3860759493670886}, {"predict": "returns true if the the specified element is visited", "true": "returns true if this element was already visited", "bleu": 0.2907153684841096, "rouge": 0.594541910331384}, {"predict": "the actual close connection exposed by the provided client", "true": "instantiate s a new connection object", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "creates a new exception that is synchronously completed exceptionally", "true": "returns a new comp let able future that is already exceptionally completed with the given exception", "bleu": 0.12068702429139479, "rouge": 0.38077403245942576}, {"predict": "initialize forecast error based on forecast detail and forecast definition", "true": "initializes all errors given the model", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "tests whether a given mouse event is to be interpreted as a mask", "true": "check the mouse event modifiers against the instance member modifiers", "bleu": 0.12571192676522522, "rouge": 0.1781021897810219}, {"predict": "generates the variables that were used in the javascript evaluation of this variables , and variables , in the !", "true": "writes all retained variables to the output of the specified generator , then clears them", "bleu": 0.08039313477786734, "rouge": 0.23461538461538461}, {"predict": "creates a new uri instance of the given un encoded component parts", "true": "creates a new uri instance of the given un encoded component parts", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the best th - th node corresponding to this node", "true": "this is an entry point for extracting k - best hypotheses as structured translation objects", "bleu": 0.09416415673264793, "rouge": 0.07484662576687118}, {"predict": "reads a single character from the source string and returns it as an integer with the two higher - order bytes set to 0", "true": "reads a single character from the source string and returns it as an integer with the two higher - order bytes set to 0", "bleu": 1.0, "rouge": 1.0}, {"predict": "see if the storage system for the passed block snapshot can be read by the b db", "true": "check if the storage system type is open stack , v nx block , v max or ibm xiv", "bleu": 0.18707423912310936, "rouge": 0.2750225428313796}, {"predict": "returns a list of service descriptor descriptors for the service descriptors", "true": "lists all of the services found in the file descriptors", "bleu": 0.1354599427337814, "rouge": 0.28818897637795277}, {"predict": "strip the code value for use in a string", "true": "returns a string with lines sentences of the following form removed : this result code corresponds to the l dap result code value of & # x 7 b ; & # x 40 ; code 0 & # x 7 d ;", "bleu": 0.0055916817989807915, "rouge": 0.10321489001692047}, {"predict": "divide : rounding mode is round half even , result is negative ; equidistant", "true": "divide : rounding mode is round half even , result is negative ; equidistant", "bleu": 1.0, "rouge": 1.0}, {"predict": "quan tile function of the pdf of the beta distribution", "true": "compute quan tile ( inverse cd f ) for beta distributions", "bleu": 0.1613101715871968, "rouge": 0.28328173374613}, {"predict": "validates the data in the specified certificate", "true": "example implementation", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "creates new tasks from the deployment queue , executes participants for the closure , and then resets participants", "true": "creates and caches new deployment", "bleu": 0.08562365224473284, "rouge": 0.29047619047619044}, {"predict": "return the number of objects in this sequence", "true": "return the number of objects in this sequence", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests that the a ser v lets run - as role - name can be extracted", "true": "tests that a run - as role - name can be added to a ser v let", "bleu": 0.5634430609648517, "rouge": 0.6630434782608695}, {"predict": "subtract two negative numbers of different length", "true": "subtract two negative numbers of different length", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new multi - term query", "true": "constructs a query matching terms that cannot be represented with a single term", "bleu": 0.09374222649442905, "rouge": 0.1897356143079316}, {"predict": "prints the string passed as a non - string object", "true": "prints the message passed as a non - string object and a new line", "bleu": 0.4973403804814283, "rouge": 0.7281167108753316}, {"predict": "currently only group by tags group by s ' first item always is site , which is a reserved field", "true": "currently only group by tags group by s ' first item always is site , which is a reserved field", "bleu": 1.0, "rouge": 1.0}, {"predict": "test invalid xml and correctly decoded", "true": "test an invalid xml input", "bleu": 0.31239399369202553, "rouge": 0.5545454545454546}, {"predict": "combines the description of the form", "true": "convert a re to a string", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "returns true if the two members are equivalent \" based on the equivalent collection", "true": "returns true if one of the members is a get ter and the other one is a setter", "bleu": 0.1421975820486009, "rouge": 0.3667334669338677}, {"predict": "creates an instance of date formatter that will be used to convert date formatter into an utc date format", "true": "creates a dateformat that assumes the incoming date is in utc time", "bleu": 0.08097785064266201, "rouge": 0.269018743109151}, {"predict": "write a linked km l document into the km l document", "true": "adds the specified km l - object to the file", "bleu": 0.16108992769687397, "rouge": 0.28818897637795277}, {"predict": "returns the path to the destination file path", "true": "get destination file path of this download request", "bleu": 0.2984745896009823, "rouge": 0.375}, {"predict": "get users and groups from the server to fill in the \" share with \" list \" share \"", "true": "get users and groups from the server to fill in the \" share with \" list", "bleu": 0.8371837576365552, "rouge": 0.928639391056137}, {"predict": "get the default headers", "true": "create default headers for server response", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "removes and returns the part of this cookie", "true": "remove all components in <unk> ys", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "puts a new request in queue as a new thread in pool to be executed", "true": "puts a new request in queue as a new thread in pool to be executed", "bleu": 1.0, "rouge": 1.0}, {"predict": "register a new client with a new client", "true": "create client from given json data , add client to client list , broadcast newly registered client to all previously registered clients and send client list to new client", "bleu": 0.016428731620562406, "rouge": 0.14710610932475884}, {"predict": "parses the data from the supplied input stream , using the supplied base uri to resolve any relative uri references", "true": "parses the data from the supplied input stream , using the supplied base uri to resolve any relative uri references", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the date value using the given date formats", "true": "parses the date value using the given date formats", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a member with the specified name from this object", "true": "removes a member with the specified name from this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the loop back up to each loop of the length", "true": "loop code layout the loop is defined by the back edge from t - > h", "bleu": 0.11315783212651204, "rouge": 0.21504112808460632}, {"predict": "read a line of text and convert it to the b ufer", "true": "read a line from the hex file and verify the checksum", "bleu": 0.21401603033752975, "rouge": 0.43821839080459773}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates a lightweight test to test file test", "true": "generates two data files to join its with hive", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "rename the panel menu", "true": "rename an editor type panel in show panels sub menu", "bleu": 0.09534061816653486, "rouge": 0.3978260869565217}, {"predict": "record as sql by sql statement and return true if there is file as hex 32 bit", "true": "returns true iff format ( col ) should return a single - line version of the formula", "bleu": 0.07994607499472013, "rouge": 0.0588235294117647}, {"predict": "override to set up your specific external resource", "true": "override to set up your specific external resource", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert virtual world coordinates to lon / lat", "true": "convert lon / lat ( degree ) coordinate to virtual world coordinates", "bleu": 0.2787987064770896, "rouge": 0.3860759493670886}, {"predict": "copies this string replacing occurrences of the specified target sequence with another sequence", "true": "copies this string replacing occurrences of the specified target sequence with another sequence", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes a string into base 64 format", "true": "encode a string for html requests", "bleu": 0.24446151121745047, "rouge": 0.31202046035805625}, {"predict": "draws an image , applying a transform from image space into user space before drawing", "true": "draws an image , applying a transform from image space into user space before drawing", "bleu": 1.0, "rouge": 1.0}, {"predict": "given a path return the number of times out the internal state", "true": "upper guess to determine the duration in bytes , using highest <unk> of the stream", "bleu": 0.09623034802925295, "rouge": 0.21785714285714283}, {"predict": "advances the position until after the next newline character", "true": "advances the position until after the next newline character", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new in d test cramer t instance for a subset of the variables", "true": "creates a new in d test cramer t instance for a subset of the variables", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method to perform the content as string", "true": "treat the given file as a source of additional seeds , announcing to seed listeners", "bleu": 0.07949903911132591, "rouge": 0.16486486486486487}, {"predict": "formats time in milliseconds to hh : mm : s s string format", "true": "formats time in milliseconds to hh : mm : s s string format", "bleu": 1.0, "rouge": 1.0}, {"predict": "add the specified property change listener for the specified property", "true": "adds the property change listener", "bleu": 0.24808415001701817, "rouge": 0.5674418604651164}, {"predict": "creates a new folder with a default folder name", "true": "creates a new folder with a default folder name", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a typed array to the config", "true": "add a typed array to the config", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds configuration for the sub - action to the configuration now", "true": "adds the sub action", "bleu": 0.17033186037639278, "rouge": 0.5823389021479713}, {"predict": "fill to the entry set from the tree set", "true": "fills the entry tree map with entries from the block", "bleu": 0.2187537716852318, "rouge": 0.41709401709401706}, {"predict": "checks for equality of the two collections", "true": "checks if right hand collection has atleast one same item as left hand collection", "bleu": 0.06833381956448398, "rouge": 0.08983799705449189}, {"predict": "for keyboard mode , processes key events", "true": "for keyboard mode , processes key events", "bleu": 1.0, "rouge": 1.0}, {"predict": "asserts that the actual duration is within 10 of the given expected time", "true": "asserts that the actual duration is within 10 of the given expected time", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the log operation to row in the row operation", "true": "log a <unk> in the data", "bleu": 0.17827531042796255, "rouge": 0.3927038626609442}, {"predict": "constructs a new instance of this field body part of an image", "true": "creates a new field body img data type", "bleu": 0.17194656088289215, "rouge": 0.4149659863945578}, {"predict": "creates a new abstract i media abstract as the logical number of milliseconds", "true": "initializes this abstract resource with the given mime type", "bleu": 0.10571070857151538, "rouge": 0.18798151001540828}, {"predict": "create a new parameters instance from a set of parameters", "true": "creates a parameters object for the given main - method arguments", "bleu": 0.12623203108004888, "rouge": 0.18885448916408668}, {"predict": "initialize and parse a negative mp 4 m ip address string", "true": "respond to or initiate an s mp negotiation", "bleu": 0.11390778025531027, "rouge": 0.108348134991119}, {"predict": "compute mel frequency from linear frequency", "true": "compute linear frequency from mel frequency", "bleu": 0.4272870063962341, "rouge": 0.6666666666666666}, {"predict": "create the rounded icon generator to draw the rounded effect of its bounds we should be displayed", "true": "constructs the generator and initializes the common members ignoring display density", "bleu": 0.0859076483566362, "rouge": 0.22289890377588306}, {"predict": "generate an array of random bytes", "true": "generate an array of random bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of the array", "true": "returns a description of the search as a string", "bleu": 0.2598013194025897, "rouge": 0.48897795591182364}, {"predict": "writes a byte array to a given buffer", "true": "copy bu f to m message", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "check if the time out expiration occurs", "true": "checks if cassandra driver session expired", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "put a key / boolean pair in the json object", "true": "put a key / boolean pair in the json object", "bleu": 1.0, "rouge": 1.0}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "handle a given view and notify de selected selections if necessary", "true": "handles the selection and de selects item if multi select is disabled", "bleu": 0.12368857073777001, "rouge": 0.25884016973125884}, {"predict": "calculate the value of depreciation over time", "true": "check if the method can be invoked to give parameters", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "writes the contents of this cache header to the specified output stream", "true": "writes the contents of this cache header to the specified output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "get response as byte array", "true": "get response as byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "starts fading out all layers", "true": "starts fading out all layers", "bleu": 1.0, "rouge": 1.0}, {"predict": "pack non - empty square pairs into the first block and that each item in the leaf list", "true": "note : upper bound is <unk> / 60 opt + 6 / 9 ( ~ 1", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "add a listener for changes in the text area", "true": "adds the given listener", "bleu": 0.15619699684601276, "rouge": 0.16531165311653115}, {"predict": "get an iterator of the drawer items", "true": "get an iterator of profiles", "bleu": 0.5169731539571706, "rouge": 0.6873239436619719}, {"predict": "check whether the string starts with a space character , false if the string is empty or ends with a non - space character", "true": "checks if the string starts with a space character , false if the string is empty or starts with a non - space character", "bleu": 0.80377750806414, "rouge": 0.875}, {"predict": "appends scheme to incoming path", "true": "appends scheme to incoming path", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a key to a level , if there is no corresponding value", "true": "given a key , find the level", "bleu": 0.14283632578659286, "rouge": 0.31715771230502604}, {"predict": "called by the user pressed by the user and one of the requested mouse is active", "true": "called whenever the mouse is dragged on this layer and one of the requested mouse modes is active", "bleu": 0.3697381867301676, "rouge": 0.5820610687022901}, {"predict": "initializes the caching http headers filter", "true": "initializes the caching http headers filter", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds common component to the parser configuration", "true": "adds common component to the parser configuration", "bleu": 1.0, "rouge": 1.0}, {"predict": "spins / blocks until node s is matched by a fulfill operation", "true": "spins / blocks until node s is matched by a fulfill operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "load the general subtree stable model from a general subtree to be included in the subtree of general subtree", "true": "load the general subtree stable model with general subtree s", "bleu": 0.32263864160302524, "rouge": 0.5844311377245509}, {"predict": "reads a single byte from the source string and returns it as an integer in the range from 0 to 255", "true": "reads a single byte from the source string and returns it as an integer in the range from 0 to 255", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the current parse is disabled", "true": "returns true if the health check flag - file is enabled but does not exist , otherwise ( no file configured , or file configured and exists ) returns false", "bleu": 0.029863131804590423, "rouge": 0.23828125}, {"predict": "writes the contents string to a file", "true": "writes the contents to the file at the given location ( this creates the file or deletes its existing contents", "bleu": 0.0597312233790797, "rouge": 0.34078212290502796}, {"predict": "w lite pal the data set of integers , or , sequence order to hdf s the list of supported key / or w lite keys", "true": "generate one - key - multiple - values tree from array of key - value pairs , and wrap its into writable objects", "bleu": 0.05551277111446364, "rouge": 0.08254397834912042}, {"predict": "computes the angle that is closest to another location", "true": "returns the angle of the vector from p 0 to p 1 , relative to the positive x - axis", "bleu": 0.05879772136827779, "rouge": 0.19365079365079363}, {"predict": "create a new in memory cursor and column names", "true": "creates a new cursor setting the columns names that will be used by this cursor", "bleu": 0.10835843183417554, "rouge": 0.3189542483660131}, {"predict": "determines if is enabled , and false if any of the attribute are enabled , and slider or more values can be logged in the service accordingly", "true": "checks if is enabled", "bleu": 0.08359764098433711, "rouge": 0.22344322344322343}, {"predict": "draws the foreground of annotations", "true": "renders the drag border if needed", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "creates a transaction transaction", "true": "creates a new transaction suitable for the serial port", "bleu": 0.14558246978804804, "rouge": 0.43160377358490565}, {"predict": "starts this run n able interrupting actual runner", "true": "we ' re starting the thread", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "exports an object", "true": "exports an object", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the g zipped file name , parses it", "true": "creates the sub - directory where this particular back - up instance will be kept", "bleu": 0.07246365075155338, "rouge": 0.07973856209150328}, {"predict": "reads the input stream and return the resulting from the stream", "true": "this method reads a utf - 16 string , which length is given on the number of characters it consists of", "bleu": 0.05078822537842343, "rouge": 0.11833171677982542}, {"predict": "processes the children , re - update the children , re - updates the query tree", "true": "this method is called every time a child is processed", "bleu": 0.06468490584192432, "rouge": 0.0}, {"predict": "initializes the messages list in the system loop back", "true": "iterates through all the tips ' keys and stores the ones that are valid for this os", "bleu": 0.06421450514370824, "rouge": 0.14575866188769412}, {"predict": "initializes db queue as a vector", "true": "creates instance of persistent queue", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "write the string of an object into a buffer", "true": "this method adds to the sb the objects", "bleu": 0.14113991930789777, "rouge": 0.1189083820662768}, {"predict": "returns true if , at this time , the object will accept a connection according to the supplied event set descriptor", "true": "returns true if , at this time , the object will accept a connection via the named event", "bleu": 0.6781394283024478, "rouge": 0.8320545609548167}, {"predict": "creates a new request configured to publish an open graph action", "true": "creates a new request configured to publish an open graph action", "bleu": 1.0, "rouge": 1.0}, {"predict": "hide content and show the progress bar", "true": "hide content and show the progress bar", "bleu": 1.0, "rouge": 1.0}, {"predict": "read a bloom filter from some external location", "true": "read a bloom filter lm from an external file", "bleu": 0.4284449847620205, "rouge": 0.6984732824427481}, {"predict": "gets the median absolute deviation ( mad ) from a array of numbers", "true": "compute the median absolute deviation from median", "bleu": 0.27824623288353134, "rouge": 0.5285961871750434}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new sdp sdp exception when the code let needs to create an exception and include a rest of this exception", "true": "constructs a new sdp exception as a result of a system exception and uses the localized system exception message", "bleu": 0.15083364266523736, "rouge": 0.34602917341977313}, {"predict": "links node as first element , or returns false if full", "true": "links node as first element , or returns false if full", "bleu": 1.0, "rouge": 1.0}, {"predict": "fires a property change listener for a specific property", "true": "trigger the notification of all property change listeners", "bleu": 0.18575057999133596, "rouge": 0.2378167641325536}, {"predict": "some template to be executed by the dirty pointer to allow both cases and the dirty database", "true": "given an entry and a template , return true if dirty - read should be performed", "bleu": 0.09083627868206415, "rouge": 0.12187812187812186}, {"predict": "create a new j value slider", "true": "create a new j value slider", "bleu": 1.0, "rouge": 1.0}, {"predict": "applies a graphic move callback to a be invoked that a be stored in a line or control node", "true": "apply graphic attributes to the symbol", "bleu": 0.0712695567709093, "rouge": 0.1765557163531114}, {"predict": "to do add method documentation", "true": "to do add method documentation", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance of the remote service descriptor", "true": "creates new descriptor of remote restful service", "bleu": 0.19304869754804482, "rouge": 0.639412997903564}, {"predict": "read the old journal from the input file", "true": "read the old journal from the input file", "bleu": 1.0, "rouge": 1.0}, {"predict": "start the server", "true": "tries to start the server", "bleu": 0.513417119032592, "rouge": 0.7176470588235294}, {"predict": "true : this is a real implementation", "true": "test if the profile is complete", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "encode this values up with the error correction level and the supplied width and max error correction level", "true": "encode a string into a qr code with dimensions width x height", "bleu": 0.08097785064266204, "rouge": 0.2074829931972789}, {"predict": "writes in ts from the given in t array , starting from the specified offset , to the current position and increases the position by the number of in ts written", "true": "writes in ts from the given in t array , starting from the specified offset , to the current position and increases the position by the number of in ts written", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the ' http header and value pair to be sent", "true": "sets a header to use with http request", "bleu": 0.14323145079400493, "rouge": 0.32504440497335696}, {"predict": "updates the ui and pane to be resized by this listener", "true": "tells the look and feel to reset some of the values for this component so that it doesn ' t use j text area ' s default values", "bleu": 0.030539084229577428, "rouge": 0.1901792673421668}, {"predict": "generate to source of the class", "true": "generate to source of the class", "bleu": 1.0, "rouge": 1.0}, {"predict": "submit a task to the executor core", "true": "submits a task for execution", "bleu": 0.24446151121745047, "rouge": 0.34366197183098596}, {"predict": "check that the bucket name is valid", "true": "validates if given bucket name is dns compatible", "bleu": 0.29969770769039067, "rouge": 0.3952483801295896}, {"predict": "validates the user au th authorization request", "true": "validates the user namespace authorization create request", "bleu": 0.38260294162784475, "rouge": 0.7142857142857143}, {"predict": "format a given object", "true": "default object formatter using object", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "calculates the derived statistics ( significance etc )", "true": "calculates the derived statistics ( significance etc )", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the specified consistency group can be deleted or not", "true": "check to see if the consistency group is active and not created", "bleu": 0.17996531271765898, "rouge": 0.4166666666666667}, {"predict": "closes ' close able ' , ignoring any checked exceptions", "true": "closes ' close able ' , ignoring any checked exceptions", "bleu": 1.0, "rouge": 1.0}, {"predict": "attempts to wait on a message to be delivered to this receiver", "true": "if a message is already available in this receiver ' s pre fetch buffer then it is returned immediately otherwise this methods return null without waiting", "bleu": 0.053544713399960274, "rouge": 0.19741100323624597}, {"predict": "removes the objects in the specified range from the start to the end , but not including the end index", "true": "removes the objects in the specified range from the start to the end , but not including the end index", "bleu": 1.0, "rouge": 1.0}, {"predict": "refills the input buffer", "true": "refills the input buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "check to see if there are some duplicate names ( for duplicate tags )", "true": "if we remove an entity , we may need to update the duplicate identifier", "bleu": 0.10511846841633776, "rouge": 0.14285714285714285}, {"predict": "stops the bookkeeper journal manager", "true": "stop cluster", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "releases selection a set of items", "true": "remove selection to a list of items", "bleu": 0.27960682295094563, "rouge": 0.6069651741293532}, {"predict": "create a hub link mapping from a file name and mapping", "true": "reads the mappings from the file", "bleu": 0.12605968092174913, "rouge": 0.2484725050916497}, {"predict": "delete a receive load name that the track will either service or exclude", "true": "delete a load name that the train will either service or exclude", "bleu": 0.5731224484094262, "rouge": 0.8863936591809777}, {"predict": "validates the computes the computes name for the requested id and computed id", "true": "validates the tag information on a compute state matches an expected virtual machine name", "bleu": 0.12508461584656377, "rouge": 0.2207478890229192}, {"predict": "create a string from an in t array", "true": "creates a mojang son string from the given in t array tag", "bleu": 0.22374550494929327, "rouge": 0.5791139240506329}, {"predict": "method to remove all arguments from the token", "true": "removes the argument at the given index", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "replaces policy in the resource tree with the specified policy that will have the resource at the time out", "true": "replaces a policy ' s relevant content in the resource tree", "bleu": 0.19496249079519765, "rouge": 0.42020665901262916}, {"predict": "creates a new atomic double array with the same length as the two in t array", "true": "creates a new atomic double array of the given length , with all values initialized to zero", "bleu": 0.3576472225432307, "rouge": 0.4822134387351779}, {"predict": "moved this code into it ' s own method so move to could use it when the move is across file systems", "true": "moved this code into it ' s own method so move to could use it when the move is across file systems", "bleu": 1.0, "rouge": 1.0}, {"predict": "re compute the separation of cluster means", "true": "re compute the separation of cluster means", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to pad an image with a small image", "true": "returns an image where the input image is centered", "bleu": 0.19960198807747329, "rouge": 0.3333333333333333}, {"predict": "handles cleaning up for a lost pool entry with the given route", "true": "handles cleaning up for a lost pool entry with the given route", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the start element to the output", "true": "writes a start tag to the output", "bleu": 0.3655552228545123, "rouge": 0.5714285714285714}, {"predict": "adds an process listener to the process", "true": "adds a listener that will be informed when the user right - clicks an operator or a port", "bleu": 0.04852353400948068, "rouge": 0.2223572296476306}, {"predict": "recursively traverses the remote tree to be determined by the root", "true": "internal implementation of traverse", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "replaces the first instance of the search string with the replace string", "true": "replaces the first instance of the search string with the replace string", "bleu": 1.0, "rouge": 1.0}, {"predict": "stores the value to the specified index", "true": "stores the byte at the index given", "bleu": 0.2777619034011791, "rouge": 0.5714285714285714}, {"predict": "create an instance of common route config 1", "true": "create the config j panel , if there is one , to configure this operation type", "bleu": 0.06528905536667998, "rouge": 0.15721649484536082}, {"predict": "generate a salt for use with the b crypt", "true": "generate a salt for use with the b crypt", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the description text in the bottom right corner of the chart", "true": "draws the description text in the bottom right corner of the chart", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the bytes from a string", "true": "parses the bytes from a string", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds the first link string in the document", "true": "returns the inter - language link to a specific language ( if any )", "bleu": 0.08383280652235028, "rouge": 0.1732954545454545}, {"predict": "updates the actions on the database", "true": "updates the menu actions depending on the state of the given address space", "bleu": 0.11914378950211951, "rouge": 0.4935275080906149}, {"predict": "take a publisher and prepare to consume it on par all the specified source to future queue initial state , and round - robin fashion", "true": "take a publisher and prepare to consume it on par all all is m number of ' rails ' , possibly ordered and round - robin fashion", "bleu": 0.5287109234585629, "rouge": 0.6493425172197871}, {"predict": "cleans a directory without deleting it", "true": "cleans a directory without deleting it", "bleu": 1.0, "rouge": 1.0}, {"predict": "add down the timer timer timer", "true": "add a <unk> ball to the game and play the ball drop sound", "bleu": 0.07612610271614867, "rouge": 0.19741100323624597}, {"predict": "the method that is last used internally if the segment is between this segment , or - 1 if the last element is full , or - 1 , or max of segment", "true": "adds an element to the stream", "bleu": 0.0405185766962521, "rouge": 0.05859750240153698}, {"predict": "delete functionality test # test delete 6 ( )", "true": "delete functionality test # test delete 6 ( )", "bleu": 1.0, "rouge": 1.0}, {"predict": "handling an topic on the channel with the payload", "true": "retrieve a channel instance for the specified topic", "bleu": 0.16784459625186196, "rouge": 0.2378167641325536}, {"predict": "calculates a new point size based on the current size", "true": "approximates a float point on the line from zero to this point with distance p new length from zero", "bleu": 0.08021377997313761, "rouge": 0.2612419700214133}, {"predict": "inserts new row into the table", "true": "inserts a new row into the block", "bleu": 0.5446761861605913, "rouge": 0.7587064676616916}, {"predict": "adds new default uri to existing ( main uri )", "true": "add configuration for file scanner", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "transfers a range of sequence from the range", "true": "transfer an interpreted sequence or set of sequences from the reader to the writer", "bleu": 0.11327490115090784, "rouge": 0.25994318181818177}, {"predict": "to do need to consider that the distance may exist", "true": "computes the perpendicular distance from a point p to the ( infinite ) line containing the points ab", "bleu": 0.06735938555336447, "rouge": 0.1358574610244989}, {"predict": "returns a copy of the current instance to achieve immutability", "true": "returns a copy of the current instance to achieve immutability", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "it can be used to fix me after the jvm ids", "true": "returns the set of bug ids for fixes included in this build of the directory server", "bleu": 0.08001467044102561, "rouge": 0.14336075205640422}, {"predict": "fully read from the byte array , advancing the pointer", "true": "see the general contract of the read fully method of data input", "bleu": 0.12977836824680314, "rouge": 0.1788856304985337}, {"predict": "creates a new gui component with the name of the panels", "true": "creates the gui of the component", "bleu": 0.18527972555830952, "rouge": 0.4969450101832994}, {"predict": "indicates whether the client has a 24 - up command", "true": "returns whether the sdk is the <unk> release or later", "bleu": 0.16590387014219712, "rouge": 0.2}, {"predict": "constructs a new correlation pdf pdf file", "true": "constructs a new zero partial correlation distribution function with the given values for n and k", "bleu": 0.10105885506947931, "rouge": 0.3249001331557923}, {"predict": "checks if is enabled for the console", "true": "check whether selinux is enabled or not", "bleu": 0.24446151121745047, "rouge": 0.2857142857142857}, {"predict": "verifies that the file is valid", "true": "initial is es and checks validity of files", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "adds the given response code listener to the list of listeners", "true": "adds a response listener on the requests", "bleu": 0.14323145079400493, "rouge": 0.4629981024667932}, {"predict": "calculate the log likelihood of the current state", "true": "calculate the log likelihood of the current state", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if there are dead states that reach an initial state", "true": "returns true if there are dead states reachable from an initial state", "bleu": 0.6703420896351792, "rouge": 0.8333333333333334}, {"predict": "subtracts two money objects", "true": "subtracts two decimal objects", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "returns whether the object is equal to the given object", "true": "<unk> <unk> true if ( from 1 , to 1 ) = = ( from 2 , to 2 )", "bleu": 0.0463747649717434, "rouge": 0.06288659793814433}, {"predict": "skips line from the named line", "true": "reads characters from reader until the first e ol has been read", "bleu": 0.08993236413460196, "rouge": 0.20962199312714777}, {"predict": "handler for completion of the uri to list the host system handler", "true": "https : / / docs", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "converts a given base 64 encoded key to a byte buffer", "true": "converts a base 64 encoded key into a byte buffer", "bleu": 0.46595384151899627, "rouge": 0.8645669291338582}, {"predict": "check whether there is a progress before the user", "true": "step in the animation", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "accumulates char into the buffer , starting with the given character", "true": "this is used to load a previously marked set of bytes into the string builder without escaping", "bleu": 0.0868851996125416, "rouge": 0.1375422773393461}, {"predict": "encrypts a signature using a given word", "true": "creates signature wrapping oracle , parses the document and searches for all the signature value and key info elements", "bleu": 0.03345225143346287, "rouge": 0.07101280558789289}, {"predict": "creates a new decides length tree node , passing it to the specified range", "true": "fully construct an arbitrary length path node with all required annotations", "bleu": 0.09782375748961449, "rouge": 0.16353887399463804}, {"predict": "adds wheel changing listener", "true": "adds wheel changing listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "scans a directive from a given stream", "true": "read a yam l directive number : this is either the major or the minor part", "bleu": 0.056829570481990416, "rouge": 0.16245006657789615}, {"predict": "tobit string - returns a string representation of d", "true": "tobit string - returns a string representation of i", "bleu": 0.8801117367933934, "rouge": 0.8888888888888888}, {"predict": "converts the float samples into a little - endian 16 bit sample buffer", "true": "converts the float samples in a complex buffer to a little endian 16 - bit buffer", "bleu": 0.29072863108461305, "rouge": 0.6770255271920089}, {"predict": "returns true if key is in use a valid token value and that contains the node time stamps", "true": "check if a received token is ok", "bleu": 0.08562365224473284, "rouge": 0.26068376068376065}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "there ' s all nodes in the tree tree", "true": "expands all paths in the tree", "bleu": 0.2777619034011791, "rouge": 0.5532879818594103}, {"predict": "list of namespaces declarations , so that the unique element names are in the namespaces stack", "true": "describe the vocabularies which are in use in the kb based on the predicate partition statistics", "bleu": 0.12729922658368398, "rouge": 0.25}, {"predict": "invoke any ( c ) throws null pointer exception if c has been completed", "true": "invoke any ( c ) throws null pointer exception if c has null elements", "bleu": 0.8507331335123524, "rouge": 0.8571428571428571}, {"predict": "solve the linear function as plain function on the distribution", "true": "a coordinate descent algorithm for l 1 - loss and l 2 - loss epsilon - s vr dual problem min \\ beta 0", "bleu": 0.026140050962173957, "rouge": 0.0}, {"predict": "creates a new signals group action object", "true": "create an action with a specific title", "bleu": 0.20556680845025982, "rouge": 0.14285714285714285}, {"predict": "generates an x - values array filled with numbers in range specified by the parameters", "true": "generates an x - values array filled with numbers in range specified by the parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "compare to ( big integer a )", "true": "compare to ( big integer a )", "bleu": 1.0, "rouge": 1.0}, {"predict": "put the service under the given attribute value for the given defining class and field , if it isn ' t already there", "true": "put the service under the given attribute value for the given defining class and field , if it isn ' t already there", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new decoder that decodes the specified uri", "true": "creates a new decoder that decodes the specified uri", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert rgb color to cmyk color", "true": "convert rgb color to cmyk color", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a listener from the set of listeners", "true": "removes a listener from the set of listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "shows an error message to continue and user to continue if user continue returns true ( continue with user )", "true": "<unk> a common use case of showing an error message with an error icon that <unk> out after a few seconds", "bleu": 0.11435278352372569, "rouge": 0.19426751592356686}, {"predict": "parses a name - value - pair with the given parser", "true": "parses a name - value - pair with the given parser", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all characters which appear in string bag from string s", "true": "removes all characters which appear in string bag from string s", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the trigonometric cosine of the specified angle in radians", "true": "returns the trigonometric cosine of the specified angle in radians", "bleu": 1.0, "rouge": 1.0}, {"predict": "formats the given number to the given number of decimals , and returns the number as a string , maximum 35 characters", "true": "formats the given number to the given number of decimals , and returns the number as a string , maximum 35 characters", "bleu": 1.0, "rouge": 1.0}, {"predict": "api method", "true": "destroy all fragments and loaders", "bleu": 0.14256747717620566, "rouge": 0.0}, {"predict": "method for bean context child interface", "true": "method for bean context child interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper function to ascertain the existence of a file and return true / false appropriately", "true": "helper function to ascertain the existence of a file and return true / false appropriately", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a windows file attributes from a win 32 file structure", "true": "create a windows file attributes from a win 32 find data structure", "bleu": 0.7546930988815485, "rouge": 0.8628005657708628}, {"predict": "flatten a map into an xml serialize r", "true": "flatten a map into an xml serialize r", "bleu": 1.0, "rouge": 1.0}, {"predict": "restores the last event in this event searched", "true": "fire event to the ripple r pane manually", "bleu": 0.17747405280050269, "rouge": 0.125}, {"predict": "determines if the specified json value has a full entry", "true": "whether the query ( source or target side query of a reconciliation ) returns full entry data , or just ids if explicitly configured , returns that setting", "bleu": 0.03261248923018585, "rouge": 0.19395866454689983}, {"predict": "return whether or not the given resource is a module that cannot be used as a module", "true": "determines if the given member is a t la + module", "bleu": 0.12512236921161915, "rouge": 0.3714981729598051}, {"predict": "write an annotation at the current position in the annotation", "true": "write annotation item into current section", "bleu": 0.14991106946711685, "rouge": 0.3927038626609442}, {"predict": "validates an in et address in et address", "true": "pack ipv 4 address and match - all socket flag into a long", "bleu": 0.08583768591139128, "rouge": 0.09131736526946108}, {"predict": "returns whether a given revision contains a given template name", "true": "determines whether a given revision contains a given template name", "bleu": 0.8931539818068694, "rouge": 0.9}, {"predict": "retrieves all account info requests from the given start date", "true": "retrieve all the account info requests from the given start date", "bleu": 0.7302542206757164, "rouge": 0.8498452012383902}, {"predict": "tailors and tailors a cylinder", "true": "draws a cylinder for the given parameters", "bleu": 0.24084874887188915, "rouge": 0.32360742705570295}, {"predict": "returns a new list of strings among the specified arguments", "true": "add a list of strings", "bleu": 0.24808415001701817, "rouge": 0.5674418604651164}, {"predict": "walk graph beginning without package request", "true": "walks the provided parse tree using the list of listeners", "bleu": 0.09536752763778475, "rouge": 0.0}, {"predict": "read on char", "true": "read on char", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines how two dates compare up to no more than the specified most significant field", "true": "determines how two dates compare up to no more than the specified most significant field", "bleu": 1.0, "rouge": 1.0}, {"predict": "to make a list of word 1 , this is the word 1 ( morpheme ) + word 2 , the word 2 ) +", "true": "splits a word in two word", "bleu": 0.057783239927083445, "rouge": 0.21759809750297268}, {"predict": "does a given url point to google book search , regardless of domain", "true": "does a given url point to google book search , regardless of domain", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the class name for the file system by java", "true": "returns the relative path for a fully qualified class name", "bleu": 0.21834177214239062, "rouge": 0.4}, {"predict": "removes a title prefix", "true": "removes the title prefix", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "send a profile update to { v : list } and register to handle messages", "true": "send the message and wait for replies", "bleu": 0.09103526405546068, "rouge": 0.1945773524720893}, {"predict": "returns true if all values for the given service attributes are equals to and at least one element", "true": "is relevant service", "bleu": 0.06809398432036522, "rouge": 0.10931899641577059}, {"predict": "utility method for simple entry and simple immutable entry", "true": "test for equality , coping with nulls", "bleu": 0.14113991930789777, "rouge": 0.1278825995807128}, {"predict": "search for car number by road number", "true": "search for car by road number", "bleu": 0.5, "rouge": 0.9360613810741688}, {"predict": "convert a jvm class name to a jvm class name or signature", "true": "convert class name to slashed format", "bleu": 0.2044800736021839, "rouge": 0.4728682170542636}, {"predict": "compute p average points in p and p du", "true": "average precision - computes for each relevant label the percentage of relevant labels among all labels that are ranked before it", "bleu": 0.03720407880344645, "rouge": 0.06218144750254842}, {"predict": "finds an location or creates a new location for this one", "true": "finds an existing location or creates a new location if needed requires location ' s name creates a unique id for this location", "bleu": 0.20840026091127917, "rouge": 0.5530371713508613}, {"predict": "closes the underlying input stream", "true": "closes tree map and <unk> memory", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "remove oma download info from shared pref s", "true": "remove oma download info from shared pref s", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the name of a jar file is a local directory", "true": "indicates whether the path of the android sdk home directory is specified in a local", "bleu": 0.13321592461461113, "rouge": 0.35260115606936415}, {"predict": "returns a boolean indicating whether a bundle contains properties that could be a valid saved token", "true": "returns a boolean indicating whether a bundle contains properties that could be a valid saved token", "bleu": 1.0, "rouge": 1.0}, {"predict": "we call this to guarantee that we fetch a fresh policy from the server", "true": "we call this to guarantee that we fetch a fresh policy from the server", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if , at this time , the object will accept a connection with respect to the supplied event name", "true": "returns true if , at this time , the object will accept a connection with respect to the named event", "bleu": 0.8641944207171431, "rouge": 0.9309236947791165}, {"predict": "returns a vector 2 from the given vector 2 to the given exponent and z values", "true": "raises the x and y values of a vector 2 to the given power", "bleu": 0.3542938205971965, "rouge": 0.4048672566371681}, {"predict": "invokes the specified parameter less method if it exists", "true": "invokes the specified parameter less method if it exists", "bleu": 1.0, "rouge": 1.0}, {"predict": "merge two tokens to c above in the supplied stream", "true": "load input stream as a lua binary chunk if the first 4 bytes are the lua binary signature", "bleu": 0.06268497150209275, "rouge": 0.06792873051224944}, {"predict": "adds a button to the list of button that can be interpreted as button", "true": "add a button to the panel", "bleu": 0.24601372576927535, "rouge": 0.43109540636042404}, {"predict": "configure a response for matching requests to the client", "true": "set up a <unk> to requests matching certain criteria", "bleu": 0.17747405280050263, "rouge": 0.2222222222222222}, {"predict": "commits the domain assignment in the j mx control assignment , and control attributes as an input variable", "true": "commits changes in page to input", "bleu": 0.08097785064266204, "rouge": 0.27477477477477474}, {"predict": "splits string into multiple strings", "true": "provides a utility method breaks a given string to array of string according to the given separator", "bleu": 0.02476709768976917, "rouge": 0.08276797829036635}, {"predict": "this method inserts an entry in the gci r map that is specified by in st", "true": "this method inserts an entry for a \" <unk> \" instruction immediately after the original entry", "bleu": 0.2928298013714697, "rouge": 0.375}, {"predict": "creates a new instance of the object", "true": "creates a new instance of a class", "bleu": 0.6803749333171202, "rouge": 0.7142857142857143}, {"predict": "constructs a new parser for the given format string", "true": "constructs a new parser for the given format string", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends data from java", "true": "converts an iterator to a string by concatenating all of the string representations of objects in the iterator , divided by a separator", "bleu": 0.002614001903213825, "rouge": 0.0}, {"predict": "return true if the configuration is full", "true": "check whether this match er has reached \" max - size \" or not", "bleu": 0.057461663912368725, "rouge": 0.0}, {"predict": "schedules a playlist to run if it ' s not already there", "true": "schedules a playlist save task", "bleu": 0.19338531381761725, "rouge": 0.38125000000000003}, {"predict": "this variable needs to be read from any of it ' s subsidiary variables", "true": "this variable needs to be read if any of it ' s subsidiary variables needs to be read", "bleu": 0.6014225479556896, "rouge": 0.7945891783567133}, {"predict": "call this when an action occurs with an action listener ( ) to call this method", "true": "invoked when an action occurs", "bleu": 0.2140909265975804, "rouge": 0.42068965517241375}, {"predict": "returns a description of the class i fier", "true": "converts a vector to a string", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "returns the integer at index i", "true": "return a integer object with same value", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a verbose log message", "true": "send a verbose log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "save the indexes of all indexes", "true": "commit all index memory changes to disk", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "compute and return the score for a match with e errors and x location", "true": "compute and return the score for a match with e errors and x location", "bleu": 1.0, "rouge": 1.0}, {"predict": "if delta y > 0 , move the content down", "true": "if delta y > 0 , move the content down", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies all of the mappings from the specified map to this one", "true": "copies all of the mappings from the specified map to this one", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts a string to start and end the data to be displayed", "true": "inserts a string into the content", "bleu": 0.2044800736021839, "rouge": 0.4728682170542636}, {"predict": "obtains the string representation of this object", "true": "obtains the string representation of this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the data to the outgoing message queue", "true": "writes the data until there ' s space available", "bleu": 0.26340290082307516, "rouge": 0.34923664122137404}, {"predict": "helper function to copy and close the input stream , and close it to the output writer", "true": "copy input to output and close the output stream before returning", "bleu": 0.17694975149532557, "rouge": 0.4457978075517661}, {"predict": "check using des many times and optimistically", "true": "check that a number of <unk> are available", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "transforms the point on the destination point and returns a point in the destination to be double - > double array", "true": "returns dst , the un rotated pixel location of the map", "bleu": 0.0690889519686715, "rouge": 0.13246471226927253}, {"predict": "asserts that the given code closure fails when it is evaluated and that a particular type of exception is thrown", "true": "asserts that the given code closure fails when it is evaluated and that a particular type of exception is thrown", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a raw packet to the desired interface", "true": "writes a raw packet to the desired interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "process an attribute string of type t yes no into a boolean value", "true": "process an attribute string of type t yes no into a boolean value", "bleu": 1.0, "rouge": 1.0}, {"predict": "load rma that are shipment data", "true": "load p bart ner dependent order / in voice / shipment field", "bleu": 0.08993236413460196, "rouge": 0.20962199312714777}, {"predict": "this method will search list of wo ' s for the given criteria and eligible for mb", "true": "this method will search list of wo ' s for the given criteria and eligible for mb", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a time for week in a date / time and time zone", "true": "creates a time period for the week in which the specified date / time falls , calculated relative to the specified time zone", "bleu": 0.14829145521049103, "rouge": 0.5819601040763227}, {"predict": "creates a new resources queue with the specified resource", "true": "create a queue of lock requests for a resource", "bleu": 0.16784459625186196, "rouge": 0.3333333333333333}, {"predict": "encodes the certificate and sign it into the der output stream", "true": "create the signed certificate request", "bleu": 0.12605968092174913, "rouge": 0.2681318681318681}, {"predict": "schedule a task for the given task , period", "true": "schedule a task that starts immediately", "bleu": 0.2626909894424158, "rouge": 0.4149659863945578}, {"predict": "abbreviate a string by simply truncating it", "true": "abbreviate a string by simply truncating it", "bleu": 1.0, "rouge": 1.0}, {"predict": "local test for harmony - 3324 make sure you ' re constructed from the client - test which ' re ' t stop and a simple patch", "true": "local method to stop a wraparound test", "bleu": 0.05647857271976959, "rouge": 0.19741100323624594}, {"predict": "ensures the row index of the row at the given row", "true": "check if a row index is valid", "bleu": 0.14991106946711685, "rouge": 0.2314990512333966}, {"predict": "helper method called to empty all shared symbols , but to leave arrays allocated", "true": "helper method called to empty all shared symbols , but to leave arrays allocated", "bleu": 1.0, "rouge": 1.0}, {"predict": "determine the enemy potential for blitzing a territory - all enemies are combined", "true": "determine the enemy potential for blitzing a territory - all enemies are combined", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new name containing the from the given string with the jd bc lower - underscore", "true": "returns a new name containing the pieces from this name plus the given identifier added on the end", "bleu": 0.3587982192491826, "rouge": 0.5684995340167754}, {"predict": "parses the date in the form \" mm : s s s", "true": "parses a string date into a java date object", "bleu": 0.11498759556447223, "rouge": 0.19551282051282048}, {"predict": "return textual representation of this message", "true": "returns a string representation of the message data", "bleu": 0.2238400777155271, "rouge": 0.4178082191780822}, {"predict": "( n > 0 up to indicate draw a white space character", "true": "is the argument a white space character according to the pdf spec ?", "bleu": 0.27846466558102084, "rouge": 0.31770833333333337}, {"predict": "remove the given filter to the list of filters", "true": "un register filter ( it won ' t get anymore events )", "bleu": 0.10113117135596685, "rouge": 0.0928462709284627}, {"predict": "fixes the loaded classes from the list to make it appear in the ensemble", "true": "removes the specified class if i ers", "bleu": 0.08839374326825923, "rouge": 0.10132890365448505}, {"predict": "add a property change listener", "true": "add a property change listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the number of checkpoints that were loaded", "true": "returns the number of checkpoints that were loaded", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an element to the list", "true": "add element at the end", "bleu": 0.2626909894424158, "rouge": 0.5545454545454546}, {"predict": "add the urls for listening", "true": "add the urls for listening", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the passed virtual array uris to the set of virtual arrays assigned to the resource endpoints", "true": "adds the passed virtual array uris to the set of virtual array uris assigned to the resources by the user", "bleu": 0.6001973612814592, "rouge": 0.7458515283842795}, {"predict": "returns true if the supplied column is editable or not", "true": "checks if is cell editable", "bleu": 0.14991106946711685, "rouge": 0.42558139534883715}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "get whether the trash can be in the trash", "true": "ends a drag in the trash can , clearing state and deleting blocks as needed", "bleu": 0.16959011078459055, "rouge": 0.23921568627450981}, {"predict": "this convenience method returns an array of elements", "true": "helper for concatenating several arrays", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "create a polygon iterator which tries to populate the graph", "true": "the given pattern must be a pattern", "bleu": 0.13950796967929133, "rouge": 0.12151394422310759}, {"predict": "checks to see if the catalog defined in the catalog", "true": "check a field that defines a custom catalog", "bleu": 0.12605968092174913, "rouge": 0.11338289962825278}, {"predict": "instantiate s a new function", "true": "sets time out to idle thread time out", "bleu": 0.1259933680597235, "rouge": 0.0}, {"predict": "check if body is identical as plain", "true": "very naive s sdp discovery packet detection", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "add the given component as a child of tree", "true": "intercept refresh view and loading view", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "restores the selection of the selection to the selection ( left , right , right , right , centered in the model", "true": "restores the selection after a model event / sort order changes", "bleu": 0.1090009697802911, "rouge": 0.2579281183932347}, {"predict": "gets the cure nt contents of this byte stream as a byte array", "true": "gets the cure nt contents of this byte stream as a byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "stop removing any changes and discards a mute state", "true": "<unk> after each tests", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "consumes events from the given interval , or removes it from the events", "true": "blocks until the listener has consume the specified number of matching events , blocking at most the specified number of milliseconds", "bleu": 0.0649117067818742, "rouge": 0.16928769657724332}, {"predict": "updates the ui with the required parameters", "true": "fills up <unk> from given command", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "compare to ( big integer a )", "true": "compare to ( big integer a )", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates a pseudo random number", "true": "generates a normally distributed random number and rounds it", "bleu": 0.2030072761281288, "rouge": 0.5434298440979956}, {"predict": "determine the current amount of over scroll", "true": "determine the current amount of over scroll", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new vector with the specified capacity", "true": "constructs a new vector with the specified capacity", "bleu": 1.0, "rouge": 1.0}, {"predict": "process the invite request", "true": "process the invite request", "bleu": 1.0, "rouge": 1.0}, {"predict": "log given object , logging status for execution and log out to the given index", "true": "initializes logger into / from log reference passed in", "bleu": 0.08225964699966554, "rouge": 0.08726752503576538}, {"predict": "read receive time from window returns ' true ' if successful , ' false ' if an error was detected", "true": "read receive delay from window returns ' true ' if successful , ' false ' if an error was detected", "bleu": 0.8806626677278203, "rouge": 0.9500000000000002}, {"predict": "writes a indent ion of the represented by a string , if any", "true": "writes indents and automatically includes the base in d end from the options", "bleu": 0.10571070857151538, "rouge": 0.15384615384615383}, {"predict": "returns the hash code of this list", "true": "returns the hash code of this list", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse string value returning an integer", "true": "parse string value returning a in t", "bleu": 0.5204069361525009, "rouge": 0.6069651741293532}, {"predict": "if the mouse is moved over a component , which is dependent on the mouse pointer", "true": "performs handling of java mouse event note that this function should be invoked only from root of menu window ' s hierarchy that grabs input focus", "bleu": 0.041174316451471925, "rouge": 0.04565868263473054}, {"predict": "check if the given node is \" no \" nodes \"", "true": "tests whether the node to be replaced is invalid", "bleu": 0.1354599427337814, "rouge": 0.3055091819699499}, {"predict": "generates the instruction to push the given value on the stack", "true": "generates the instruction to push the given value on the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "draw the callback on dismiss everything", "true": "notifies listener of a mouse motion event", "bleu": 0.15723447135049806, "rouge": 0.0}, {"predict": "remove a batch cluster er listener", "true": "remove a batch cluster er listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "this should only be created by the lock service", "true": "this should only be called by the lock service", "bleu": 0.6580370064762462, "rouge": 0.8888888888888888}, {"predict": "removes an object from the set of objects that are in the relation", "true": "removes an object that is known to not be in the relation", "bleu": 0.2658483576665877, "rouge": 0.5640686922060767}, {"predict": "wraps a byte array which can be heap or more heap", "true": "wraps a byte", "bleu": 0.21200626759025185, "rouge": 0.47780678851174935}, {"predict": "parse the given json value as a string , returning the base 64 value as a string", "true": "start the string parsing", "bleu": 0.07994607499472013, "rouge": 0.21441124780316342}, {"predict": "value of ( long val ) : convert a negative long value to a big integer", "true": "value of ( long val ) : convert a negative long value to a big integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts the specified element before the specified position into the receiver", "true": "inserts the specified element before the specified position into the receiver", "bleu": 1.0, "rouge": 1.0}, {"predict": "grows the order of entries to the new array , in order to make it can be zero", "true": "increases hash table capacity by <unk> entry arrays", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "construct a sided plane from a pair of vectors describing points , and including origin , plus a point p which describes the side", "true": "construct a sided plane from a pair of vectors describing points , and including origin , plus a point p which describes the side", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks the input stream if it contains gzip compressed data", "true": "checks the input stream if it contains gzip compressed data", "bleu": 1.0, "rouge": 1.0}, {"predict": "insert room for operation", "true": "insert room for operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all entries from the configuration store", "true": "clears instance cache and de registers listeners", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "registers an internal object to the unit", "true": "registers an object that should be <unk>", "bleu": 0.2626909894424158, "rouge": 0.42857142857142855}, {"predict": "check that expected output contains expected output", "true": "fails if expected string is not found in x", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "removes the class name from the cache", "true": "removes the class name from the cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "for debugging : print operation completion stage returns lag 0", "true": "failed stage returns a completion stage completed exceptionally with the given exception", "bleu": 0.16153071659734697, "rouge": 0.1788856304985337}, {"predict": "renders the channel config values using the specified graphics object", "true": "renders the channel config s , lines , labels , and cursor", "bleu": 0.28724674741389467, "rouge": 0.3577712609970674}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "handles the case where a class loader is dropped", "true": "handles the case where a class loader is dropped", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete ( sw , port ) from the list of list of attachment points", "true": "delete ( sw , port ) from the list of list of attachment points and old aps", "bleu": 0.8071177470053892, "rouge": 0.8877338877338876}, {"predict": "given a class node , return true if the package has assigned to the given type", "true": "checks if a class node is assignable to another", "bleu": 0.15844501337268932, "rouge": 0.33701657458563533}, {"predict": "total files to be recovered ( potentially not yet )", "true": "total number of files to be recovered ( potentially not yet done )", "bleu": 0.612298718755327, "rouge": 0.8495821727019499}, {"predict": "constructs and anim game item in st ace based on a md 5 model an md 5 animation", "true": "constructs and anim game item in st ace based on a md 5 model an md 5 animation", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new instance with the specified detail string and exception", "true": "construct a new instance with the specified detail string and exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes a assignment from the specified bucket", "true": "deletes the existing assignment between a user and an experiment", "bleu": 0.15215596197411094, "rouge": 0.22803738317757008}, {"predict": "this method looks up a string for the given object into the given string buffer", "true": "format a given object", "bleu": 0.11633270842295028, "rouge": 0.35260115606936415}, {"predict": "cas wait status field of a node", "true": "cas wait status field of a node", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new thread dump of the thread dump", "true": "returns the singleton instance , creating if necessary", "bleu": 0.14113991930789777, "rouge": 0.1189083820662768}, {"predict": "checks if there are more audio and there are some audio channel to occur when the beginning of an audio buffer and the stop threshold", "true": "starts audio playback once audio buffer is almost full and remaining capacity falls below the start threshold", "bleu": 0.07903489857957884, "rouge": 0.29587712206952305}, {"predict": "check if any of the matches filter", "true": "checks if all keywords in filter array are in input", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "removes and returns first element , or null if empty", "true": "removes and returns first element , or null if empty", "bleu": 1.0, "rouge": 1.0}, {"predict": "run a http request", "true": "executes the download run n able using the provided monitor to update the user and provide cancel capabilities", "bleu": 0.010850044034164912, "rouge": 0.08155080213903743}, {"predict": "initialize the document builder factory so that it can be reused and does not need to be reinitialized for each parse action", "true": "initialize the document builder factory so that it can be reused and does not need to be reinitialized for each parse action", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the standard error of the estimate for the intercept", "true": "returns the standard error of the estimate for the intercept", "bleu": 1.0, "rouge": 1.0}, {"predict": "create missing values for missing values", "true": "create missing attribute values", "bleu": 0.31239399369202553, "rouge": 0.6224489795918368}, {"predict": "replace repeated horizontal whitespace characters with a \" _ \" and \"", "true": "this method replaces all \\ to /", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "start launch the launch thread and start running tasks at start time", "true": "creates a background thread that will call the launch notifier when the process terminates", "bleu": 0.12438292405881463, "rouge": 0.1517412935323383}, {"predict": "encode all links to their log ' s output name", "true": "encode the a cl to the given buffer", "bleu": 0.13950796967929133, "rouge": 0.22676579925650556}, {"predict": "expands the provided file with hidden name if needed , and unless it is already hidden", "true": "transforms \" something $ dir $ / other / \" to \" something / path / to / hidden / other / \"", "bleu": 0.04966570600299737, "rouge": 0.04967426710097719}, {"predict": "try to queue whether or not the queue is running , if any", "true": "keep private", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "updates the value of the input values in the text form", "true": "allow us to update value ( and sync to gui version if exists", "bleu": 0.09497094417933137, "rouge": 0.08209959623149395}, {"predict": "check to see if there is another element in the stream", "true": "checks if another objects is available by attempting to read another byte from the stream", "bleu": 0.12879607627726938, "rouge": 0.37423312883435583}, {"predict": "appends parameter types to given string builder parameter and appends the parameter list to the given string builder", "true": "creates a display string of a parameter list ( without the parentheses ) for the given parameter types and names", "bleu": 0.12885797521931677, "rouge": 0.2606837606837607}, {"predict": "complete a heartbeat job , including setting it , or if none of the region", "true": "execute this call to fill in heartbeat data on the slave", "bleu": 0.09103526405546068, "rouge": 0.1582360570687419}, {"predict": "decrypt bytes previously private key and signed the modulus / h in the cipher", "true": "decrypt an encapsulated session key", "bleu": 0.09782375748961449, "rouge": 0.23018867924528305}, {"predict": "for each private key", "true": "loads the private key of this process", "bleu": 0.22336835181428535, "rouge": 0.346590909090909}, {"predict": "removes a listener for changes of registered snapshot categories", "true": "removes a listener for changes of registered snapshot categories", "bleu": 1.0, "rouge": 1.0}, {"predict": "will return true if any extensions are present and marked as critical as we currently dont handle any extensions !", "true": "will return true if any extensions are present and marked as critical as we currently dont handle any extensions !", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method uses j dk 7 : org", "true": "z get week number for a seven day range , this returns a week number for the specified seven day range , according to the supplied week field rules", "bleu": 0.011616867535193535, "rouge": 0.04903536977491961}, {"predict": "check if given string is not in array", "true": "returns true iff str is not an element of array", "bleu": 0.176625510283176, "rouge": 0.3267857142857143}, {"predict": "returns a copy of the given node or subtree with this document as its owner", "true": "returns a copy of the given node or subtree with this document as its owner", "bleu": 1.0, "rouge": 1.0}, {"predict": "lib sec p 256 k 1 cleanup - this destroys the sec p 256 k 1 context object this should be called at the end of the program for proper cleanup of the context", "true": "lib sec p 256 k 1 cleanup - this destroys the sec p 256 k 1 context object this should be called at the end of the program for proper cleanup of the context", "bleu": 1.0, "rouge": 1.0}, {"predict": "check correct error enabled", "true": "initialize the background task to be run every hour", "bleu": 0.08656385444580769, "rouge": 0.0}, {"predict": "takes a shard list and an list of urls into an list of strings", "true": "creates a randomized list of urls for the given shard", "bleu": 0.18207052811092136, "rouge": 0.34366197183098596}, {"predict": "get reader to response body using given character set", "true": "get reader to response body using given character set", "bleu": 1.0, "rouge": 1.0}, {"predict": "zlib compress 2 byte", "true": "creates the zlib bytes for pdf images", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "adds a vertex to internal vertex", "true": "defines a new vertex with the given id", "bleu": 0.17516432701748888, "rouge": 0.2785388127853881}, {"predict": "invoke clear ui manager created client", "true": "set up all of the other objects to operate with a server connected to this application", "bleu": 0.03508375277329034, "rouge": 0.0}, {"predict": "returns the index starting at the specified index ( two characters at a time )", "true": "returns the index starting at the specified index ( two characters at a time )", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate requirements along the minor axis", "true": "calculate the requirements for the minor axis", "bleu": 0.3851442247849805, "rouge": 0.7587064676616916}, {"predict": "append a string to the end of the string buffer", "true": "appends an in t ( little endian ) in the buffer", "bleu": 0.12623203108004888, "rouge": 0.18885448916408668}, {"predict": "pushes the given expression on all sub directories", "true": "uploads a new let binding to <unk> i", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "converts the given depth to the printable string value", "true": "displays this node as a string , implementing explore node interface ; depth parameter is a bound on the depth of the portion of the tree that is displayed", "bleu": 0.01923251227516884, "rouge": 0.1442080378250591}, {"predict": "create a data column descriptor", "true": "creates a new descriptor instance", "bleu": 0.3021375397356768, "rouge": 0.4}, {"predict": "scale a number with a given index", "true": "bulk load the tree", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "forward project a lat / lon poly", "true": "forward project a lat / lon poly", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove categories that contain a year in them ( starting with 19 or 20 ) , except for this year and previous year rationale : https : / / g it hub", "true": "remove categories that contain a year in them ( starting with 19 or 20 ) , except for this year and previous year rationale : https : / / g it hub", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new data provider instance with the provided message types", "true": "creates a new data provider event", "bleu": 0.41722614486115056, "rouge": 0.6211812627291243}, {"predict": "determine if the given bean instance with this violation", "true": "validate the bean is not null ; then validate its fields", "bleu": 0.12507277759788113, "rouge": 0.19645732689210954}, {"predict": "set the comments on the left - command that aligns with the given bracket", "true": "set the indent of a bracket based on the command provided in the supplied document", "bleu": 0.15317779118596056, "rouge": 0.41123595505617977}, {"predict": "invokes input digit helper on each digit of the national number accrued , and generate a formatted string", "true": "attempts to set the formatting template and returns a string which contains the formatted version of the digits entered so far", "bleu": 0.09375638262623849, "rouge": 0.2023217247097844}, {"predict": "reset the current font and description weights", "true": "fill picks", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "creates a copy of the field", "true": "creates a copy of the field", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a zero number from a sign and an array of zero length", "true": "create a zero number from a sign and an array of zero length", "bleu": 1.0, "rouge": 1.0}, {"predict": "cast object to type t", "true": "cast object to type t", "bleu": 1.0, "rouge": 1.0}, {"predict": "schedules a file to be deleted when jvm exits", "true": "schedules a file to be deleted when jvm exits", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize and do work where other steps need to wait for", "true": "initialize and do work where other steps need to wait for", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is called from the annotation inside the editor ( which allows to draw the annotation )", "true": "bypass the cache and the <unk> image drawing and directly paint the j editor pane to the context", "bleu": 0.08961672320242714, "rouge": 0.2777777777777778}, {"predict": "adds the specified point to this partial hull", "true": "add point to the result set", "bleu": 0.22679164443904004, "rouge": 0.2932692307692307}, {"predict": "load properties from the specified reader", "true": "obtain a configuration instance by loading the properties from the supplied reader", "bleu": 0.1599248714366856, "rouge": 0.41924398625429554}, {"predict": "calculates the write item for the given item", "true": "adds an item to this instance", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "add an element to the xml document", "true": "updates the xml representation to contain this annotation", "bleu": 0.22772101321113858, "rouge": 0.2634989200863931}, {"predict": "reads a boolean ( boolean ) from the source stream", "true": "reads a boolean from the source stream", "bleu": 0.46924700641055994, "rouge": 0.850597609561753}, {"predict": "returns an enumeration of the additional measure names", "true": "returns an enumeration of the additional measure names", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes the format for the data set produced", "true": "initializes the format for the data set produced", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns natural logarithm of gamma function", "true": "log gamma function : ln ( gamma ( alpha ) ) for alpha > 0 , accurate to 10 decimal places", "bleu": 0.02386337062196437, "rouge": 0.1346578366445916}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "start the ticker - do the notification action", "true": "this method will start the text ticker", "bleu": 0.22679164443904004, "rouge": 0.4048672566371681}, {"predict": "helper method to get a secure random instances for instances", "true": "return a cipher suite with the given id", "bleu": 0.12605968092174913, "rouge": 0.11338289962825278}, {"predict": "handle the commands to update the statistics appropriately", "true": "creates and populates a pending action context", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "shows the given js text and populates it", "true": "displays the annotations of the droid safe text markers for the given class name in the given java editor", "bleu": 0.05734190771186066, "rouge": 0.13800904977375564}, {"predict": "resolves new expression declared", "true": "will resolve type of new expression", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "a following randomly adds the data in order to target area", "true": "given a list of sizes of a similar aspect ratio , it tries to pick evenly spaced out options", "bleu": 0.06091519954817571, "rouge": 0.12721584984358705}, {"predict": "verifies the passed log record to check for tampering", "true": "verifies the passed log record to check for tampering", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies the data to the clipboard for this clipboard", "true": "copies the given transferable to the system ' s clipboard", "bleu": 0.2187537716852318, "rouge": 0.5213675213675214}, {"predict": "formats number of percent - sign to a string", "true": "format the download percent", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "translate attributes , translate an attribute into the string description as defined in rfc 2252", "true": "translate attributes that describe an attribute definition into the string description as defined in rfc 2252", "bleu": 0.6235963493405124, "rouge": 0.8338590956887485}, {"predict": "updates the actions in each text just before showing the popup menu", "true": "updates the actions in each text just before showing the popup menu", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a collection immutable", "true": "a recursive call to make a collection and all it ' s values immutable", "bleu": 0.041710075933029465, "rouge": 0.3029801324503311}, {"predict": "add a hex image that is used to a base image and is the logic of a base image", "true": "adds all images associated with the hex to the specified tracker", "bleu": 0.07658412276041004, "rouge": 0.21010332950631458}, {"predict": "parse string to date", "true": "parse string to date time", "bleu": 0.7788007830714049, "rouge": 0.8714285714285713}, {"predict": "this is a method to determine whether the supplied trace is a fake class", "true": "this method checks that this processor matches the supplied business tx n name and node details", "bleu": 0.11458346677361843, "rouge": 0.2634989200863931}, {"predict": "java", "true": "perform a power - on self test by processing some example input data", "bleu": 5.16664614247128e-06, "rouge": 0.0}, {"predict": "draws the triangle to the given edge", "true": "stores the edges for a visited triangle", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "returns a ( possibly empty ) collection view of the cr ls read from the given input stream in stream", "true": "returns a ( possibly empty ) collection view of the cr ls read from the given input stream in stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes entity configuration under the realm", "true": "deletes the extended entity configuration under the realm", "bleu": 0.6025286104785454, "rouge": 0.8356164383561644}, {"predict": "returns singleton instance of data source views", "true": "returns singleton instance of data source views manager", "bleu": 0.8668778997501817, "rouge": 0.9222462203023757}, {"predict": "start bootstrap", "true": "return a tag , maybe formatted with color", "bleu": 0.031811104014284386, "rouge": 0.0}, {"predict": "loads the xml definition", "true": "use the cache xml generator to create xml from the entity associated with the current cache", "bleu": 0.019797099072043068, "rouge": 0.1804733727810651}, {"predict": "this method is used to locate the id from the request", "true": "extract id from the http request", "bleu": 0.22416933501922287, "rouge": 0.4969450101832994}, {"predict": "zlib decompress 2 document", "true": "decompress contents using zlib", "bleu": 0.3976353643835253, "rouge": 0.25}, {"predict": "return success handler for the socket statistics for this event", "true": "read from monitored file , report any changed values for monitored socket statistics", "bleu": 0.13206959826272413, "rouge": 0.25487465181058494}, {"predict": "closes this reader", "true": "closes this reader", "bleu": 1.0, "rouge": 1.0}, {"predict": "compare the remaining bytes of this buffer to another byte buffer ' s remaining bytes", "true": "compare the remaining chars of this buffer to another char buffer ' s remaining chars", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "writes the header for csv file csv file", "true": "writes the header for zones csv file", "bleu": 0.5133450480401704, "rouge": 0.8097345132743362}, {"predict": "average aggregate function which will add all the aggregate values and it will increment the total count every time , for average value", "true": "average aggregate function which will add all the aggregate values and it will increment the total count every time , for average value", "bleu": 1.0, "rouge": 1.0}, {"predict": "extract the policy notification from the policy data block", "true": "returns the notification xml node", "bleu": 0.15619699684601276, "rouge": 0.3012345679012346}, {"predict": "force buffered operations to the filesystem", "true": "force buffered operations to the filesystem", "bleu": 1.0, "rouge": 1.0}, {"predict": "find all fields of the control here", "true": "attempts to locate the class specified by class name to instantiate with the given object array", "bleu": 0.05135131375181345, "rouge": 0.08122503328894808}, {"predict": "decodes a field name from xml notation ( e", "true": "decodes a field name from xml notation ( e", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the user is set to use", "true": "return true if either login / pass is set or if oauth is enabled", "bleu": 0.10712878727413526, "rouge": 0.25994318181818177}, {"predict": "adds a content items", "true": "adds a content item", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "canonical ize r that the class name", "true": "create a proper class name from a messy thing", "bleu": 0.18370727471078332, "rouge": 0.24448897795591182}, {"predict": "pause for a certain number of bytes", "true": "pause for the specified milliseconds", "bleu": 0.24446151121745047, "rouge": 0.34366197183098596}, {"predict": "prompt the user to create running job using the supplied job", "true": "prepare job with mapper s to cancel", "bleu": 0.12605968092174913, "rouge": 0.1157495256166983}, {"predict": "removes wheel changing listener", "true": "removes wheel changing listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert l sf frequencies into lpc coefficients", "true": "convert l sf frequencies into lpc coefficients", "bleu": 1.0, "rouge": 1.0}, {"predict": "fields to make no values in the class", "true": "create fields for injections inside main class", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "initializes this factory with a default thread pool", "true": "initialize ; cached thread pool is safe as it is releasing resources automatically if idle", "bleu": 0.08798014921805314, "rouge": 0.16486486486486487}, {"predict": "removes each substring of the source string that matches the given regular expression using the do tall option", "true": "removes each substring of the source string that matches the given regular expression using the do tall option", "bleu": 1.0, "rouge": 1.0}, {"predict": "skips bounds of this text into about , but not close the right edge of this contour", "true": "consume the final un consumed nested scroll after all behaviors done", "bleu": 0.07223943354597204, "rouge": 0.07429963459196103}, {"predict": "decodes a query to waypoint information", "true": "retrieves way points matching the given query from the database", "bleu": 0.11341174240707227, "rouge": 0.11960784313725491}, {"predict": "releases the menu items", "true": "cancels all the pending nox item downloads to the image loader", "bleu": 0.06243769243378541, "rouge": 0.12298387096774194}, {"predict": "returns the number of elements in this de que", "true": "returns the number of elements in this de que", "bleu": 1.0, "rouge": 1.0}, {"predict": "add at the beginning of the list", "true": "insert at the end of the list", "bleu": 0.4111336169005197, "rouge": 0.7142857142857143}, {"predict": "the text compaction mode includes all the printable ascii characters ( i", "true": "the text compaction mode includes all the printable ascii characters ( i", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new file / image / media attachment for a chat channel", "true": "create a new file / image / media attachment for a chat channel", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a st node to this node", "true": "adds a parameter to the function parameter list", "bleu": 0.22772101321113858, "rouge": 0.3952483801295896}, {"predict": "constructs a delete event from the json serialized representation", "true": "constructs a delete event from the json serialized representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if the full copy is in full", "true": "check if the full copy volume could be restored", "bleu": 0.5183741882011644, "rouge": 0.5820610687022901}, {"predict": "translate q des crs , q des cr on ( w hsp \" ) \" q des cr ls n \" w hsp ) q des cr", "true": "d string = 1 * utf 8 <unk> string = w hsp \" ' \" d string \" ' \" w hsp <unk> string list = <unk> string * ( <unk> string ) <unk> strings = <unk> string / ( w hsp \" ( \" <unk> string list", "bleu": 0.0812207366812803, "rouge": 0.20307948397836037}, {"predict": "check if buffer is large enough to ensure we need to be flushed yet large enough : we need to buffer is big enough to buffer will increment the buffer will need to zero", "true": "returns true if the buffer is too large to be added to the buffer cache , false otherwise", "bleu": 0.0751125105351019, "rouge": 0.3664886515353805}, {"predict": "resets the index buffer ' s time to 0", "true": "only for test purposes this should not be called from any product code", "bleu": 0.0760978866869656, "rouge": 0.0}, {"predict": "creates admin is called by the response to create an admin user", "true": "must return a proper response to this request", "bleu": 0.1367440667823257, "rouge": 0.2074829931972789}, {"predict": "check the external storage and notify user that a sd card", "true": "check the external storage and notify user on error", "bleu": 0.6132297420585351, "rouge": 0.7128547579298832}, {"predict": "returns either the plural or singular form of the given noun , depending on the quantity", "true": "returns either the plural or singular form of the given noun , depending on the quantity", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method checks the xml element and its xml declarations , which are valid by the id identified by the xml document", "true": "verify the signature of the xml document", "bleu": 0.1090009697802911, "rouge": 0.3042394014962594}, {"predict": "adds a video to the adapter and notify the change", "true": "adds a video to the adapter and notify the change", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines if the specified coordinate is in the target touch zone for a horizontal bar handle", "true": "determines if the specified coordinate is in the target touch zone for a horizontal bar handle", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads in the transport data columns from the reader", "true": "reads the transport systems of the vi sum file", "bleu": 0.21105340631872635, "rouge": 0.4444444444444444}, {"predict": "makes sure the nal has a header or not", "true": "makes sure the nal has a header or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "method that needs to be called , if the main hash structure is ( may be ) shared", "true": "method that needs to be called , if the main hash structure is ( may be ) shared", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds field entry , equivalent of : | tab name | field type | label | value | value | label | value | value | value |", "true": "adds multi field entry , equivalent of : | tab name | multi field # index # item type | multi field label # item label | value |", "bleu": 0.45312132740866445, "rouge": 0.6645642201834863}, {"predict": "returns the number of members ( name / value pairs ) in this object", "true": "returns the number of members ( name / value pairs ) in this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate array of n d - dimensional points whose coordinates are values in the range 0", "true": "generate array of n d - dimensional points whose coordinates are values in the range 0", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the parameters from the command line", "true": "parses a comma - separated list of au then tif i cation scheme parameters", "bleu": 0.07562380261607851, "rouge": 0.17967599410898377}, {"predict": "add a session token for a particular site", "true": "adds a new session token for a particular site", "bleu": 0.662423225940787, "rouge": 0.8148854961832059}, {"predict": "reads the probability distribution string from the given class name , and parses it to prefixes from", "true": "de serializes the g radle distribution from the the given string representation", "bleu": 0.13003841178614525, "rouge": 0.35589264877479576}, {"predict": "converts the chart scale based on pixels", "true": "returns the ratio of meters to pixels at the center of the screen", "bleu": 0.08723697147876523, "rouge": 0.1897356143079316}, {"predict": "sends a message over the already - established data socket", "true": "sends a byte array over the already - established data socket", "bleu": 0.6713392929560564, "rouge": 0.8498452012383902}, {"predict": "push a new context on to the top of the stack", "true": "add a new parsing context on to the parse context stack", "bleu": 0.37700638045494705, "rouge": 0.6363636363636364}, {"predict": "pings the app bookmark manager and forces the completion of the bookmark manager", "true": "open the go page", "bleu": 0.09552040806823771, "rouge": 0.1300639658848614}, {"predict": "creates an unbounded load fully qualified file around the given encoding", "true": "initial is e the finite state <unk>", "bleu": 0.11390778025531027, "rouge": 0.1157495256166983}, {"predict": "this method is used to sort the training set in an array", "true": "calc u <unk> x i = ( x i - mean ( x ) ) / std ( x ) this function can deal with nan s", "bleu": 0.02976871413744777, "rouge": 0.04795597484276729}, {"predict": "adds the location to the table", "true": "adds the given location to the table", "bleu": 0.5985529678206387, "rouge": 0.9104477611940297}, {"predict": "creates a new formatter with the given initial indent level", "true": "creates a java formatter with the target line delimiter", "bleu": 0.27901593935858265, "rouge": 0.5313588850174217}, {"predict": "encodes a string into its quoted - printable form using the specified char set", "true": "encodes a string into its quoted - printable form using the specified char set", "bleu": 1.0, "rouge": 1.0}, {"predict": "check last path to start new refresh interval", "true": "checks if more paths should be preloaded and pre loads them if needed", "bleu": 0.0721806023765632, "rouge": 0.0}, {"predict": "this method computes the nodes of a node , on an end of the tree", "true": "warning : assumes strictly bifurcating tree", "bleu": 0.08225964699966554, "rouge": 0.10321489001692045}, {"predict": "check if column name allowed to be specified for our current column names", "true": "is input column name allowed", "bleu": 0.1777835117834348, "rouge": 0.36237623762376237}, {"predict": "converts the given hex - color - string to rgb", "true": "converts the given hex - color - string to rgb", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a property change listener to this bean", "true": "add a property change listener to this bean", "bleu": 1.0, "rouge": 1.0}, {"predict": "test that the empty blob is null and blob , or null if there are no commits", "true": "test if driver returns correctly empty and null blobs", "bleu": 0.09507244120026231, "rouge": 0.3257676902536716}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new journal that omits redundant information", "true": "creates a new journal that omits redundant information", "bleu": 1.0, "rouge": 1.0}, {"predict": "subtract a number from zero", "true": "subtract a number from zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "read the inner object from the java fx location", "true": "restore the graph vertex locations from a file", "bleu": 0.15619699684601276, "rouge": 0.2378167641325536}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "wait until data is the current runtime", "true": "wait until data is ready in this region", "bleu": 0.44815260192961937, "rouge": 0.5269978401727862}, {"predict": "fill an array with the values of a 74 - db 4 - sample blackman - harris window function", "true": "fill an array with the values of a minimum 4 - sample blackman - harris window function", "bleu": 0.7483293841345244, "rouge": 0.8978840846366144}, {"predict": "some key wrap algorithms make use of the key checksum defined in cms cms - algorithms", "true": "some key wrap algorithms make use of the key checksum defined in cms cms - algorithms", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the hash code for the lower bound value", "true": "returns the hash code of this user object", "bleu": 0.392814650900513, "rouge": 0.4756335282651072}, {"predict": "increments a previously received step", "true": "used for increment ing the number of packets received from the client", "bleu": 0.06732395159376953, "rouge": 0.1095152603231598}, {"predict": "parse the sentence and return the sentence type", "true": "parse the given text string and create a sentence object using the current matching flags", "bleu": 0.10462661942910988, "rouge": 0.32972972972972975}, {"predict": "can be able to expand the list of kafka or more kafka cluster data , so that the registered with the new data can be inserted into this method", "true": "set the parent directory where the <unk> logs and server ' s logs and snapshots will be kept", "bleu": 0.04965977366141172, "rouge": 0.13328477785870357}, {"predict": "ensures there is enough space in the buffer for the given number of additional bytes", "true": "ensures there is enough space in the buffer for the given number of additional bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "called to notify that a consumption has finished", "true": "called to notify that a consumption has finished", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks rule part with right position \" ( possibly less than one ) , which is the right position of the map ( possibly aligned on the token is the same as the map", "true": "checks rule part with tag \" pro so dic position \" ; there is only the \" type \" attribute right now : checks if pro so dic position of a token is the same as the value of the type attribute in the rule ; values :", "bleu": 0.1894261628641815, "rouge": 0.4022498060512025}, {"predict": "return nulls for empty strings , as the entity engine can deal with nulls", "true": "return nulls for empty strings , as the entity engine can deal with nulls", "bleu": 1.0, "rouge": 1.0}, {"predict": "register a char map to be used in a temporary file", "true": "registers all operators from a given xml input stream", "bleu": 0.11390778025531027, "rouge": 0.1018363939899833}, {"predict": "when request permissions on devices before android m ( android 6", "true": "when request permissions on devices before android m ( android 6", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes sub group containers in this group container", "true": "deletes sub group containers in this group container", "bleu": 1.0, "rouge": 1.0}, {"predict": "instantiate s a new task", "true": "creates a new task with the specified number of ticks between consecutive calls to execute ( )", "bleu": 0.04609676291191115, "rouge": 0.24830393487109909}, {"predict": "initialize the actual recording , with optional arguments in the vm that can be used for splitting in a proper array", "true": "initialize boot image compiler", "bleu": 0.05809665204409193, "rouge": 0.09118086696562032}, {"predict": "send next available byte", "true": "send next available byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "serializes object to base 64 format and returns byte array", "true": "encode a object to a base 64 string", "bleu": 0.2086130724305753, "rouge": 0.4535315985130111}, {"predict": "a service wrapper for the create image method method", "true": "a service wrapper for the create image method method", "bleu": 1.0, "rouge": 1.0}, {"predict": "add new profiles to the existing list of profiles", "true": "add new profiles to the existing list of profiles", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the given string is a valid identifier name", "true": "an <unk> identifier name is an identifier or reserved word", "bleu": 0.16108992769687397, "rouge": 0.1921259842519685}, {"predict": "returns true if x 1 is less than x 2 , when both values are treated as unsigned", "true": "returns true if x 1 is less than x 2 , when both values are treated as unsigned long", "bleu": 0.9459594689067654, "rouge": 0.9682539682539683}, {"predict": "move from mouse down to x and y value", "true": "move a single , un selected node", "bleu": 0.14113991930789777, "rouge": 0.1278825995807128}, {"predict": "create a list from passed obj x parameters", "true": "create a list from passed obj x parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a macro record to this macro", "true": "adds a macro record to this macro", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a records in the spout at ` s ` in records", "true": "make this method protected to make sure unit test can work well q : where to persist consumer state , i", "bleu": 0.04127145858834645, "rouge": 0.0}, {"predict": "add more q is cus user email to the user", "true": "adds or updates a <unk> of an existing user if the", "bleu": 0.12623203108004888, "rouge": 0.18885448916408668}, {"predict": "create a best hash provider whose value in the given hash", "true": "returns the best hash provider supporting at least a state ful implementation of a hash function with the given parameters", "bleu": 0.11953883927402481, "rouge": 0.3065326633165829}, {"predict": "read a fixed number of bytes from the socket", "true": "read a fixed size of bytes from the input", "bleu": 0.5253819788848316, "rouge": 0.7777777777777778}, {"predict": "using sorting", "true": "using sorting", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads all entries and adds all found entries to a file", "true": "loads the address book from file", "bleu": 0.12605968092174913, "rouge": 0.2484725050916497}, {"predict": "calculates the sample of the matrix", "true": "calculates the sample likelihood and bic score for i given its parents in a simple sem model", "bleu": 0.06573193827488126, "rouge": 0.24015748031496065}, {"predict": "removes an item from the adapter", "true": "removes item from the given position", "bleu": 0.4347208719449915, "rouge": 0.6666666666666666}, {"predict": "encodes all the types of the two provided types and puts them into the plain list", "true": "encodes the list of types and puts them under the specified key in the map", "bleu": 0.26073776110842645, "rouge": 0.5191489361702127}, {"predict": "clears the assertion information", "true": "clears internal assertion information storage", "bleu": 0.39573418216703893, "rouge": 0.6535714285714286}, {"predict": "add operation results to the array to be returned", "true": "add operation results to the array to be returned", "bleu": 1.0, "rouge": 1.0}, {"predict": "for * * given * schema", "true": "s can a group starting with primary key of a table , then get all of the children ( if any )", "bleu": 0.012906591364435085, "rouge": 0.0}, {"predict": "add a switch port to maintenance queue", "true": "add a switch port to maintenance queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "links node as first element , or returns false if full", "true": "links node as first element , or returns false if full", "bleu": 1.0, "rouge": 1.0}, {"predict": "bit ( since linux 2", "true": "the address of the start ( i", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "adds the delegation privileges to a parent", "true": "creates default privileges for a newly created realm this method should be called in realm mode only", "bleu": 0.04926429870313275, "rouge": 0.1550190597204574}, {"predict": "returns true if the and types are the same type and false otherwise", "true": "checks if given mime type is covered by current mime type", "bleu": 0.10571070857151538, "rouge": 0.16920943134535368}, {"predict": "indicates partial commitment towards triggering the same taxon", "true": "all these methods simply delegate to the \" other \" model that is being decorated", "bleu": 0.06685045700482882, "rouge": 0.08243243243243244}, {"predict": "tells the builder that a character range is valid", "true": "tells the builder that a range of code - points is valid", "bleu": 0.4290632223308574, "rouge": 0.7427701674277016}, {"predict": "method for creating virtual pool descriptors for the passed v pool and mirror object", "true": "change the virtual pool for the passed virtual volume on the passed v plex storage system", "bleu": 0.20626202760448836, "rouge": 0.3952483801295896}, {"predict": "check if the specified java script is enabled", "true": "returns true if the user has javascript enabled", "bleu": 0.22679164443904004, "rouge": 0.375}, {"predict": "if this function is equal to another field speed , i", "true": "compares this prime finite field for equality with the specified object", "bleu": 0.12605968092174913, "rouge": 0.18181818181818182}, {"predict": "returns the name of this element type", "true": "returns the name of this element type", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes ' close able ' , ignoring any checked exceptions", "true": "closes ' close able ' , ignoring any checked exceptions", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes all md 5 checksum of the given string", "true": "md 5 version of the \" h ( ) \" function from rfc 2617", "bleu": 0.1340110063389608, "rouge": 0.3347050754458162}, {"predict": "check whether a sequence of supported file can be valid or not", "true": "checks whether the given path points to a file that is a valid skin specification", "bleu": 0.10175120467701641, "rouge": 0.29047619047619044}, {"predict": "create a tree for deciding what keys can legally be typed", "true": "create a tree for deciding what keys can legally be typed", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts the string representation of an object into this builder", "true": "inserts the string representation of an object into this builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "handles when mouse is moved over , when the mouse is moved", "true": "handles a mouse moved event by updating the tooltip", "bleu": 0.13065113298388567, "rouge": 0.39102564102564097}, {"predict": "returns the number of elements in this de que", "true": "returns the number of elements in this de que", "bleu": 1.0, "rouge": 1.0}, {"predict": "do file have been loaded in js , do a full aggregated file", "true": "don ' t call this directly , see load <unk> ( file file )", "bleu": 0.10518320506876351, "rouge": 0.1471652593486128}, {"predict": "disables up a v pool block snapshot and storage pool to vip r have the same number of storage systems", "true": "this method is will check if the storage pool associated with the volume supports compression", "bleu": 0.08638804535733371, "rouge": 0.17596153846153845}, {"predict": "computes the end of a rhum b line on a rhum b line ( line of the rhum b azimuth ) starting from a rhum b path", "true": "computes the location on a rhum b line with the given starting location , rhum b azimuth , and arc distance along the line", "bleu": 0.24180681260144146, "rouge": 0.4359974009096816}, {"predict": "returns the first index of el t in the array , else - 1", "true": "returns the first index of el t in the array , else - 1", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the maximum dimensions needed to layout the components contained in the target container", "true": "returns the maximum dimensions for this layout given the components in the specified target container", "bleu": 0.3279069535962363, "rouge": 0.7539325842696629}, {"predict": "read the occurs from the / output stream", "true": "utility method for pulling plain text from an input stream object", "bleu": 0.12197601375336842, "rouge": 0.20469798657718125}, {"predict": "update the moving average with a new value", "true": "update the moving average with a new value", "bleu": 1.0, "rouge": 1.0}, {"predict": "the code that does the real work of attributes", "true": "logs a lease expiration , <unk> between expected and premature expiration s", "bleu": 0.08504083946364166, "rouge": 0.0}, {"predict": "starts the entire file", "true": "removes a ripple from the exiting ripple list", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "write the s rc code to the given buffer", "true": "write string to buffer", "bleu": 0.16784459625186196, "rouge": 0.4959349593495934}, {"predict": "task to be called in external / bounds , out of bounds if it is now out of bounds", "true": "draws a frame for an eye", "bleu": 0.05415315253510895, "rouge": 0.0}, {"predict": "consume a number of records from the topic", "true": "try to consume and capture exactly the specified number of records from the connector", "bleu": 0.2883673022155088, "rouge": 0.5198863636363635}, {"predict": "returns true if the specified object is equal to this instance , in the same as this instance , has the specified array", "true": "indicates whether some other constant size is \" equal to \" this one", "bleu": 0.07913247271422609, "rouge": 0.23394055608820707}, {"predict": "compares two version strings and parses them", "true": "compare two version strings ( ie , \" 1", "bleu": 0.2598013194025897, "rouge": 0.3667334669338677}, {"predict": "are these two vectors x , y coordinate vectors ?", "true": "check a vector", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "determine if the expression is identical to the evaluation order", "true": "determine if the expression is a <unk> al one", "bleu": 0.4617366309441026, "rouge": 0.5313588850174217}, {"predict": "change the speed speed in real list", "true": "set speed of a throttle to a spee ed set by a float , using the block for the length details", "bleu": 0.027820442245662422, "rouge": 0.06552094522019333}, {"predict": "remove a child from the target", "true": "removes a child from this bean context", "bleu": 0.34801709319446883, "rouge": 0.45522388059701485}, {"predict": "registers the specified class descriptor at this class ' s list of classes", "true": "notify all i class observers that we are visiting given class", "bleu": 0.10571070857151538, "rouge": 0.16920943134535368}, {"predict": "generates an level instruction", "true": "generates a dup 2 instruction", "bleu": 0.3096787331587729, "rouge": 0.43571428571428567}, {"predict": "indicates if the mime type belongs to the application xml family", "true": "indicates if the mime type belongs to the application xml family", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a native page for the given native page", "true": "returns a native page for displaying the given url if the url is a valid chrome - native url , or null otherwise", "bleu": 0.09859978824559901, "rouge": 0.4055080721747389}, {"predict": "throws an exception if there is no longer parsed exception", "true": "throws a parse exception with line / column information", "bleu": 0.13950796967929133, "rouge": 0.21254355400696867}, {"predict": "creates a new custom editor", "true": "sets up the array editor", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "creates a one - of one value using a set of objects", "true": "create a new memo i done , using the supplied transformation function", "bleu": 0.11498759556447223, "rouge": 0.16666666666666666}, {"predict": "create a node tree using j dk type", "true": "indicate that the expression return type is a single ( non - <unk> ) value of the given type", "bleu": 0.04487246777590933, "rouge": 0.13800904977375564}, {"predict": "convert a field type to a primitive type", "true": "convert field type from string to a class type", "bleu": 0.2547549121331136, "rouge": 0.6984732824427481}, {"predict": "adds an xml element after the index specified", "true": "adds the given xml element after the token who es index matches the given last token index value", "bleu": 0.1390957214303005, "rouge": 0.43160377358490565}, {"predict": "this is a generic service for traversing a content tree , typical of a blog response tree", "true": "this is a generic service for traversing a content tree , typical of a blog response tree", "bleu": 1.0, "rouge": 1.0}, {"predict": "compares two vectors and / or equal if they are equal", "true": "are two objects equal ? arrays have the standard object equals method which only returns true if the two object are the same", "bleu": 0.048113017180523, "rouge": 0.2212148685403445}, {"predict": "creates a new dictionary based on the data provided", "true": "creates a new dictionary containing the information read from the provided input streams to hun spell affix and dictionary files", "bleu": 0.12586799654831038, "rouge": 0.38730158730158726}, {"predict": "subtract the building from the fields from the fields from the fields", "true": "the given building has collapsed", "bleu": 0.11498759556447223, "rouge": 0.25416666666666665}, {"predict": "this method performs an iso client to detach the remote proxy object from a vm", "true": "this method performs an asynchronous thrift call to detach an iso from a vm", "bleu": 0.35630548449868954, "rouge": 0.6245733788395904}, {"predict": "an error message that occurred during parsing when an error message has been reached", "true": "read nfc error from reply message", "bleu": 0.09782375748961449, "rouge": 0.21554770318021202}, {"predict": "shows up launcher item", "true": "guaranteed has center set", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "persist the profile with the given provider to the passed in resource , and update the old provider", "true": "update the timestamp and notify", "bleu": 0.09629943614188137, "rouge": 0.19365079365079363}, {"predict": "adds an undo action to the top of the stack", "true": "add a new undo able action", "bleu": 0.13950796967929133, "rouge": 0.26180257510729615}, {"predict": "creates a list and fills it with the elements in the specified array", "true": "constructs a list containing the elements of the specified array", "bleu": 0.24022110864391533, "rouge": 0.6233576642335765}, {"predict": "adds a ping event with a testing", "true": "adds a ping time sample to the averaging window", "bleu": 0.2598013194025897, "rouge": 0.3667334669338677}, {"predict": "encode into canonical form", "true": "canonical encoding of body of the header", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "closes the underlying cleanup context", "true": "tears down the fixture , for example , close a network connection", "bleu": 0.06732395159376953, "rouge": 0.1095152603231598}, {"predict": "removes the characters from the subject", "true": "get a substring from a string", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "return false if not moving", "true": "pause and resume auto - running train or abort any allocation state engineer", "bleu": 0.04635036983311895, "rouge": 0.0}, {"predict": "removes a custom sash form listener", "true": "removes the custom sash form listener", "bleu": 0.6434588841607617, "rouge": 0.8333333333333334}, {"predict": "writes a string to a file creating the file if it does not exist using the default encoding for the vm", "true": "writes a string to a file creating the file if it does not exist using the default encoding for the vm", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete a value stored in the project ' s data store", "true": "delete a value stored in the project ' s data store", "bleu": 1.0, "rouge": 1.0}, {"predict": "produces a string representation of the date in sql format", "true": "produces a string representation of the date in sql format", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the thread", "true": "this also io errors that happened in the gzip thread", "bleu": 0.057659877070082854, "rouge": 0.28045977011494255}, {"predict": "parses a string to an in t", "true": "parses a string as a in t", "bleu": 0.4111336169005197, "rouge": 0.7142857142857143}, {"predict": "writes the entire result set to a csv file", "true": "writes the entire result set to a csv file", "bleu": 1.0, "rouge": 1.0}, {"predict": "test for a special case", "true": "test for a special case", "bleu": 1.0, "rouge": 1.0}, {"predict": "verify that the given device exactly matches the given fields", "true": "verify that the given device exactly matches the given fields", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new window", "true": "adds a window to the builder that can be used to filter a set of rules", "bleu": 0.019797099072043068, "rouge": 0.1804733727810651}, {"predict": "create a hash table of line segment", "true": "compute the intersection of all segments when given an iterator of segments", "bleu": 0.0909326471926252, "rouge": 0.10049423393739704}, {"predict": "register a provider in the set of provider", "true": "register macro providers which returns the implementation", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "creates a new map with the specified initial capacity and load factor", "true": "creates a new map with the specified initial capacity and load factor", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a sequence containing one object", "true": "create a sequence containing one object", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the regular stream blob using the settings", "true": "populates a stream blob for testing", "bleu": 0.21105340631872638, "rouge": 0.2932692307692307}, {"predict": "returns the number of double values where n is in t n ( inclusive )", "true": "<unk> here , to avoid cyclic dependency with ( strict ) fast math", "bleu": 0.09103526405546068, "rouge": 0.14472123368920523}, {"predict": "adds a near key", "true": "adds a near key", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes sure that all class fields with the given name is accessible from the class", "true": "introspection of the passed in class", "bleu": 0.09103526405546068, "rouge": 0.2064297800338409}, {"predict": "is the given log level currently enabled ?", "true": "is the given log level currently enabled ?", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a copy of a new instance", "true": "loads all data of a memory section", "bleu": 0.24446151121745047, "rouge": 0.2857142857142857}, {"predict": "deletes a directory on the directory", "true": "deletes a directory and its contents", "bleu": 0.4111336169005197, "rouge": 0.5}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds the name of the first table , which is editable", "true": "finds the name of the first table , which is editable", "bleu": 1.0, "rouge": 1.0}, {"predict": "store the all of the operations on the default place , including any necessary necessary", "true": "store the all of the operation car objects in the default place , including making a backup if needed", "bleu": 0.4064838454536557, "rouge": 0.5760151085930123}, {"predict": "construct a new instance with the specified detail string and exception", "true": "construct a new instance with the specified detail string and exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns whether an error follower users are added when an error follower users are added", "true": "checks if this has new <unk>", "bleu": 0.06917184228205472, "rouge": 0.0}, {"predict": "this function is called by the start of the attributes", "true": "on track point element start", "bleu": 0.12605968092174913, "rouge": 0.1418604651162791}, {"predict": "call this when a call - back rate or run property changes", "true": "fire an existing property change event to any registered listeners", "bleu": 0.10390302174233558, "rouge": 0.09242424242424242}, {"predict": "checks that a the given substring is a valid type descriptor", "true": "checks that a the given substring is a valid type descriptor", "bleu": 1.0, "rouge": 1.0}, {"predict": "sort the field array using a quicksort", "true": "sort the field array using a quicksort", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the background of the hex panel", "true": "draws the background of the view", "bleu": 0.6803749333171202, "rouge": 0.7800511508951408}, {"predict": "adds an attribute name to the element", "true": "add unique attribute to the element which will force elements to be identical", "bleu": 0.15513171017484098, "rouge": 0.3794712286158632}, {"predict": "validate or not a certain vm response object , raising an exception if the response reflects an operation failure", "true": "this method validates a delete vm response object , raising an exception if the response reflects an operation failure", "bleu": 0.7404008324993688, "rouge": 0.7894736842105263}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "limits the maximum scale and x translation of the given matrix", "true": "limits the maximum scale and x translation of the given matrix", "bleu": 1.0, "rouge": 1.0}, {"predict": "get a blaze value factory instance", "true": "return the factory used to round - trip between tinker pop values and rdf values", "bleu": 0.04928854007377984, "rouge": 0.08840579710144927}, {"predict": "constructs a new refresh token backed with the data in the specified json value", "true": "constructs a new refresh token backed with the data in the specified json value", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a style to the style", "true": "put the style selector ( style or style map ) in the list of shared styles , associated to its style id", "bleu": 0.02295152567716108, "rouge": 0.19426751592356686}, {"predict": "checks if the client name string contains ' : ' as address name , return null if i ed , and ipv 4 string", "true": "excludes the host name from the client id and returns the string", "bleu": 0.07929026506841375, "rouge": 0.2364341085271318}, {"predict": "creates a completed future from the given comp let able future", "true": "internal conversion method to convert comp let able futures to fast future", "bleu": 0.20468918037457082, "rouge": 0.34512022630834516}, {"predict": "determines whether a specific action is equivalent to a place", "true": "check if a given inventory action involves placing items into the slot", "bleu": 0.11421946507590645, "rouge": 0.1788856304985337}, {"predict": "refreshes the markers displayed in this error strip", "true": "refreshes the markers displayed in this error strip", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds view to specified cache", "true": "adds view to specified cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads all bytes from an input stream and returns them as a byte array", "true": "converts a small input stream to a byte array", "bleu": 0.195647514979229, "rouge": 0.45252225519287836}, {"predict": "play a media song", "true": "force showing or not the media player window", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "utility method to return a string as a string", "true": "string conversion into standard char set", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "encodes cache flags into cache", "true": "encodes cache flags to bit map", "bleu": 0.41602390756021224, "rouge": 0.5366568914956013}, {"predict": "adds the given data source to the end of the data source", "true": "adds a new data series to the plot", "bleu": 0.15537125692760353, "rouge": 0.4149659863945578}, {"predict": "adds a value to the density estimator", "true": "adds a value to the density estimator", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds a check box row", "true": "builds a check box row", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse the given date with the format and locale", "true": "synchronized because simple <unk> format aren ' t thread safe", "bleu": 0.1262975489687145, "rouge": 0.10427350427350426}, {"predict": "indicates if a group is a child group , a non - top - level data group in a set of nested data groups ( e", "true": "indicates if a group is a child group , a non - top - level data group in a set of nested data groups ( e", "bleu": 1.0, "rouge": 1.0}, {"predict": "throw exception if an index has been wrapped", "true": "throw array index out of bounds exception", "bleu": 0.19070828081828378, "rouge": 0.26991150442477874}, {"predict": "creates the next instance of reasons that points whose last start / stage \" ( start / 2 ) are now : 1 ) that points that tokens are no stage of last word 2 ) there are locus info s in some stage of two plus reasons", "true": "create the next relevant zero - coverage locus info", "bleu": 0.04144284514022945, "rouge": 0.1601049868766404}, {"predict": "used for config changes to the configuration file", "true": "this method will be invoked when a service ' s global config u ation data has been changed", "bleu": 0.04594560238169569, "rouge": 0.07193396226415094}, {"predict": "launch an intent for emailing attendees of an intent", "true": "launch an email intent if the device is capable", "bleu": 0.19960198807747329, "rouge": 0.3333333333333333}, {"predict": "insert a item associated with the specified position of adapter", "true": "insert a item associated with the specified position of adapter", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a translator , which is called whenever a class is loaded", "true": "adds a translator , which is called whenever a class is loaded", "bleu": 1.0, "rouge": 1.0}, {"predict": "indicates that the main content has scrolled ( for the purposes of showing / hiding the action bar for the \" action bar auto hide \" effect )", "true": "indicates that the main content has scrolled ( for the purposes of showing / hiding the action bar for the \" action bar auto hide \" effect )", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a string that is a little endian char of type char s", "true": "writes a string in little endian", "bleu": 0.21142141714303078, "rouge": 0.5637707948243993}, {"predict": "reads and returns the next line , excluding the line separator if present", "true": "reads and returns the next line , excluding the line separator if present", "bleu": 1.0, "rouge": 1.0}, {"predict": "if the main text matches the regex", "true": "if the main text matches the regex", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the original font into a file", "true": "just for debugging convenience", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "add a fixed view to appear at the bottom of the list", "true": "add a fixed view to appear at the bottom of the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a close callback hook", "true": "add a close callback hook", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes task r in the caller ' s thread , unless the executor has been shut down , in which case the task is discarded", "true": "executes task r in the caller ' s thread , unless the executor has been shut down , in which case the task is discarded", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the range on both axes", "true": "updates the range on both axes", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the upc / e an checksum on a string of digits , and reports whether the checksum is correct or not", "true": "computes the upc / e an checksum on a string of digits , and reports whether the checksum is correct or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "read a configuration file", "true": "read the specified file and parse the configuration", "bleu": 0.1571901051328651, "rouge": 0.31443298969072164}, {"predict": "process the incoming matched timer", "true": "rewards player for a successful l trade", "bleu": 0.15388864725803575, "rouge": 0.0}, {"predict": "returns all the text at the given url", "true": "returns all the text at the given url", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a combined trace from a trace list of breakpoints", "true": "fills a combined trace from the events of multiple input traces", "bleu": 0.33226139141332744, "rouge": 0.47213622291021673}, {"predict": "either the background thread or blocks until all tasks have been completed or received", "true": "ensure that any guarded regions are interrupted", "bleu": 0.07432998184513635, "rouge": 0.0}, {"predict": "register the default device types for use in this device", "true": "registers a <unk> - used set of device services with discovery manager", "bleu": 0.10320893749383378, "rouge": 0.08944281524926685}, {"predict": "split the dependency in the compiler s wc context", "true": "look at the dependency information and remove s wc dependencies that are subsets of other s wc dependencies", "bleu": 0.08592522909830397, "rouge": 0.27949599083619703}, {"predict": "draws the chart tick lines", "true": "draws the chart tick lines", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate matrix for fit center", "true": "calculate matrix for fit center", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an insertion policy that indicates the tuple is to be inserted into the partition", "true": "returns an insertion policy that indicates the tuple is to be inserted into the partition", "bleu": 1.0, "rouge": 1.0}, {"predict": "test de bus queda open l dap con atri but os", "true": "test de bus queda open l dap", "bleu": 0.6132297420585351, "rouge": 0.8102466793168881}, {"predict": "create a positive number from a string value and radix 8", "true": "create a positive number from a string value and radix 8", "bleu": 1.0, "rouge": 1.0}, {"predict": "this is heart of the code that determines if a given character is in the given encoding", "true": "this is heart of the code that determines if a given character is in the given encoding", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes the entry from the entries on an l dap server", "true": "delete the entry in the directory", "bleu": 0.16108992769687397, "rouge": 0.3727087576374745}, {"predict": "removes all highlights added to the text area by this listener", "true": "removes all highlights added to the text area by this listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "iterative ly adds successor of successor blocks from one of the queue", "true": "add successor blocks into the given work list if they are not already marked as visited", "bleu": 0.10528787210424367, "rouge": 0.2089041095890411}, {"predict": "adds common component to the parser configuration", "true": "adds common component to the parser configuration", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new role to this user", "true": "add a role to this user", "bleu": 0.5410822690539396, "rouge": 0.7800511508951408}, {"predict": "creates a new panel object", "true": "creates the check box panel to control if full paths should be shown in the modules table", "bleu": 0.027409299216719144, "rouge": 0.1655359565807327}, {"predict": "response method is called from the transport", "true": "must be called by a subclass after the response has been successfully sent to the client", "bleu": 0.06106734767839363, "rouge": 0.16245006657789615}, {"predict": "append the contents of another fast string buffer on to this fast string buffer , growing the storage if necessary", "true": "append the contents of another fast string buffer on to this fast string buffer , growing the storage if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds the tuple store index snapshot from the index", "true": "loads all available snapshots in the repository", "bleu": 0.14113991930789777, "rouge": 0.1278825995807128}, {"predict": "construct a quest hash for v 4", "true": "creates a new instance of maple quest requirement", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "create a reply to a forum post", "true": "create a reply to a forum post", "bleu": 1.0, "rouge": 1.0}, {"predict": "indicates partial commitment towards triggering the same taxon", "true": "all these methods simply delegate to the \" other \" model that is being decorated", "bleu": 0.06685045700482882, "rouge": 0.08243243243243244}, {"predict": "generate key that describes the key , but not including html tags", "true": "looks up an attribute key by element and local name", "bleu": 0.10390302174233558, "rouge": 0.09242424242424242}, {"predict": "data from mat lab", "true": "data provided by a user ; this data needs to be validated and processed", "bleu": 0.02949347753605095, "rouge": 0.10099337748344371}, {"predict": "get the tuple with the maximum data field value", "true": "get the tuple with the maximum data field value", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the enabled status of the input fields and labels", "true": "updates the enabled status of the input fields and labels", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests to see whether these two instances are equal , based on their ids", "true": "convert throttle id to a human friendly format", "bleu": 0.08839374326825923, "rouge": 0.09561128526645768}, {"predict": "resets the contents of this cache", "true": "reset stats tracked for cache hits and misses", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "test default string - > string", "true": "convert other - - > string ( default conversion )", "bleu": 0.2231931376573339, "rouge": 0.3588235294117647}, {"predict": "remove the item at the given index and optionally forces menu views to update", "true": "remove the item at the given index and optionally forces menu views to update", "bleu": 1.0, "rouge": 1.0}, {"predict": "shift right ( in t n ) , 0 < n < 32", "true": "shift right ( in t n ) , 0 < n < 32", "bleu": 1.0, "rouge": 1.0}, {"predict": "show a filter on the list of filters", "true": "shows the filter dialog", "bleu": 0.17747405280050269, "rouge": 0.17732558139534885}, {"predict": "calculate the number of pixels between two points", "true": "little math utility that both tools use , that just implements the <unk> theorem to do the number of pixels between two screen points", "bleu": 0.10158589185145994, "rouge": 0.4013157894736842}, {"predict": "add newly generated keys of a given key type to an existing key store", "true": "add newly generated keys of a given key type to an existing key store", "bleu": 1.0, "rouge": 1.0}, {"predict": "true annotations with respect to see if this property is set", "true": "utility method to check if form object should have a popup", "bleu": 0.12605968092174913, "rouge": 0.18181818181818182}, {"predict": "create local g it object", "true": "uses the current working dir to open the g it repository", "bleu": 0.10822031883953476, "rouge": 0.2341650671785029}, {"predict": "returns a vector 2 containing the smallest x and y values", "true": "returns a vector 2 containing the smallest x and y values", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a test method to the execution method of a given call", "true": "add a test call", "bleu": 0.2044800736021839, "rouge": 0.5495495495495495}, {"predict": "initializes monkey and register all methods", "true": "serialize the test results to xml", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "verify the block mirror object to create the actual block mirror field into the list of blocks field", "true": "verify the block mirror objects have been migrated correctly", "bleu": 0.18951629567590744, "rouge": 0.3152454780361757}, {"predict": "create a new formatter with the provided log level , level and set of level variables", "true": "create a log formatter around a given logger", "bleu": 0.11502783619900048, "rouge": 0.2659883720930233}, {"predict": "remove a text listener", "true": "remove a text listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "re - measure the loading views height , and adjust internal padding as necessary", "true": "re - measure the loading views height , and adjust internal padding as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a idp view descriptor under a idp view service", "true": "create extension element of entity descriptor in dom", "bleu": 0.12605968092174913, "rouge": 0.11338289962825278}, {"predict": "clears the buffer , returning all allocations to the al locator", "true": "clears the buffer , returning all allocations to the al locator", "bleu": 1.0, "rouge": 1.0}, {"predict": "set up the camera and set of bounds variables", "true": "apply the camera settings", "bleu": 0.18575057999133596, "rouge": 0.3306233062330623}, {"predict": "creates a new point table", "true": "this method is called via reflection from the database", "bleu": 0.1031546451143688, "rouge": 0.0}, {"predict": "adds a volume to the input map for the passed in ww n object", "true": "this method will add to the existing volumes list only those members that don ' t already exist in either the existing or user - created volume list", "bleu": 0.05089379736704288, "rouge": 0.13475699558173784}, {"predict": "creates a new temporary file in the t location , domain 1", "true": "creates a unique temporary file as a child of this directory", "bleu": 0.17194656088289215, "rouge": 0.3505747126436781}, {"predict": "partition the type annotations provided", "true": "use a map to partition annotations with the given target types into lists , where each target type is a key in the output map", "bleu": 0.0062876585337803565, "rouge": 0.17853658536585365}, {"predict": "construct a new instance with the specified detail string and exception", "true": "construct a new instance with the specified detail string and exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "fills the buffer with sample data from the file", "true": "opens a channel to the specified path if it does not already exist", "bleu": 0.09049614828481034, "rouge": 0.08802308802308802}, {"predict": "update the player ' s last predicate based upon the given amount", "true": "called when entity adjusts hp", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "returns the target file of the given name", "true": "resolve a free marker name reference", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "sets up the tool and sets up the tooltip text", "true": "this method should be called to initialize the tooltip status so that an old tooltip doesn ' t remain when a layer starts listening to mouse events", "bleu": 0.030307903651563828, "rouge": 0.09983633387888707}, {"predict": "decode an array of strings into a single array using the decoded data", "true": "decodes a string generated by encode array", "bleu": 0.10571070857151538, "rouge": 0.21143847487001732}, {"predict": "call this when you want to know the new location", "true": "call this when you want to know the new location", "bleu": 1.0, "rouge": 1.0}, {"predict": "send resource data to remote resources", "true": "sends given resource to the socket", "bleu": 0.24446151121745047, "rouge": 0.3333333333333333}, {"predict": "shift up the entire number of bits in this process", "true": "the bitmap of ignored signals , displayed as a decimal number", "bleu": 0.13564514503163538, "rouge": 0.18885448916408668}, {"predict": "generates a device - and invocation - specific seed to be mixed into the linux prng", "true": "generates a device - and invocation - specific seed to be mixed into the linux prng", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "renders the given expression as a string", "true": "return the rendering of the value expr object", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "method to stop sampling", "true": "finish sampling and prevent further changes to the connection class until another timer is started", "bleu": 0.025419978385188596, "rouge": 0.0953125}, {"predict": "reverses the order of the polygon points within the given list", "true": "reverses the order of the polygon points within the given list", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d sign csr dialog for a pkcs # 10 formatted csr", "true": "creates a new d sign csr dialog for a pkcs # 10 formatted csr", "bleu": 1.0, "rouge": 1.0}, {"predict": "a simple mechanism to initialize factory with dynamic binding", "true": "a simple mechanism to initialize factory with dynamic binding", "bleu": 1.0, "rouge": 1.0}, {"predict": "awaits completion or aborts on interrupt or time out", "true": "awaits completion or aborts on interrupt or time out", "bleu": 1.0, "rouge": 1.0}, {"predict": "links node as first element , or returns false if full", "true": "links node as first element , or returns false if full", "bleu": 1.0, "rouge": 1.0}, {"predict": "clamp a value to be within the provided range", "true": "clamp a value to be within the provided range", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses volume host name from a host hierarchy", "true": "parses volume host directory only", "bleu": 0.2984745896009823, "rouge": 0.48157894736842105}, {"predict": "formats a time for display", "true": "formats times into a standard format", "bleu": 0.24736929544091937, "rouge": 0.3577712609970674}, {"predict": "returns a new array containing all elements contained in this vector", "true": "returns a new array containing all elements contained in this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string with the right hand side of the given char", "true": "right justify a string", "bleu": 0.14694106251955755, "rouge": 0.27477477477477474}, {"predict": "appends all of the elements in the specified collection to the end of this vector , in the order that they are returned by the specified collection ' s iterator", "true": "appends all of the elements in the specified collection to the end of this vector , in the order that they are returned by the specified collection ' s iterator", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates this log , according to the current transferable state object", "true": "updates this log , according to the information contained in the transferable state object", "bleu": 0.5594712190418356, "rouge": 0.7830551989730423}, {"predict": "converts a string into its java - style utf - 8 form", "true": "converts a string into its java - style utf - 8 form", "bleu": 1.0, "rouge": 1.0}, {"predict": "takes a map of bindings and writes them to a list of values", "true": "converts a hash map of bindings to a list of binding pairs", "bleu": 0.3661926362999429, "rouge": 0.6446499339498017}, {"predict": "checks the given label can be added / removed to / from a vertex", "true": "checks the given label can be added / removed to / from a vertex", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends a message observer to this message ' s list of observers", "true": "adds the specified message observer", "bleu": 0.1367440667823257, "rouge": 0.25416666666666665}, {"predict": "shows the string formatted as the initial text", "true": "performs show and sets the edit string to be the initial character or string", "bleu": 0.11327490115090784, "rouge": 0.346590909090909}, {"predict": "converts a byte to hex digit and appends it to the supplied buffer", "true": "description of the method", "bleu": 0.09552040806823771, "rouge": 0.1300639658848614}, {"predict": "removes the element at the specified position in this list", "true": "removes the element at the specified position in this list", "bleu": 1.0, "rouge": 1.0}, {"predict": "merge an array with the given values", "true": "generates a sample of a normal distribution", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "read values from index file", "true": "read 1", "bleu": 0.2730120862709067, "rouge": 0.3096446700507614}, {"predict": "called by the native code or other classes to signal a warning", "true": "called by the native code or other classes to signal a warning", "bleu": 1.0, "rouge": 1.0}, {"predict": "return whether the known name is known for the known sub - known android transaction or not", "true": "checks if sub is indexed", "bleu": 0.07994607499472013, "rouge": 0.10082644628099173}, {"predict": "compute and return the source text ( all e qualities and deletions )", "true": "compute and return the source text ( all e qualities and deletions )", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if id is stored in the db", "true": "determines whether the view was previously stored to the database", "bleu": 0.13821693129588736, "rouge": 0.21785714285714283}, {"predict": "counts the size of a directory recursively ( sum of the length of all files )", "true": "counts the size of a directory recursively ( sum of the length of all files )", "bleu": 1.0, "rouge": 1.0}, {"predict": "( since linux 3", "true": "query searchlight bits by bit number ( s mini only ) bit - bit number of the either bit of an oscillating search light bit pair note : returns ' true ' if bit is an oscillating searchlight bit , otherwise ' false ' is returned", "bleu": 9.893959480227352e-06, "rouge": 0.034738041002277904}, {"predict": "constructs a new age file filter for files on any one side of a certain cutoff date", "true": "constructs a new age file filter for files on any one side of a certain cutoff date", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the optimum major tick", "true": "calculate the optimum major tick distance", "bleu": 0.8187307530779819, "rouge": 0.8944281524926685}, {"predict": "test if there more records available", "true": "test if there more records available", "bleu": 1.0, "rouge": 1.0}, {"predict": "associates the given value with the given header", "true": "put a value in the table", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "send the interface for this message", "true": "post a batch of messages", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "indicates whether this node represents this node , updating neighboring nodes appropriately", "true": "removes any ordering between two nodes", "bleu": 0.10390302174233558, "rouge": 0.1182170542635659}, {"predict": "converts the swf file into html by the swf file", "true": "parses swf input and extracts text and wrap it as html", "bleu": 0.12623203108004888, "rouge": 0.18885448916408668}, {"predict": "write a class file data structure to a file", "true": "write a class file data structure to a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a shape object from provided coordinates", "true": "create a java", "bleu": 0.18575057999133598, "rouge": 0.21554770318021202}, {"predict": "creates a new connection with the given peer and the given peer", "true": "creates a new connection to a given peer", "bleu": 0.33260249505555045, "rouge": 0.6224489795918368}, {"predict": "returns a vector that contains the same objects as the array", "true": "returns a vector that contains the same objects as the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "notify version information about version changes", "true": "notify all registered listeners of the s prog version", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "accept the drop box", "true": "called to signal that the drop is acceptable using the specified operation", "bleu": 0.06399610426154731, "rouge": 0.22932330827067668}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the capabilities for the capabilities", "true": "returns a string representation of this tree node", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "construct a new instance with the specified detail string and exception", "true": "construct a new instance with the specified detail string and exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "splits a new node , creating a new empty tree nodes", "true": "splits a node into two based on the <unk> value of the dimension in which the node ' s rectangle is widest", "bleu": 0.059261672579474046, "rouge": 0.17150890346766634}, {"predict": "this method asks and returns a date object from the remote path", "true": "this method asks and returns the last modification date of a file or directory", "bleu": 0.3565223047958927, "rouge": 0.45522388059701485}, {"predict": "has the user chosen to import in pkcs 8 private key and certificate combination ?", "true": "has the user chosen to import from pkcs # 8 private key and certificate file combination ?", "bleu": 0.5710901991945134, "rouge": 0.8652482269503546}, {"predict": "runs a st method for the given class tree", "true": "build the control flow graph of a method", "bleu": 0.16784459625186196, "rouge": 0.2378167641325536}, {"predict": "returns true if the engine is a valid engine for this engine", "true": "sanity checks the engine , no negative ratings , and similar checks", "bleu": 0.1367440667823257, "rouge": 0.16666666666666666}, {"predict": "asserts that two floats are equal concerning a delta", "true": "asserts that two floats are equal concerning a delta", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the value of the frequency response according to the set of ex tre mal indices and the frequency set by the value used by the frequency set the indices in the ranges of the value used by the values accordingly", "true": "calculates the set of d values for the current ex tre mal index set", "bleu": 0.08644370615638991, "rouge": 0.27926749509483323}, {"predict": "divisor this mutable string by the divisor", "true": "decodes a base 64 encoded string", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "load the properties from the specified properties file", "true": "loads properties from a properties file on the local filesystem", "bleu": 0.21632118787624222, "rouge": 0.43571428571428567}, {"predict": "replace all occurrences of the pattern", "true": "replace all occurrences of the pattern", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a list of j m dns name for all j m dns host", "true": "list published node ( s ) configuration in the network via multi cast", "bleu": 0.08839374326825923, "rouge": 0.0745721271393643}, {"predict": "start a reactive flow from a j dk iterator", "true": "concatenate two streams", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "the following interface method that will be used to moves a source to the frame ' s baseline , and that will be a frame will be drawn into the frame", "true": "centers the elements in the specified row , if there is any slack", "bleu": 0.046398855339878003, "rouge": 0.14722445695897024}, {"predict": "read external representation of object from file input", "true": "reads object from data input", "bleu": 0.22679164443904004, "rouge": 0.48157894736842105}, {"predict": "creates an item label generator using default number formatters", "true": "creates an item label generator using default number formatters", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a unit length vector in the given direction", "true": "creates a unit length vector in the given direction", "bleu": 1.0, "rouge": 1.0}, {"predict": "use openoffice to convert documents between types", "true": "use openoffice to convert documents between types", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an arbitrary 10 , depending on if values between 0 and 1 are being plotted", "true": "returns an adjusted power of 10 value for graphing purposes", "bleu": 0.10878661088699644, "rouge": 0.24078947368421053}, {"predict": "clears all the data from this table", "true": "clears all the data from this table", "bleu": 1.0, "rouge": 1.0}, {"predict": "is last in voice costing method", "true": "is last in voice costing method", "bleu": 1.0, "rouge": 1.0}, {"predict": "set the ' http", "true": "set the ' http", "bleu": 1.0, "rouge": 1.0}, {"predict": "we will return the cluster name for the cluster name and consistency group name", "true": "parses out the cluster name from the combined cluster / cg name", "bleu": 0.1892240568795935, "rouge": 0.4680306905370844}, {"predict": "helper http function to get list of my service cards", "true": "helper http function to get list of my service cards", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d view fields dialog where the parent is iso", "true": "creates new d view asymmetric key fields dialog", "bleu": 0.23901088824528133, "rouge": 0.6224489795918368}, {"predict": "samples migration events on a two - coloured branch , conditional on colours at both ends migration process is forwards in ( natural ) time , so we are going down the tree", "true": "samples migration events on a two - coloured branch , conditional on colours at both ends migration process is forwards in ( natural ) time , so we are going down the tree", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is used to determine whether a particular attribute is a value or not", "true": "checks if string is actually an attribute", "bleu": 0.09103526405546068, "rouge": 0.1945773524720893}, {"predict": "decode the ascii encoded byte array into a string", "true": "decodes an ascii string from a key", "bleu": 0.16784459625186196, "rouge": 0.2557651991614256}, {"predict": "tree column changed column name to selection", "true": "this method will be invoked after a user selection of an operator in the tree", "bleu": 0.06555660318294844, "rouge": 0.08531468531468532}, {"predict": "removes property change listener from the list of listeners", "true": "removes a property change listener", "bleu": 0.2777619034011791, "rouge": 0.6024691358024692}, {"predict": "transfers node , if necessary , to sync queue after a cancelled wait", "true": "transfers node , if necessary , to sync queue after a cancelled wait", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an intent to create an intent to share the intent", "true": "creates a share intent", "bleu": 0.1354599427337814, "rouge": 0.43675417661097854}, {"predict": "creates and returns an updater for objects with the given field", "true": "creates an updater for objects with the given field", "bleu": 0.7292571723872933, "rouge": 0.9165275459098498}, {"predict": "verb suffixes of the bits", "true": "perform integration over one step using sub steps of a modified <unk> method", "bleu": 0.05512018958855254, "rouge": 0.10286677908937607}, {"predict": "internal conversion", "true": "internal conversion", "bleu": 1.0, "rouge": 1.0}, {"predict": ", + / - , l sr # ! 0 b 01 / l sr / if shift i mm = = 0 then / l sr # 32 / index = 0 else index = rm logical shift right shift i mm if u = 0", "true": "operation : , + / - , l sr # 0 b 01 / l sr / if shift i mm = = 0 then / l sr # 32 / index = 0 else index = rm logical shift right shift i mm if u = =", "bleu": 0.9042994759337462, "rouge": 0.9455735446090252}, {"predict": "build a row limit utility returning the given row", "true": "builds a row limit specification", "bleu": 0.2626909894424158, "rouge": 0.4518518518518518}, {"predict": "returns the first layer , where both this item and p other have a shape", "true": "returns the first layer , where both this item and p other have a shape", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove as many items as possible from the given stack into a drive", "true": "take as many items as possible , up to the passed limit , from a drive into the given stack", "bleu": 0.2946245586253899, "rouge": 0.525358851674641}, {"predict": "save the indexes of all indexes", "true": "commit all index memory changes to disk", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "add item in the last index", "true": "add item in determined index", "bleu": 0.4347208719449915, "rouge": 0.7393939393939394}, {"predict": "methods for starting asynchronous execution", "true": "methods for starting asynchronous execution", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will determine if the given location is a location and its parent", "true": "expands the tree to select the given entry if it exists", "bleu": 0.1250076305588977, "rouge": 0.16353887399463804}, {"predict": "advance to the next token", "true": "advance to the next token", "bleu": 1.0, "rouge": 1.0}, {"predict": "save the provisioning flag", "true": "save the provisioning validity in shared preferences", "bleu": 0.3158905525406873, "rouge": 0.5198863636363635}, {"predict": "write the extension to the der output stream", "true": "write the extension to the der output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "un export mask and their capabilities", "true": "remove volume exports to initiators", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "create a cluster in the specified project", "true": "create a cluster in the specified project", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse integer value into key store and put user data", "true": "returns the alias de referencing policy having the specified integer value as defined in rfc 4511 section 4", "bleu": 0.0745454141140315, "rouge": 0.1358574610244989}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "write string in text format without checking buffer size", "true": "write string in text format without checking buffer size", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds record to file", "true": "accumulate info for one read at the locus", "bleu": 0.11115018927487523, "rouge": 0.0}, {"predict": "calculates a sha - 256 hash for the given hash value", "true": "calculates the block hash by serializing the block and hashing the resulting bytes", "bleu": 0.11294012253658708, "rouge": 0.24629878869448185}, {"predict": "to add a property type , and tell if this is a value of the given resource", "true": "add a particular characteristic to a property", "bleu": 0.12512236921161915, "rouge": 0.27031019202363366}, {"predict": "null safe compare", "true": "asserts that given object 1 equals object 2", "bleu": 0.08533418657851909, "rouge": 0.0}, {"predict": "convert an of instruction write actions to string form", "true": "convert an of instruction write actions to string form", "bleu": 1.0, "rouge": 1.0}, {"predict": "the following methods need to be overridden when the status of the queue to be discarded", "true": "called before the specified object is added to this queue", "bleu": 0.09147827112247602, "rouge": 0.24078947368421053}, {"predict": "encodes a byte array into base 64 format and breaks the output into lines", "true": "encodes a byte array into base 64 format and breaks the output into lines", "bleu": 1.0, "rouge": 1.0}, {"predict": "decode a feed attached to a feed , including any time base ids", "true": "logs how much time an o data command consumed", "bleu": 0.09552040806823771, "rouge": 0.09399075500770414}, {"predict": "rl long protected helper method to read 64 bits and changing the order of each bytes", "true": "rl long protected helper method to read 64 bits and changing the order of each bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "shift right ( in t n ) , n > 32", "true": "shift right ( in t n ) , n > 32", "bleu": 1.0, "rouge": 1.0}, {"predict": "resolve s the given file to a constant object ( referenced by name )", "true": "resolve the class contained in file into the passed soot class", "bleu": 0.10511846841633776, "rouge": 0.24530831099195713}, {"predict": "builds response from the log out log out and returns the response from the tenant", "true": "helper method to generate log out response redirect url", "bleu": 0.11633270842295028, "rouge": 0.26180257510729615}, {"predict": "asserts that we have a label with the given text baring the given path", "true": "asserts that we have a label with the given text baring the given name", "bleu": 0.9253911813809743, "rouge": 0.9285714285714285}, {"predict": "list of nodes to extend the shape file", "true": "apply interpolation on the result list ( where possible )", "bleu": 0.13821693129588736, "rouge": 0.10892857142857142}, {"predict": "initializes token ize r splitting on the input stream", "true": "initializes the stream token ize r", "bleu": 0.30213753973567675, "rouge": 0.5532879818594103}, {"predict": "we have an of message we didn ' t expect given the current state and we want to treat this as an error", "true": "we have an of message we didn ' t expect given the current state and we want to treat this as an error", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs thread size in the applet", "true": "a simple method to do nothing very much", "bleu": 0.13309610652103346, "rouge": 0.0}, {"predict": "read a saved module as a instance in t", "true": "read a record of data from the file , and parse the header to build a field list for the record ( or reuse the existing one if reusing headers )", "bleu": 0.01732032867708597, "rouge": 0.13646532438478745}, {"predict": "lock api for locking of the file channel of the lock file", "true": "lock api for locking of the file channel of the lock file", "bleu": 1.0, "rouge": 1.0}, {"predict": "open the datagram connection", "true": "open the datagram connection", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string describing this result listener", "true": "returns a string describing this split eva lu at or", "bleu": 0.44322280532785957, "rouge": 0.5700934579439253}, {"predict": "run the script source based on the script as its parent and cluster", "true": "execute a dml or py dml script", "bleu": 0.09552040806823771, "rouge": 0.10571923743500866}, {"predict": "disables a specific feature on this rich formatter", "true": "disable a specific feature on this rich formatter", "bleu": 0.8633400213704505, "rouge": 0.875}, {"predict": "remove a listener for z wave events to this controller", "true": "remove a listener for z wave events to this controller", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a python time in milliseconds", "true": "returns the current mill is the same way as python does since this is what ' s stored in the replay files * yay *", "bleu": 0.011070807950358147, "rouge": 0.1742857142857143}, {"predict": "adds the given items to the end of the array", "true": "add new items to the table", "bleu": 0.23462350320528, "rouge": 0.3927038626609442}, {"predict": "quote the given name for a java keyword", "true": "prefixes the given name with a dollar ( $ ) if it is a java keyword", "bleu": 0.1588025223013512, "rouge": 0.47164948453608246}, {"predict": "static helper method for populating attributes from a database cursor", "true": "static helper method for populating attributes from a database cursor", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures the truth of an expression involving the state of the calling instance , but not involving any parameters to the calling method", "true": "ensures the truth of an expression involving the state of the calling instance , but not involving any parameters to the calling method", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a drop table to the database , but only the key that will be dropped", "true": "generate and return the list of statements to drop a database table", "bleu": 0.10521495173810227, "rouge": 0.14663461538461536}, {"predict": "true iff there is a granted group", "true": "true iff a lock is granted", "bleu": 0.29071536848410967, "rouge": 0.6240409207161125}, {"predict": "( since linux 2", "true": "( since linux 2", "bleu": 1.0, "rouge": 1.0}, {"predict": "find or create or create an class info if present", "true": "convert p scout - style type name to canonical form", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "method to reset the notes error after error display", "true": "method to reset the notes error after error display", "bleu": 1.0, "rouge": 1.0}, {"predict": "set ticks based on a psp time struct", "true": "set a psp time struct based on ticks", "bleu": 0.5466325569645467, "rouge": 0.625}, {"predict": "writes a char sequence to a file creating the file if it does not exist", "true": "writes a char sequence to a file creating the file if it does not exist", "bleu": 1.0, "rouge": 1.0}, {"predict": "populates the ; appropriate drawer with the appropriate items", "true": "populates the navigation drawer with the appropriate items", "bleu": 0.5814307369682193, "rouge": 0.8323586744639376}, {"predict": "returns the magnitude of this big integer that is exactly one random integer with a different integer", "true": "returns a big integer whose value is x to the power of y mod z", "bleu": 0.12149176141753365, "rouge": 0.2528497409326425}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next token token ize r token ize r", "true": "returns the next token type and initializes any state variables accordingly", "bleu": 0.3174567515536576, "rouge": 0.37770897832817335}, {"predict": "converts to object array", "true": "converts to object array", "bleu": 1.0, "rouge": 1.0}, {"predict": "record audit log for config service", "true": "record audit log for call home service", "bleu": 0.5446761861605913, "rouge": 0.7587064676616916}, {"predict": "compute the mean of all elements in the array", "true": "compute the mean of all elements in the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs an s ntp time in the current sig program", "true": "construct an ntp time from a date in milliseconds", "bleu": 0.18850319022747347, "rouge": 0.42508710801393734}, {"predict": "select media type s in media type", "true": "select the best media type for the current request through a content negotiation algorithm", "bleu": 0.09663861439684919, "rouge": 0.2695139911634757}, {"predict": "paints border of the popup menu", "true": "paints the border for the specified component with the specified position and size", "bleu": 0.08180282100568384, "rouge": 0.29611650485436897}, {"predict": "ensures that there is new data to the client", "true": "increases the capacity of this array list instance , if necessary , to ensure that it can hold at least the number of elements specified by the minimum capacity argument", "bleu": 0.016276220793949598, "rouge": 0.09348659003831418}, {"predict": "field to explicitly release any with this record manager such that it is ok to the c pl", "true": "invalidates this guard and un maps ( if supported )", "bleu": 0.06809398432036522, "rouge": 0.07530864197530865}, {"predict": "adds a directory and returns the number of class names for this path", "true": "adds new locations for command classes", "bleu": 0.10571070857151538, "rouge": 0.22550831792975967}, {"predict": "check if mines h after is present", "true": "check if mines h after is present", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests this item label generator for equality with an object", "true": "tests this object for equality with an arbitrary object", "bleu": 0.41722614486115056, "rouge": 0.7439024390243903}, {"predict": "indicates whether this node has the given node or not", "true": "checks if a node has a child of element type", "bleu": 0.16590387014219712, "rouge": 0.2}, {"predict": "delete an item at the specified index", "true": "removes item at the specified index from items vector", "bleu": 0.5112863131654277, "rouge": 0.6112224448897796}, {"predict": "returns the number of levels ( name ) in this object", "true": "returns a count of all css primitive ( non - shorthand ) properties known to this class", "bleu": 0.0868851996125416, "rouge": 0.3438556933483653}, {"predict": "prints a string to the stream , encoded as utf - 8", "true": "prints a string to the stream , encoded as utf - 8", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks the current user ' s permissions against the given object which may represent a single or multiple namespaces", "true": "checks the current user ' s permissions against the given object which may represent a single or multiple namespaces", "bleu": 1.0, "rouge": 1.0}, {"predict": "display the string defined in the string xml file : icon font string", "true": "display the string defined in the string xml file : icon font string", "bleu": 1.0, "rouge": 1.0}, {"predict": "create an intent to take a url span to launch the intent span", "true": "create an intent to take the user to maps , using the first map link available", "bleu": 0.29848820618156735, "rouge": 0.4739178690344062}, {"predict": "generate the parameters for the filter parameters", "true": "returns a string builder that is <unk> of filtering and expanding parameters that in turn are appended to the query string used for o data client", "bleu": 0.0146348531638773, "rouge": 0.10981098109810981}, {"predict": "writes the tags from this ex if interface object into a jpeg compressed bitmap , removing prior ex if tags", "true": "writes the tags from this ex if interface object into a jpeg compressed bitmap , removing prior ex if tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove an attribute from the list", "true": "remove an attribute from the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "instantiate s a signature from a jvm signature signature", "true": "converts from signature to slashed class name ( e", "bleu": 0.15619699684601276, "rouge": 0.2222222222222222}, {"predict": "paints the preview of the image", "true": "draws the off - screen image if exists at position ( dx , dy ) scaled by the specified factor", "bleu": 0.025473662186478712, "rouge": 0.14022988505747128}, {"predict": "opens the camera and starts sending preview frames to the underlying detector", "true": "opens the camera and starts sending preview frames to the underlying detector", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all the existing values from the series", "true": "removes all the existing values from the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a list of variable in this one", "true": "this will partition the given whole variable data apply transform to destination in to the specified chunk number", "bleu": 0.05463883725539848, "rouge": 0.14386792452830188}, {"predict": "updates the window ui and the corresponding popup", "true": "updates the ui of the passed in window and all its children", "bleu": 0.15821196380965347, "rouge": 0.3860759493670886}, {"predict": "clear all the results", "true": "clear all the results", "bleu": 1.0, "rouge": 1.0}, {"predict": "utility to find the widget given the coordinates", "true": "gather all the widget s contained in the area specified and return them as an array , taking the decorator visibility in account", "bleu": 0.034779625113655795, "rouge": 0.17801556420233464}, {"predict": "this function prints out of the text represented by the xml symbol represented by one of the symbol characters tree", "true": "print an ion symbol type", "bleu": 0.06108557268562171, "rouge": 0.08970588235294118}, {"predict": "makes a shopping cart item and adds it to the cart", "true": "makes a shopping cart item and adds it to the cart", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of the probability table", "true": "returns a string representation of the probability table", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the border text of the component", "true": "updates the border text of the component", "bleu": 1.0, "rouge": 1.0}, {"predict": "add the fields to a new array for a given class", "true": "adds to the result parameter all classes that aren ' t present in it", "bleu": 0.09596928383261212, "rouge": 0.07830551989730423}, {"predict": "resets the references for streaming", "true": "resets the references for streaming", "bleu": 1.0, "rouge": 1.0}, {"predict": "mp i encoded numbers are produced by the openssl bn bn 2 mp i function", "true": "mp i encoded numbers are produced by the openssl bn bn 2 mp i function", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a schema listener to the realm", "true": "this method will be invoked when a service ' s schema has been changed", "bleu": 0.07562380261607851, "rouge": 0.17967599410898377}, {"predict": "given a vector of nodes , sort each node according to the criteria in the keys", "true": "given a vector of nodes , sort each node according to the criteria in the keys", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses , validates and computes normalized version of g month day object", "true": "parses , validates and computes normalized version of g month object", "bleu": 0.842362674378975, "rouge": 0.9640804597701149}, {"predict": "adds the message to the queue to be sent", "true": "move the messages to the queue", "bleu": 0.2777619034011791, "rouge": 0.5532879818594103}, {"predict": "converts a string representation to an object", "true": "parse a string into a d bid", "bleu": 0.24446151121745047, "rouge": 0.2857142857142857}, {"predict": "write a short , 64 - bits", "true": "write short , 16 - bits", "bleu": 0.32172944208038085, "rouge": 0.7800511508951408}, {"predict": "prints a long followed by a newline", "true": "prints a long followed by a newline", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new i / service metadata object", "true": "creates a new instance from a single thrift service interface", "bleu": 0.176625510283176, "rouge": 0.3267857142857143}, {"predict": "creates a raster with the same layout but using a different width and height , and with new zeroed data arrays", "true": "creates a raster with the same layout but using a different width and height , and with new zeroed data arrays", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks the constraint of the given constraint violation", "true": "return an error response generated by a validation failure , invalid json , etc", "bleu": 0.0636991580240073, "rouge": 0.0}, {"predict": "check if the block does not run if required", "true": "check start block for occupied for start of run", "bleu": 0.16784459625186196, "rouge": 0.3333333333333333}, {"predict": "parse a switch node from the text area and then add the relevant tokens to the three tokens list", "true": "parse a switch command", "bleu": 0.11986062961075741, "rouge": 0.295638126009693}, {"predict": "initial is e the function", "true": "initialize the layer handler by having it construct it ' s layers from a url containing an open map", "bleu": 0.01660188206357524, "rouge": 0.0754017305315204}, {"predict": "true if this record is suppressed by the answers in a message", "true": "true if this record is suppressed by the answers in a message", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a properties object from a map of properties", "true": "creates an properties object initialized with the value from the given map", "bleu": 0.158278836853973, "rouge": 0.4642313546423136}, {"predict": "select the first node from the list", "true": "selects nodes using css 3 selector query and returns the very first one", "bleu": 0.08723697147876523, "rouge": 0.1897356143079316}, {"predict": "convert a string array into an array of strings , where it is a string or a - line", "true": "takes a string of representing token separated properties and returns an array of parsed strings", "bleu": 0.1481394578697113, "rouge": 0.3605911330049261}, {"predict": "generate the line - value to the slope - line : the x , y - value ) and height that is within the direction , y 2 )", "true": "generate the points that will generate the curved line between two points", "bleu": 0.0653559376048866, "rouge": 0.21089023336214346}, {"predict": "compares a primary tree with the most - specific field removed , or null if this locale had an empty language , country and returns the ordering , country", "true": "compares a locale against a primary locale", "bleu": 0.06910549031862163, "rouge": 0.24974411463664276}, {"predict": "executes a read - query result", "true": "execute a query and read all rows", "bleu": 0.22236312185643822, "rouge": 0.3034825870646766}, {"predict": "add distinct entry to list", "true": "add distinct entry to list", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests for equality of the specified object", "true": "equal ( based on data , ignores index )", "bleu": 0.11737849637633067, "rouge": 0.0}, {"predict": "notifies the connection that a transaction is consumed after the next connection", "true": "commits and finishes a <unk> started transaction", "bleu": 0.11498759556447223, "rouge": 0.22101449275362317}, {"predict": "creates a new panel object", "true": "creates a new panel object", "bleu": 1.0, "rouge": 1.0}, {"predict": "double the capacity of this de que", "true": "double the capacity of this de que", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to change a proper g debug folder in debug mode", "true": "change the debug logs folder", "bleu": 0.1354599427337814, "rouge": 0.40219780219780216}, {"predict": "computes the full url of the provided url , if present , or null if successful", "true": "computes the full url based on a base url and a possibly relative link found in the href param of an html anchor", "bleu": 0.155462061247489, "rouge": 0.248371335504886}, {"predict": "loads all the manifest in all manifest from the manifest", "true": "reads the jar ' s manifest", "bleu": 0.13950796967929133, "rouge": 0.26180257510729615}, {"predict": "given the original source , converts the parameter types to an array of types , primitive types , from the illegal class", "true": "convert an array of types in raw forms", "bleu": 0.15415064977510756, "rouge": 0.2911694510739857}, {"predict": "adds a column to the key definition", "true": "adds the given column at the specified position", "bleu": 0.19148978368719022, "rouge": 0.3952483801295896}, {"predict": "read data - - input the mod bus message from d in", "true": "read data - - dummy function", "bleu": 0.2891784933232571, "rouge": 0.4728682170542636}, {"predict": "removes the specified display display from the display list", "true": "remove a display from this visualization", "bleu": 0.18575057999133596, "rouge": 0.27664399092970515}, {"predict": "normal is taken from standard gaussian distribution", "true": "return the next gaussian see knuth , a cp , section 3", "bleu": 0.0909326471926252, "rouge": 0.10049423393739704}, {"predict": "fire a query listener", "true": "send an event to all registered listeners", "bleu": 0.142719668098593, "rouge": 0.0}, {"predict": "update the contact header", "true": "update port of contact header to reflect local port", "bleu": 0.14558246978804804, "rouge": 0.43160377358490565}, {"predict": "create a new http client with reasonable defaults ( which you can update )", "true": "create a new http client with reasonable defaults ( which you can update )", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds entry to future", "true": "adds entry to future", "bleu": 1.0, "rouge": 1.0}, {"predict": "visit the vertex in the transit on profile", "true": "saves current state geometry mode and weight as geo json feature properties in list of features", "bleu": 0.0589953212431261, "rouge": 0.07860824742268041}, {"predict": "uses a modest file ( ~ 40 k )", "true": "test of <unk> m q 1 against an empty data set", "bleu": 0.09503475972243516, "rouge": 0.0}, {"predict": "allows you to delete a file or path with a failure", "true": "delete a file from the file system or log the failure if unable to delete it", "bleu": 0.1663168741017824, "rouge": 0.3584018801410106}, {"predict": "removes existing values from the series", "true": "removes existing values from the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a group member", "true": "add a group member", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance", "true": "protected method to construct a logger for a named subsystem", "bleu": 0.08017158404431235, "rouge": 0.13260869565217392}, {"predict": "increment the value of a bin", "true": "increment the value of a bin", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures the truth of an expression involving one or more parameters to the calling method", "true": "ensures the truth of an expression involving one or more parameters to the calling method", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets all of the mappings in a map to this document", "true": "sets on this object all key / value pairs from the supplied map", "bleu": 0.12498879161997976, "rouge": 0.3283983849259758}, {"predict": "checks if a list of string contains a string while ignoring case", "true": "checks if a list of string contains a string while ignoring case", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the median absolute deviation ( mad ) from a array of numbers", "true": "compute the median absolute deviation from median", "bleu": 0.27824623288353134, "rouge": 0.5285961871750434}, {"predict": "perform the plugins for processing and plugins them in a plugins", "true": "loads the plugins that are configured in the configuration file", "bleu": 0.16108992769687397, "rouge": 0.28818897637795277}, {"predict": "stop the process manager , deleting the process", "true": "stops the superuser session", "bleu": 0.16036590969929357, "rouge": 0.17732558139534885}, {"predict": "set the ' http", "true": "set the ' http", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new request configured to upload a video to the user ' s default video file", "true": "creates a new request configured to upload a photo to the user ' s default photo album", "bleu": 0.7160350546947922, "rouge": 0.8235294117647058}, {"predict": "unwrap a proto message from a checked message , verifying the checksum", "true": "unwrap a proto message from a checked message , verifying the checksum", "bleu": 1.0, "rouge": 1.0}, {"predict": "create multi cast socket", "true": "creates multi cast socket and joins multi cast group", "bleu": 0.19159730522949137, "rouge": 0.43160377358490565}, {"predict": "writes out all the blocks of each node that are converted to the values that are values that are non - zero", "true": "copies the node connections from this arg model ' s nodes array to the destination array", "bleu": 0.08282282660969602, "rouge": 0.216696269982238}, {"predict": "check if meta data is selected for selected meta data", "true": "can be overridden to check the selected attributes for compatibility", "bleu": 0.14991106946711685, "rouge": 0.3}, {"predict": "validates the parameters passed in string", "true": "validates the will fields", "bleu": 0.2907153684841096, "rouge": 0.4149659863945578}, {"predict": "creates stream for decoding", "true": "creates stream for decoding", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next member object of the given type", "true": "returns the next server address", "bleu": 0.2626909894424158, "rouge": 0.4518518518518518}, {"predict": "109 * encode the suffix that ends every output line", "true": "encode the suffix that ends every output line", "bleu": 0.7860753021519787, "rouge": 0.9070631970260222}, {"predict": "should be replaced by built in vm if the url is loaded", "true": "this methods allows to indicate if the resource must be obtained", "bleu": 0.14694106251955755, "rouge": 0.17528735632183906}, {"predict": "sets all of the fields in a document", "true": "sets on this object all name / value pairs from the supplied object", "bleu": 0.10207878682119532, "rouge": 0.2739520958083832}, {"predict": "helper method for converting the given repository ( writing ) and out", "true": "creates a new client for the given g it repository", "bleu": 0.15537125692760353, "rouge": 0.3696969696969697}, {"predict": "create a root block view", "true": "create a new read - only view from the supplied buffer", "bleu": 0.11629030063732083, "rouge": 0.35124760076775424}, {"predict": "creates a new soap request", "true": "create a soap request for the given method name", "bleu": 0.17348474258688365, "rouge": 0.40757238307349664}, {"predict": "used to check whether an e num is allowed to be merged from the context", "true": "inner e num tests that reflection", "bleu": 0.1082597837309053, "rouge": 0.2064297800338409}, {"predict": "return the host uri , as a string", "true": "return the host uri , as a string", "bleu": 1.0, "rouge": 1.0}, {"predict": "earlier implementations of android ' s hostname ver i fier required that wildcard names wouldn ' t match \" *", "true": "earlier implementations of android ' s hostname ver i fier required that wildcard names wouldn ' t match \" *", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to determine if the file exists or not", "true": "verify that the supplied file or directory is within the target directory", "bleu": 0.12026590852507517, "rouge": 0.2785388127853881}, {"predict": "moves this cursor forward until it points to a character different from the specified character sequence", "true": "moves this cursor forward until it points to a character different from the specified character", "bleu": 0.9351334836242398, "rouge": 0.9734042553191491}, {"predict": "generate an integer set examples for the attributes", "true": "generate examples for a uniform cluster data set", "bleu": 0.239802967618271, "rouge": 0.375}, {"predict": "removes from this list all of its elements that are contained in the specified collection", "true": "removes from this list all of its elements that are contained in the specified collection", "bleu": 1.0, "rouge": 1.0}, {"predict": "cas tail field", "true": "cas tail field", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns phone object with the specified value", "true": "returns phone object with the specified value", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a named resource bundle for a particular locale", "true": "return a named resource bundle for a particular locale", "bleu": 1.0, "rouge": 1.0}, {"predict": "choose pools based on remote v pool ' s matched or assigned pools", "true": "choose pools based on remote v pool ' s matched or assigned pools", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a string to html by encoding all illegal characters", "true": "converts text to html , by transforming \\ n to", "bleu": 0.18850319022747347, "rouge": 0.4}, {"predict": "add a new pending lock to the manager", "true": "add a new pending lock to the manager", "bleu": 1.0, "rouge": 1.0}, {"predict": "evaluates the uf 7 problem", "true": "evaluates the uf 7 problem", "bleu": 1.0, "rouge": 1.0}, {"predict": "notify all listeners that the model ends with the new value", "true": "notify all listeners about cache period property changed", "bleu": 0.21200626759025185, "rouge": 0.32504440497335696}, {"predict": "convert a move object to uci string format", "true": "convert a move object to uci string format", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new hidden - acceleration image of the given width and height that is associated with the target component", "true": "creates a new managed image of the given width and height that is associated with the target component", "bleu": 0.761827408333416, "rouge": 0.9033101045296166}, {"predict": "debugging function to display internal state", "true": "debugging function to display internal state", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes given string to given writer", "true": "writes given string to given writer", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensure the internal array ' s capacity", "true": "ensure the internal array ' s capacity", "bleu": 1.0, "rouge": 1.0}, {"predict": "expert : decreases the ref count of this index reader instance", "true": "expert : decreases the ref count of this taxonomy reader instance", "bleu": 0.7691605673134586, "rouge": 0.9090909090909091}, {"predict": "convert an x 500 principal to an x 500 principal", "true": "convert an x", "bleu": 0.23462350320528, "rouge": 0.5111731843575419}, {"predict": "search for a particular resource in a set of known indent ion and logs if to obtain a particular resource with a search resource", "true": "assert that a resource is described by the cache", "bleu": 0.05606668411195419, "rouge": 0.132034632034632}, {"predict": "returns true if this type has a class", "true": "flat background type ( default )", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "builds a list of policy objects with given name", "true": "build list of currently limited networks , which defines when background data is restricted", "bleu": 0.10657503067399117, "rouge": 0.1673525377229081}, {"predict": "evaluate the specified in reverse order , where n = = 1 , and n 2 )", "true": "assign a priority for each operators use a stack to store them note the numbers can be negative we evaluate the expression left - to - right and push operands on to the stack until we encounter an operator , which we pop the top two values from", "bleu": 0.017440867062689963, "rouge": 0.08499767765908035}, {"predict": "adds all the provided xy series to the list", "true": "adds all the provided xy series to the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "usage of the program creation message , usage show and exit code", "true": "exists with optional error message , usage show and exit code", "bleu": 0.5593684915933074, "rouge": 0.6135057471264368}, {"predict": "test the serialization term", "true": "compares term key 1 to term key 2", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "sets the ray that transition points to ray ize the ray traces into this instance , and sets the abb intersection", "true": "computes an a abb that contains both this and other and stores it in this", "bleu": 0.07305267243289862, "rouge": 0.17183098591549298}, {"predict": "generate the fully qualified tag using the specified offset", "true": "generate auto tag for logs", "bleu": 0.15619699684601276, "rouge": 0.3012345679012346}, {"predict": "this method flushes any pending events , which can be start document ( ) closing the opening tag of an element , or closing an open c data section", "true": "this method flushes any pending events , which can be start document ( ) closing the opening tag of an element , or closing an open c data section", "bleu": 1.0, "rouge": 1.0}, {"predict": "handle the subscribe of the test", "true": "this function takes in the arguments for the subscribe command , and subscribes an instance of test subscriber with an initial request of 0 ( which means don ' t immediately make a request ) to an instance of the corresponding publisher", "bleu": 0.0009483778743589719, "rouge": 0.14681107099879662}, {"predict": "we don ' t have to convert the configuration views to the default configuration views", "true": "in it method adds all configuration views to the list of views", "bleu": 0.23961829057131984, "rouge": 0.3779429987608426}, {"predict": "create an extended type object from node type , namespace and local name", "true": "create an extended type object from node type , namespace and local name", "bleu": 1.0, "rouge": 1.0}, {"predict": "validate some assumptions about the new loc path iterator and it ' s owner and the state of the list", "true": "validate some assumptions about the new loc path iterator and it ' s owner and the state of the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "starts user interface from the long thread ( including the long update to single q len )", "true": "assign system stream partitions to all of the threads , and start them up to begin <unk> consuming messages", "bleu": 0.07107284137592886, "rouge": 0.11000901713255183}, {"predict": "initializes weights for a more than and complex vectors", "true": "returns the weights for problems of arbitrary dimension", "bleu": 0.18575057999133596, "rouge": 0.2378167641325536}, {"predict": "undoes the last action", "true": "undoes the last action", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a column from the table", "true": "removes the given column", "bleu": 0.2626909894424158, "rouge": 0.4149659863945578}, {"predict": "returns a string representation of this map", "true": "return single line of output", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "show a buffer / write the available sample", "true": "performs a peek ( ) operation in the queue to extract media info for the buffer ready to be released i", "bleu": 0.03755268705124013, "rouge": 0.12761506276150628}, {"predict": "validates a block of block based on the block holder", "true": "below method will be used to process the block", "bleu": 0.16590387014219712, "rouge": 0.21254355400696867}, {"predict": "returns a hash code for the complex condition", "true": "returns the hash code for the condition", "bleu": 0.48549177170732344, "rouge": 0.8097345132743362}, {"predict": "compute the segments for followed by the current log folder", "true": "balance all segments", "bleu": 0.12605968092174913, "rouge": 0.17039106145251398}, {"predict": "creates a new annotation drawer instance", "true": "creates a new drawer for the specified model and decorator", "bleu": 0.2231931376573339, "rouge": 0.47843137254901963}, {"predict": "indicates whether the user has a user", "true": "retrieves if user partitions are present", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "insert line from content to empty", "true": "insert a string of source code to be highlighted to the document", "bleu": 0.08993236413460196, "rouge": 0.20962199312714777}, {"predict": "reads the next unicode code point", "true": "reads the next unicode code point", "bleu": 1.0, "rouge": 1.0}, {"predict": "put an in t value out to the specified byte array position in big - endian format", "true": "put an in t value out to the specified byte array position in big - endian format", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new item with the given text", "true": "creates a new item object with the specified data source and text", "bleu": 0.3219290164685343, "rouge": 0.6756329113924051}, {"predict": "tag to be called in order to tag", "true": "set a one - time tag for use on the next logging call", "bleu": 0.08583768591139128, "rouge": 0.09131736526946108}, {"predict": "consumes a part of this status", "true": "consumes a part of this item", "bleu": 0.8091067115702212, "rouge": 0.8333333333333334}, {"predict": "create delegate communication parser", "true": "get delegate creating it if needed", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "add one or more outer join segment", "true": "adds an outer join descriptor that defines how the streams are related via outer joins", "bleu": 0.07796037894057231, "rouge": 0.17062937062937064}, {"predict": "splits this directory into a directory", "true": "splits the string into an array", "bleu": 0.24446151121745047, "rouge": 0.3333333333333333}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "retrieves and removes the head of this queue , waiting if necessary until an element with an expired delay is available on this queue , or the specified wait time expires", "true": "retrieves and removes the head of this queue , waiting if necessary until an element with an expired delay is available on this queue , or the specified wait time expires", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a callback to be invoked when a swipe event is sent to this view", "true": "add a callback to be invoked when a swipe event is sent to this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the number of unique names bound in this set", "true": "size of the cluster", "bleu": 0.13950796967929133, "rouge": 0.1548223350253807}, {"predict": "adds a bit at which at least one more than one", "true": "adds an item to the menu and positions it using the given ` pivot `", "bleu": 0.07918230184187261, "rouge": 0.07484662576687118}, {"predict": "write a \" x 8 \" value to the given output stream", "true": "writes a \" u in t 8 \" in w sp format to the given output stream", "bleu": 0.3100876476940687, "rouge": 0.6019736842105263}, {"predict": "removes and returns first element , or null if empty", "true": "removes and returns first element , or null if empty", "bleu": 1.0, "rouge": 1.0}, {"predict": "add two numbers of different length and sign", "true": "add two numbers of different length and sign", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new header to the options", "true": "adds a header to this request", "bleu": 0.3073940764756322, "rouge": 0.6240409207161125}, {"predict": "store sam l by server", "true": "store the key store changes", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "adds a new pointer relative to the pointer hierarchy", "true": "appends a base type to the pointer hierarchy just below parent , e", "bleu": 0.2636108121808874, "rouge": 0.4401154401154401}, {"predict": "sorts the specified array into ascending numerical order", "true": "sorts the specified array into ascending numerical order", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of this similarity object , weighted using the similarity defined in red similarity between use", "true": "return a string representation of this object , describing all aspects of similarity", "bleu": 0.2732231510487644, "rouge": 0.5174973488865324}, {"predict": "get the last element of the list", "true": "convert an it er able stream into one last item of the stream", "bleu": 0.1114789227233716, "rouge": 0.2846034214618974}, {"predict": "sleep for the specified time , ignoring any exceptions that occur", "true": "makes the thread sleep for some time", "bleu": 0.17033186037639278, "rouge": 0.3472485768500949}, {"predict": "searches for the first occur en ce of the given argument , beginning the search at index , and testing for equality using the equals method", "true": "searches for the first occur en ce of the given argument , beginning the search at index , and testing for equality using the equals method", "bleu": 1.0, "rouge": 1.0}, {"predict": "learn whether a given set of modifiers implies package access", "true": "returns whether a given set of modifiers implies package access", "bleu": 0.8931539818068694, "rouge": 0.9}, {"predict": "writes the gathered data tab - separated into a text file", "true": "writes the gathered data tab - separated into a text file", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new decorator with a named window", "true": "create a managed window decorator with an identity for a window", "bleu": 0.19840332506055577, "rouge": 0.6140939597315436}, {"predict": "write bytes from the specified byte array to the stream", "true": "write bytes from the specified byte array to the stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a log message if logging is enabled", "true": "send a log message if logging is enabled", "bleu": 1.0, "rouge": 1.0}, {"predict": "send update notifications to listeners", "true": "send update notifications to listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "handle edit operation if variable can be re running", "true": "checks if this partitioned region data store has the capacity to handle the <unk> size", "bleu": 0.08019421212222273, "rouge": 0.07973856209150328}, {"predict": "converts the s ld file", "true": "figure out if a valid s ld file is available", "bleu": 0.18693159143202892, "rouge": 0.37731958762886597}, {"predict": "adds the template and return the list of values to be copied", "true": "inserts properties to the template", "bleu": 0.14694106251955755, "rouge": 0.25416666666666665}, {"predict": "scale the original font of a component by a given component and change the style", "true": "change the font style of a component", "bleu": 0.195647514979229, "rouge": 0.4864433811802232}, {"predict": "draws a file to the file", "true": "draw <unk> matched by the blob detector", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "save the version of the cert s to a file", "true": "save a certificate to a file in base 64 binary format with begin and end strings", "bleu": 0.13615146825983562, "rouge": 0.2953995157384988}, {"predict": "clears the list of listeners that would be called when the central item of the list changes", "true": "clear all listeners that listening the central item of the list changes event", "bleu": 0.4251768826212766, "rouge": 0.6147816349384099}, {"predict": "invokes the specified accessible parameter less method if it exists", "true": "invokes the specified accessible parameter less method if it exists", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns if the chart should be filled below the line", "true": "returns if the chart should be filled below the line", "bleu": 1.0, "rouge": 1.0}, {"predict": "if we receive any result , we can delete the temp retry info", "true": "if we receive any result , we can delete the temp retry info file", "bleu": 0.925961078642316, "rouge": 0.9565741857659832}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "begin listening for the presence of a presence", "true": "returns true if the packet is a stanza as defined in rfc - <unk> - a message , iq or presence packet", "bleu": 0.033140130006448054, "rouge": 0.1844758064516129}, {"predict": "this is the actual action listener for raw key", "true": "execute javascript and reset forms values", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "which we need to update the j version \" update \" version \" , \" jp a version", "true": "helper function to determine whether a bean needs a fw update given a specific bundle version", "bleu": 0.08562365224473284, "rouge": 0.2378167641325536}, {"predict": "clear the given view map", "true": "clear the given view map", "bleu": 1.0, "rouge": 1.0}, {"predict": "locks navigation tables and lookup table with the specified duration", "true": "load several logical tables into the logical dictionary", "bleu": 0.13950796967929133, "rouge": 0.22676579925650556}, {"predict": "reads next variable length block from input", "true": "reads next variable length block from input", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new subscription to the session", "true": "add a new subscription to the session", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an instance of x", "true": "creates an instance of x", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads an process configuration from a string", "true": "reads an process configuration from an xml string", "bleu": 0.6129752413741055, "rouge": 0.7904967602591793}, {"predict": "constructs a new topology", "true": "construct a default fraction using the default agent url of http : / / local host : <unk> /", "bleu": 0.008450022790166857, "rouge": 0.07780612244897958}, {"predict": "build a qualifier regular expression including a qualifier", "true": "just used for like and not like", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "shorten string name to create a string , with the desired length and end characters to forward slashes at the end of this desired length", "true": "generates a version of the name that has at most the specified length", "bleu": 0.06871624004919695, "rouge": 0.2790484903934126}, {"predict": "blends the a color value of this object with the given offset between two other colors", "true": "linearly blends two colors with a defined weight", "bleu": 0.10123734869668824, "rouge": 0.2659883720930233}, {"predict": "the current e ip ( instruction pointer )", "true": "the current e ip ( instruction pointer )", "bleu": 1.0, "rouge": 1.0}, {"predict": "static methods to parameter and add static and parameter to parameter", "true": "normally the look and feel should be the standard one , java , allow to set the system pla f to have the system look and feel", "bleu": 0.0334454717699915, "rouge": 0.09783480352846832}, {"predict": "converts a given image into a buffered image", "true": "converts a given image into a buffered image", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a sequence of values and the trailing closing brace ' ' of an array", "true": "reads a sequence of values and the trailing closing brace ' ' of an array", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the given string of hex characters to a byte array", "true": "converts readable hex - string to byte array", "bleu": 0.18527972555830952, "rouge": 0.5417406749555951}, {"predict": "returns the list of all available terminal nodes with the given return type", "true": "returns the list of all available terminal nodes with the given return type", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove the specified sensor selection listener", "true": "remove the specified sensor selection listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a single character", "true": "writes the 16 low - order bits of the given integer value ; the 16 high - order bits are ignored", "bleu": 0.005125197897506692, "rouge": 0.07126168224299065}, {"predict": "create a class loader , explicitly specifying the source dex and the location for the optimized dex", "true": "create a class loader , explicitly specifying the source dex and the location for the optimized dex", "bleu": 1.0, "rouge": 1.0}, {"predict": "register ttl manager of cache from periodical check on expired entries", "true": "register ttl manager of cache for periodical check on expired entries", "bleu": 0.7348889200874658, "rouge": 0.9090909090909091}, {"predict": "makes a java", "true": "makes a java", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is used for getting the properties from log manager and log files", "true": "initialize logger key store", "bleu": 0.07432998184513635, "rouge": 0.0}, {"predict": "convert separation image data in a java image object to an image data array", "true": "returns a byte array which contains data special for the given format and for the given image data", "bleu": 0.1039621375902982, "rouge": 0.18336673346693386}, {"predict": "writes the tags from this ex if interface object into a jpeg compressed bitmap , removing prior ex if tags", "true": "writes the tags from this ex if interface object into a jpeg compressed bitmap , removing prior ex if tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "clean stacking markers", "true": "clean stacking markers", "bleu": 1.0, "rouge": 1.0}, {"predict": "indicate that a listener is no longer interested in the notifications for this service containing a particular service id", "true": "discard a registrar from the set of <unk> already discovered", "bleu": 0.0712695567709093, "rouge": 0.14610778443113773}, {"predict": "state is final", "true": "check whether the given state is one of the final states", "bleu": 0.052796005801316374, "rouge": 0.3885350318471337}, {"predict": "generates crc markers for a given number of input characters", "true": "generate a string of comma - separated numbers that will be used to mark the scale of the match diagram", "bleu": 0.051322113924580214, "rouge": 0.12577319587628866}, {"predict": "writes a ' fig tree ' block", "true": "writes a ' fig tree ' block", "bleu": 1.0, "rouge": 1.0}, {"predict": "used by pdf 2 html to replace the hash code of this font", "true": "as a concrete subclass of object that implements equality , this must implement hash code", "bleu": 0.12246842552790232, "rouge": 0.14104046242774565}, {"predict": "compares this map with another", "true": "compares this map with another", "bleu": 1.0, "rouge": 1.0}, {"predict": "the document declaration of the document", "true": "notifies of the presence of the do ctype line in the document", "bleu": 0.1344802511010201, "rouge": 0.41924398625429554}, {"predict": "writes the tags from this ex if interface object into a jpeg image , removing prior ex if tags", "true": "writes the tags from this ex if interface object into a jpeg image , removing prior ex if tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "clean the database connection", "true": "clean start - drop & re - create db", "bleu": 0.10294235160901445, "rouge": 0.14386792452830188}, {"predict": "create a new method exception for the given method name and arguments", "true": "the type of the argument was good , but it ' s value wasn ' t", "bleu": 0.07444976834161264, "rouge": 0.06963470319634703}, {"predict": "zlib compress 2 byte", "true": "zlib compress 2 byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads a mime type ' s mime - type mime map", "true": "load an entry into the map", "bleu": 0.11390778025531027, "rouge": 0.12423625254582485}, {"predict": "report the start of dtd declarations , if any", "true": "report the start of dtd declarations , if any", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert timestamp from timestamp", "true": "helper method that will convert timestamp format to a pattern", "bleu": 0.10551173833795614, "rouge": 0.26521739130434785}, {"predict": "function to encode a byte array from the input stream", "true": "encodes an array of byte into a string of printable ascii characters using a base - 64 encoding", "bleu": 0.06735938555336447, "rouge": 0.06792873051224944}, {"predict": "prints a double followed by a newline", "true": "prints a double followed by a newline", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the ip address as an ip string", "true": "convert the ip range into a string representation", "bleu": 0.22679164443904004, "rouge": 0.375}, {"predict": "returns true if the given host is in z k ( or if it )", "true": "validates if z k host contains a ch root", "bleu": 0.12300686288463772, "rouge": 0.26180257510729615}, {"predict": "handle the database to be db , creating the old of the old data", "true": "perform the given operation on the database with the given name , only if that database exists", "bleu": 0.11165964299780826, "rouge": 0.19022869022869024}, {"predict": "returns a hash code for this uri attribute", "true": "factory method to create the hash code allowing derived classes to change the behaviour", "bleu": 0.09969456998702547, "rouge": 0.1732954545454545}, {"predict": "calculate matrix for fit center", "true": "calculate matrix for fit center", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new instance of this fragment for the given section number", "true": "returns a new instance of this fragment for the given section number", "bleu": 1.0, "rouge": 1.0}, {"predict": "start of start of the start of an start of the process", "true": "import translation", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "constructs a result file reader for reading the approximation sets from the specified result file", "true": "constructs a result file reader for reading the approximation sets from the specified result file", "bleu": 1.0, "rouge": 1.0}, {"predict": "invoked when a request failed", "true": "called when there was an error connecting", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "checks if an identifier should be excluded", "true": "checks if the given identifier should be excluded", "bleu": 0.5154486831107657, "rouge": 0.7904967602591793}, {"predict": "determine if a request to so lr failed due to a communication error , which is generally retry - able", "true": "determine if a request to so lr failed due to a communication error , which is generally retry - able", "bleu": 1.0, "rouge": 1.0}, {"predict": "pushes a new type on to the output frame stack", "true": "pushes a new type on to the output frame stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the max value plus one for a short", "true": "get the max value plus one for a short", "bleu": 1.0, "rouge": 1.0}, {"predict": "method for bean context child interface", "true": "method for bean context child interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "encode the value into the xml string", "true": "html encodes value to avoid xs s attacks", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "creates and persists database entities required for testing and format day and format combo box and format combo box builder", "true": "create and persist database entities required for storage policy service testing", "bleu": 0.18493046910349434, "rouge": 0.40848214285714285}, {"predict": "takes a page object and returns the fields that satisfy the x path ( s )", "true": "create a pdf page object by finding the relevant inherited properties", "bleu": 0.11502783619900048, "rouge": 0.3065326633165829}, {"predict": "add a key - value pair to a map", "true": "adds a key / value pair to a map", "bleu": 0.5814307369682193, "rouge": 0.7777777777777778}, {"predict": "save boot prop ( if they were added )", "true": "saves modified boot properties to disk", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "appends the text to the file system", "true": "appends two files and updates the rec no counter", "bleu": 0.15447878876032708, "rouge": 0.24448897795591182}, {"predict": "write timestamp in binary format", "true": "write timestamp in binary format", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes the strings and returns the number of characters in the two encoded strings that are the same", "true": "encodes the strings and returns the number of characters in the two encoded strings that are the same", "bleu": 1.0, "rouge": 1.0}, {"predict": "break text , splitting on whitespace to break whitespace , splitting whitespace into break requests", "true": "run the morph a algorithm on the specified string", "bleu": 0.08225964699966554, "rouge": 0.08726752503576538}, {"predict": "always deletes a file from a file", "true": "delete a file from file system", "bleu": 0.3655552228545123, "rouge": 0.6240409207161125}, {"predict": "create form submission to return the required state", "true": "return a path for a check mark", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "initializes the disk based cache by scanning for all files currently in the specified root directory", "true": "initializes the disk based cache by scanning for all files currently in the specified root directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new tcp channel object to notify the desired address and port", "true": "initializes the tcp channel client", "bleu": 0.1350862565735141, "rouge": 0.24158415841584158}, {"predict": "this method is called when the user chooses to control a bean by some means such by by pressing ctrl - c", "true": "this method is called when the user chooses to cut a bean by some means such by by pressing ctrl - x", "bleu": 0.8318180062062374, "rouge": 0.9090909090909091}, {"predict": "tracks a new handler so that it can be removed in bulk", "true": "tracks a new handler so that it can be removed in bulk", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method takes an action listener for the layer , and it back to the associated j layer", "true": "invoked when an action from the popup menu occurs", "bleu": 0.09629943614188137, "rouge": 0.2364341085271318}, {"predict": "sets the channel to receive messages if the table is selected", "true": "adds a new colour map entry", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "ensure that size of current size can hold", "true": "ensure we have enough storage", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "construct a u u id", "true": "constructs an instance with the specified bits", "bleu": 0.15388864725803575, "rouge": 0.0}, {"predict": "print every value on a separate line", "true": "print every value on a separate line", "bleu": 1.0, "rouge": 1.0}, {"predict": "certain handler for debugging mode in production mode that should be enabled in production", "true": "renders a handler script , which may require chaining together the user - specified event handler , any scripts required by attached behaviors , and also possibly the <unk> <unk>", "bleu": 0.02818934435465944, "rouge": 0.04265734265734266}, {"predict": "converts a ts db name to a string", "true": "constructs a native ts db metric name for this metric", "bleu": 0.1867587389639562, "rouge": 0.43571428571428567}, {"predict": "in the case we are using the java select ( ) method , this method is used to trash the buggy selector and create a new one , registering all the sockets on it", "true": "in the case we are using the java select ( ) method , this method is used to trash the buggy selector and create a new one , registering all the sockets on it", "bleu": 1.0, "rouge": 1.0}, {"predict": "multiply two positive numbers of different length", "true": "multiply two positive numbers of different length", "bleu": 1.0, "rouge": 1.0}, {"predict": "process a parse message on an error ( s ) can be from changing error or channel info , this can be called", "true": "received data from the api , so parse it or handle a possible error , then give it to the listener", "bleu": 0.07238177794755687, "rouge": 0.1374906085649887}, {"predict": "issue show in a list of row query and returns the result set", "true": "retrieve all the rows satisfying the given sql query", "bleu": 0.10571070857151538, "rouge": 0.09399075500770414}, {"predict": "current time from some arbitrary time base in the past , counting in nanoseconds , and not affected by set time of day or similar system clock changes", "true": "current time from some arbitrary time base in the past , counting in nanoseconds , and not affected by set time of day or similar system clock changes", "bleu": 1.0, "rouge": 1.0}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a request to the server and generate a future for the eventual reply", "true": "send a request to the server and generate a future for the eventual reply", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if string is empty ( null or \" \" )", "true": "is null or its length is 0", "bleu": 0.16108992769687397, "rouge": 0.3472485768500949}, {"predict": "cas wait status field of a node", "true": "cas wait status field of a node", "bleu": 1.0, "rouge": 1.0}, {"predict": "enables the dependency of the given capability disabling nominal attributes also disables binary attributes , u nary attributes and empty nominal attributes", "true": "enables the dependency flag for the given capability enabling nominal attributes also enables binary attributes , u nary attributes and empty nominal attributes", "bleu": 0.5892026517673229, "rouge": 0.8410740203193033}, {"predict": "extract line of incomplete marker names within the stylesheet ' s attributes", "true": "extract and sort variables for given stack trace level", "bleu": 0.10390302174233558, "rouge": 0.09775641025641024}, {"predict": "add an integer to the config", "true": "add an integer to the config", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the upc / e an checksum on a string of digits , and reports whether the checksum is correct or not", "true": "computes the upc / e an checksum on a string of digits , and reports whether the checksum is correct or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert full - width letters in chinese fonts to normal half - width letters in an si char set", "true": "convert full - width letters in chinese fonts to normal half - width letters in an si char set", "bleu": 1.0, "rouge": 1.0}, {"predict": "test whether two collections contains the same elements , regardless of the order in which the elements appear in the collections", "true": "test whether two collections contains the same elements , regardless of the order in which the elements appear in the collections", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if a response message contains a body", "true": "checks if a response message contains a body", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the number of active process in this process", "true": "a connection can only have so many things in process happening on it at once , where \" in process \" refers to the maximum number of in - process requests less the number of pending responses", "bleu": 0.013460658317225583, "rouge": 0.19588953114964677}, {"predict": "adds the given value", "true": "adds the given value", "bleu": 1.0, "rouge": 1.0}, {"predict": "call to execute the last action to be called when the command has been reached", "true": "checks whether an action should currently be executed , based on the required delay", "bleu": 0.09782375748961449, "rouge": 0.2081911262798635}, {"predict": "jumps to the previous or next best match given the parameters below", "true": "jumps to the previous or next best match given the parameters below", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a message that was consumed in the startup message", "true": "dispatch the distribution message , or place it on the startup queue", "bleu": 0.14595947916189678, "rouge": 0.2683284457478006}, {"predict": "deletes all the zones in the zoning maps supplied in the zoning params", "true": "removes the indicated volumes from the zones given by the zoning parameters", "bleu": 0.16544619993389978, "rouge": 0.3223249669749009}, {"predict": "obtain a new list of available list on the list of available files", "true": "free resources and cleanup", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "implements the standard icon interface ' s paint icon method as the standard icon and this will cause the context and this will cause us to not paint any thing , so we override here so that we can paint the enabled state if no synth context is", "true": "implements the standard icon interface ' s paint icon method as the standard synth stub passes null for the context and this will cause us to not paint any thing , so we override here so that we can paint the enabled state if no synth context is", "bleu": 0.8621109017306224, "rouge": 0.8958333333333334}, {"predict": "this method changes image scale ( animating zoom for given duration ) , related to given center ( x , y )", "true": "this method changes image scale ( animating zoom for given duration ) , related to given center ( x , y )", "bleu": 1.0, "rouge": 1.0}, {"predict": "shard : fill returning the rows", "true": "return a list of currently known shard / channel assignments", "bleu": 0.11341174240707227, "rouge": 0.11960784313725491}, {"predict": "check if a file is hidden", "true": "whether the file is hidden or not", "bleu": 0.34801709319446883, "rouge": 0.45522388059701485}, {"predict": "returns true if the specified view is scroll", "true": "copy from scroll view ( api level > = 14 )", "bleu": 0.12197601375336842, "rouge": 0.10234899328859062}, {"predict": "load jar file", "true": "load the classes , resources , etc", "bleu": 0.14162677936694862, "rouge": 0.18654434250764526}, {"predict": "invalidates all empty title so that the movie is removed", "true": "invalidate the title sortable upon changes to the sortable prefixes", "bleu": 0.13950796967929133, "rouge": 0.2}, {"predict": "adds a new row to the table", "true": "adds a new row to the probability table , assuming no conditional assignment", "bleu": 0.36896746700492195, "rouge": 0.6640746500777605}, {"predict": "creates a jar using the given string content and ( which is a jar file )", "true": "create a jar using the given file contents and with the given file name", "bleu": 0.30277029197532096, "rouge": 0.4723451327433628}, {"predict": "force to show / right", "true": "this moves to the specified time in the view", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "return true if the map contains the same key", "true": "search for the desired value in the hash table", "bleu": 0.15619699684601276, "rouge": 0.2222222222222222}, {"predict": "closes database connection and logs if an error is encountered", "true": "closes database connection and logs if an error is encountered", "bleu": 1.0, "rouge": 1.0}, {"predict": "add descriptive details about a specific message box , so that if it needs to be reset in the preferences , then it is easily identifiable", "true": "add descriptive details about a specific message box , so that if it needs to be reset in the preferences , then it is easily identifiable", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a color map listener", "true": "add a color map listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the p 2 of the p 2 database", "true": "compute the probabilistic distances used by loop", "bleu": 0.18575057999133596, "rouge": 0.2557651991614256}, {"predict": "appends the suffix to the end of the string if the string does not already end in the suffix", "true": "appends the suffix to the end of the string if the string does not already end in the suffix", "bleu": 1.0, "rouge": 1.0}, {"predict": "requests a filesystem in which to store application data", "true": "requests a filesystem in which to store application data", "bleu": 1.0, "rouge": 1.0}, {"predict": "create an external problem using the process specified process", "true": "constructs an external problem using the specified process", "bleu": 0.5814307369682193, "rouge": 0.8323586744639376}, {"predict": "check in case of a separate platform process", "true": "return whether the specified network monitor has been instantiated in the entitlements service yet", "bleu": 0.07575149194183216, "rouge": 0.08664772727272725}, {"predict": "attempt to recover from a syntax error", "true": "attempt to recover from a syntax error", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a query predicate with a list of children", "true": "adds multiple predicates that much be met by the vertices", "bleu": 0.1262975489687145, "rouge": 0.10427350427350426}, {"predict": "add a set of virtual dice with the given number of faces that it with the given value", "true": "add the result from the given r ng source", "bleu": 0.101824256461955, "rouge": 0.3152454780361757}, {"predict": "checks if the available options ( which provide a use to a command line - options , and returns a default options , where the default options ( if it has use", "true": "checks whether the user - supplied options stay the same after sett ting , getting and re - setting again", "bleu": 0.05342392352880332, "rouge": 0.24078947368421053}, {"predict": "closes ' close able ' , ignoring any checked exceptions", "true": "closes ' close able ' , ignoring any checked exceptions", "bleu": 1.0, "rouge": 1.0}, {"predict": "push a message envelope", "true": "adds an encrypted message to the queue", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "returns a random range between 0 , 1 - 1 , max ( the random number is the given that is bigger )", "true": "returns a random integer between the value min and the value max", "bleu": 0.1171291646655074, "rouge": 0.36345580933465743}, {"predict": "test that str iterator is no layer", "true": "test that str iterator returns false for has next ( ) after close ( )", "bleu": 0.16486612875739623, "rouge": 0.3412587412587413}, {"predict": "called from psp ge module", "true": "called from psp ge module", "bleu": 1.0, "rouge": 1.0}, {"predict": "populate the list of snapshots from the specified task list", "true": "populate the given task list with tasks", "bleu": 0.2086130724305753, "rouge": 0.48605577689243035}, {"predict": "get the tuple with the maximum data field value", "true": "get the tuple with the maximum data field value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the tip text for this property", "true": "returns the tip text for this property", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a positive number from a sign and an array of bytes", "true": "create a positive number from a sign and an array of bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "start scrolling based on a fling gesture", "true": "start scrolling based on a fling gesture", "bleu": 1.0, "rouge": 1.0}, {"predict": "internal conversion", "true": "internal conversion", "bleu": 1.0, "rouge": 1.0}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a listener to the given item", "true": "add listener to listener list", "bleu": 0.24446151121745047, "rouge": 0.34366197183098596}, {"predict": "below method will be used to clear all the streams", "true": "below method will be used to close streams", "bleu": 0.5900468726392808, "rouge": 0.7936802973977695}, {"predict": "en ce of the inverse distribution for a specific distribution", "true": "return the <unk> , i", "bleu": 0.12605968092174913, "rouge": 0.1418604651162791}, {"predict": "convert data array list into list", "true": "utility method for automatically generating series names", "bleu": 0.15723447135049806, "rouge": 0.0}, {"predict": "read characters into the buffer", "true": "reads characters into a portion of an array", "bleu": 0.1971902775417715, "rouge": 0.2953995157384988}, {"predict": "evaluates the cf 6 problem", "true": "evaluates the cf 6 problem", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a fatal error log message", "true": "send a fatal error log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the number string list of the given string starting at the given index", "true": "returns the number string list of the given string starting at the given index", "bleu": 1.0, "rouge": 1.0}, {"predict": "equals ( ) with two strings where either could be null", "true": "equals ( ) with two strings where either could be null", "bleu": 1.0, "rouge": 1.0}, {"predict": "instantiate s the usage file", "true": "runs the wrapper with the specified arguments", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "gets the director and sub packages that are identical to the power of delayed sets", "true": "returns true if already used all the rule 17 <unk>", "bleu": 0.08225964699966554, "rouge": 0.08299319727891155}, {"predict": "stops the connection and interrupts all the connection", "true": "stops the communicator", "bleu": 0.21105340631872638, "rouge": 0.39610389610389607}, {"predict": "ab sol ut ize s a uri using the passed system id", "true": "helper method for expand system id ( string , string , boolean ) : string", "bleu": 0.10649638629044374, "rouge": 0.14523809523809522}, {"predict": "free a message from the cache", "true": "put a d message into the cache for reuse", "bleu": 0.20034704329441452, "rouge": 0.5147679324894514}, {"predict": "compares the two characters to this builder , ignoring the case of the characters and answer if they are equal", "true": "checks the contents of this builder against another to see if they contain the same character content ignoring case", "bleu": 0.1231146219567662, "rouge": 0.2576013513513513}, {"predict": "convert a u u u id integer u id to a long integer value", "true": "converts a u u id to a long for bucketing purposes", "bleu": 0.41882168504198286, "rouge": 0.5723860589812332}, {"predict": "add a vm argument to vm argument", "true": "adds the given vm argument", "bleu": 0.24446151121745047, "rouge": 0.34366197183098596}, {"predict": "apply a visitor to a method", "true": "apply a visitor to a field", "bleu": 0.8091067115702212, "rouge": 0.8333333333333334}, {"predict": "compare to ( big integer a )", "true": "compare to ( big integer a )", "bleu": 1.0, "rouge": 1.0}, {"predict": "method that should be called when you should run to run using views that is using on screen using an activity", "true": "a simple test for screenshots that launches an activity , injects the key event combo to trigger the screenshot , and verifies the screenshot was taken successfully", "bleu": 0.06528440784852986, "rouge": 0.12224448897795591}, {"predict": "un registers a target volume object from snapshot session un managed by the id except that the target snapshot is supported", "true": "implements a request to un link the passed targets from the block snapshot session instance with the passed uri", "bleu": 0.09770653288423854, "rouge": 0.2522746071133168}, {"predict": "reverse elements of the given sequence", "true": "reverse the sequence", "bleu": 0.2626909894424158, "rouge": 0.7093023255813954}, {"predict": "change a given number of steps to a single variable reference", "true": "change a given number of steps to a single variable reference", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the next line from the input", "true": "emulate the deprecated data input stream", "bleu": 0.20556680845025982, "rouge": 0.31202046035805625}, {"predict": "adds a new node to the zone", "true": "adds items to scene , ensuring we are on the fx thread", "bleu": 0.1081377510275021, "rouge": 0.30148270181219106}, {"predict": "returns the url of the product page", "true": "returns the url of the product home page", "bleu": 0.7536998328984837, "rouge": 0.9222462203023757}, {"predict": "checks if a ordinals can be added for ordinals", "true": "returns true if the supplied reader contains taxonomy information", "bleu": 0.14113991930789777, "rouge": 0.1111111111111111}, {"predict": "removes the listener from the collection of listeners who will be notified when the user changes the receiver ' s selection", "true": "removes the listener from the collection of listeners who will be notified when the control is selected by the user", "bleu": 0.6899375809676302, "rouge": 0.7349397590361446}, {"predict": "replace a class with the given name and type", "true": "replace n top level elements with new element of given type", "bleu": 0.14211011212459496, "rouge": 0.3929146537842191}, {"predict": "handles entities from the entity request", "true": "handles create realm request", "bleu": 0.24446151121745047, "rouge": 0.4149659863945578}, {"predict": "returns a point from a point p points", "true": "for a specified point and a list of poly points , determine based on point order whether the point should be considered in or out of the polygon", "bleu": 0.017324318567241807, "rouge": 0.20198675496688742}, {"predict": "deletes a subtree with the given subtree", "true": "removes the largest key and associated value from the given subtree", "bleu": 0.1952347922420459, "rouge": 0.32049036777583184}, {"predict": "atomic ally removes all of the elements from this de que", "true": "atomic ally removes all of the elements from this de que", "bleu": 1.0, "rouge": 1.0}, {"predict": "fired when the request progress , override to handle in your own code", "true": "called every time when command makes some little progress", "bleu": 0.10571070857151538, "rouge": 0.18798151001540828}, {"predict": "creates an empty node instance of parent node", "true": "only the tree node class can create an instance of tree node", "bleu": 0.15223083300988077, "rouge": 0.3860759493670886}, {"predict": "creates a time period for the week in a specified date / time and the default time zone", "true": "creates a time period for the week in which the specified date / time falls , using the default time zone and locale ( the locale can affect the day - of - the - week that marks the beginning of the week , as well as the", "bleu": 0.13197689732101983, "rouge": 0.44811753902662993}, {"predict": "returns the code attribute for this attribute", "true": "create the code attribute", "bleu": 0.345720784641941, "rouge": 0.5736677115987461}, {"predict": "initializes a binary output stream from a file", "true": "initializes a binary output stream from a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a class descriptor from the source stream", "true": "reads a class descriptor from the source stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new file , if the file exists is not created", "true": "create a new file , if the file exists , delete and create again", "bleu": 0.6231547353653452, "rouge": 0.6828358208955225}, {"predict": "or for zero and one", "true": "or for zero and one", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes a prepared statement", "true": "executes a prepared statement using values supplied as arguments", "bleu": 0.2865047968601901, "rouge": 0.5754716981132075}, {"predict": "gets rid of config object ' s configuration from a collection of raw configuration", "true": "creates a new configuration", "bleu": 0.09782375748961449, "rouge": 0.2469635627530364}, {"predict": "ensures that a string is not empty", "true": "ensures that an string reference passed as a parameter to the calling method is not empty", "bleu": 0.12213469535678724, "rouge": 0.4873501997336884}, {"predict": "adds common component to the parser configuration", "true": "adds common component to the parser configuration", "bleu": 1.0, "rouge": 1.0}, {"predict": "sends all of max of a max of 4 secs waiting", "true": "cancel all open and running unnamed tasks", "bleu": 0.11390778025531027, "rouge": 0.1157495256166983}, {"predict": "calculate the minimum and maximum values out of a list of doubles", "true": "calculate the minimum and maximum values out of a list of doubles", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "un escapes the character identified by the character or characters that immediately follow a backslash", "true": "un escapes the character identified by the character or characters that immediately follow a backslash", "bleu": 1.0, "rouge": 1.0}, {"predict": "update query and header parameters based on authentication settings", "true": "update query and header parameters based on authentication settings", "bleu": 1.0, "rouge": 1.0}, {"predict": "add spaces around spans until the text is fixed , and then removes the unneeded spaces", "true": "add spaces around spans until the text is fixed , and then removes the unneeded spaces", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes a default experiment", "true": "initializes a default experiment", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all bookmark tracking icons", "true": "removes all bookmark tracking icons", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new simple metric group with the given name and stream", "true": "create a metric group with the given metrics", "bleu": 0.39553325358771796, "rouge": 0.6224489795918368}, {"predict": "checks if the given point is inside our bounds", "true": "returns true if the point is inside this sprite", "bleu": 0.31239399369202553, "rouge": 0.5555555555555556}, {"predict": "load the protocols manager with the given loader", "true": "finds protocol support from a given class loader", "bleu": 0.17747405280050269, "rouge": 0.25}, {"predict": "get all the interfaces of this class , in order of connections by this class", "true": "a list of the non - loop back , non - link - local ip addresses of the host , or null if none found", "bleu": 0.05310582855310554, "rouge": 0.14352941176470588}, {"predict": "high - batch of data to get stats based on the width and height", "true": "cac u late the bitmap sample size", "bleu": 0.08839374326825923, "rouge": 0.10132890365448505}, {"predict": "determines if the specified status has the specified status", "true": "check if the entity has a certain status", "bleu": 0.21105340631872635, "rouge": 0.4756335282651072}, {"predict": "method to string set", "true": "primarily for debug purposes", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "computes the value of ssl v 3 pseudo random function", "true": "computes the value of ssl v 3 pseudo random function", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the channel map to this model", "true": "adds the channel map to this model", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the specified object to the priority queue", "true": "adds an element to the queue", "bleu": 0.239802967618271, "rouge": 0.5865384615384615}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "associates the specified resource with the specified key in this cache", "true": "return the resource for the specified key", "bleu": 0.23462350320527994, "rouge": 0.5787476280834916}, {"predict": "reads a sequence of words from the form object , including setting its individual components - values , and the default language ) , and converts it into an individual components for use to the range", "true": "reads a \" message set \" argument , and parses into an id set", "bleu": 0.06483010295255652, "rouge": 0.26068376068376065}, {"predict": "handles a suffix on the plot with a plot", "true": "replace a string suffix by another", "bleu": 0.15619699684601276, "rouge": 0.27664399092970515}, {"predict": "executes a task by some recognized possible some recognized possible some recognized possible some recognized possible js task", "true": "executes a previously claimed s can range task", "bleu": 0.09629943614188137, "rouge": 0.2479674796747967}, {"predict": "creates a directory if all required configuration files are built with the configuration file", "true": "creates the configuration directory if it does not already exist", "bleu": 0.15310245441182443, "rouge": 0.2577464788732394}, {"predict": "method to handle update button", "true": "method to handle update button", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads a class file by a given class loader", "true": "loads a class file by a given class loader", "bleu": 1.0, "rouge": 1.0}, {"predict": "get an iterator over the target object", "true": "iterate over target objects representing control flow targets and their edge types", "bleu": 0.10063351655856649, "rouge": 0.20098846787479407}, {"predict": "increments the size of the main content", "true": "fits the width of the main composite to the same width scrolled composite was given", "bleu": 0.11657795763232932, "rouge": 0.3412587412587413}, {"predict": "returns a hash code for this principal", "true": "returns the hash code value for this entry", "bleu": 0.2789001430384383, "rouge": 0.6587473002159828}, {"predict": "builds client index from the snmp table - client cache table ( example = au th )", "true": "builds a map pool - name = > pool - index from the snmp table handler of the jvm mem pool table", "bleu": 0.22403763237170912, "rouge": 0.3508627773212818}, {"predict": "creates a new d crypto strength dialog", "true": "creates a new d crypto strength dialog where the parent is a frame", "bleu": 0.42437284567694994, "rouge": 0.6640746500777605}, {"predict": "create a horizontal separator", "true": "creates a vertical separator for visually separating status bar elements", "bleu": 0.08872444253557525, "rouge": 0.26521739130434785}, {"predict": "adds the specified object at the end of the array", "true": "adds the specified object at the end of the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "rebuilds the data set based on the given realm results", "true": "rebuilds the data set based on the given realm results", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate the signature from the current data set", "true": "generate a signature for the message we ' ve been loaded with using the key we were initial is ed with", "bleu": 0.039707132152957895, "rouge": 0.1914225941422594}, {"predict": "compute matrix x , y , and height x", "true": "compute the weight matrix for hsb similarity", "bleu": 0.15619699684601276, "rouge": 0.2557651991614256}, {"predict": "and for a negative and a positive numbers ; the first is longer", "true": "and for a negative and a positive numbers ; the first is longer", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the bytes to byte array", "true": "write the bytes to byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "opens an intent to open a file", "true": "open file using intent", "bleu": 0.22089591134157885, "rouge": 0.3824451410658307}, {"predict": "converts a date string into a java", "true": "converts a date string into a java", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new journal that omits redundant information", "true": "creates a new journal that omits redundant information", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the closest in t to x", "true": "might have different semantics than math", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "creates a new plaintext component with the given integer", "true": "creates a new plaintext component with the given short", "bleu": 0.8801117367933934, "rouge": 0.8888888888888888}, {"predict": "copies this attribute and returns a new copy", "true": "copies this attribute and returns a new copy", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the component changes to search for the url contents", "true": "construct details of api changes by service and component name", "bleu": 0.13950796967929133, "rouge": 0.1}, {"predict": "add a new element", "true": "defines a new example", "bleu": 0.47287080450158786, "rouge": 0.5}, {"predict": "method check if a file is writable or not", "true": "method checks if file could be written / deleted or created", "bleu": 0.14211011212459496, "rouge": 0.3929146537842191}, {"predict": "returns the string representation of this attribute type", "true": "returns a string representation of the oid ' s integer components in dot separated notation", "bleu": 0.13769637489372183, "rouge": 0.32972972972972975}, {"predict": "creates default value from sun au th realm", "true": "creates au th configurations for au th modules configuration in core au th service", "bleu": 0.10712878727413526, "rouge": 0.25994318181818177}, {"predict": "reads the input stream to the output", "true": "writes the field to the output", "bleu": 0.3655552228545123, "rouge": 0.6240409207161125}, {"predict": "skip ( long n ) method testing", "true": "skip ( long n ) method testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a char to the string buffer", "true": "add a char to the string buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the hash code for this attribute type", "true": "returns the hash code for this name form", "bleu": 0.7259795291154771, "rouge": 0.75}, {"predict": "c hole sky algorithm for symmetric and positive definite matrix", "true": "c hole sky algorithm for symmetric and positive definite matrix", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the candidate number of candidate calculates the given edge of the given edge", "true": "appends to \" candidate crossings \" all edge references which may cross the given edge", "bleu": 0.16951909200513388, "rouge": 0.34269662921348315}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new repository location", "true": "creates a repository location for a given repository and a set of path components which will be concatenated by a /", "bleu": 0.01841640459320245, "rouge": 0.27695800227014755}, {"predict": "this method will be used to add a new property", "true": "this method will be used to add a new property", "bleu": 1.0, "rouge": 1.0}, {"predict": "recursive method that merge rule s cm - recursive data based on its children of the element as part of the attribute of the attribute and attribute of the same type", "true": "creates the nested delta deltas based on the affected element its delta , and the root of this delta tree", "bleu": 0.06938247178254628, "rouge": 0.24481605351170568}, {"predict": "returns a string representation of the title", "true": "to string", "bleu": 0.18575057999133598, "rouge": 0.2469635627530364}, {"predict": "return number of empty items", "true": "return the size of the embedded map", "bleu": 0.20252884954471367, "rouge": 0.32360742705570295}, {"predict": "replace all occurrences of a substring within a string with another string", "true": "replace all occurrences of a substring within a string with another string", "bleu": 1.0, "rouge": 1.0}, {"predict": "determine if there is a coordinate in the appropriate format", "true": "determines if a given coordinate lies within a selected zone", "bleu": 0.14991106946711685, "rouge": 0.3}, {"predict": "returns the tip text for this property", "true": "returns the tip text for this property", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes up the plain text reader", "true": "read data from a label file", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "parses a double safely", "true": "parses a double safely , returning a default if nothing can be <unk> parsed from it", "bleu": 0.049787068367863944, "rouge": 0.3609467455621302}, {"predict": "a lame attempt to prevent duplicate application id", "true": "a lame attempt to prevent duplicate application id", "bleu": 1.0, "rouge": 1.0}, {"predict": "store a profile to use for getting", "true": "create or update a profile for a remote counterpart", "bleu": 0.19740631366145517, "rouge": 0.3667334669338677}, {"predict": "prints a char to the output", "true": "prints the given char", "bleu": 0.2626909894424158, "rouge": 0.4149659863945578}, {"predict": "in it method database views for each work space", "true": "recursively initialize views for all the blocks in the model and add them to the view", "bleu": 0.09170230785170237, "rouge": 0.1523096129837703}, {"predict": "clears cached forms state", "true": "clears all registered page <unk> of a given single sign on token id", "bleu": 0.037870374782798366, "rouge": 0.1073943661971831}, {"predict": "creates a new d netscape care vocation url dialog", "true": "creates a new d netscape care vocation url dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses a comma - separated list of integers , with range - checking", "true": "parses a comma - separated list of integers , with range - checking", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new directory not found with the specified entity", "true": "constructs a new exception with detailed error message", "bleu": 0.24808415001701817, "rouge": 0.4535315985130111}, {"predict": "below method will be used to clear all the streams", "true": "below method will be used to close streams", "bleu": 0.5900468726392808, "rouge": 0.7936802973977695}, {"predict": "select an array of all de scram bla / de p 1 a", "true": "fill the array with random numbers from 0", "bleu": 0.09552040806823771, "rouge": 0.09951060358890701}, {"predict": "reads a value of an annotation and makes the given visitor visit it", "true": "reads a value of an annotation and makes the given visitor visit it", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse an individual sip message header from a string", "true": "parse an individual sip message header from a string", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts an s rgb color to an s rgb - bit rgb integer", "true": "helper function to convert a color component in s rgb space to linear rgb space", "bleu": 0.12817975762352776, "rouge": 0.2820809248554913}, {"predict": "records the beginning and logs a sync usage", "true": "records a start usage logging message to whichever logging endpoint is configured", "bleu": 0.11567041937737582, "rouge": 0.28955696202531644}, {"predict": "rotate point p around center point c", "true": "rotate point p around center point c", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the given word is pronounceable", "true": "returns true if the given word is pronounceable", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds an edge list to the list of edges ( if any )", "true": "creates new edges for all the edges that the intersections in this list split the parent edge into", "bleu": 0.08176074349645106, "rouge": 0.12538540596094552}, {"predict": "constructs a new instance of memory based on given size", "true": "constructs an instance of the mem based cache", "bleu": 0.18850319022747347, "rouge": 0.4535315985130111}, {"predict": "updates the maximum width of the widget to fit the specified width and maximum if needed", "true": "updates the max text width values for the suggestions", "bleu": 0.11502783619900048, "rouge": 0.33701657458563533}, {"predict": "enable / disable the selected item", "true": "enable / disable the overview menu", "bleu": 0.6147881529512643, "rouge": 0.6666666666666666}, {"predict": "invoked when a mouse enters a component", "true": "handle a mouse entered mouse listener event", "bleu": 0.24446151121745047, "rouge": 0.2857142857142857}, {"predict": "fetches the page at the specified page , but does not be implemented by the single page", "true": "gets the requested page of collections after applying filters and offsets", "bleu": 0.07994607499472013, "rouge": 0.14859926918392205}, {"predict": "makes the given visitor visit this annotation", "true": "makes the given visitor visit this annotation", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds ids to the filter", "true": "adds ids to the filter", "bleu": 1.0, "rouge": 1.0}, {"predict": "stop a previously started monitor if it exists", "true": "stop a previously started monitor if it exists", "bleu": 1.0, "rouge": 1.0}, {"predict": "normalizes the url to its canonical form", "true": "calculates the normalized request url , as per section 9", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "search the input stream to the specified stream", "true": "invoke the object with the request from the input stream", "bleu": 0.24578832304224082, "rouge": 0.3267857142857143}, {"predict": "commits a local transaction", "true": "commits the local transaction", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "use the core to add an object class to the core", "true": "only adds the object class if it hasn ' t already been added", "bleu": 0.13430919728978852, "rouge": 0.24629878869448185}, {"predict": "populate the area for other apps and sends information to a list of children and sends information to the bubble", "true": "populate the area list by ward", "bleu": 0.12021577610863723, "rouge": 0.34078212290502796}, {"predict": "parse a domain name starting at the given stream", "true": "parse a domain name starting at the current offset and moving the input stream pointer past this domain name ( even if cross references occur e )", "bleu": 0.1059055824667367, "rouge": 0.4076858813700919}, {"predict": "concatenates a single character to a single string", "true": "concatenates a simple string and a char", "bleu": 0.239802967618271, "rouge": 0.4048672566371681}, {"predict": "returns the log - odds for a given pro babil it iy", "true": "returns the log - odds for a given pro babil it iy", "bleu": 1.0, "rouge": 1.0}, {"predict": "signals a waiting take", "true": "signals a waiting take", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the current child node to fill the tree with valid intersection", "true": "fill a tree which specifies a feature hierarchy but no corresponding units", "bleu": 0.11498759556447223, "rouge": 0.16666666666666666}, {"predict": "return the number of node names in this node", "true": "return the number of nodes in the is way", "bleu": 0.4111336169005197, "rouge": 0.5555555555555556}, {"predict": "adds the given host to the blacklist with the time out s default time in the future a newline format", "true": "adds a host to the blacklist", "bleu": 0.18493046910349434, "rouge": 0.42597765363128487}, {"predict": "method to add node to end of the node list", "true": "method to add a node to the dag", "bleu": 0.28997844147152074, "rouge": 0.6802973977695167}, {"predict": "requests a filesystem in which to store application data", "true": "requests a filesystem in which to store application data", "bleu": 1.0, "rouge": 1.0}, {"predict": "save the state of this map to a stream", "true": "saves this map to a stream ( that is , serializes it )", "bleu": 0.3314730476621174, "rouge": 0.4401154401154401}, {"predict": "pdf of rayleigh distribution", "true": "s igm oid / logistic function", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "tries to insert new entry of existing entry and refresh new entry", "true": "notify bucket of new incoming packet from a node , perform update or insert existing nodes where appropriate", "bleu": 0.07924391788091918, "rouge": 0.12869198312236285}, {"predict": "transforms the current transform at the specified point in the current transform", "true": "translates the current transform", "bleu": 0.19338531381761725, "rouge": 0.4121621621621622}, {"predict": "checks to see if the remove protection operation is supported", "true": "determines if the volume qualifies for rp protection", "bleu": 0.17827531042796255, "rouge": 0.34014869888475835}, {"predict": "writes default text in an object ( x )", "true": "write this object to a stream", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "write and convert fact to output stream", "true": "writes the given number of spaces to the given writer", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "computes the volume of the overlapping box between two spatial comparable s", "true": "computes the volume of the overlapping box between two spatial comparable s and return the relation between the volume of the overlapping box and the volume of both spatial comparable", "bleu": 0.22313016014842982, "rouge": 0.5304347826086957}, {"predict": "handles the activity on clicked state", "true": "if auto draw is enabled , a draw request is sent", "bleu": 0.08072686929338534, "rouge": 0.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method that will try to load at least specified number bytes in input buffer , possible moving existing data around if necessary", "true": "helper method that will try to load at least specified number bytes in input buffer , possible moving existing data around if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new enumerated matrix with the given byte array", "true": "this ctor interprets the byte array as a sequence of characters to send", "bleu": 0.13964659797714432, "rouge": 0.25487465181058494}, {"predict": "sorts the method descriptors", "true": "as of this writing , this is only used for testing if method order really doesn ' t mater", "bleu": 0.008450022790166857, "rouge": 0.07780612244897958}, {"predict": "parses a list of property list property value", "true": "take a property list , defined in a single string , and return a properties object", "bleu": 0.0834319834185865, "rouge": 0.23582474226804123}, {"predict": "indicates whether a package has at the given annotation", "true": "determines whether the package in which t resides has a particular annotation", "bleu": 0.13832543625866361, "rouge": 0.3713850837138508}, {"predict": "builds the tooltip for nodes that represent multiple graph nodes", "true": "generates the tooltip shown when the cursor hovers over a tag tree node that represents a container of graph nodes", "bleu": 0.08032344912012505, "rouge": 0.31443298969072164}, {"predict": "make a graph from the given link", "true": "read in the normalized category file", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "removes a listener from the set of listeners", "true": "removes a listener from the set of listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove item click listener from this view", "true": "remove item click listener from this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "find a position that can be selected ( i", "true": "find a position that can be selected ( i", "bleu": 1.0, "rouge": 1.0}, {"predict": "pad a string on the left with spaces till it is at least the specified length", "true": "pad a string on the right with spaces till it is at least the specified length", "bleu": 0.8282477531331041, "rouge": 0.9375000000000001}, {"predict": "returns the matching names ( normalized ) for some type in which more matching names", "true": "build the complete list of names for a collation matching rule", "bleu": 0.10343603005129705, "rouge": 0.3164721141374838}, {"predict": "check whether the given class is cache - safe in the given context , i", "true": "check whether the given class is cache - safe in the given context , i", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the given output stream to the given output stream", "true": "writes the algorithm ' s internal representation as text", "bleu": 0.16590387014219712, "rouge": 0.21254355400696867}, {"predict": "creates a part from the encoded and decoded strings", "true": "creates a part from the encoded and decoded strings", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a epoch month instance for the specified month , with a specific year", "true": "converts the map of year to month lengths ranging from min year to max year into a linear contiguous array of epoch days", "bleu": 0.0611663449378033, "rouge": 0.15534804753820033}, {"predict": "convert a descriptor to an internal name", "true": "convert a non - method type descriptor into an internal type", "bleu": 0.18168644632623684, "rouge": 0.5341506129597198}, {"predict": "method for register a new subscription", "true": "register the given mbe an based on the given description", "bleu": 0.11341174240707227, "rouge": 0.11960784313725491}, {"predict": "checks correctness of the state after un marshalling", "true": "checks correctness of the state after un marshalling", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one", "true": "adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one", "bleu": 1.0, "rouge": 1.0}, {"predict": "asynchronously perform a stream collection", "true": "asynchronously perform a stream collection", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert from the type used by the reflection access or s to the type used by native access or s", "true": "convert from the type used by the reflection access or s to the type used by native access or s", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds a builds specific string builder", "true": "register a builder for the company id", "bleu": 0.20693220168471366, "rouge": 0.3034825870646766}, {"predict": "attempts to copy the re il code for a code node", "true": "copy re il code for node", "bleu": 0.3448444257953326, "rouge": 0.745417515274949}, {"predict": "this isn ' t what the ri does", "true": "this isn ' t what the ri does", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads string data from a reader", "true": "reads string data from a reader", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the similarity between two lanes", "true": "computes the similarity of two sequences", "bleu": 0.31239399369202553, "rouge": 0.5}, {"predict": "finds index of the string", "true": "finds index of the string", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to prepare instruction operand with given parameters", "true": "method to prepare instruction operand with given parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "divide and conquer brownian bridge", "true": "divide and conquer brownian bridge ; not thread - safe ! ! ! ! !", "bleu": 0.1353352832366127, "rouge": 0.45864661654135336}, {"predict": "compute compute x", "true": "returns the version corresponding to the given document type", "bleu": 0.06114461654585454, "rouge": 0.0}, {"predict": "tests whether or not a string matches against a pattern", "true": "tests whether or not a string matches against a pattern", "bleu": 1.0, "rouge": 1.0}, {"predict": "merge a list of coordinates into a list of doubles", "true": "this will merge the coordinates of the given coordinate system", "bleu": 0.14991106946711685, "rouge": 0.3}, {"predict": "prints an integer to standard output and flushes standard output", "true": "prints an integer to standard output and flushes standard output", "bleu": 1.0, "rouge": 1.0}, {"predict": "fill up the selected text fields with the selection and de selected text in the model", "true": "copy text", "bleu": 0.07692375026049747, "rouge": 0.12923728813559324}, {"predict": "handles save button request", "true": "handles save button request", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the panel for the children of a composite", "true": "build the description panel", "bleu": 0.15619699684601276, "rouge": 0.3306233062330623}, {"predict": "create an http method client", "true": "creates a new http method client with default time out s", "bleu": 0.1530466426272106, "rouge": 0.35124760076775424}, {"predict": "creates a new signer signer signer object", "true": "generate a signer for the with either implicit or explicit trailers for iso 9796 - 2 , scheme 2 or 3", "bleu": 0.027820442245662422, "rouge": 0.13104189044038667}, {"predict": "decode the text value of a sql statement", "true": "decodes a compressed or uncompressed text value", "bleu": 0.22679164443904004, "rouge": 0.26991150442477874}, {"predict": "given a collection , extract values from the stream , extract a set of elements", "true": "extract a set of a defined type from the passed collection using the given extractor", "bleu": 0.28787878181011267, "rouge": 0.2666666666666666}, {"predict": "whether the user is still running on a js module", "true": "whether the stack is running on a <unk> device", "bleu": 0.28997844147152074, "rouge": 0.6376306620209059}, {"predict": "normalizes the given string to its encoding , and appends the to out of original char set with a super - code", "true": "tries to normalize string to specified encoding", "bleu": 0.08282282660969602, "rouge": 0.2281795511221945}, {"predict": "returns lowest node", "true": "returns lowest node", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the number of mappings in this composite", "true": "get the number of item sets", "bleu": 0.2984745896009823, "rouge": 0.43990384615384615}, {"predict": "creates a line primitive with a specified color for each point", "true": "creates a line primitive with a specified color for each point", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the passed in value as an unsigned byte array", "true": "return the passed in value as an unsigned byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the length of the number of points ( x , y ) of x axis", "true": "compute an approximate length of a be zi er curve given the control points", "bleu": 0.11502783619900048, "rouge": 0.26991150442477874}, {"predict": "determine the drop action from the event", "true": "determine the drop action from the event", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a variable to set to the clause", "true": "adds a property to set to the clause", "bleu": 0.6606328636027614, "rouge": 0.875}, {"predict": "step to the next hash map value , if any , reset sv cs and sv cid x , and return false if everything exhausted", "true": "step to the next hash map value , if any , reset sv cs and sv cid x , and return false if everything exhausted", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the icon markers", "true": "icons <unk> of https : / / map icons", "bleu": 0.08656385444580769, "rouge": 0.0}, {"predict": "checks if the network connection has been received", "true": "utility method which checks current network connection state , but will also try to perform test network request , in order to determine if user can actually perform any network operation", "bleu": 0.013528757674572178, "rouge": 0.1390577507598784}, {"predict": "access the thread to the test", "true": "assign current thread to the subscriber object", "bleu": 0.34801709319446883, "rouge": 0.45522388059701485}, {"predict": "validates the dynamic attribute", "true": "this method validates the dynamic attribute data for format and caches parsed response at tr names , repo at tr names strings in the set need to be in \" response at tr = repo at tr \" format else , throws policy exception", "bleu": 4.5399929762484854e-05, "rouge": 0.14489311163895488}, {"predict": "check if an object is an instance of a given class , or , if the class is a primitive type , if the object is an instance of the wrapper class for that primitive ( e", "true": "check if an object is an instance of a given class , or , if the class is a primitive type , if the object is an instance of the wrapper class for that primitive ( e", "bleu": 1.0, "rouge": 1.0}, {"predict": "all non - null returns all warrant", "true": "preserve current listeners so that there is no gap to miss a property change", "bleu": 0.057461663912368725, "rouge": 0.0}, {"predict": "this method adds a new command to the card", "true": "adds a command to the menu bar soft keys or into the menu dialog , this version of add allows us to place a command in an arbitrary location", "bleu": 0.035183620203610044, "rouge": 0.24034672970843185}, {"predict": "connects to the gat t server hosted on the bluetooth le device", "true": "connects to the gat t server hosted on the bluetooth le device", "bleu": 1.0, "rouge": 1.0}, {"predict": "density function of normal distribution", "true": "density function of normal distribution", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a shape", "true": "draw the given shape on the given opengl object", "bleu": 0.07271361304044333, "rouge": 0.15288220551378442}, {"predict": "tear down all registered bindings", "true": "stops all existing active m q connection factory in context", "bleu": 0.10043553373039076, "rouge": 0.12577319587628866}, {"predict": "loads a list of config declarations", "true": "load and returns the list of files", "bleu": 0.24608524656663955, "rouge": 0.3034825870646766}, {"predict": "eventually sets to the given value", "true": "eventually sets to the given value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a list of objects such that two nodes are equal if their lists are equal", "true": "returns a list of objects such that two nodes are equal if their lists are equal", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the characters up to the compound string using the specified separator", "true": "this concatenates the elements of a collection in a string", "bleu": 0.11498759556447223, "rouge": 0.18484848484848485}, {"predict": "parses a base 64 encoded string", "true": "decodes a base 64 encoded string into byte array", "bleu": 0.4907480275466057, "rouge": 0.6434599156118143}, {"predict": "removes all making all pre move entities", "true": "removes all of the pre move drops from pre moves", "bleu": 0.20024850746991507, "rouge": 0.45607476635514016}, {"predict": "clear bit ( in t n ) outside zero", "true": "clear bit ( in t n ) outside zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "say a say number to run at least two positive numbers for the power up", "true": "say a number", "bleu": 0.11633270842295028, "rouge": 0.37888198757763975}, {"predict": "stops the tool and editor", "true": "perform an emergency stop", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "encode the name in der form to the stream", "true": "encode the name in der form to the stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "assigns the of the binding to be committed", "true": "forces a complete re calculation of the likelihood next time get likelihood is called", "bleu": 0.09969456998702547, "rouge": 0.1732954545454545}, {"predict": "creates an array list and fills it with elements of this list", "true": "creates an array list and fills it with elements of this list", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the given connection from the list of connections to be closed when idle", "true": "removes the given connection from the list of connections to be closed when idle", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "internal method to split a style prefix", "true": "given some dot separated prefix , split on the colons that are not within quotes , and not within brackets", "bleu": 0.032092688317097204, "rouge": 0.0681564245810056}, {"predict": "based on long as a hex string to 2 byte", "true": "parses a 1 to 32 character lower - hex string with no prefix into an unsigned long , <unk> any bits higher than 64", "bleu": 0.048652116885151184, "rouge": 0.1642728904847397}, {"predict": "return the normal ( in - log ) of the normal distribution", "true": "return the standard error of the sample skew", "bleu": 0.17194656088289215, "rouge": 0.4149659863945578}, {"predict": "load policy qualifier qualifier info info", "true": "load the policy qualifier info table model with policy qualifier info", "bleu": 0.17281161700013936, "rouge": 0.5586080586080586}, {"predict": "run the script identified by the given reader", "true": "runs an sql script ( read in using the reader parameter )", "bleu": 0.11567041937737582, "rouge": 0.28955696202531644}, {"predict": "scale the subtree and return the hastings ratio", "true": "do a pro bab list ic subtree slide move", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "returns the index of the first or last marker segment in the list of the given class , or - 1 if none is found", "true": "returns the first or last marker segment object in the list of the given class , or null if none is found", "bleu": 0.6346583840132463, "rouge": 0.8609738884968243}, {"predict": "remove all the supplied elements in the returned filterable", "true": "remove all supplied elements from this filterable", "bleu": 0.24446151121745052, "rouge": 0.639412997903564}, {"predict": "create a content as soc method", "true": "create a content as soc method", "bleu": 1.0, "rouge": 1.0}, {"predict": "resets the body body to the client", "true": "reset the state of the receiver in preparation for a new session message", "bleu": 0.08723697147876523, "rouge": 0.1897356143079316}, {"predict": "deletes item at array index remove index", "true": "deletes item at array index remove index", "bleu": 1.0, "rouge": 1.0}, {"predict": "save the timer task and close it into the database", "true": "saves all changes and closes the activity", "bleu": 0.13950796967929133, "rouge": 0.24302788844621517}, {"predict": "add an sms to the given uri", "true": "add an sms to the out box", "bleu": 0.6803749333171202, "rouge": 0.7142857142857143}, {"predict": "subscribes to an observable , printing all its emissions", "true": "subscribes to an observable , printing all its emissions", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the standard fraction and fraction digits to the nearest neighbor value", "true": "returns a \" nice scaling \" number approximately equal to the range", "bleu": 0.1367440667823257, "rouge": 0.16666666666666666}, {"predict": "implementation for the four public remove / replace methods : replaces value with v , conditional upon match of cv if non - null", "true": "implementation for the four public remove / replace methods : replaces node value with v , conditional upon match of cv if non - null", "bleu": 0.8943121681604156, "rouge": 0.9760000000000001}, {"predict": "copies a header from a request", "true": "copies a header from a request", "bleu": 1.0, "rouge": 1.0}, {"predict": "call send metric to track that an open happened , but call that should be tracked with a record that occurred that should be tracked", "true": "call send metric to track the new value of the named metric", "bleu": 0.17797644045771208, "rouge": 0.28855250709555347}, {"predict": "set all fields that have a field or path ( like , id = elements ) and set all injected field names", "true": "attempts to copy all of the acceptable fields from the source and set on this document , overwriting any existing values", "bleu": 0.0866852806734874, "rouge": 0.1868300153139357}, {"predict": "finds the resource base url in the given base class loader , and return the url of the resource base class descriptor", "true": "find the class path url for a specific class path resource", "bleu": 0.07289334177359764, "rouge": 0.2579281183932347}, {"predict": "renders the clause in textual representation", "true": "rendering using the provided formatter", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "5", "true": "returns true unless the attribute value was provided by dtd defaulting", "bleu": 3.817663819004394e-05, "rouge": 0.0}, {"predict": "create a new stat archive reader for a given file name", "true": "creates a stat archive reader that will read the named archive file", "bleu": 0.21423488883339475, "rouge": 0.4314002828854314}, {"predict": "initializes an adb socket address", "true": "instantiate s s socket a ddr with the address of the host ' s adb process", "bleu": 0.035974230453556216, "rouge": 0.17403708987161198}, {"predict": "reads a block from a given location", "true": "reads a block from a given location", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if any of the tag it matches the name", "true": "tries to match tag name to known tag names", "bleu": 0.12605968092174913, "rouge": 0.2036727879799666}, {"predict": "stop the application ' s platform", "true": "shuts down the application by delegating service <unk> to the application thread", "bleu": 0.10694820729788418, "rouge": 0.20962199312714777}, {"predict": "check if the path is expanded", "true": "returns true if the node at the specified display row is currently expanded", "bleu": 0.10286160177491631, "rouge": 0.39482200647249194}, {"predict": "return the index of the label at a index", "true": "determines the position in the string where a label that might be contained ends", "bleu": 0.10182634488642418, "rouge": 0.2510288065843621}, {"predict": "adds a listener to the set of listeners that are sent events through the life of an animation , such as start , repeat , and end", "true": "adds a listener to the set of listeners that are sent events through the life of an animation , such as start , repeat , and end", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new http method info object", "true": "construct http method info object for a handler method that does not support streaming", "bleu": 0.19905304276733932, "rouge": 0.35935198821796754}, {"predict": "checks repeated bytes field equality", "true": "checks repeated bytes field equality", "bleu": 1.0, "rouge": 1.0}, {"predict": "draw the 12 text of the text , y or # padding", "true": "draws the text for either an edge or a node", "bleu": 0.14694106251955755, "rouge": 0.2772727272727273}, {"predict": "update races that contain the given list of entrant with the given list", "true": "give this list of races , <unk> the dialog picks out the one it currently has open ( if present )", "bleu": 0.08079339148488096, "rouge": 0.16928769657724332}, {"predict": "indicates whether the parameter is required", "true": "indicates whether the parameter is required", "bleu": 1.0, "rouge": 1.0}, {"predict": "send data to a given receiver", "true": "sends data to the receiver , usually the creator of the service intent", "bleu": 0.09728049676725326, "rouge": 0.29611650485436897}, {"predict": "replaces the methods \" temp \" by applying a substitution that are the same \" , and \" ) into the actual scope", "true": "analog of c match or replace", "bleu": 0.04449945957170705, "rouge": 0.0}, {"predict": "generates the instructions for a switch statement", "true": "generates the instructions for a switch statement", "bleu": 1.0, "rouge": 1.0}, {"predict": "print the matrix to the output stream", "true": "print the matrix to the output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "answers a set backed by a map", "true": "answers a set backed by a map", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to remove biomes you ' ve allowed to spawn on the planet type to spawn on similar feature", "true": "removes all biomes of this type from the list of biomes allowed to generate", "bleu": 0.10079037376973918, "rouge": 0.18692543411644533}, {"predict": "calculate a tiled requirements for the given iterator", "true": "calculate the requirements needed to tile the requirements given by the iterator that would be tiled", "bleu": 0.08069276207087007, "rouge": 0.3930412371134021}, {"predict": "takes an integer value , prep ended with a variable amount of ' 0 '", "true": "converts an integer to a string , prep ended with a variable amount of ' 0 ' pad characters , and writes it to the given writer", "bleu": 0.34465271567319183, "rouge": 0.5887156644394951}, {"predict": "creates a new l dap filter for the provided filter", "true": "returns a new or search filter with the provided filter components", "bleu": 0.26238334426718246, "rouge": 0.56656346749226}, {"predict": "creates a blob using the given index data", "true": "injects a \" blob \" instruction into the outbound guacamole protocol stream , as if sent by the connected client", "bleu": 0.042552769240615386, "rouge": 0.19891304347826086}, {"predict": "defines what will be the axis labels", "true": "defines what will be the axis labels", "bleu": 1.0, "rouge": 1.0}, {"predict": "merge the passed in interval set into a set", "true": "merge an interval into the given interval set", "bleu": 0.2208959113415788, "rouge": 0.4756335282651072}, {"predict": "drop times , but not prints the whole string , the normal drop forward", "true": "a g string variant of the equivalent char sequence method", "bleu": 0.09782375748961449, "rouge": 0.17183098591549298}, {"predict": "adds an new node", "true": "adds an topological node to this graph", "bleu": 0.24002491458061356, "rouge": 0.5198863636363635}, {"predict": "print text on console", "true": "print text in the console", "bleu": 0.39573418216703893, "rouge": 0.6535714285714286}, {"predict": "overridden to every time the current value is smaller than the size of the list", "true": "trims the data row to the number of actually used elements", "bleu": 0.10343603005129705, "rouge": 0.2373540856031128}, {"predict": "recursive helper method to divide a range of numbers", "true": "recursive call to further subdivide the array", "bleu": 0.15619699684601276, "rouge": 0.2557651991614256}, {"predict": "asserts that thread does a number of threads have been started", "true": "checks that the threads do not terminate within the given millisecond delay", "bleu": 0.11510518494396255, "rouge": 0.17256011315417258}, {"predict": "creates a new worker manager using the given id", "true": "set the identifier of the process", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "this method is used to apply the \" + + + + 1 \" introduction to c - defined problem", "true": "apply this frequency domain processor to the given data , and return the processing result in - place", "bleu": 0.08039313477786734, "rouge": 0.21254355400696867}, {"predict": "on message received handler", "true": "on message received handler", "bleu": 1.0, "rouge": 1.0}, {"predict": "insert a new array", "true": "shoves aside traces , so that a via with the input parameters can be inserted without clearance violations", "bleu": 0.010850044034164912, "rouge": 0.08155080213903743}, {"predict": "returns true if , for one of the buffers , the threshold has been exceeded", "true": "returns true if , for one of the buffers , the threshold has been exceeded", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a string of java characters into a byte array", "true": "converts a given hex string separated by colons to a byte array", "bleu": 0.21258637840736228, "rouge": 0.44721407624633425}, {"predict": "equals ( ) with two strings where either could be null", "true": "equals ( ) with two strings where either could be null", "bleu": 1.0, "rouge": 1.0}, {"predict": "for f format , the flag character ' - ' , means that the output should be left justified within the field", "true": "for f format , the flag character ' - ' , means that the output should be left justified within the field", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method scans the list of items in the future", "true": "return the length of the largest item in the list", "bleu": 0.21834177214239062, "rouge": 0.4}, {"predict": "write a portion of an array of characters", "true": "write a portion of an array of characters", "bleu": 1.0, "rouge": 1.0}, {"predict": "rounds this point , so that if this point is on the left side of any directed line with direction p dir , the result point will also be on the right side", "true": "rounds this point , so that if this point is on the left side of any directed line with direction p dir , the result point will also be on the left side", "bleu": 0.9456329342976758, "rouge": 0.9696969696969697}, {"predict": "determines a proxy for the given target", "true": "determines a proxy for the given target", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a forward reference to this label", "true": "adds a forward reference to this label", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an array containing all of the elements in this list in proper sequence ( from first to last element )", "true": "returns an array containing all of the elements in this list in proper sequence ( from first to last element )", "bleu": 1.0, "rouge": 1.0}, {"predict": "indicates whether the server is currently running", "true": "indicates whether the server is currently running", "bleu": 1.0, "rouge": 1.0}, {"predict": "unwraps the same class and splits the input file into an array", "true": "method extracts the v cf file stored within the zipped import file to the given destination file", "bleu": 0.08145723098662616, "rouge": 0.2006578947368421}, {"predict": "attempts to register a user username and username combination", "true": "attempts to register the username , password combination", "bleu": 0.2907153684841096, "rouge": 0.594541910331384}, {"predict": "create a new select - clause based on the given columns", "true": "create a select column 1 , column 2 ,", "bleu": 0.16108992769687397, "rouge": 0.3055091819699499}, {"predict": "test if the given base class can return a j mx mbe an", "true": "basic method for testing if a given class is a j mx compliant standard mbe an", "bleu": 0.18575905403847198, "rouge": 0.541620421753607}, {"predict": "create a set of string objects that are to be included in a hash set", "true": "to string set", "bleu": 0.09782375748961449, "rouge": 0.25258799171842644}, {"predict": "create the store signature token", "true": "creates a signature token connection with the provided input stream to java key store file and password", "bleu": 0.037035449344783235, "rouge": 0.1655359565807327}, {"predict": "write the location and its associated values to the specified location", "true": "overrides marshal output stream", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "find the object that has field that has field in this object has just be used in the given location", "true": "look up a field in the v table", "bleu": 0.0956040878752125, "rouge": 0.23223350253807104}, {"predict": "evaluates the x path expression to a single string", "true": "evaluates the x path expression as text", "bleu": 0.5169731539571706, "rouge": 0.639412997903564}, {"predict": "convert the http request to a plain text set", "true": "converts the specified net ty http / 1 headers into arme ria http / 2 headers", "bleu": 0.07176093398791644, "rouge": 0.1523096129837703}, {"predict": "read from the file", "true": "calculates the rms audio level from the provided short sample extract", "bleu": 0.08217262444082543, "rouge": 0.24596774193548387}, {"predict": "initialize a shade r program with minimum capacity", "true": "initialize the shade r program", "bleu": 0.3155984539112945, "rouge": 0.6421052631578947}, {"predict": "checks if the given alias exists in this key store", "true": "checks if the given alias exists in this key store", "bleu": 1.0, "rouge": 1.0}, {"predict": "invert the set of relations selected in the table", "true": "invert the set of relations selected in the table", "bleu": 1.0, "rouge": 1.0}, {"predict": "float value of a negative big decimal", "true": "float value of a negative big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "binds the key store service to the service ' s available", "true": "binds the key store to the trust store service", "bleu": 0.39458812555917666, "rouge": 0.7128547579298832}, {"predict": "draw the connector centers", "true": "this is a developer testing function subclasses can call to draw dots at the model ' s location of all connections on this block", "bleu": 0.0026792460101782304, "rouge": 0.12655601659751037}, {"predict": "does the actual handle of an instruction", "true": "determine whether or not the given instruction is a control flow merge", "bleu": 0.10063351655856649, "rouge": 0.20098846787479407}, {"predict": "load the trust manager from these arguments to ones", "true": "loads the trust manager using the vip r key store", "bleu": 0.23506622552594217, "rouge": 0.31282051282051276}, {"predict": "tell if the current node is outside the document element", "true": "tell if the current node is outside the document element", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs and obtains a new thread pool with given name for threads not full", "true": "constructs a thread pool with given parameters", "bleu": 0.2676032275663791, "rouge": 0.6079734219269103}, {"predict": "calls invoke and throws a runtime exception if it fails", "true": "calls invoke and throws a runtime exception if it fails", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears the penetration information", "true": "clears the penetration information", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the name of this element type", "true": "returns the name of this element type", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a specific helper text color to the helper text , which should be used to highlight the password", "true": "adds a new helper text color , which should be used to highlight the helper text , which indicates the password strength", "bleu": 0.5741330402147621, "rouge": 0.6740331491712708}, {"predict": "creates a new list based token stream which uses the given attribute source as its attribute source", "true": "creates a new list based token stream which uses the given tokens as its token source", "bleu": 0.6853234406569368, "rouge": 0.8531468531468532}, {"predict": "returns a class name initialized with the given class descriptor", "true": "use the given class loader rather than using the system class", "bleu": 0.22447582175704436, "rouge": 0.28328173374613}, {"predict": "creates a new map based from an existing map with just valid parameters", "true": "creates a new map based from an existing map with just valid parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "locates up a byte array that corresponds to the specified key", "true": "look for a sequence of bytes in a byte array", "bleu": 0.21200626759025185, "rouge": 0.28818897637795277}, {"predict": "add the edge in the directed graph for the given graph", "true": "synthesize a new edge , and add it to the result", "bleu": 0.1354599427337814, "rouge": 0.18181818181818182}, {"predict": "add states from a new array", "true": "append states to the state vector", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "read object is called to restore the state of the socket permission from a stream", "true": "read object is called to restore the state of the service permission from a stream", "bleu": 0.8153551038173115, "rouge": 0.9333333333333336}, {"predict": "retries reg key ex ( ) max attempts times before giving up", "true": "retries <unk> um key ex ( ) max attempts times before giving up", "bleu": 0.7750110736545953, "rouge": 0.8736979166666665}, {"predict": "add a new task", "true": "add a new task", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the compute shade r", "true": "initialize the compute shade r", "bleu": 1.0, "rouge": 1.0}, {"predict": "sort the internal state tree", "true": "sorts the elements in the list in - place", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "creates an object from a byte buffer", "true": "creates an object from a byte buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method generates a group name and password name for new policy names", "true": "to do : v max 3 customized names generate group names which doesn ' t exist in array already", "bleu": 0.06663085357710904, "rouge": 0.12091179385530225}, {"predict": "* test method from apache derby project class org", "true": "test method from apache derby project class org", "bleu": 0.8801117367933934, "rouge": 0.9512670565302144}, {"predict": "creates a new action group object with the given actions", "true": "creates an action group containing the specified actions", "bleu": 0.1972940627795883, "rouge": 0.5669144981412639}, {"predict": "adds a list , overwrite a table to a table", "true": "adds a data line to the list at a row", "bleu": 0.1972940627795883, "rouge": 0.4}, {"predict": "pushes the new term to the top of the stack , and writes new blocks", "true": "pushes the new term to the top of the stack , and writes new blocks", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new numeric literal", "true": "create a new numeric literal", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if mines h after is present", "true": "check if mines h after is present", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures correct size of the widget", "true": "each row or line at least show one child horizontal only show child can show or partly show in parent", "bleu": 0.018012599273714434, "rouge": 0.0}, {"predict": "cas head field", "true": "cas head field", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures that the buffer is large enough to hold the desired capacity and will hold the specified number of elements", "true": "grow the pixel buffer if necessary", "bleu": 0.06760229884571738, "rouge": 0.17039106145251398}, {"predict": "remove a dependency , regardless of its kind", "true": "remove a dependency , regardless of its kind", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new map that will return a map that will accept concurrency and receive a certain language from this map", "true": "creates a new ch m with an <unk> concurrency level , aimed at high concurrent update rate long living maps", "bleu": 0.0821610732492254, "rouge": 0.1469879518072289}, {"predict": "returns true if , at this time , the object will accept a connection according to the supplied event name", "true": "returns true if , at this time , the object will accept a connection with respect to the named event", "bleu": 0.7358736320910966, "rouge": 0.85}, {"predict": "skips all whitespace characters and returns the character", "true": "skips all consecutive whitespace characters from reader", "bleu": 0.2653856085536222, "rouge": 0.5398230088495575}, {"predict": "compiling templates requires that we be able to list the a vt s added 9 / 5 / 2000 to support compilation experiment", "true": "compiling templates requires that we be able to list the a vt s added 9 / 5 / 2000 to support compilation experiment", "bleu": 1.0, "rouge": 1.0}, {"predict": "extracts a map of name / value pairs from the given string", "true": "extracts a map of name / value pairs from the given string", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a priority queue that contains the elements of a collection", "true": "constructs a priority queue that contains the elements of a collection", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the resource id", "true": "gets the resource id", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "computes the successor of a leaf node ( at least one node whose value are produced )", "true": "see above for explanation", "bleu": 0.06074588070876682, "rouge": 0.0}, {"predict": "initialize the message parser", "true": "returns a boolean flag indicating if the state is initial ( just starting )", "bleu": 0.02949347753605095, "rouge": 0.10099337748344371}, {"predict": "this function creates an \" x - style string for a given character sequence", "true": "return a char sequence with lines ( separated by lf , cr / lf , or cr ) terminated by the platform specific line separator", "bleu": 0.044587483514136855, "rouge": 0.0976}, {"predict": "container : save container doesn ' t exist in the container", "true": "save content of container config instance into xml file ( schema or configuration )", "bleu": 0.09596928383261212, "rouge": 0.15661103979460847}, {"predict": "get if environment is environment setup", "true": "returns whether the print ng was aborted using this printing status", "bleu": 0.08072686929338534, "rouge": 0.0}, {"predict": "puts a key / value pair into the array , optimizing for the case where the key is greater than all existing keys in the array", "true": "puts a key / value pair into the array , optimizing for the case where the key is greater than all existing keys in the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "http : / / b / 3042574 gzip input stream", "true": "http : / / b / 3042574 gzip input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a data package with information used by the server when responding to requests", "true": "creates a data package with information used by the server when responding to requests", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints a boolean to this output stream and flushes this output stream", "true": "prints a boolean to standard output and flushes standard output", "bleu": 0.3541698766144061, "rouge": 0.7393939393939394}, {"predict": "creates new shared memory communication memory object", "true": "this will allocate system resources for the space", "bleu": 0.13540372457315733, "rouge": 0.0}, {"predict": "close the datagram connection", "true": "close the jd bc connection", "bleu": 0.39573418216703893, "rouge": 0.6535714285714286}, {"predict": "creates a new qualifier object from the current one , but removes the given qualifier from it and returns a new one", "true": "creates a new version object from the current one , but append a new qualifier to it", "bleu": 0.419793811546288, "rouge": 0.629948364888124}, {"predict": "16 bit load where the 16 bit extended result fills the return value", "true": "perform a 16 bit load where the sign extended result fills the return value", "bleu": 0.647943329508522, "rouge": 0.8094089264173704}, {"predict": "convert a null - terminated byte array to java string", "true": "helper method to convert a byte array ( such as a msg id ) to a hex string", "bleu": 0.1019619054159977, "rouge": 0.40757238307349664}, {"predict": "un registers a baggage handler that is invoked any time baggage operations are performed on valid baggage s", "true": "remove an existing baggage handler that was previously registered", "bleu": 0.12673718536830808, "rouge": 0.2364341085271318}, {"predict": "creates a new instance of default heat a default scale item", "true": "creates a new data set where all the z - values are initially 0", "bleu": 0.16140045349861962, "rouge": 0.2349165596919127}, {"predict": "tests whether two arrays in the same order are equal", "true": "compare two 2 - dimensional event arrays", "bleu": 0.13950796967929133, "rouge": 0.24302788844621517}, {"predict": "sets the text node in the text area", "true": "this method breaks concatenation mode", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "takes a function and writes the individual annotations using the function and writes the resulting function to the adjusted ( left ) and adjusted )", "true": "convert java proxy annotation to specialized implementation , used to <unk> equals / hash code / to string methods", "bleu": 0.048589719316429775, "rouge": 0.04660045836516424}, {"predict": "parse the given expression and return the list of nodes that match the given information", "true": "this method should be used to parse an expression , like \" a = b \"", "bleu": 0.08516412540808123, "rouge": 0.12828601472134593}, {"predict": "adds the given section to the list of tick mark sections", "true": "adds the given section to the list of tick mark sections", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the q ty of the exponential distribution ( mean = 1 / lambda )", "true": "compute q i ( exponential distribution , in lier s )", "bleu": 0.12874330508144843, "rouge": 0.3164721141374838}, {"predict": "flushes all the contents of the grid stream", "true": "flush any io to disk", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "delete a range of characters", "true": "deletes characters from the buffer", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "add a plotter to the graph , which will be used to plot entries", "true": "add a plotter to the graph , which will be used to plot entries", "bleu": 1.0, "rouge": 1.0}, {"predict": "utility for ceiling , floor , lower , higher methods", "true": "utility for ceiling , floor , lower , higher methods", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a listener to internal list", "true": "adds a listener that receives the data and error messages", "bleu": 0.21108303712651422, "rouge": 0.3588235294117647}, {"predict": "writes the tags from this ex if interface object into a jpeg compressed bitmap , removing prior ex if tags", "true": "writes the tags from this ex if interface object into a jpeg compressed bitmap , removing prior ex if tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if there is another match in the input , starting from the given position", "true": "returns true if there is another match in the input , starting from the given position", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the dynamic other code as the arguments", "true": "sets the action bits as appropriate for the given fault and action", "bleu": 0.11567041937737582, "rouge": 0.28955696202531644}, {"predict": "check whether the given char sequence contains any whitespace characters", "true": "check whether the given char sequence contains any whitespace characters", "bleu": 1.0, "rouge": 1.0}, {"predict": "will return true if any extensions are present and marked as critical as we currently dont handle any extensions !", "true": "will return true if any extensions are present and marked as critical as we currently dont handle any extensions !", "bleu": 1.0, "rouge": 1.0}, {"predict": "decodes the given bytes from the specified base 64 encoded bytes and returns the response containing the given encoding of the specified encoded bytes", "true": "parses a value from a base 64 - encoded string using the given code r", "bleu": 0.09119675426861835, "rouge": 0.32105263157894737}, {"predict": "validates a set of values against the given data set", "true": "performs validation on a set of string", "bleu": 0.23462350320528, "rouge": 0.36454183266932266}, {"predict": "returns function for adding values to the values", "true": "adds all values together", "bleu": 0.16036590969929357, "rouge": 0.17732558139534885}, {"predict": "get a list of the d db given the current system", "true": "list database groups the specific user has provided passwords", "bleu": 0.12605968092174913, "rouge": 0.2036727879799666}, {"predict": "responds to function to output how a = = true / out = output by a / o - input stream", "true": "calculate the function value for the input", "bleu": 0.06429451441231726, "rouge": 0.157014157014157}, {"predict": "adds a long value to the request", "true": "adds a long value to the request", "bleu": 1.0, "rouge": 1.0}, {"predict": "compare the two objects into descending order", "true": "call the comparator on the column", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "adds an action listener that will be notified if the user wants to this menu bar has been selected", "true": "enable objects to listen for changes to the check box", "bleu": 0.0712695567709093, "rouge": 0.07305389221556886}, {"predict": "calculate the bounds for a view ' s title", "true": "calculate the bounds for a view ' s title", "bleu": 1.0, "rouge": 1.0}, {"predict": "add power - points to this instance with another dimensions", "true": "gf addition or subtraction ( they are identical for a gf ( 2 ^ n )", "bleu": 0.05817575328919704, "rouge": 0.0}, {"predict": "method to line up with the properties from the map", "true": "generates the content - type value", "bleu": 0.12605968092174913, "rouge": 0.13090128755364808}, {"predict": "retrieves first field offset from field offset", "true": "returns the offset of the first field in the range header size , size of", "bleu": 0.0837738790831083, "rouge": 0.17062937062937064}, {"predict": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "true": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a warning log message", "true": "send a warning log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the key ready ops and selected key set", "true": "updates the key ready ops and selected key set", "bleu": 1.0, "rouge": 1.0}, {"predict": "extract the first element off the list", "true": "retrieve the first element and remove it from the list", "bleu": 0.2678284959130086, "rouge": 0.5700934579439253}, {"predict": "handles actions from within the property panel", "true": "handles user interaction with the property panel", "bleu": 0.3655552228545123, "rouge": 0.5714285714285714}, {"predict": "java x", "true": "java x", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a set of server instance to the given instance this meta", "true": "upgrades a server instance", "bleu": 0.14694106251955755, "rouge": 0.4121621621621622}, {"predict": "instantiate s a new instance of a given class", "true": "creates a new instance of the class represented by the given class object", "bleu": 0.28968594183032276, "rouge": 0.5281385281385281}, {"predict": "pops a type from the output frame stack", "true": "pops a type from the output frame stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a m srp session", "true": "initiate a m srp session", "bleu": 0.7598356856515925, "rouge": 0.8}, {"predict": "create a new forum post", "true": "create a new forum post", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the mark as a new draw able", "true": "draw a mark transforming co - ordinates to each axis", "bleu": 0.1485237584394808, "rouge": 0.10892857142857142}, {"predict": "invoked when component has resized", "true": "component listener interface method", "bleu": 0.2730120862709067, "rouge": 0.22676579925650556}, {"predict": "get the string re pre sen ent ation of this step for diagnostic purposes", "true": "get the string re pre sen ent ation of this step for diagnostic purposes", "bleu": 1.0, "rouge": 1.0}, {"predict": "description of the method", "true": "description of the method", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method gets called when a label value is changed", "true": "<unk> the value change and in forms the listeners", "bleu": 0.12605968092174913, "rouge": 0.10627177700348434}, {"predict": "writes compressed data to the compressed output stream", "true": "writes bytes to zip entry", "bleu": 0.17747405280050269, "rouge": 0.32105263157894737}, {"predict": "update a point at the specified location", "true": "update the gravity point only if a the gravity vector is longer than the threshold", "bleu": 0.07448668213629092, "rouge": 0.2559440559440559}, {"predict": "returns the view position within a left - horizontal view within the list of bounds", "true": "override method used to configure the horizontal drag", "bleu": 0.09103526405546068, "rouge": 0.18401206636500753}, {"predict": "constructs a new request wrapper object", "true": "constructs a request object wrapping the given request", "bleu": 0.236682065782701, "rouge": 0.5570776255707762}, {"predict": "converts a weighted ( x , y ) to the panel that form a weighted co - value plus the original value", "true": "convert an x coordinate from the instance space to the panel space", "bleu": 0.11408424519986968, "rouge": 0.2484725050916497}, {"predict": "forwards request to the server", "true": "handles the request and forwards it to the hook specific destination", "bleu": 0.12296202211076697, "rouge": 0.35124760076775424}, {"predict": "computes a primary key from the given as a single entry", "true": "retrieve primary key columns", "bleu": 0.14991106946711685, "rouge": 0.2911694510739857}, {"predict": "reads 4 bytes from stream and interprets them as u in t 32", "true": "reads 4 bytes from stream and interprets them as u in t 32", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a token", "true": "produce an ant lr token for the prefix of the given leaf that overlaps the requested region", "bleu": 0.005052392784929312, "rouge": 0.08879184861717612}, {"predict": "adds the given csv record to this record", "true": "adds the given record to this data", "bleu": 0.43167001068522526, "rouge": 0.8097345132743362}, {"predict": "schedule this topic for future en queuing for batch sending", "true": "decrements the scheduled queue counter and en queues the request", "bleu": 0.12605968092174913, "rouge": 0.1}, {"predict": "spins / yields / blocks until node s is matched or caller gives up", "true": "spins / yields / blocks until node s is matched or caller gives up", "bleu": 1.0, "rouge": 1.0}, {"predict": "concatenates the string representation of each items in this array , with the given string as a separator between each item", "true": "concatenates the string representation of each items in this array , with the given string as a separator between each item", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a producer for the given target", "true": "returns an object producer", "bleu": 0.20556680845025982, "rouge": 0.3824451410658307}, {"predict": "initialize the compute shade r", "true": "initialize the compute shade r", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the naming in the response body are in the next time out", "true": "if task completed success or failure from response", "bleu": 0.08839374326825923, "rouge": 0.09561128526645768}, {"predict": "center set of nodes half way between top and bottom most node in the list", "true": "center set of nodes half way between left and right most node in the list", "bleu": 0.6865065103648591, "rouge": 0.8666666666666667}, {"predict": "append text to the text", "true": "append text to the outgoing email body", "bleu": 0.5093330917854971, "rouge": 0.6472148541114059}, {"predict": "called when time is selected", "true": "restores the previous state of the selection on the items", "bleu": 0.08445588027797912, "rouge": 0.0}, {"predict": "constructs a new instance , based on the specified date / time and timezone", "true": "constructs a new hour", "bleu": 0.16451929399933107, "rouge": 0.37044534412955465}, {"predict": "undo the last call", "true": "reverts to the last backed up version of the data set", "bleu": 0.08217262444082543, "rouge": 0.24596774193548387}, {"predict": "check if a device is connected", "true": "checks to see if we are connected using wi fi", "bleu": 0.1255107248036171, "rouge": 0.23921568627450981}, {"predict": "flush the underlying writer", "true": "done with this response writer", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "return true if there are no extension present in this generator", "true": "return true if there are no extension present in this generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads an process configuration from a file", "true": "creates a new process from the given process file", "bleu": 0.1755217914979255, "rouge": 0.3667334669338677}, {"predict": "extracts unique music id from the media id", "true": "extracts unique music id from the media id", "bleu": 1.0, "rouge": 1.0}, {"predict": "verify identity", "true": "verify identity", "bleu": 1.0, "rouge": 1.0}, {"predict": "build a list of parameters that can be provided to a method", "true": "build a list of parameters that can be provided to a method", "bleu": 1.0, "rouge": 1.0}, {"predict": "this is a fast operation ( logarithmic in the size of the cell union )", "true": "this is a fast operation ( logarithmic in the size of the cell union )", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a seeded simplex noise generator with the given random", "true": "creates a seeded simplex noise generator with the given random", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts to primitive array", "true": "converts to primitive array", "bleu": 1.0, "rouge": 1.0}, {"predict": "process all lines read from the supplied array of lines , segments if any", "true": "processes the stats line to sum up all network stats belonging to the u id", "bleu": 0.09108005956937269, "rouge": 0.13707865168539324}, {"predict": "lazily construct the lookup table for this schema", "true": "lazily construct the lookup table for this schema", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a string import for this split , by adding more elements by adding or canonical i zing the count", "true": "a printout of a user - friendly string describing the format", "bleu": 0.07264339766175722, "rouge": 0.20424107142857142}, {"predict": "read data - - read all of the data that can be read", "true": "read data - - input the mod bus message from d in", "bleu": 0.27824623288353134, "rouge": 0.4029062087186261}, {"predict": "adjusts the indentation level by the given level", "true": "adjusts the current indentation level of this log stream", "bleu": 0.23420197753909952, "rouge": 0.465648854961832}, {"predict": "retrieves the maximum weighted capacity of the map", "true": "retrieves the maximum capacity of the map", "bleu": 0.5969491792019646, "rouge": 0.9446902654867256}, {"predict": "process an ascii string", "true": "<unk> up a code string", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "volume of the overlapping box when the object is box between the box", "true": "returns a random number between min ( inclusive ) and max ( exclusive )", "bleu": 0.08844818008721958, "rouge": 0.0735826296743064}, {"predict": "unit test for random records", "true": "test close on a new tree - should force the root to the store since a new root is dirty ( if empty )", "bleu": 0.006107491095942254, "rouge": 0.06167846309403437}, {"predict": "returns the paths of the given path found in the supplied list of files found in the search path", "true": "given a relative file path and a list of \" search paths \" returns the search path where the file was located", "bleu": 0.1497611280251201, "rouge": 0.3370165745856354}, {"predict": "will return true if any extensions are present and marked as critical as we currently don ' t handle any extensions !", "true": "will return true if any extensions are present and marked as critical as we currently don ' t handle any extensions !", "bleu": 1.0, "rouge": 1.0}, {"predict": "internal method to perform the normalization", "true": "internal method to perform the normalization", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends the string associated with the range in which the specified double value fits to the specified string buffer", "true": "appends the string associated with the range in which the specified double value fits to the specified string buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "load the configuration from the jvm parameters provided by the jvm parameters ( e", "true": "checks if the jvm parameters have the repository and agent information", "bleu": 0.17395797375642236, "rouge": 0.3270777479892761}, {"predict": "returns true if the server is authorized", "true": "if the user can be authenticated due to an existing session id , do so", "bleu": 0.07796037894057231, "rouge": 0.17062937062937064}, {"predict": "test the first view of a view join ( )", "true": "make sure that when we change a view , that change in reflected in other sessions command cache", "bleu": 0.0745454141140315, "rouge": 0.1358574610244989}, {"predict": "tries to provide an approximate complete distance between consecutive bytes", "true": "for a given amount and unit size , generate the approximate value", "bleu": 0.10320893749383378, "rouge": 0.08944281524926685}, {"predict": "creates a namespace element from a document", "true": "creates an element in the specified namespace , with the specified tag and namespace prefix", "bleu": 0.0704451546128839, "rouge": 0.17062937062937064}, {"predict": "modifies the given text in the given file", "true": "modifies the given file in place", "bleu": 0.392814650900513, "rouge": 0.5865384615384615}, {"predict": "the commands to execute when in state 2", "true": "the commands to execute when in state 2", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests the listing of the options", "true": "tests the listing of the options", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts array of lat lng s to a world in world coordinates", "true": "ll to world that returns normalized longitude in radians , to be used for more calculations in some methods", "bleu": 0.06895205739037245, "rouge": 0.18597560975609756}, {"predict": "notifies when the size or the orientation of the view has actually changed", "true": "notifies when the size or the orientation of the view has actually changed", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove a layout turntable at or template direction", "true": "remove a layout turntable", "bleu": 0.44632361378533286, "rouge": 0.7093023255813954}, {"predict": "process notification of the end of an xml element being reached", "true": "process notification of the end of an xml element being reached", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert an image to an nd array", "true": "convert an buffered image to a matrix", "bleu": 0.3073940764756322, "rouge": 0.5714285714285714}, {"predict": "gets the number of scheduled queue size", "true": "get the total number of scheduled requests", "bleu": 0.3655552228545123, "rouge": 0.5714285714285714}, {"predict": "constructs a new d general name choose r dialog", "true": "constructs a new d general name choose r dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears any references the scene is holding for its contents", "true": "clears any references the scene is holding for its contents", "bleu": 1.0, "rouge": 1.0}, {"predict": "attempt to match the host runtime to a capable platform implementation", "true": "attempt to match the host runtime to a capable platform implementation", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a mitre join connecting the two reflex offset", "true": "adds a limited mitre join connecting the two reflex offset segments", "bleu": 0.6651740399183245, "rouge": 0.8840579710144927}, {"predict": "discards any characters outside of the base 64 alphabet , per the requirements on page 25 of rfc 2045 - \" any characters outside of the base 64 alphabet are to be ignored in base 64 encoded data", "true": "discards any characters outside of the base 64 alphabet , per the requirements on page 25 of rfc 2045 - \" any characters outside of the base 64 alphabet are to be ignored in base 64 encoded data", "bleu": 1.0, "rouge": 1.0}, {"predict": "multiply two numbers of different scales", "true": "multiply two numbers of different scales", "bleu": 1.0, "rouge": 1.0}, {"predict": "limit lease duration by limit , and check for negative value", "true": "limit lease duration by limit , and check for negative value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a cookie - safe path by truncating everything after the last \" / \"", "true": "returns a cookie - safe path by truncating everything after the last \" / \"", "bleu": 1.0, "rouge": 1.0}, {"predict": "format returning \" decimal \" with simple decimal format", "true": "returns string from double formatted to decimal format ( \" # # #", "bleu": 0.1279808802469055, "rouge": 0.17604617604617603}, {"predict": "creates a label generator with the specified number formatter", "true": "creates a label generator with the specified date formatter", "bleu": 0.7825422900366437, "rouge": 0.8888888888888888}, {"predict": "deletes items if the scrollbar is visible , if the items is visible", "true": "delete items starting with s ( start position ) to e ( end position ) including s and e if s = items", "bleu": 0.05263577110378013, "rouge": 0.15871639202081528}, {"predict": "creates all - entries for all entries of all entries", "true": "translate an oid to a thread id", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "caches the attribute value for a key in the cache", "true": "add the values to the cache", "bleu": 0.17827531042796255, "rouge": 0.3927038626609442}, {"predict": "reads a policy configuration into the policy object using a reader object", "true": "reads a policy configuration using a reader object", "bleu": 0.48442732379638637, "rouge": 0.8299319727891156}, {"predict": "name value from native volume info map to inject volume info map", "true": "extract value from provider for given volume info key , and then get its name and use that to inject to map", "bleu": 0.09301098337648692, "rouge": 0.391025641025641}, {"predict": "implementation of adapter", "true": "implementation of adapter", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the specified file into the list of transforms", "true": "loads the specified file into the table", "bleu": 0.6389431042462724, "rouge": 0.7672955974842767}, {"predict": "moves the location of the editable object", "true": "responds to a change in the destination type", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "for gzip stream , parse the first input stream according to the specified stream", "true": "try to open a stream as gzip , if it starts with the gzip magic", "bleu": 0.10831305487476968, "rouge": 0.20561797752808988}, {"predict": "returns the hash code for this object", "true": "returns the hash code value for this object", "bleu": 0.5993954153807813, "rouge": 0.9222462203023757}, {"predict": "returns a new prefix query that includes the prefix given in et address", "true": "create a prefix query for matching a cidr network range", "bleu": 0.1350862565735141, "rouge": 0.2671532846715329}, {"predict": "creates subject subject to the given user", "true": "returns a subject for the given am identity", "bleu": 0.22772101321113858, "rouge": 0.3952483801295896}, {"predict": "makes sure the capacity and size of the vector can accomodate the given index", "true": "makes sure the capacity and size of the vector can accomodate the given index", "bleu": 1.0, "rouge": 1.0}, {"predict": "does something like : add command line arguments in a command line", "true": "add \" groovy c \" parameters to the command line list , based on the ant configuration", "bleu": 0.09686951865771594, "rouge": 0.2006578947368421}, {"predict": "load the hex image and loaded", "true": "loads the image ( s ) for this hex into the tracker", "bleu": 0.09663861439684919, "rouge": 0.20962199312714777}, {"predict": "tria ngu late a point set with eventual constraints", "true": "tria ngu late a point set with eventual constraints", "bleu": 1.0, "rouge": 1.0}, {"predict": "encode the byte array into a string , while trimming off the last characters off", "true": "encodes a string with base 64 url encoding it also removes characters which must be removed according to the <unk> spec : http : / / tools", "bleu": 0.05527054627926339, "rouge": 0.1358574610244989}, {"predict": "writes out a source field / field pair object for java method parameters", "true": "writes out a source / sink specification object for java static fields", "bleu": 0.3661926362999429, "rouge": 0.6446499339498017}, {"predict": "read object is called to restore the state of the socket permission from a stream", "true": "read object is called to restore the state of the file permission from a stream", "bleu": 0.8153551038173115, "rouge": 0.9333333333333336}, {"predict": "parses the data from the supplied reader , using the supplied base uri to resolve any relative uri references", "true": "parses the data from the supplied reader , using the supplied base uri to resolve any relative uri references", "bleu": 1.0, "rouge": 1.0}, {"predict": "exclude up one day statement that contains a single line", "true": "parses the specified string to return the portion not containing the destination statement", "bleu": 0.0933873085201553, "rouge": 0.084958217270195}, {"predict": "discards any characters outside of the base 64 alphabet , per the requirements on page 25 of rfc 2045 - \" any characters outside of the base 64 alphabet are to be ignored in base 64 encoded data", "true": "discards any characters outside of the base 64 alphabet , per the requirements on page 25 of rfc 2045 - \" any characters outside of the base 64 alphabet are to be ignored in base 64 encoded data", "bleu": 1.0, "rouge": 1.0}, {"predict": "replaces unprintable characters by their escaped ( or unicode escaped ) equivalents in the given string", "true": "replaces unprintable characters by their escaped ( or unicode escaped ) equivalents in the given string", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a file to the file , advancing the pointer", "true": "adds a file to the class path", "bleu": 0.35084396956386854, "rouge": 0.48605577689243035}, {"predict": "inserts the given items at the specified index in the existing list", "true": "insert new records at a specified index", "bleu": 0.14694106251955755, "rouge": 0.3315217391304348}, {"predict": "process a collection of integers", "true": "process a whole collection of integer values", "bleu": 0.3028512683288236, "rouge": 0.6472148541114059}, {"predict": "return an in t buffer that accesses the major version", "true": "return an in t buffer that accesses the major version number", "bleu": 0.9048374180359595, "rouge": 0.9442724458204335}, {"predict": "parses the source definition", "true": "sets the settings and mappings as a single source", "bleu": 0.11392443929712959, "rouge": 0.28773584905660377}, {"predict": "converts the data to sign the decoded data", "true": "creates data to be signed from the digest", "bleu": 0.22679164443904004, "rouge": 0.375}, {"predict": "if a long value is modified since the given value , invoke the server when the key value is set", "true": "set the ' if - modified - since ' request header to the given value", "bleu": 0.13924499401499868, "rouge": 0.3519230769230769}, {"predict": "create the absolute file based on being extracted", "true": "create a t mp journal file for test cases", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "generates the instruction to push the given value on the stack", "true": "generates the instruction to push the given value on the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance of a class", "true": "allocate an array dynamically", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "see iso 16022 : 2006 , 5", "true": "see iso 16022 : 2006 , 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets up this animator set to play all of the supplied animations at the same time", "true": "sets up this animator set to play all of the supplied animations at the same time", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints the error message , if present", "true": "print an error message for the given error", "bleu": 0.22772101321113858, "rouge": 0.2634989200863931}, {"predict": "return a string representation of the data", "true": "a method for other parts of the application to get stats the command processor uses this to report stats on request", "bleu": 0.03555135945989538, "rouge": 0.19656283566058}, {"predict": "description of the method", "true": "applies l 1 regular iz ation to the model", "bleu": 0.10294235160901445, "rouge": 0.14386792452830188}, {"predict": "this method cannot be called directly", "true": "this method cannot be called directly", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns all the text at the given url", "true": "returns all the text at the given url", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the move participants for the given element", "true": "loads the move participants for the given element", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines if a set of objects are equal to an individual value", "true": "determines the preference vector according to the specified neighbor ids", "bleu": 0.11498759556447223, "rouge": 0.18484848484848485}, {"predict": "paint the arrow in the foreground color", "true": "paint the arrow in disabled state", "bleu": 0.5169731539571706, "rouge": 0.6240409207161125}, {"predict": "flip bit ( in t n ) inside a negative number", "true": "flip bit ( in t n ) inside a negative number", "bleu": 1.0, "rouge": 1.0}, {"predict": "called by the utility method for the passed user - un register", "true": "add a user to database", "bleu": 0.10390302174233558, "rouge": 0.12708333333333333}, {"predict": "true if there is a next row to be processed", "true": "check if there are more events", "bleu": 0.16590387014219712, "rouge": 0.26180257510729615}, {"predict": "close the datagram connection", "true": "close the jd bc connection", "bleu": 0.39573418216703893, "rouge": 0.6535714285714286}, {"predict": "extracts x mp meta from a jpeg image file stream", "true": "extracts x mp meta from a jpeg image file stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the validator for the given validator", "true": "initialize and add validator", "bleu": 0.20556680845025982, "rouge": 0.3824451410658307}, {"predict": "apply cross - over operation to bayes net calculate score and as a side of bayes net parent sets", "true": "apply cross - over operation to bayes net calculate score and as a side effect sets bayes net parent sets", "bleu": 0.8139081988468063, "rouge": 0.9188284518828452}, {"predict": "resets the state of the browser", "true": "resets the digest for further use", "bleu": 0.2907153684841096, "rouge": 0.3333333333333333}, {"predict": "creates a perspective perspective , given the name of the given perspective , and optionally with the channel", "true": "creates a user - defined <unk> , and possibly switches to this new perspective immediately", "bleu": 0.11794224053267105, "rouge": 0.24646464646464644}, {"predict": "turn a ph red score into a probability", "true": "get a ph red - scaled quality value corresponding to the supplied error rate", "bleu": 0.1409894129706051, "rouge": 0.25994318181818177}, {"predict": "returns the descriptor representing the given type", "true": "returns the descriptor representing the given type", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the string encoded version of this object", "true": "get the string encoded version of this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "expect the specified token type with the provided arguments", "true": "ensures that this token has one of the given expected types", "bleu": 0.12507277759788113, "rouge": 0.19645732689210954}, {"predict": "update functionality test # test update 3 ( )", "true": "update functionality test # test update 3 ( )", "bleu": 1.0, "rouge": 1.0}, {"predict": "this test initially was created to find the null or delete is null in", "true": "this method checks if we correctly handle assigning null values to blobs", "bleu": 0.10511846841633776, "rouge": 0.15601023017902813}, {"predict": "check if this type is assignable from the given type", "true": "check if this type is assignable from the given type", "bleu": 1.0, "rouge": 1.0}, {"predict": "method used to initialize", "true": "method used to insert penalty in eg demand detail table", "bleu": 0.14921613134709885, "rouge": 0.3978260869565217}, {"predict": "reads a sample info from the input byte buffer", "true": "constructs a sample info from the given byte buffer", "bleu": 0.5814307369682193, "rouge": 0.7777777777777778}, {"predict": "handles maintenance operations that are maintenance", "true": "invoked by parent during its maintenance interval", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "times and records the duration of event", "true": "times and records the duration of event", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the specified bytecode version is post", "true": "checks if the specified bytecode version string represents a j dk 1", "bleu": 0.4403288427322773, "rouge": 0.5791139240506329}, {"predict": "a specialized simplified mapping source method , takes the form of simple properties definition : ( \" field 1 , \" , \" type = string , store = true \" )", "true": "a specialized simplified mapping source method , takes the form of simple properties definition : ( \" field 1 \" , \" type = string , store = true \" )", "bleu": 0.9184678024441792, "rouge": 0.9869519832985386}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds a template with the specified path string", "true": "try to find a template given a normalized path", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "initializes the disk based cache by scanning for all files currently in the specified root directory", "true": "initializes the disk based cache by scanning for all files currently in the specified root directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "register a circular progress view listener with this view", "true": "register a circular progress view listener with this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new site status object", "true": "constructs a site status check thread i mpl object based on the configured parameter com", "bleu": 0.07370355832749997, "rouge": 0.3536231884057971}, {"predict": "handles the scale and scale", "true": "draw the t 3 glyph", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "method for bean context child interface", "true": "method for bean context child interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the given variables from this quick variables", "true": "replaces the list of retained var s with the specified list , returning the old list", "bleu": 0.0589953212431261, "rouge": 0.07860824742268041}, {"predict": "disconnects the app ( if it ) from the calling thread", "true": "release this applet class loader and its thread group / app context", "bleu": 0.11510518494396255, "rouge": 0.08628005657708629}, {"predict": "remove all tables in the hash table", "true": "delete all tables from this database", "bleu": 0.24446151121745047, "rouge": 0.31202046035805625}, {"predict": "returns a pet category object based on the given id", "true": "get one pet category by id", "bleu": 0.17827531042796255, "rouge": 0.3927038626609442}, {"predict": "set a default session token for a particular site", "true": "marks a default session token as removed for a particular site", "bleu": 0.5269148435889403, "rouge": 0.7858293075684382}, {"predict": "create a map of volumes for the given list of volumes to their respective uris", "true": "convenience method to create a map device to cg to volume to add and remove", "bleu": 0.16188613565728213, "rouge": 0.2666666666666666}, {"predict": "construct a new exchange request with the given request", "true": "creates a new exchange with the specified request and origin", "bleu": 0.29052561567528307, "rouge": 0.6256410256410255}, {"predict": "computes the alpha value of the tab based on its discard status", "true": "computes the alpha value of the tab based on its discard status", "bleu": 1.0, "rouge": 1.0}, {"predict": "amount of time that this file has been scheduled in user mode , measured in clock ticks ( divide by s ys conf )", "true": "converts \" standard unix time \" ( in seconds , utc / gmt ) to file time", "bleu": 0.0692945483088954, "rouge": 0.2013201320132013}, {"predict": "generates a random iv and encrypts this plain text with the given key", "true": "generates a random iv and encrypts this plain text with the given key", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a existing address from this user", "true": "removes the given address from this user", "bleu": 0.5410822690539396, "rouge": 0.7142857142857143}, {"predict": "measures the width and height of the view , preserving the aspect ratio of the image displayed if wrap content is used", "true": "measures the width and height of the view , preserving the aspect ratio of the image displayed if wrap content is used", "bleu": 1.0, "rouge": 1.0}, {"predict": "to fire off the end element trace event", "true": "to fire off the end element trace event", "bleu": 1.0, "rouge": 1.0}, {"predict": "migrates cm from + product", "true": "check if the product home input by the user has the locator file of the product to be migrated from", "bleu": 0.01504254234731835, "rouge": 0.07218934911242604}, {"predict": "generate an array of spanned items representing the history of this connection", "true": "generate an array of spanned items representing the history of this connection", "bleu": 1.0, "rouge": 1.0}, {"predict": "format a message with the given arguments", "true": "formats the given string with the given argument", "bleu": 0.29969770769039067, "rouge": 0.3952483801295896}, {"predict": "for into prosody element , insert a into the pro so dic settings and are the pro one of the given utterance", "true": "for a given element , extract essential settings defined by the closest ancestor prosody element and save them into the utterance", "bleu": 0.1250693475021892, "rouge": 0.32695252679938747}, {"predict": "creates an folder with the given name and path if the given work space is already cached", "true": "use to create folder in your directory", "bleu": 0.07223943354597204, "rouge": 0.09010339734121123}, {"predict": "after rotating , the matrix needs to be translated", "true": "after rotating , the matrix needs to be translated", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the ticker text for a notification having | title | and | body |", "true": "creates the ticker text for a notification having | title | and | body |", "bleu": 1.0, "rouge": 1.0}, {"predict": "add protocol to verify if protocol does not exist in set of protocol type", "true": "verify whether protocol type already exists or not", "bleu": 0.13217947626377288, "rouge": 0.28683385579937304}, {"predict": "provides detailed description of this annotation instance , including all member name - values pairs", "true": "provides detailed description of this annotation instance , including all member name - values pairs", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a key to the list", "true": "adds an object to this set", "bleu": 0.24446151121745047, "rouge": 0.3333333333333333}, {"predict": "loads a configuration from a resource", "true": "build a configuration object from a resource , processing it as a properties file", "bleu": 0.12887870947273114, "rouge": 0.4663608562691131}, {"predict": "add this message to the log file for the specified directory", "true": "log a message with full information ( if provided )", "bleu": 0.12605968092174913, "rouge": 0.09606299212598425}, {"predict": "draws the title on a java 2 d graphics device ( such as the screen or a printer )", "true": "draws the title on a java 2 d graphics device ( such as the screen or a printer )", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a public key from its encoding", "true": "construct a public key from its encoding", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the result count for the given search query", "true": "return the result count for the given search query", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the right side of the operator is true", "true": "evaluates whether an expression is true or false", "bleu": 0.14991106946711685, "rouge": 0.216696269982238}, {"predict": "adds a new header with the name and value", "true": "adds a new header with the name and value", "bleu": 1.0, "rouge": 1.0}, {"predict": "perform an a sync rho nous min operation", "true": "perform an a sync rho nous min operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a character followed by a newline", "true": "prints a character followed by a newline", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "test helper submits data that should be written out", "true": "test verifies correct rejection of a write operation when the caller supplies an empty buffer ( no bytes remaining )", "bleu": 0.04157626749782639, "rouge": 0.06455026455026455}, {"predict": "commits this object in the editor", "true": "swaps the actual cache with the built - up temporary cache and creates a fresh , empty temporary cache", "bleu": 0.025305580246002504, "rouge": 0.07314148681055155}, {"predict": "update functionality test # test update 7 ( )", "true": "update functionality test # test update 7 ( )", "bleu": 1.0, "rouge": 1.0}, {"predict": "extract one space string from line to spaces for space which can be space than space x space we can put spaces and control spaces", "true": "returns the leading indentation string of the given line", "bleu": 0.05377336385080629, "rouge": 0.1285563751317176}, {"predict": "does the work of getting the path", "true": "does the work of getting the path", "bleu": 1.0, "rouge": 1.0}, {"predict": "pre - order of nodes at top - level", "true": "adapts the kn n distances before insertion of entry q", "bleu": 0.1262975489687145, "rouge": 0.10427350427350426}, {"predict": "adds a status line to a match er if the text was not already present in the background file and return true", "true": "adds files to container if they matched to template", "bleu": 0.06586656967644004, "rouge": 0.20938215102974828}, {"predict": "divide : rounding mode is round half up , result is negative ; equidistant", "true": "divide : rounding mode is round half up , result is negative ; equidistant", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes a string into base 64 format using the specified char set as encoded in a specified char set", "true": "encodes a string to base 64 string", "bleu": 0.14253911354181859, "rouge": 0.4195323246217332}, {"predict": "slide the panel depending on the panel", "true": "slide the panel to the desired direction", "bleu": 0.3655552228545123, "rouge": 0.5714285714285714}, {"predict": "add a initial drawer item or a drawer item array for the sticky drawer footer", "true": "add a initial drawer item or a drawer item array for the sticky drawer footer", "bleu": 1.0, "rouge": 1.0}, {"predict": "test whether to log ' at ' finer ' level", "true": "test whether to log ' debug ' at ' finest ' level", "bleu": 0.5108049765267801, "rouge": 0.8049853372434018}, {"predict": "sorts the specified sub - array of floats into ascending order", "true": "sorts the specified sub - array of integers into ascending order", "bleu": 0.7348889200874658, "rouge": 0.9090909090909091}, {"predict": "reset the packet , remove de serialize", "true": "resets the iterator to its initial state", "bleu": 0.18575057999133598, "rouge": 0.14285714285714285}, {"predict": "returns the closest float approximation of the cosine of the argument", "true": "returns the closest float approximation of the sine of the argument", "bleu": 0.7348889200874658, "rouge": 0.9090909090909091}, {"predict": "render the map using a full map in this form and put them in a map", "true": "method to create an icon to represent the annotation and render it", "bleu": 0.09147827112247602, "rouge": 0.14663461538461536}, {"predict": "method to convert byte array to byte array for given data", "true": "method to extract the message from the st <unk> data", "bleu": 0.16108992769687397, "rouge": 0.28818897637795277}, {"predict": "constructs an unknown session id that is overridden to represent the specified prototype", "true": "generates encoded session id string which uses the same extensions and tail part as prototype session id , but a different encrypted id", "bleu": 0.06618597818303218, "rouge": 0.21162185602775369}, {"predict": "compute a cardinal spline , a series of cubic be zi er splines smoothly connecting a set of points", "true": "compute a cardinal spline , a series of cubic be zi er splines smoothly connecting a set of points", "bleu": 1.0, "rouge": 1.0}, {"predict": ", original br ics implementation of de termini ze and returns the automaton object", "true": "de termini ze s the given automaton", "bleu": 0.18207052811092136, "rouge": 0.5066445182724253}, {"predict": "tests if the next characters on the queue match the sequence", "true": "tests if the next characters on the queue match the sequence", "bleu": 1.0, "rouge": 1.0}, {"predict": "check the integration span", "true": "find a root in a <unk> interval", "bleu": 0.142719668098593, "rouge": 0.0}, {"predict": "compares two a in c , a if not empty", "true": "null safe comparison of comparable s", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "returns true if the device contains superuser", "true": "returns true if the device contains superuser", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds an expression to the expression", "true": "adds a new expression to the database", "bleu": 0.36798327352994814, "rouge": 0.6069651741293532}, {"predict": "track a motion scroll", "true": "track a motion scroll", "bleu": 1.0, "rouge": 1.0}, {"predict": "execute a sync task", "true": "recursively synchronizes on the components in the provided iterator and executes the provided task if there are no more components", "bleu": 0.006580884365953166, "rouge": 0.07439024390243902}, {"predict": "find a component that is equal to its name ( or null )", "true": "finds a component with the given name , works even with ui ' s that weren ' t created with the gui builder", "bleu": 0.06618597818303218, "rouge": 0.15871639202081528}, {"predict": "tests whether the class template contains algorithm with algorithm signature", "true": "tests if a template contains methods with signatures that are required by the filter object", "bleu": 0.11966489805508941, "rouge": 0.30886075949367087}, {"predict": "writes an float field value", "true": "writes an float field value", "bleu": 1.0, "rouge": 1.0}, {"predict": "extracts the keys and value pairs from the text line", "true": "extracts the column keys from a string", "bleu": 0.18850319022747347, "rouge": 0.48605577689243035}, {"predict": "draws a random shape using the background", "true": "draws a <unk> ( aka", "bleu": 0.24446151121745047, "rouge": 0.34366197183098596}, {"predict": "this method will convert and fill list of byte buffer to list of byte array", "true": "this method will convert and fill list of byte buffer to list of byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "package private", "true": "try to create an instance of a named class", "bleu": 0.019294409903971108, "rouge": 0.0}, {"predict": "the derived key function , the it h hash of the password and the salt", "true": "the derived key function , the it h hash of the password and the salt", "bleu": 1.0, "rouge": 1.0}, {"predict": "make sure that system", "true": "make sure that system", "bleu": 1.0, "rouge": 1.0}, {"predict": "show the view as activated", "true": "show the key guard", "bleu": 0.35930411196308426, "rouge": 0.4535315985130111}, {"predict": "returns the size of the passed in string", "true": "compute the width of the string using a font with the specified \" metrics \" ( sizes )", "bleu": 0.06870470052394348, "rouge": 0.28773584905660377}, {"predict": "check if the event was received with the check / text", "true": "checks whether the event ' s reported properties match its actual properties , e", "bleu": 0.11412735515545797, "rouge": 0.15661103979460847}, {"predict": "calculates the action to be changed with the consumer changed", "true": "the default action performed method for layer", "bleu": 0.13950796967929133, "rouge": 0.24302788844621517}, {"predict": "converts the given local date object to a string", "true": "convert e local date time para string no form a to dd / mm / yyyy", "bleu": 0.10148528609427183, "rouge": 0.22846441947565538}, {"predict": "create a new data source metadata data source", "true": "store the full metadata for a druid data source , mainly as a list of segments", "bleu": 0.08821858171866302, "rouge": 0.23582474226804123}, {"predict": "constructs email from the specified email value", "true": "returns email object with the specified value", "bleu": 0.2777619034011791, "rouge": 0.5714285714285714}, {"predict": "creates a new address lookup instance for the passed url", "true": "creates a new instance of address lookup", "bleu": 0.28997844147152074, "rouge": 0.6075697211155379}, {"predict": "adds a change listener to the panel", "true": "adds a change listener to the panel", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new node with the provided parameters", "true": "make an immutable node instance", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "creates a new cell capable of row", "true": "creates a cell which takes a custom amount of cell spaces in the table", "bleu": 0.10218289380194193, "rouge": 0.35935198821796754}, {"predict": "method to initialize local configuration and target site info", "true": "initialize local and target info", "bleu": 0.24446151121745052, "rouge": 0.7530864197530864}, {"predict": "puts a new element into the dom document", "true": "puts a new element into the dom document", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct this object from one of the strings in the format of this object", "true": "construct this object from one of the strings in the \" fm t list \" parameter", "bleu": 0.607859562670247, "rouge": 0.6587473002159828}, {"predict": "returns true , whether another interval is equal to another interval", "true": "determine the matching test", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "transform relative url to the absolute url of the base url , returning the absolute url of the url given by the url url url url", "true": "converts a relative url e", "bleu": 0.06143498010483918, "rouge": 0.14698795180722893}, {"predict": "sets values that should be queued", "true": "start the task , to be used when a task is queued", "bleu": 0.08993236413460196, "rouge": 0.20962199312714777}, {"predict": "load from the store", "true": "load from the store", "bleu": 1.0, "rouge": 1.0}, {"predict": "merge instructions of the form instruction in previous line number", "true": "access break point instruction at specified line number in set of instructions ( if valid )", "bleu": 0.11253147836380048, "rouge": 0.22154963680387407}, {"predict": "close the file , checking it ' s really need to avoid checking it", "true": "close p log file", "bleu": 0.09782375748961449, "rouge": 0.2469635627530364}, {"predict": "advance to the next token", "true": "advance to the next token", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the first consonant coefficients for any issue with it ' s first consonant state", "true": "parses the first consonant", "bleu": 0.22894156860669912, "rouge": 0.4701348747591522}, {"predict": "create a new object , possibly populate panel with the table layout , which will be displayed when the panel , button panel and add buttons and panel , button", "true": "creates a new buddy panel controller", "bleu": 0.05705093314691302, "rouge": 0.18944099378881987}, {"predict": "this method removes all the ' s edge from the graph", "true": "this method removes gaps from the graph", "bleu": 0.3066148710292675, "rouge": 0.6944971537001898}, {"predict": "return the passed in value as an unsigned byte array", "true": "return the passed in value as an unsigned byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "performs an actual test that r of the given directory in the \" rc \"", "true": "call java c on to compile in input dir", "bleu": 0.08225964699966554, "rouge": 0.08726752503576538}, {"predict": "convenience method to park and then check if interrupted", "true": "convenience method to park and then check if interrupted", "bleu": 1.0, "rouge": 1.0}, {"predict": "edit operation with world edit", "true": "list the open cl implementations that contain at least one gpu device", "bleu": 0.0566124695559154, "rouge": 0.0}, {"predict": "used in chaining requests", "true": "this request will execute after the dependency completes", "bleu": 0.11115018927487523, "rouge": 0.0}, {"predict": "returns whether this date is a date", "true": "check whether this object is a date", "bleu": 0.4111336169005197, "rouge": 0.7142857142857143}, {"predict": "converts xml to xml , if string can ' t be a valid xml string", "true": "converts config to xml ,", "bleu": 0.16188613565728213, "rouge": 0.43963963963963953}, {"predict": "builds the internal vector that best transitions within the tree", "true": "build the convex quadrilateral with the found corner points ( with min / max x / y coordinates )", "bleu": 0.056719707763611286, "rouge": 0.13062098501070665}, {"predict": "heap if y - up method for 2 - ary heap", "true": "heap if y - up method for 2 - ary heap", "bleu": 1.0, "rouge": 1.0}, {"predict": "branches are initially compressed , needing one node per key plus the size of the string key", "true": "branches are initially compressed , needing one node per key plus the size of the string key", "bleu": 1.0, "rouge": 1.0}, {"predict": "unlocks to allow both puts and takes", "true": "unlock to allow both puts and takes", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "test if file is subtitle format", "true": "test if file is subtitle format", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the constant to the output stream", "true": "write the constant to the output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "given the properties , create the properties", "true": "initializes the properties to be used by open am", "bleu": 0.18370727471078332, "rouge": 0.24448897795591182}, {"predict": "add a network listener", "true": "register a network listener", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "appends content prefix to buffer", "true": "appends content prefix to buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an error listener", "true": "add an error listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates that a class name is valid and if it was logged", "true": "do some basic checks to make sure the string representation is valid", "bleu": 0.1367440667823257, "rouge": 0.16666666666666666}, {"predict": "imports the base type substitutions", "true": "imports the base types", "bleu": 0.5081327481546147, "rouge": 0.6802973977695167}, {"predict": "builds the matrix ( old ) from the given dom node", "true": "builds the matrix ( old ) from the given dom node", "bleu": 1.0, "rouge": 1.0}, {"predict": "record file system event and audit", "true": "record filesystem related event and audit", "bleu": 0.4347208719449915, "rouge": 0.6666666666666666}, {"predict": "creates a core token service exception", "true": "creates a core token service exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d examine ssl frame dialog", "true": "creates new d examine ssl dialog", "bleu": 0.48549177170732344, "rouge": 0.8798076923076923}, {"predict": "compute the dynamic vm arg s in the java project hierarchy", "true": "dynamic vm arg s common to both compute jun it dynamic <unk> rg s as list and compute compile dynamic <unk> rg s as list", "bleu": 0.0929283190370012, "rouge": 0.2076595744680851}, {"predict": "replace number value in the string buffer", "true": "normalizes a string of characters representing a phone number", "bleu": 0.15447878876032708, "rouge": 0.12224448897795591}, {"predict": "skips characters up to the specified index", "true": "skip to the i - th point in the so bol sequence", "bleu": 0.11967409389919142, "rouge": 0.20098846787479407}, {"predict": "remove the organization configuration from the directory", "true": "deletes the organization ' s group configuration data", "bleu": 0.22772101321113858, "rouge": 0.3952483801295896}, {"predict": "remove a group listener", "true": "remove a group listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets up a enumerated mapping", "true": "the change log mapping message is used to store change log partition information for a given task name", "bleu": 0.02244083618904421, "rouge": 0.07891332470892627}, {"predict": "extracts the key value for the input field", "true": "given a filename , the un escape method returns the key which originated it", "bleu": 0.10712878727413526, "rouge": 0.1732954545454545}, {"predict": "returns the distance between two pointer touch points", "true": "returns the distance between two pointer touch points", "bleu": 1.0, "rouge": 1.0}, {"predict": "maps a string to a map", "true": "transforms all the strings key / value pairs in the original map to the given class key / value pairs and adds them to the given resulting map", "bleu": 0.006248811036697839, "rouge": 0.10535405872193437}, {"predict": "if the button is being grabbed , this method should be called with the left mouse button", "true": "we should always grab both keyboard and pointer to control event flow on popups", "bleu": 0.07223943354597204, "rouge": 0.06566200215285253}, {"predict": "create an empty component manager , with an empty seed sequence set", "true": "create a component manager , initially populated with the given sequences , which are considered seed sequences", "bleu": 0.14663139543109924, "rouge": 0.4013157894736842}, {"predict": "clears the observer list so that this object no longer has any observers", "true": "removes all observers from the list of observers", "bleu": 0.1135935489027116, "rouge": 0.2985318107667211}, {"predict": "convert a byte array to a byte array", "true": "un synchronize an array of bytes , this should only be called if the decision has already been made to un synchronize the byte array in order to prevent a media player from <unk> interpreting the contents of a tag , all $ ff bytes followed by a", "bleu": 0.0017575761582699575, "rouge": 0.12655601659751037}, {"predict": "calculates the general key for a given password and password", "true": "determine what the general encryption key is , given a configuration", "bleu": 0.17851905035930718, "rouge": 0.37770897832817335}, {"predict": "creates a new message", "true": "builds a new message capture", "bleu": 0.5208154731870476, "rouge": 0.6535714285714286}, {"predict": "unzips all bytes in an array", "true": "returns an g <unk> copy of the input array", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "insert a combo box into the combo box", "true": "insert the given item into the combo box , and set it as first selected item", "bleu": 0.1718504581966079, "rouge": 0.3930412371134021}, {"predict": "in the standard co routine architecture , co routines are identified by their method names and are launched and run up to their first yield by simply resuming them ; its ' s presumed that this recognizes the not - already - running case and does the right", "true": "in the standard co routine architecture , co routines are identified by their method names and are launched and run up to their first yield by simply resuming them ; its ' s presumed that this recognizes the not - already - running case and does the right", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates that we have to be located in the output stream this is connected to the output", "true": "checks if there is a syntax error or an exception", "bleu": 0.07223943354597204, "rouge": 0.07770700636942676}, {"predict": "encodes the number as a json string", "true": "encodes the number as a json string", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a map from a name / value pair string", "true": "creates a map from a name / value pair string", "bleu": 1.0, "rouge": 1.0}, {"predict": "stress test with random frequency value of the application", "true": "a stress test for truth maintenance using an arbitrary data set", "bleu": 0.14873743701255318, "rouge": 0.19645732689210954}, {"predict": "returns an un modifiable set of the keys contained in this map", "true": "the item keys contained in the map", "bleu": 0.21401603033752975, "rouge": 0.552536231884058}, {"predict": "load a test with the configured data store", "true": "called when the playback service starts", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "create a new instance", "true": "construct a new instance", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "construct a new native gui instance with the given file", "true": "pass it the location of the launcher file", "bleu": 0.13950796967929133, "rouge": 0.22676579925650556}, {"predict": "create a string by some accessibility", "true": "returns a string that may be used to indent a dump of the nodes in the tree", "bleu": 0.04647949929470411, "rouge": 0.1601049868766404}, {"predict": "get a named calendar with the given calendar", "true": "sets the supplied calendar object with 0 values for fields lower than days", "bleu": 0.10207878682119532, "rouge": 0.18263473053892215}, {"predict": "creates a new prefix , replacing any occurrences of a prefix", "true": "surrounds the string with provided prefix and suffix if such missing from string", "bleu": 0.09497094417933137, "rouge": 0.08209959623149395}, {"predict": "finds an array of points in a list of points", "true": "finds a point in a list of points which is not contained in another list of points", "bleu": 0.2655866975621329, "rouge": 0.4953596287703016}, {"predict": "pad or trim the given string to the given length of the given length", "true": "trims or pads this string , so it has this exact length", "bleu": 0.10511846841633776, "rouge": 0.2340153452685422}, {"predict": "schedule a session using a background and rules from the management poll er ' s status", "true": "schedule this cu <unk> to be run , based on the state of the session", "bleu": 0.09147827112247602, "rouge": 0.12978723404255318}, {"predict": "we call this to guarantee that we fetch a fresh policy from the server", "true": "we call this to guarantee that we fetch a fresh policy from the server", "bleu": 1.0, "rouge": 1.0}, {"predict": "decrypt key with the secret key", "true": "decrypt an encapsulated session key", "bleu": 0.24446151121745047, "rouge": 0.3696969696969697}, {"predict": "log the operating system info", "true": "log system informations to the log file this have no effect on the software it ' s here for logging purpose", "bleu": 0.013234179795826943, "rouge": 0.13847900113507378}, {"predict": "inserts any necessary separators and whitespace before a literal value , inline array , or inline object", "true": "inserts any necessary separators and whitespace before a literal value , inline array , or inline object", "bleu": 1.0, "rouge": 1.0}, {"predict": "grabs a positive hash from an input string", "true": "created sha 256 of input", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "generates the transport zone gui d format as transport", "true": "the format of this native gui d is transport type + device type + fabric ww n", "bleu": 0.09081302407530907, "rouge": 0.29151732377538825}, {"predict": "tests whether a ser v let with the attributes of the path of the jsp file name and jsp file", "true": "tests whether a single ser v let can be added using the method that takes a string for the ser v let name and a string for the jsp file", "bleu": 0.1433353837286632, "rouge": 0.46329113924050636}, {"predict": "objects are considered equal if they have the same value as this one", "true": "indicates whether some other object is \" equal to \" the value", "bleu": 0.1135935489027116, "rouge": 0.2417437252311757}, {"predict": "debug exception in debug i mpl", "true": "error level debug message", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "removes a listener from this transaction", "true": "removed an event listener from this transaction", "bleu": 0.5204069361525009, "rouge": 0.6069651741293532}, {"predict": "creates a new execution system", "true": "creates a new execution system for the specified uri", "bleu": 0.4493289641172217, "rouge": 0.6792873051224945}, {"predict": "checks if any types is a command type that is a command type", "true": "return true if the given type refers to a command , false otherwise", "bleu": 0.14283632578659286, "rouge": 0.30769230769230765}, {"predict": "add a report to this report", "true": "en queues the provided report to be sent by the reporting thread", "bleu": 0.10694820729788418, "rouge": 0.20962199312714777}, {"predict": "returns true", "true": "equivalent to string", "bleu": 0.38753858253732953, "rouge": 0.0}, {"predict": "determines the number of consecutive characters that are en cod able using numeric compaction", "true": "determines the number of consecutive characters that are en cod able using numeric compaction", "bleu": 1.0, "rouge": 1.0}, {"predict": "test that types with tag name is ordered by the type when data is ordered", "true": "check types ordered by data type", "bleu": 0.12874330508144843, "rouge": 0.4128595600676818}, {"predict": "determines the height of this view", "true": "determines the height of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "handle a mouse pressed mouse listener event", "true": "handle a mouse clicked mouse listener event", "bleu": 0.5, "rouge": 0.8571428571428571}, {"predict": "format the given array of sql statements", "true": "formats an array of values as a sql values like ( ' value 1 ' , ' value 2 ' ,", "bleu": 0.03555135945989538, "rouge": 0.19656283566058}, {"predict": "emit a class including the comments and writes it to the file including its own", "true": "appends a class or interface", "bleu": 0.1082597837309053, "rouge": 0.21981981981981977}, {"predict": "draws the value of the top edge border around the content area", "true": "draws the top edge of the border around the content area", "bleu": 0.5543058126156657, "rouge": 0.7887931034482759}, {"predict": "makes sure all result written and write results", "true": "analyzes all iterations in terms of route choice and travel time", "bleu": 0.12197601375336842, "rouge": 0.20469798657718125}, {"predict": "executes a sql update", "true": "execute a sql insert , update or delete statement", "bleu": 0.14558246978804804, "rouge": 0.43160377358490565}, {"predict": "returns the current access time in milliseconds", "true": "returns milliseconds running in the current thread", "bleu": 0.29071536848410967, "rouge": 0.42857142857142855}, {"predict": "creates a new entry template from the provided lines of ld if", "true": "builds an entry from the provided lines of ld if", "bleu": 0.5760844201603896, "rouge": 0.7393939393939394}, {"predict": "removes all parser highlights", "true": "removes all parser highlights", "bleu": 1.0, "rouge": 1.0}, {"predict": "read short , 16 - bits", "true": "read short , 16 - bits", "bleu": 1.0, "rouge": 1.0}, {"predict": "format a long into a array", "true": "format an in t into an existing array", "bleu": 0.18822631894109965, "rouge": 0.4178082191780822}, {"predict": "appends the characters of the character array of chars parameter", "true": "method to a ppen nd a char r array to the buffer", "bleu": 0.11421946507590645, "rouge": 0.08944281524926685}, {"predict": "checks to see if this user has read permission on the specified order", "true": "checks to see if this user has read permission on the specified order", "bleu": 1.0, "rouge": 1.0}, {"predict": "determine whether the current node is a child of this node", "true": "sees if the class under test is actually an annotation", "bleu": 0.12605968092174913, "rouge": 0.1921259842519685}, {"predict": "compares the passed in block to this block", "true": "compare the in scope exception handlers of two blocks", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "returns a hash code for this principal", "true": "this is basically the hash code for the field name", "bleu": 0.23813694985189848, "rouge": 0.34205607476635513}, {"predict": "this value is used in the checksum recorded in the correct font", "true": "this value is good for naming the cache file", "bleu": 0.2044800736021839, "rouge": 0.39102564102564097}, {"predict": "returns true for a long label", "true": "returns true if long labels are uses in the indicator display", "bleu": 0.13576587000692578, "rouge": 0.33516483516483514}, {"predict": "create a secret block from a path having the given positions ( x , y ) and a very used by the best camera", "true": "constructs a single secret block ( tile which generates one - ups in original game , but \" yo lo \" image in this game )", "bleu": 0.07581678430229154, "rouge": 0.23828125000000006}, {"predict": "creates data connection from the server", "true": "opens a data connection with the server according to the set mode ( active or passive ) then send the command passed as an argument", "bleu": 0.015405902105979226, "rouge": 0.23238095238095238}, {"predict": "install package normal by system intent", "true": "install package normal by system intent", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates insert list item", "true": "recursive helper method for create insert list", "bleu": 0.22336835181428535, "rouge": 0.346590909090909}, {"predict": "read a command line of the outline file on a different name , name and places the old pages in a different file ( outlines and pages )", "true": "read the outline data", "bleu": 0.061206734747356016, "rouge": 0.21682464454976302}, {"predict": "decode a run of a run length encoded", "true": "more of less the opposite of the encoding function but just for getting out run lengths", "bleu": 0.06528905536667998, "rouge": 0.15721649484536082}, {"predict": "reads the contents of an input stream into a byte", "true": "reads the contents of an input stream into a byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns whether the handshake phase has is completed", "true": "returns whether the handshake phase has is completed", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new no - constraint constraint", "true": "constructs a not - equal - value global parameter constraint", "bleu": 0.14390022429682173, "rouge": 0.34205607476635513}, {"predict": "inflate a single overlay from overlay configuration string according to the syntax spec", "true": "inflate a single overlay from overlay configuration string according to the syntax spec", "bleu": 1.0, "rouge": 1.0}, {"predict": "the other party has breached the contract and submitted an old channel transaction", "true": "the other party has breached the contract and submitted an old channel transaction", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct fancy loader , grabbing a reference to the dex file class if we ' re running under dal vi k", "true": "construct fancy loader , grabbing a reference to the dex file class if we ' re running under dal vi k", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns whether a given resource is modified according to a source file", "true": "how to keep track of all the modified times across the paths", "bleu": 0.11498759556447223, "rouge": 0.08333333333333333}, {"predict": "performs the native flip operation for the specified flip operation", "true": "flipping moves the contents of the back buffer to the front buffer , either by copying or by moving the video pointer", "bleu": 0.04201899298302553, "rouge": 0.11708253358925146}, {"predict": "load value from property string value", "true": "load value from property string value", "bleu": 1.0, "rouge": 1.0}, {"predict": "recursive all namespaces to iterate over a soap element", "true": "returns a list of all namespaces below an element ( recursive )", "bleu": 0.158278836853973, "rouge": 0.2785388127853881}, {"predict": "this method draws a hook on a 2 d graphics object that represents a straight line", "true": "there is some bug and it ' s not perfect", "bleu": 0.06468490584192432, "rouge": 0.0}, {"predict": "compress the bitmap to the byte array as the specified format and quality", "true": "compress the bitmap to the byte array as the specified format and quality", "bleu": 1.0, "rouge": 1.0}, {"predict": "see if there ' s a button on the event source , and a appropriate event id , which represents an action or the big enough", "true": "method to handle continue button in diagnostic frame", "bleu": 0.04668049023095243, "rouge": 0.0650319829424307}, {"predict": "update own program type data", "true": "wait for data in the buffer to be sent", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "resets the cached information", "true": "resets the drawer and its caches", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "copy all the source directory to de st", "true": "copy an entire directory from one location to another", "bleu": 0.16829946711936866, "rouge": 0.34923664122137404}, {"predict": "creates a new journal that omits redundant information", "true": "creates a new journal that omits redundant information", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will be used to record log files", "true": "save log data to file", "bleu": 0.15619699684601276, "rouge": 0.1506172839506173}, {"predict": "loads the rewrites from an uri using a command line", "true": "loads the rewrites from tab - separated values", "bleu": 0.35084396956386854, "rouge": 0.4535315985130111}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "close the connection", "true": "called by reader thread on reader end of file", "bleu": 0.06114461654585454, "rouge": 0.0}, {"predict": "creates reduce rs for mapper s", "true": "create plan for reduce rs", "bleu": 0.31239399369202553, "rouge": 0.3696969696969697}, {"predict": "emits a http request", "true": "invoked when an http request is received", "bleu": 0.22336835181428535, "rouge": 0.346590909090909}, {"predict": "create a negative number from an array of bytes", "true": "create a negative number from an array of bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "formats the given double value", "true": "formats the given double values", "bleu": 0.7598356856515925, "rouge": 0.8}, {"predict": "remove the positions of each of the list", "true": "removes all elements at the specified positions in the list", "bleu": 0.1867587389639562, "rouge": 0.43571428571428567}, {"predict": "sets the bounds of the shape to the adjusted i", "true": "<unk> the boundaries of the shape which is drawn as the rubber band", "bleu": 0.19235610974773318, "rouge": 0.42479108635097496}, {"predict": "create a # rr gg bb string from a colour", "true": "attempt to parse string as a colour", "bleu": 0.17827531042796255, "rouge": 0.36454183266932266}, {"predict": "remove any optimal \" optimal \" from the given position and mark it to the same positions", "true": "return a list of all moves in move list that are not known to be non - optimal", "bleu": 0.07537900706912937, "rouge": 0.05684995340167755}, {"predict": "returns the effective numerical matrix rank , which is the number of non negligible singular values", "true": "effective numerical matrix rank", "bleu": 0.2140909265975804, "rouge": 0.4485294117647059}, {"predict": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "true": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes one variable definition based on the given object", "true": "picks a random modifiable variable and executes a random modification on this variable", "bleu": 0.10761866342063775, "rouge": 0.17604617604617603}, {"predict": "save the content of the file with the given content", "true": "saves the content to a file", "bleu": 0.17827531042796255, "rouge": 0.3927038626609442}, {"predict": "delete the old temp file", "true": "deletes temporary files listed in the file", "bleu": 0.20252884954471367, "rouge": 0.32360742705570295}, {"predict": "proposes a tree that is assumed to be processed to the tree", "true": "warning : assumes strictly bifurcating tree", "bleu": 0.10390302174233558, "rouge": 0.1182170542635659}, {"predict": "flushes the un isolated connection", "true": "flush the statement buffers to the indices without committing", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "writes this image to the jpeg image", "true": "convert data stream to s rgb image", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "writes the direction of the operator to the previous object", "true": "de spawn visible object , object will become invisible and object position will become invalid", "bleu": 0.07645906143263256, "rouge": 0.07721518987341772}, {"predict": "get the m qt t topic for an device event", "true": "get the m qt t topic for an device event", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the result of the last matching operation", "true": "returns the result of the last matching operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "copy project constraint from the exported project", "true": "copy constraints from the exported project", "bleu": 0.5410822690539396, "rouge": 0.7800511508951408}, {"predict": "computes the value of ssl v 3 pseudo random function", "true": "computes the value of ssl v 3 pseudo random function", "bleu": 1.0, "rouge": 1.0}, {"predict": "decodes a url safe string into its original form using the default string char set", "true": "decodes a url safe string into its original form using the default string char set", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies the export to the given target", "true": "create an operation to copy from the original clipboard to the given extent", "bleu": 0.15513171017484098, "rouge": 0.3794712286158632}, {"predict": "provides a class loader to access the class loader", "true": "return the class in the local vm that this version is mapped to", "bleu": 0.1279808802469055, "rouge": 0.17604617604617603}, {"predict": "style : use like bounds !", "true": "set the path style ( if any ) stroke - dash array = \" n 1 , n 2 ,", "bleu": 0.02142071121599405, "rouge": 0.07011494252873564}, {"predict": "convert a color to an angle", "true": "convert a color to an angle", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse the length of two connections", "true": "parses an encoded compound size and sets the size fields", "bleu": 0.11341174240707227, "rouge": 0.11960784313725491}, {"predict": "encodes an encoded query parameter using utf - 8 and adds it to this url", "true": "adds the pre - encoded query parameter to this url ' s query string", "bleu": 0.23578316044531808, "rouge": 0.416382252559727}, {"predict": "create image link for execution , id of button name and set m command onclick", "true": "create image with name , id of button name and set p command onclick", "bleu": 0.521873921269267, "rouge": 0.7633674630261661}, {"predict": "constructs a new namespace using the specified principal and optional attributes", "true": "creates a new namespace object", "bleu": 0.21200626759025185, "rouge": 0.40219780219780216}, {"predict": "atomic ally decrements by one the current value", "true": "atomic ally decrements by one the current value", "bleu": 1.0, "rouge": 1.0}, {"predict": "used for debugging purposes", "true": "update position of bubble", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "insert the list of elements", "true": "remove all elements on this list", "bleu": 0.24736929544091937, "rouge": 0.1788856304985337}, {"predict": "locks to prevent both puts and takes", "true": "locks to prevent both puts and takes", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears the cache", "true": "clears the cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the publication date as an episode url that was in the last file as an episode", "true": "set the podcast ' s publication date to the episode ' s if it is more recent", "bleu": 0.11306082351602978, "rouge": 0.29411764705882354}, {"predict": "remove our ui delegate for the specified ui control", "true": "use our ui delegate for the specified ui control type", "bleu": 0.7875585852725084, "rouge": 0.8341880341880341}, {"predict": "computes a single join of this query with respect to the specified database", "true": "get ( or create ) a pre computed kn n query for the database", "bleu": 0.1112176984362864, "rouge": 0.2943305186972256}, {"predict": "internal method to handle the selections if items are added / removed", "true": "internal method to handle the selections if items are added / removed", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends the given id to the given buffer , followed by \" \\ \\ e \"", "true": "appends the given id to the given buffer , followed by \" \\ \\ e \"", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new available migration with this version", "true": "creates a new available migration with this version", "bleu": 1.0, "rouge": 1.0}, {"predict": "receive notification of a comment", "true": "receive notification of a comment", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws an image , applying a transform from image space into user space before drawing a solid background color and creates user handle", "true": "draw an image , applying a transform from image space into user space before drawing", "bleu": 0.5986744307891794, "rouge": 0.7659192825112108}, {"predict": "updates edit text of the model", "true": "sets the agent title and populates the agent and agent group action table", "bleu": 0.06878769894132081, "rouge": 0.09870550161812298}, {"predict": "select all the elements of the list", "true": "selects all item types", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "at - insert a single string builder", "true": "add raw name value pair", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "return the number of objects in this set", "true": "returns the set length", "bleu": 0.17747405280050269, "rouge": 0.3546511627906977}, {"predict": "like data input stream", "true": "like data input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensure that given cart id is compatible with this cart", "true": "common address book function", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "adds a pause listener to the set of listeners that are sent events through the life of an animation , such as start , and end", "true": "adds a pause listener to this animator", "bleu": 0.17098323692758396, "rouge": 0.33813747228381374}, {"predict": "makes the object immutable", "true": "makes the object immutable", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the batch cluster er for the current input stream", "true": "<unk> that this batch of input to the filter is finished", "bleu": 0.13564514503163538, "rouge": 0.18885448916408668}, {"predict": "add a single component to the identifier", "true": "adds a component to the composite", "bleu": 0.3655552228545123, "rouge": 0.6240409207161125}, {"predict": "opens the given url in the system browser", "true": "launch url in a new window", "bleu": 0.21105340631872638, "rouge": 0.2932692307692307}, {"predict": "marks a line as needing a repaint", "true": "marks a line as needing a repaint", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a byte banded raster with the given sample model", "true": "constructs a byte banded raster with the given sample model", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize all fields of this uri from another uri", "true": "initialize all fields of this uri from another uri", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets up this animator set to play all of the supplied animations at the same time", "true": "sets up this animator set to play all of the supplied animations at the same time", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes and returns last element , or null if empty", "true": "removes and returns last element , or null if empty", "bleu": 1.0, "rouge": 1.0}, {"predict": "return true if the notification is registered in the notification notification", "true": "verifies a refresh notification for the specified client mbe an", "bleu": 0.12605968092174913, "rouge": 0.1921259842519685}, {"predict": "read process output from spec i fired url", "true": "reads process output line - by - line", "bleu": 0.21105340631872638, "rouge": 0.25}, {"predict": "fills the header and footer in the header with the information of the previous image", "true": "fills header and footer", "bleu": 0.16188613565728213, "rouge": 0.4701348747591522}, {"predict": "adds an operand to the combined fr age ment", "true": "adds an operand at the end of the current operands list", "bleu": 0.22241434515868952, "rouge": 0.3929146537842191}, {"predict": "decodes ' - escaped octets in the given type with the first occurrence of the specified type", "true": "decodes characters of a string that are percent - encoded octets using utf - 8 decoding ( if needed )", "bleu": 0.07614109730541198, "rouge": 0.159825327510917}, {"predict": "this method calculates each events that are logged in each receipt state", "true": "called to calculate the total receipt amount i , e the amount which has been paid for the bill from the bill receipt info the amount will be calculated", "bleu": 0.0251986724908424, "rouge": 0.04538690476190475}, {"predict": "this skips over the specified number of bytes and discards them to the number of bytes read , whichever happens once this stream", "true": "discards the specified number of bytes", "bleu": 0.20144990145560465, "rouge": 0.3855878634639696}, {"predict": "unit test for concurrent modification resulting from insert ( ) and remove ( ) including ( a ) where the leaf is split by the insert ( ) and ( b will be the leaf with ( ) causes an underflow that triggers a join of the leaf", "true": "unit test for concurrent modification resulting from insert ( ) and remove ( )", "bleu": 0.28331053324249966, "rouge": 0.5011737089201879}, {"predict": "removes all ims from this user", "true": "removes all im ' s from this user", "bleu": 0.35032865403497776, "rouge": 0.6963470319634703}, {"predict": "escapes a string for use in ascii property lists", "true": "escapes a string for use in ascii property lists", "bleu": 1.0, "rouge": 1.0}, {"predict": "set the content by converting characters to into bytes using the specified encoding", "true": "set the content by copying characters from the given reader and converting them into bytes using the specified encoding", "bleu": 0.4050032792954969, "rouge": 0.6650148662041626}, {"predict": "clear dictionary cache with more values", "true": "this method will clear the dictionary access count so that any unused column can be removed from the cache", "bleu": 0.03009357607781848, "rouge": 0.21942446043165464}, {"predict": "turns the given array of arguments into a type string", "true": "a helper method to format the arguments types as a comma - separated list", "bleu": 0.1004883949864497, "rouge": 0.24270557029177717}, {"predict": "renames a file", "true": "renames a file in the underlying file system", "bleu": 0.18887560283756186, "rouge": 0.5041322314049587}, {"predict": "executes the provided command in the executor", "true": "executes the given command , returning a future to indicate its status and allow ( interrupt i ble ) cancellation", "bleu": 0.04101080379386835, "rouge": 0.20446927374301674}, {"predict": "a set of kind name ( s ) representing a set of symbol ' s kinds", "true": "a set of kind name ( s ) representing a set of symbol ' s kinds", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the length of the text", "true": "ret runs the length of the text", "bleu": 0.6848940448305334, "rouge": 0.7587064676616916}, {"predict": "serialize the given map of prefix / value pairs to a string", "true": "serialize a parameter map into a digest response", "bleu": 0.1235622127262679, "rouge": 0.3112244897959184}, {"predict": "collect together the languages supported by the given services and call back once done", "true": "collect together the languages supported by the given services and call back once done", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the json encoding for the given media type", "true": "helper method to use for determining desired output encoding", "bleu": 0.15619699684601276, "rouge": 0.1111111111111111}, {"predict": "convert a buffered image to java buffered image", "true": "converts the given image into a format for quick upload to the gpu", "bleu": 0.10207878682119532, "rouge": 0.18263473053892215}, {"predict": "returns the approximate start time in milliseconds", "true": "start the stop watch", "bleu": 0.20556680845025982, "rouge": 0.19122257053291536}, {"predict": "go to the next view using the animator passed in", "true": "go to the next view", "bleu": 0.4617366309441026, "rouge": 0.7093023255813954}, {"predict": "dmitri ilyin : makes sure if the string is hh encoded sign", "true": "dmitri ilyin : makes sure if the string is hh encoded sign", "bleu": 1.0, "rouge": 1.0}, {"predict": "implements the abstract method simulate method", "true": "implements the abstract method simulate method", "bleu": 1.0, "rouge": 1.0}, {"predict": "cache a given invoke r that does not call back", "true": "cache a resolved ( possibly overloaded ) method based on the argument types used to invoke it , subject to class loader change", "bleu": 0.04858569000462783, "rouge": 0.16975881261595546}, {"predict": "set bit ( in t n ) the leftmost bit in a positive number", "true": "set bit ( in t n ) the leftmost bit in a positive number", "bleu": 1.0, "rouge": 1.0}, {"predict": "destroy the build beans that are currently awaiting execution on - screen map", "true": "destroy the view scoped beans for the given view and context map", "bleu": 0.14283632578659286, "rouge": 0.3223249669749009}, {"predict": "closes an output stream", "true": "close given output stream , ignoring any resulting exception", "bleu": 0.1354797537848421, "rouge": 0.28773584905660377}, {"predict": "non - dom : gets node at specified index", "true": "retrieve an item from the map by 0 - based index", "bleu": 0.12507277759788113, "rouge": 0.19645732689210954}, {"predict": "returns the position of the text field of the given type without using the given font type and height", "true": "allows to answer how much width requires given char to be represented on a screen", "bleu": 0.06439931429457924, "rouge": 0.06009852216748769}, {"predict": "create a directory if it does not already exist", "true": "create directory if not already exists", "bleu": 0.24446151121745052, "rouge": 0.6916099773242631}, {"predict": "create an encoder using the given base and aes wrapping key", "true": "create an encoder using the given timestamp as its base", "bleu": 0.5331675363405771, "rouge": 0.6724409448818898}, {"predict": "returns a string of lat lng s coordinates that belong to the latitude / longitude", "true": "encodes a sequence of lat lng s into an encoded path string", "bleu": 0.2490328638846773, "rouge": 0.3779429987608426}, {"predict": "extract the weight values of this neuron", "true": "extracts weight values and <unk> them by synapse type ( inhibitory or ex c it a tory )", "bleu": 0.050786435781810385, "rouge": 0.14823815309842042}, {"predict": "flushes the connection and close the table", "true": "flush any buffered messages and close the current output stream", "bleu": 0.22521602211604308, "rouge": 0.34205607476635513}, {"predict": "check if a list of key bits ( e", "true": "check if the filter contains data with pre computed hashes", "bleu": 0.16621692209732, "rouge": 0.20854700854700853}, {"predict": "ensure the size of the internal data can hold the size of the surface data", "true": "ensure that there are additional data bytes available in the buffer", "bleu": 0.09782375748961449, "rouge": 0.2373540856031128}, {"predict": "return true if the given phone number is a valid number", "true": "tests whether a phone number matches a valid pattern", "bleu": 0.18850319022747347, "rouge": 0.4073455759599332}, {"predict": "trim uri from uri to null if it exists , and other back", "true": "trim the url , by removing an extra ' / ' at the end of the url and also make it lowercase", "bleu": 0.06010571402825797, "rouge": 0.1638316920322292}, {"predict": "set the set as set", "true": "returns the next element in the iteration", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "add a alpha alpha of a color from an old color to be alpha )", "true": "adds alpha to a hex color", "bleu": 0.10343603005129705, "rouge": 0.3096446700507614}, {"predict": "stop the server started by the client", "true": "stop the web server", "bleu": 0.2626909894424158, "rouge": 0.5736677115987461}, {"predict": "parses a date time object", "true": "parses , validates and computes normalized version of duration object", "bleu": 0.11115018927487523, "rouge": 0.2515463917525773}, {"predict": "copy the local state into the given local state", "true": "save a shallow copy of the given local variable state into this", "bleu": 0.23263472697663287, "rouge": 0.4642313546423136}, {"predict": "load database objects from class object", "true": "load objects defined in the database", "bleu": 0.2626909894424158, "rouge": 0.3333333333333333}, {"predict": "try to read data from the next read transaction", "true": "attempts to read a response to this operation by reading it from the given connection , and returning it", "bleu": 0.07688927330344451, "rouge": 0.2684268426842684}, {"predict": "adds the specified element to the queue , waiting for reuse", "true": "add method which also set whether there is a next value", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "inserts the specified part at the specified position", "true": "inserts the specified part at the specified position", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts the value into this builder", "true": "inserts the value into this builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the nature is a weapon and the current g it gets", "true": "check if this painter has the given nature an weapon", "bleu": 0.11114924776032006, "rouge": 0.34366197183098596}, {"predict": "dump storage info to storage", "true": "callers should have already verified that debug output is enabled", "bleu": 0.08445588027797912, "rouge": 0.0}, {"predict": "returns the node holding the specified key", "true": "returns node holding key or null if no such , clearing out any deleted nodes seen along the way", "bleu": 0.05235560288724727, "rouge": 0.28405122235157154}, {"predict": "parses the generic values for a sort field , which field name = value pairs", "true": "decodes a list of request into the corresponding sort", "bleu": 0.09782375748961449, "rouge": 0.17453505007153075}, {"predict": "returns a conversion from a source string", "true": "returns conversion for converting value of source to target , or returns null if there ' s no such conversion", "bleu": 0.034485837896937335, "rouge": 0.20446927374301674}, {"predict": "advances the api to the latest time tree that is > = min time and < = max time", "true": "moves api to the latest value before time", "bleu": 0.18759202316167212, "rouge": 0.399737876802097}, {"predict": "this method calls proc update user roles and updates the values of the database", "true": "this method calls proc update user roles and updates the values", "bleu": 0.7760114635728618, "rouge": 0.8994638069705092}, {"predict": "forges and sends the options request", "true": "forges and sends the options request", "bleu": 1.0, "rouge": 1.0}, {"predict": "stress test with random operation", "true": "setup and run a test", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "prints the thread info instance", "true": "print all of the thread ' s information and stack traces", "bleu": 0.10822031883953476, "rouge": 0.2341650671785029}, {"predict": "adds the given resource to the list of resources to be deleted", "true": "adds the given resource to the list of resources to be deleted", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the maximum of two values", "true": "compute the maximum of two values", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds another image container to the list of those interested in the results of the request", "true": "adds another image container to the list of those interested in the results of the request", "bleu": 1.0, "rouge": 1.0}, {"predict": "calls the super method and writes the the conservative and the kn n distance of this entry to the specified stream", "true": "calls the super method and writes the polynomial approximation of the kn n distances of this entry to the specified stream", "bleu": 0.6383964846132485, "rouge": 0.8095238095238095}, {"predict": "add a method to the chain of methods after the dot , indicating the this segment is a property and does not need parenthesis and won ' t have para mater s", "true": "add a method to the chain of methods after the dot", "bleu": 0.33164037188800605, "rouge": 0.5610367892976588}, {"predict": "returns the request to request server", "true": "get the current request , which is specific to the current thread", "bleu": 0.09663861439684919, "rouge": 0.31443298969072164}, {"predict": "returns a salted pb kdf 2 hash of the password", "true": "returns a salted pb kdf 2 hash of the password", "bleu": 1.0, "rouge": 1.0}, {"predict": "immediately schedule commercial of the given length", "true": "schedules a commercial of the given length to be run after the delay currently set in the delay input field", "bleu": 0.10621880467145296, "rouge": 0.34078212290502796}, {"predict": "are these two matrices the same ? they are these points", "true": "returns the hash code for this transform", "bleu": 0.11390778025531027, "rouge": 0.1157495256166983}, {"predict": "the actual api method exposed by this class", "true": "the actual unsubscribe method exposed by this class", "bleu": 0.6606328636027614, "rouge": 0.875}, {"predict": "determine if the digital unix unix unix unix", "true": "is operating system digital unix ?", "bleu": 0.21105340631872638, "rouge": 0.2932692307692307}, {"predict": "client is about the connection", "true": "called when the client has disconnected", "bleu": 0.24736929544091937, "rouge": 0.1788856304985337}, {"predict": "determines whether a new compound name is a creature name", "true": "determines whether a compound name is a suffix of this compound name", "bleu": 0.395667833449618, "rouge": 0.7155425219941348}, {"predict": "calculates total height to occupy based on several parameters", "true": "calculates total height to occupy based on several parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the argument is a syntactically valid regular expression with the given string", "true": "this method is a copy of regex util", "bleu": 0.1082597837309053, "rouge": 0.18401206636500753}, {"predict": "used to check whether there is a specialized handler for a given intent", "true": "used to check whether there is a specialized handler for a given intent", "bleu": 1.0, "rouge": 1.0}, {"predict": "flushes the binary output stream , padding 0 s if number of bits written so far is not a multiple of 8", "true": "flush standard output , padding 0 s if number of bits written so far is not a multiple of 8", "bleu": 0.7771475625141703, "rouge": 0.8645669291338582}, {"predict": "removes the footer from the given content", "true": "prep ends the content of the mime part as text to the existing footer", "bleu": 0.08592522909830395, "rouge": 0.17967599410898377}, {"predict": "constructs a sentence from the supplied html t stream", "true": "<unk> a list of sentences", "bleu": 0.14113991930789777, "rouge": 0.1506172839506173}, {"predict": "tests that internal state of the object can not be modified by modifying initial array value", "true": "tests that internal state of the object can not be modified by modifying initial array value", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the log map", "true": "initialize the store", "bleu": 0.47287080450158786, "rouge": 0.5865384615384615}, {"predict": "create a histogram from a histogram histogram ( histogram )", "true": "creates a cumulative histogram where each bin height is the sum of the previous bin ' s height and the current bin ' s height", "bleu": 0.031128435616522565, "rouge": 0.10608695652173913}, {"predict": "updates the entries related to the given package in memory and persistent db", "true": "updates the entries related to the given package in memory and persistent db", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses , validates and computes normalized version of date time object", "true": "parses , validates and computes normalized version of date time object", "bleu": 1.0, "rouge": 1.0}, {"predict": "add the attribute values to the attribute list", "true": "adds attributes to am sdk organization", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "test the case where the thread is preemptively un parked", "true": "test the case where the thread is preemptively un parked", "bleu": 1.0, "rouge": 1.0}, {"predict": "commit the segment manager based on the given index", "true": "sets the log commit index", "bleu": 0.16784459625186196, "rouge": 0.3012345679012346}, {"predict": "finish all fragments and closing all fragments", "true": "sets all the closing fragments into finished state", "bleu": 0.19148978368719022, "rouge": 0.3952483801295896}, {"predict": "write up to the output stream", "true": "method called when utf - 8 encoded ( but not yet escaped ! ) content is not guaranteed to fit in the output buffer after escaping ; as such , we just need to chunk writes", "bleu": 0.002104894172329508, "rouge": 0.12655601659751037}, {"predict": "converts the given hex string into a plain string", "true": "converts the given hex string into a plain string", "bleu": 1.0, "rouge": 1.0}, {"predict": "randomly select installer and do job specific iteration", "true": "find the scenarios that match the required tags in the feature", "bleu": 0.09268172804333874, "rouge": 0.0}, {"predict": "traverses the tree recursively and right - tree number on the tree", "true": "traverse the tree calculating partial likelihoods", "bleu": 0.1367440667823257, "rouge": 0.2364341085271318}, {"predict": "converts an rate into a human readable and localized kb / s speed", "true": "converts an rate into a human readable and localized kb / s speed", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the next available space in the cache", "true": "returns the next element in the iteration", "bleu": 0.2653856085536222, "rouge": 0.5398230088495575}, {"predict": "returns true if field thread has been set ( has been assigned a value ) and false otherwise", "true": "returns true if field queue size is set ( has been assigned a value ) and false otherwise", "bleu": 0.7331765459202478, "rouge": 0.8333333333333334}, {"predict": "requests a contact capabilities instance to show contact", "true": "requests capabilities for a group of remote contacts", "bleu": 0.19070828081828378, "rouge": 0.25}, {"predict": "utility method to return string", "true": "creates a string representing a coefficient , removing \"", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "creates at test index created event with one field to hit data", "true": "creates at test index created event", "bleu": 0.4703709593866897, "rouge": 0.7093023255813954}, {"predict": "validates the given rule", "true": "determines whether the specified string is a valid boolean value", "bleu": 0.08017158404431235, "rouge": 0.13260869565217392}, {"predict": "given a document , find the url associated with that document", "true": "given a document , find the url associated with that document", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a random number between start ( inclusive ) and end ( inclusive )", "true": "returns a random number between start ( inclusive ) and end ( inclusive )", "bleu": 1.0, "rouge": 1.0}, {"predict": "pops a type from the output frame stack", "true": "pops a type from the output frame stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds event to the queue , returning true if it was matched", "true": "offer an event to this watch instance", "bleu": 0.1367440667823257, "rouge": 0.22101449275362317}, {"predict": "pushes a new type on to the output frame stack", "true": "pushes a new type on to the output frame stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates a random algorithm spec algorithm for algorithm", "true": "create algorithm parameter spec with the block size", "bleu": 0.17747405280050269, "rouge": 0.25}, {"predict": "read a suitable representation of the stream", "true": "reads the state from the stream", "bleu": 0.24446151121745047, "rouge": 0.31202046035805625}, {"predict": "checks whether a character is a valid token character", "true": "checks whether a character is a valid token character", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the lines and second graph of the graph graph on the graph", "true": "draws the data points and the lines connecting the data points on the line graph", "bleu": 0.168694047994874, "rouge": 0.49364161849710986}, {"predict": "add or replace an element type for this schema", "true": "add or replace an element type for this schema", "bleu": 1.0, "rouge": 1.0}, {"predict": "don ' t use this when obfuscating class names !", "true": "don ' t use this when obfuscating class names !", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a string followed by a newline", "true": "writes a string followed by a newline", "bleu": 1.0, "rouge": 1.0}, {"predict": "internal utility method for constructing a uri instance ( i", "true": "return a new uri with a different fragment", "bleu": 0.13950796967929133, "rouge": 0.22676579925650556}, {"predict": "paints a new paint object", "true": "change the default paint to fill an expanded bounding box based on its children ' s bounds", "bleu": 0.02476709768976917, "rouge": 0.08276797829036635}, {"predict": "serializes an object as a byte array , parses it as a byte array", "true": "serialize to byte array", "bleu": 0.11633270842295028, "rouge": 0.2469635627530364}, {"predict": "adds another import source", "true": "adds another import source", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws an arrow was moved from a solid line", "true": "draws the head of a message arrow on to the diagram display", "bleu": 0.12026590852507517, "rouge": 0.1856925418569254}, {"predict": "in it is es the listener", "true": "handles the case where a class loader is activated", "bleu": 0.14827340167306757, "rouge": 0.12869198312236285}, {"predict": "de marshal parameters from an object that follows the method ( or from which determines any parameters found in context )", "true": "un marshal parameters for the given method of the given instance over the given marshal input stream", "bleu": 0.08687475782716618, "rouge": 0.2145998240985048}, {"predict": "loads the data size", "true": "reloads the data from the service", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "create a localized resource name based on a resource name and a locale", "true": "create a localized resource name based on a resource name and a locale", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts an array of objects into string", "true": "converts an array of objects into string", "bleu": 1.0, "rouge": 1.0}, {"predict": "draw an icon based on the first list", "true": "draws the bullet icon specified by the list - style - image argument", "bleu": 0.10207878682119532, "rouge": 0.2739520958083832}, {"predict": "synchronizes the query ' s query to be exactly the total request", "true": "synchronizes the rdf repository ' s representation of an entity to be exactly the provided statements", "bleu": 0.26560858266645027, "rouge": 0.5570776255707762}, {"predict": "full reset the connection back to null and removes all attributes from the server", "true": "fully reset the state , not only the one related to latest test case execution", "bleu": 0.1230673905899703, "rouge": 0.20561797752808988}, {"predict": "converts the image associated with a volatile image to a buffered image using the default configuration and returns the image associated with the provided graphics", "true": "convert the specified image to a buffered image , if necessary", "bleu": 0.1849691130235019, "rouge": 0.35847208619000986}, {"predict": "writes a byte array to a file creating the file if it does not exist", "true": "writes a byte array to a file creating the file if it does not exist", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the value of a cancelled element is cancelled", "true": "returns true if this test subscriber has been cancelled", "bleu": 0.13950796967929133, "rouge": 0.21254355400696867}, {"predict": "removes a child edge from this directed edge star", "true": "drops a member of this directed edge star", "bleu": 0.4111336169005197, "rouge": 0.594541910331384}, {"predict": "returns true if , at the current time , the named event could be generated", "true": "returns true if , at the current time , the named event could be generated", "bleu": 1.0, "rouge": 1.0}, {"predict": "receives message and batches as needed", "true": "receives message and batches as needed", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the date to the supplied date", "true": "returns <unk> generated before the given date", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "decides if given x - coordinate in screen space needs to be interpreted as \" within \" the normalized thumb x - coordinate", "true": "decides if given x - coordinate in screen space needs to be interpreted as \" within \" the normalized thumb x - coordinate", "bleu": 1.0, "rouge": 1.0}, {"predict": "cleans up all files in a base directory", "true": "deletes all files in a container", "bleu": 0.44632361378533286, "rouge": 0.5865384615384615}, {"predict": "only need one test that can be applied on the comparison", "true": "returns true if other entities should be <unk> from moving through this entity", "bleu": 0.09497094417933137, "rouge": 0.08209959623149395}, {"predict": "adds a recorded duration", "true": "adds a recorded duration", "bleu": 1.0, "rouge": 1.0}, {"predict": "open the atomic file for reading", "true": "open the atomic file for reading", "bleu": 1.0, "rouge": 1.0}, {"predict": "submits task to task queue , will be executed if it is already running", "true": "submits task to the specific queue", "bleu": 0.17395797375642236, "rouge": 0.43109540636042404}, {"predict": "creates default implementation of task distributor", "true": "creates default implementation of task distributor", "bleu": 1.0, "rouge": 1.0}, {"predict": "dumps a sample of data samples to the specified stream", "true": "dumps the wave out to the given stream", "bleu": 0.18850319022747347, "rouge": 0.4535315985130111}, {"predict": "adds field buffered fields for previous field editor", "true": "add field and label to buffer and push buffered field to panel", "bleu": 0.11567041937737582, "rouge": 0.28955696202531644}, {"predict": "adds an incomplete shape to the database", "true": "creates a new free space expansion room and adds it to the room list", "bleu": 0.09663861439684919, "rouge": 0.2695139911634757}, {"predict": "compute the desired magnitude of a unit vector projected to a given planet model", "true": "compute the desired magnitude of a unit vector projected to a given planet model", "bleu": 1.0, "rouge": 1.0}, {"predict": "trims the string , removing all whitespace at the beginning and end of the string", "true": "trims the string , removing all whitespace at the beginning and end of the string", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates v plex storage system provider is correctly merged", "true": "validates s mi - s provider attributes of the v nx file as it is a mandatory fields for indications", "bleu": 0.05227938863320699, "rouge": 0.19365079365079363}, {"predict": "parses a node in the xml structure and returns the corresponding ns object", "true": "parses a node in the xml structure and returns the corresponding ns object", "bleu": 1.0, "rouge": 1.0}, {"predict": "convenience method that creates a pair of related debits and credits for accrual based accounting", "true": "convenience method that creates a pair of related debits and credits for accrual based accounting", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the next trace until the next line until the next index is adjusted , then advances the corner after the next corner", "true": "calculates the next trace trace of the connection under construction", "bleu": 0.15415064977510756, "rouge": 0.3262032085561497}, {"predict": "serialize object to a byte buffer object", "true": "serialize object to a byte buffer object", "bleu": 1.0, "rouge": 1.0}, {"predict": "executed upon sending a packet away", "true": "executed upon sending a packet away", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new sensor if all checks are passed system name is normalized to ensure uniqueness", "true": "create a new sensor if all checks are passed system name is normalized to ensure uniqueness", "bleu": 1.0, "rouge": 1.0}, {"predict": "traces the internal array using the absolute difference as above", "true": "returns an array that holds the maximum values of the both specified arrays in each index", "bleu": 0.08227293930285365, "rouge": 0.1476997578692494}, {"predict": "fills a polygon with corners p points", "true": "fill the interior of the polygon shape represented by p points", "bleu": 0.14834636222628117, "rouge": 0.32049036777583184}, {"predict": "writes the tags from this ex if interface object into a jpeg stream , removing prior ex if tags", "true": "writes the tags from this ex if interface object into a jpeg stream , removing prior ex if tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "see iso 16022 : 2006 , 5", "true": "see iso 16022 : 2006 , 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "navigates to the screen in the currently selected day", "true": "move the position to today ' s date", "bleu": 0.15619699684601276, "rouge": 0.1189083820662768}, {"predict": "accepts an ipv 4 address in the form of an integer and returns the corresponding byte array", "true": "accepts an ipv 4 address in the form of an integer and returns the corresponding byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates the validity of the template", "true": "validates this template to see if its valid for plugin v 3", "bleu": 0.08993236413460196, "rouge": 0.20962199312714777}, {"predict": "this method is used by the until it gets to it", "true": "it removes the first key from the queue", "bleu": 0.12605968092174913, "rouge": 0.108348134991119}, {"predict": "cd f of the normal cd f , bit , with shape parameter a 3 bit 7 , 3 b 3", "true": "normal cumulative distribution function ( the value which results by integrating the normal distribution function from negative infinity up to y )", "bleu": 0.07290389469212423, "rouge": 0.0926347760060744}, {"predict": "destroy the connection", "true": "destroy kills the connection and drops it from the connection pool", "bleu": 0.052796005801316374, "rouge": 0.3885350318471337}, {"predict": "locate atom / white space atom from 1", "true": "absorb an atomic character string", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "draws a 3 d bar to the coordinate of a bar", "true": "draws the bar for a single ( series , category ) data item", "bleu": 0.11941964005964323, "rouge": 0.24629878869448185}, {"predict": "returns a new instance", "true": "returns a new instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if network is connected", "true": "check the current active network is available", "bleu": 0.25880882365505126, "rouge": 0.48541114058355433}, {"predict": "set up for the tab closing animation", "true": "set up for the tab closing animation", "bleu": 1.0, "rouge": 1.0}, {"predict": "for the given set of au th au th - bit scheme , add to the table and add it to the given level", "true": "adds sam lv 2 au th context to the collection", "bleu": 0.08383924775392589, "rouge": 0.25416666666666665}, {"predict": "its guaran ted that close packet will be sent before closing connection , but all past and future packets wont", "true": "its guaran ted that close packet will be sent before closing connection , but all past and future packets wont", "bleu": 1.0, "rouge": 1.0}, {"predict": "replace all edges with the parent", "true": "if edges which have <unk> dimensional collapse are found , replace them with a new edge which is a l edge", "bleu": 0.021562989506891315, "rouge": 0.1346578366445916}, {"predict": "reads a value of an annotation and makes the given visitor visit it", "true": "reads a value of an annotation and makes the given visitor visit it", "bleu": 1.0, "rouge": 1.0}, {"predict": "timing target implementation : calculate and set the current car position based on the animation fraction", "true": "timing target implementation : calculate and set the current car position based on the animation fraction", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new sea glass title pane title pane object", "true": "creates a new sea glass title pane object", "bleu": 0.7510499815709779, "rouge": 0.9070631970260222}, {"predict": "returns a string representation of this stack", "true": "returns a string representation of this queue", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "writes a long ( 64 bit ) to the target stream", "true": "writes a long ( 64 bit ) to the target stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will find container representation container", "true": "look for the requested container xml file in the class path ( resource ) under / config /", "bleu": 0.038589346254072475, "rouge": 0.07411907654921021}, {"predict": "given a source directory and a list of module names that possibly contain wildcard s it returns a expanded list of module names of the given source directory", "true": "given a list of source directories and a list of module names that possibly contain wildcard s it returns a expanded list of module names of modules that were actually found in the given source directories", "bleu": 0.5946906388143539, "rouge": 0.7945891783567133}, {"predict": "returns the given string name with the given char set name", "true": "safely gets char set for the specified name", "bleu": 0.17033186037639278, "rouge": 0.32504440497335696}, {"predict": "creates a number from the specified integer", "true": "creates an integer number", "bleu": 0.22089591134157885, "rouge": 0.3824451410658307}, {"predict": "dump a stack trace into a yam l message", "true": "dumps the given message and stack to the system error console", "bleu": 0.12507277759788113, "rouge": 0.09822866344605477}, {"predict": "execute a query based on the sql string given", "true": "execute a query based on the sql string given", "bleu": 1.0, "rouge": 1.0}, {"predict": "the name of the variable to cache t", "true": "the name of the variable to cache t", "bleu": 1.0, "rouge": 1.0}, {"predict": "library ize s the given a jar , and return a file name", "true": "maps a library name into a platform - specific string representing a native library", "bleu": 0.1112176984362864, "rouge": 0.2207478890229192}, {"predict": "returns the next match er , or null if no matches the pattern tag and matches the internal match er \\ n \" , \" , or \" \\ n \" ' and \"", "true": "returns the next match from the character stream", "bleu": 0.103463675658483, "rouge": 0.2680140597539543}, {"predict": "this also defines the fragment , this also defines a new one", "true": "it is important that the dimension setting is the same while a fragment is loaded by different fragment loaders", "bleu": 0.06895205739037245, "rouge": 0.12398373983739835}, {"predict": "adds a new private field", "true": "add a private field to this", "bleu": 0.31610981104846864, "rouge": 0.5366568914956013}, {"predict": "the function scans the gl & function", "true": "function adds the new lsu br s dic ts ( only for the fd s used ) to the list", "bleu": 0.034485837896937335, "rouge": 0.1363128491620112}, {"predict": "tests if the queue matches the sequence ( as with match ) , and if they do , removes the matched string from the queue", "true": "tests if the queue matches the sequence ( as with match ) , and if they do , removes the matched string from the queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "in it should have a required render er for the current thread", "true": "initialize all necessary components for g les rendering , creating window surfaces for drawing the preview as well as the surface that will be used by media recorder for recording", "bleu": 0.025657200613383568, "rouge": 0.08840579710144927}, {"predict": "clears the scrap heap", "true": "clears the scrap heap", "bleu": 1.0, "rouge": 1.0}, {"predict": "starts a component request with the provided query string", "true": "allows subclasses to augment the request to the token endpoint with additional parameters", "bleu": 0.10761866342063775, "rouge": 0.17604617604617603}, {"predict": "reads characters into a portion of an array", "true": "reads characters into a portion of an array", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an http header line with a field without a literal colon , and a value", "true": "add a header line without any validation", "bleu": 0.1203921753741131, "rouge": 0.3742331288343558}, {"predict": "merge the children of a given node", "true": "merge node children", "bleu": 0.22089591134157885, "rouge": 0.43109540636042404}, {"predict": "negate ( ) for a negative big decimal", "true": "negate ( ) for a negative big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "the binding that is being created in the given parameter", "true": "creates and binds the parameters to a new item", "bleu": 0.12605968092174913, "rouge": 0.10627177700348434}, {"predict": "creates a new simple panel using the experiment", "true": "creates the setup panel with the supplied initial experiment", "bleu": 0.17795502018438056, "rouge": 0.465648854961832}, {"predict": "adds a listener of attribute events", "true": "adds a listener of memory copying events", "bleu": 0.5446761861605913, "rouge": 0.7587064676616916}, {"predict": "processes the given arguments and arguments , u id , arg s and arguments , country and country them into the actual values", "true": "parses the specified arguments and sets up the variables", "bleu": 0.07913247271422609, "rouge": 0.27141268075639596}, {"predict": "see if zoning values in valid for see if zoning is required", "true": "looks at the v array to see if zoning is disabled , and looks to make sure that there is at least one active network system registered", "bleu": 0.08285102548591562, "rouge": 0.19182389937106917}, {"predict": "initializes this element tree from the list of elements", "true": "cr <unk> an in - memory xml tree based on the parsed tokens in this document", "bleu": 0.07711214194298908, "rouge": 0.1523096129837703}, {"predict": "checks if the given name has the given name", "true": "returns a boolean telling if this name value list has a record with this name", "bleu": 0.09111821689187218, "rouge": 0.3189542483660131}, {"predict": "check whether this char seq starts with the specified prefix", "true": "tests whether this char seq starts with the specified prefix", "bleu": 0.8931539818068694, "rouge": 0.9}, {"predict": "return true if window contains a window with the given class", "true": "checks , whether an instance of the given window class is already in the window list", "bleu": 0.11315783212651204, "rouge": 0.21504112808460632}, {"predict": "fires a property change of a bound property with the given name", "true": "support for reporting bound property changes for integer properties", "bleu": 0.1367440667823257, "rouge": 0.19551282051282048}, {"predict": "starts fading to the specified layer", "true": "starts fading to the specified layer", "bleu": 1.0, "rouge": 1.0}, {"predict": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "true": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the hash code of a repeated boolean field", "true": "computes the hash code of a repeated boolean field", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new abstract surface object , assigning it a unique id and initializing its last modified time to the current system time", "true": "creates a shallow copy of the specified source shape", "bleu": 0.07483887206915212, "rouge": 0.203559510567297}, {"predict": "parse a soot method string and return a methods class", "true": "parses a string in soot representation , for example : < soot", "bleu": 0.12273680279953825, "rouge": 0.1788856304985337}, {"predict": "helper method for creating new task by helper hash", "true": "sets up a new review on the current branch , as a task", "bleu": 0.10015045110931886, "rouge": 0.17604617604617603}, {"predict": "startup all voice voice voice", "true": "start up the waveform synthesizer", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "locates the start of the column that are the requested character", "true": "note that the column may end of second half of wide character", "bleu": 0.16278331364721524, "rouge": 0.25884016973125884}, {"predict": "solves for the first departure , to use the first departure , returning the first arrivals and first that are first departure", "true": "to do calculate all arrivals and departures zero - based , and then shift them at the end to maintain fixed - point stop", "bleu": 0.07915239187409027, "rouge": 0.12942008486562942}, {"predict": "decode the color from base color and return that color", "true": "decodes an html color and turns it into a color object", "bleu": 0.1613101715871968, "rouge": 0.28328173374613}, {"predict": "creates a list of modules for the given voice and desc rp", "true": "a method for determining the list of modules required to transform the given source data type into the requested target data type", "bleu": 0.10739983258001305, "rouge": 0.33516483516483514}, {"predict": "gets the magnitude of the vector , defined as sqr t ( x ^ 2 + y ^ 2 + z ^ 2 )", "true": "get the distance between this vector and another", "bleu": 0.05606668411195419, "rouge": 0.13738738738738737}, {"predict": "calculate the elapsed gc that are used as the actual gc", "true": "ask each gc bean for its elapsed collection time", "bleu": 0.12605968092174913, "rouge": 0.1018363939899833}, {"predict": "add all distinct entry to list 1 from list 2", "true": "add all distinct entry to list 1 from list 2", "bleu": 1.0, "rouge": 1.0}, {"predict": "opens that object that has been returned in object that has been constructed in your object", "true": "start encoding a new object in the buffer", "bleu": 0.08513012360883544, "rouge": 0.17732558139534885}, {"predict": "produce a map containing the messages and generates a map of messages", "true": "sends messages to kafka", "bleu": 0.10390302174233558, "rouge": 0.13738738738738737}, {"predict": "creates a string of a given character of this char seq", "true": "returns a string of the given length consisting entirely of the given character", "bleu": 0.2184641923320139, "rouge": 0.41049798115746977}, {"predict": "adds a connection to the backend", "true": "add a view for the given connection to the pipeline view", "bleu": 0.18892891214792823, "rouge": 0.4468864468864468}, {"predict": "remove trailing or leading whitespace from the annotation", "true": "remove trailing or leading whitespace from the annotation", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the given listener to receive callback s when its script finishes", "true": "adds the given listener to its internal list", "bleu": 0.39553325358771796, "rouge": 0.6224489795918368}, {"predict": "called to notify that a consumption has finished", "true": "called to notify that a consumption has finished", "bleu": 1.0, "rouge": 1.0}, {"predict": "test bulk get / put byte methods", "true": "test of the simple forms of the bulk get / put methods", "bleu": 0.27528950557113974, "rouge": 0.6029654036243821}, {"predict": "concatenates a list of double arrays into a single array", "true": "concatenates a list of double arrays into a single array", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures that the external array t mp has at least the specified number of elements , increasing its size if necessary", "true": "ensures that the external array t mp has at least the specified number of elements , increasing its size if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds new values to the series", "true": "adds new values to the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a element to the test elements , by checking the test elements", "true": "adds a continuation", "bleu": 0.12571192676522522, "rouge": 0.28175519630484985}, {"predict": "calculates the rotation angle in the given target relative to the specified angle ( in degrees )", "true": "calculates the angle from center pt to target pt in degrees", "bleu": 0.13445273575332958, "rouge": 0.4457978075517661}, {"predict": "returns the number of times the sequence currently in the sequence", "true": "returns the number of matching characters found in a character sequence", "bleu": 0.3448444257953326, "rouge": 0.5454545454545454}, {"predict": "create a delta indicator with the integer value", "true": "creates a delta c rl indicator extension with the integer value", "bleu": 0.36479336700864445, "rouge": 0.716442953020134}, {"predict": "verbose log message with print f formatting", "true": "verbose log message with print f formatting", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the log probability for observed given value and pi value , and use it to calculate the log value", "true": "calculate the log probability given the message ' s logarithm is normally distributed", "bleu": 0.18493046910349434, "rouge": 0.37809917355371897}, {"predict": "sets the requested pid to have the requested tolerance as \" , using the tolerance of tolerance", "true": "sets the absolute tolerance for this controller", "bleu": 0.10216198665886358, "rouge": 0.27031019202363366}, {"predict": "signals call from native code", "true": "up call from native code via implemented class ( do )", "bleu": 0.22885811052259908, "rouge": 0.4683301343570058}, {"predict": "to do need think about if multi - put is necessary , by checking if auto flush works", "true": "to do need think about if multi - put is necessary , by checking if auto flush works", "bleu": 1.0, "rouge": 1.0}, {"predict": "index = = - 1 when new", "true": "index = = - 1 when new", "bleu": 1.0, "rouge": 1.0}, {"predict": "extracts the secret key from the given uri", "true": "extracts the secret access key from the given uri", "bleu": 0.6598203338556885, "rouge": 0.931297709923664}, {"predict": "calculate the dial between the dial between the dial er", "true": "dial the specified contact", "bleu": 0.13950796967929133, "rouge": 0.3096446700507614}, {"predict": "add an safe class to the list of s rc classes", "true": "denote that all methods of a class are safe", "bleu": 0.1354599427337814, "rouge": 0.1018363939899833}, {"predict": "returns true if the active list has room", "true": "check if there is room in the active list", "bleu": 0.29150322793751426, "rouge": 0.465648854961832}, {"predict": "parses the given string for a textual representation for time and returns the time value in seconds past midnight", "true": "parses the given string for a textual representation for time and returns the time value in seconds past midnight", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses a list of base type pairs into a map of steps", "true": "parse a resource file into an rsl p stem mer description", "bleu": 0.11498759556447223, "rouge": 0.17528735632183906}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a string representation of the permissions to string ( dimension or null dimension used for debugging purposes only", "true": "converts the bet into a string", "bleu": 0.09107438368292149, "rouge": 0.1765557163531114}, {"predict": "tests non - blocking commit has no snapshot ( the source when a journal has been registered and a source file", "true": "verifies exception if there are no commits on the journal ( the last commit time will be zero which does not identify a valid commit point )", "bleu": 0.07101359160102726, "rouge": 0.16299265197060786}, {"predict": "check if the controller can matches the current search on the controller", "true": "checks to see if the user matches ip information without checking for the correct ether - type ( <unk> )", "bleu": 0.07977026311224286, "rouge": 0.23921568627450981}, {"predict": "quick exp , with a max relative error of | power | , and | power * get exponent ( value of | r ) to magnitude", "true": "quick <unk> , with a max relative error of about 3", "bleu": 0.24903286388467735, "rouge": 0.4556489262371616}, {"predict": "return class path for the class", "true": "utility method to get the jar entry path from a class name", "bleu": 0.09663861439684919, "rouge": 0.20962199312714777}, {"predict": "write the counter in textual representation of a counter", "true": "write an instance of pos <unk> he ev counter class to json format", "bleu": 0.10761866342063775, "rouge": 0.26406926406926406}, {"predict": "all annotations declarations nested inside of a package", "true": "all annotations defined in the package", "bleu": 0.22679164443904004, "rouge": 0.43990384615384615}, {"predict": "is invoked in there is any ways it is member of", "true": "returns whatever is in the clipboard", "bleu": 0.12605968092174913, "rouge": 0.2484725050916497}, {"predict": "updates the cursor and loads the resulting result from the editor", "true": "sets the cursor to correspond the component currently under mouse", "bleu": 0.16108992769687397, "rouge": 0.28818897637795277}, {"predict": "replaces swing utilities # is middle mouse button ( ) due to the fact that the mouse button 2 d test ?", "true": "returns true if the mouse event specifies the middle mouse button", "bleu": 0.12740810460323607, "rouge": 0.2579281183932347}, {"predict": "appends a new message to the list of success messages", "true": "adds a success message into the list", "bleu": 0.1972940627795883, "rouge": 0.48605577689243035}, {"predict": "method to call to start updating the dialog after we stopped", "true": "method to handle start stopped check box change", "bleu": 0.17033186037639278, "rouge": 0.433392539964476}, {"predict": "close the input stream", "true": "closes the underlying file", "bleu": 0.35930411196308426, "rouge": 0.25}, {"predict": "assign next log segment sequence number based on a decreasing list of log segments", "true": "assign next log segment sequence number based on a decreasing list of log segments", "bleu": 1.0, "rouge": 1.0}, {"predict": "read stream as binary", "true": "read stream as binary st l", "bleu": 0.6065306597126334, "rouge": 0.7721518987341772}, {"predict": "asserts that specific characters is set", "true": "asserts that a specific language is set", "bleu": 0.32386639797736094, "rouge": 0.7587064676616916}, {"predict": "returns elapsed d is tru but ion to exit", "true": "called when the block for of this explosive is destroy by an explosion", "bleu": 0.09049614828481034, "rouge": 0.08802308802308802}, {"predict": "returns true if there are no more threads in the queue to be processed", "true": "returns whether there are threads waiting for read access to the guacamole instruction stream", "bleu": 0.1437791910008819, "rouge": 0.35714285714285715}, {"predict": "the number of inactive time that have been scheduled", "true": "returns the number of milliseconds this session has been inactive", "bleu": 0.2601435417217584, "rouge": 0.41709401709401706}, {"predict": "equivalent to assert cond : value ;", "true": "equivalent to assert cond : value ;", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a definition to the definition", "true": "this method adds a cos definition to the persistent store", "bleu": 0.2510214496072342, "rouge": 0.5980392156862745}, {"predict": "create a source data quality object from its xml representation", "true": "create a source data quality object from its xml representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the class name to a q name", "true": "returns the qualified name for the given class , according to the mapping rules in the j axb specification", "bleu": 0.05098496690817698, "rouge": 0.20701357466063344}, {"predict": "get the resulting y - position of the bottom edge of the crop window given the handle ' s position and the image ' s bounding box and snap radius", "true": "get the resulting y - position of the bottom edge of the crop window given the handle ' s position and the image ' s bounding box and snap radius", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate json web token", "true": "generate a new signed j wt", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "exports all symbols of the symbol table and exports them into the necessary symbols", "true": "export a number of symbols with the given names so that other movies can import and use them", "bleu": 0.0874213888217952, "rouge": 0.24448897795591182}, {"predict": "returns true if m has fulfilling bit set", "true": "returns true if m has fulfilling bit set", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a data source listener", "true": "add a data source listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds the qualifier hierarchy in the qualifier hierarchy", "true": "when comparing types against the bounds of a type variable , we may encounter other type variables , wildcard s , and intersections in those bounds", "bleu": 0.01870562754502435, "rouge": 0.1073943661971831}, {"predict": "changes to the target state", "true": "changes to the failed state", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "reads n characters from input stream to bu f", "true": "read at least the specified amount of bytes , and place them in the input buffer", "bleu": 0.06484332373239513, "rouge": 0.07615480649188515}, {"predict": "subtracts the product ( x 1 , y ) and returns the result", "true": "compute the result of the kernel evaluation on the supplied vectors", "bleu": 0.1350862565735141, "rouge": 0.16920943134535368}, {"predict": "ensure there is at least one animation for every path in group ( linking ) and names following the \" current \" path \" path based on the first group", "true": "ensure there is at least one animation for every path in group ( linking them by names ) build the \" current \" path based on the first group", "bleu": 0.7466827280965083, "rouge": 0.8500557413600891}, {"predict": "cancels included turnouts only option", "true": "cancels included only option", "bleu": 0.45180100180492244, "rouge": 0.9070631970260222}, {"predict": "kill all files in a folder", "true": "kill all , including root or not the returned entries don ' t include the root entry though", "bleu": 0.0393440467350332, "rouge": 0.15288220551378442}, {"predict": "shows an error dialog", "true": "shows an error dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "verify that the header value is expected to be missing", "true": "expert : just reads and verifies the suffix of an index header", "bleu": 0.11421946507590645, "rouge": 0.1788856304985337}, {"predict": "internal method for printing a tag with attributes", "true": "internal method for printing a tag with attributes", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the earlier string that to be searched for the given input string", "true": "get the disk name out from the input string", "bleu": 0.16544619993389978, "rouge": 0.4699537750385208}, {"predict": "draws a general path for the cloud shape", "true": "draws a cloud shape for the given parameters", "bleu": 0.31020161970069987, "rouge": 0.5}, {"predict": "check whether the specified object is a trusted source", "true": "returns result of calling c tx", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "creates a new persistent search request control", "true": "creates a new persistent search request control", "bleu": 1.0, "rouge": 1.0}, {"predict": "opens the document to the num list", "true": "populates the synapse group with synapses by making individual <unk> connections between the neurons in the synapse group ' s source and target groups", "bleu": 0.018123322676611493, "rouge": 0.11742059672762271}, {"predict": "multiply a character by a character", "true": "multiply two characters", "bleu": 0.22089591134157885, "rouge": 0.2364341085271318}, {"predict": "this method is used for method dispatch", "true": "return a string with linefeed s and carriage returns normalized to linefeed s", "bleu": 0.06628576403773602, "rouge": 0.0}, {"predict": "add a zone change listener", "true": "add a listener to be called when the player changes zone", "bleu": 0.12296202211076697, "rouge": 0.35124760076775424}, {"predict": "write the byte buffer to the buffer we need to be able to efficiently handle large frames on the blob threshold , and the blob then add buffer", "true": "write a single byte this is the one place where the blob threshold is handled and its done one byte at a time so should be easy enough , we no longer store continuation addresses , instead we allocate blob allocations via a blob header block", "bleu": 0.055740457503441865, "rouge": 0.20713073005093377}, {"predict": "creates the new listener", "true": "creates the new start listener", "bleu": 0.5506953149031837, "rouge": 0.8714285714285713}, {"predict": "get a list of view column names for each row", "true": "returns the contents of the table as a flat list", "bleu": 0.14991106946711685, "rouge": 0.2}, {"predict": "reset any explicit or default - set hooks", "true": "reset any explicit or default - set hooks", "bleu": 1.0, "rouge": 1.0}, {"predict": "a hashing method that changes a string ( like a url ) into a hash suitable for using as a disk filename", "true": "a hashing method that changes a string ( like a url ) into a hash suitable for using as a disk filename", "bleu": 1.0, "rouge": 1.0}, {"predict": "records to the source frame ( all the source code source )", "true": "adds a value and calculates the new average of differences between the values within the window size provided at creation", "bleu": 0.05903660003919619, "rouge": 0.11960784313725491}, {"predict": "triggers test case failure if any thread assertions have failed , by re throwing , in the test case failure exception recorded earlier by thread record failure", "true": "extra checks that get done for all test cases", "bleu": 0.044915755686574035, "rouge": 0.06106106106106105}, {"predict": "parses the given input string", "true": "parses the given input string", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the default maximum radius of the default value", "true": "returns the default max radius", "bleu": 0.2777619034011791, "rouge": 0.6024691358024692}, {"predict": "returns the contents of the receiver as a char array", "true": "returns a copy of the input data", "bleu": 0.18850319022747347, "rouge": 0.36454183266932266}, {"predict": "the size of pending workers", "true": "the size of pending workers", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts a component at the specified position", "true": "inserts the specified component into the menu at a given position", "bleu": 0.1764145494442645, "rouge": 0.4273204903677758}, {"predict": "un - escape all occurrences of the character from the source string", "true": "splits the string at every split character unless escaped", "bleu": 0.1235622127262679, "rouge": 0.19551282051282048}, {"predict": "draws the chart legend", "true": "draws the chart legend", "bleu": 1.0, "rouge": 1.0}, {"predict": "append an http request to the given input stream", "true": "curl - i - x post \" http : / / : / web hdf s / v 1 / ? op = append & buffer size = \"", "bleu": 0.016926759781399105, "rouge": 0.04806934594168637}, {"predict": "creates a new map with the same mappings as the given map", "true": "creates a new map with the same mappings as the given map", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new rule to the text table", "true": "adds a rule into the stylesheet", "bleu": 0.19070828081828378, "rouge": 0.43990384615384615}, {"predict": "appends data for the underlying data", "true": "appends to the underlying data", "bleu": 0.4347208719449915, "rouge": 0.7393939393939394}, {"predict": "test if the data volume is a valid md key row", "true": "this method checks if the <unk> url is still correct", "bleu": 0.16108992769687397, "rouge": 0.28818897637795277}, {"predict": "initializes this logger ' s resource bundle", "true": "initializes this logger ' s resource bundle", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a layer set context support object", "true": "construct an object , initializes graphic list", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "tests if package name matches some naming convention", "true": "check whether the package name match standard java package name conventions", "bleu": 0.14505474341517546, "rouge": 0.20469798657718125}, {"predict": "remember that connect factory session", "true": "remember a successful factory for connecting to host", "bleu": 0.1658165975077607, "rouge": 0.2953995157384988}, {"predict": "adds a long value to the request", "true": "adds a long value to the request", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next available character , or the null character ' \\ 0 ' if all input has been exhausted", "true": "returns the next available character , or the null character ' \\ 0 ' if all input has been exhausted", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes first entry ; returns its snapshot", "true": "removes first entry ; returns its snapshot", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates new task cancellation exception given throw able as a cause and source of error message", "true": "creates new task cancellation exception given throw able as a cause and source of error message", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies a sequence of s rc to the destination for another method", "true": "normalize a string", "bleu": 0.10390302174233558, "rouge": 0.14950980392156862}, {"predict": "remove views that don ' t start with a custom list of obsolete elements", "true": "removes obsolete elements from names and shared elements", "bleu": 0.11633270842295028, "rouge": 0.19122257053291536}, {"predict": "remove an action from the list", "true": "completely remove an action", "bleu": 0.4111336169005197, "rouge": 0.6224489795918368}, {"predict": "returns the distance between the constant look ahead distribution and the value of the software", "true": "computes the maximum distance error due to a given level of approximation to a true arc", "bleu": 0.09151480843357339, "rouge": 0.19242902208201892}, {"predict": "reads a sequence of data from the stream", "true": "gets next fast a record", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "adds the specified character to self", "true": "adds the specified character to self", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the given if d is a valid if d", "true": "returns true if the given if d is a valid if d", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove a group from the group", "true": "remove a child from this group", "bleu": 0.3303164318013807, "rouge": 0.6666666666666666}, {"predict": "check to see if this storage port already exists", "true": "check if port exists in db", "bleu": 0.17747405280050263, "rouge": 0.5532879818594103}, {"predict": "adds a split element to a split", "true": "adds a split element at the end", "bleu": 0.5169731539571706, "rouge": 0.5714285714285714}, {"predict": "compiling templates requires that we be able to list the a vt s added 9 / 5 / 2000 to support compilation experiment", "true": "compiling templates requires that we be able to list the a vt s added 9 / 5 / 2000 to support compilation experiment", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new instance of a map builder using a map builder and the action consumer", "true": "creates a new instance", "bleu": 0.1431712315455507, "rouge": 0.33639705882352944}, {"predict": "flush any buffered messages and close all bits", "true": "description of the method", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "direct connection to direct connection", "true": "get the active direct connection with this endpoint ( if any )", "bleu": 0.08860330314183162, "rouge": 0.2190305206463196}, {"predict": "generates a national number string prefix and fills it with prefix", "true": "combines the national number with any prefix ( idd / + and country code or national prefix ) that was collected", "bleu": 0.07464740820301685, "rouge": 0.29582929194956353}, {"predict": "completely cut the render er", "true": "cut to the clipboard", "bleu": 0.3021375397356768, "rouge": 0.4535315985130111}, {"predict": "stop led resource on a custom cloud resource and custom blink state", "true": "calling this method will stop all threads", "bleu": 0.10390302174233558, "rouge": 0.11050724637681159}, {"predict": "releases the internal bytes", "true": "releases resources in the index", "bleu": 0.3096787331587729, "rouge": 0.43571428571428567}, {"predict": "configures a new prefix to use", "true": "configure the helper", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "writes the current transform", "true": "write the given transformation matrix to the file", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "signum ( ) for a positive big decimal", "true": "signum ( ) for a positive big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new chain based on the existing chain with the new element added at the end", "true": "creates a new chain based on the existing chain with the new element added at the beginning", "bleu": 0.9391044157537525, "rouge": 0.9411764705882352}, {"predict": "parse the operator represented by the ' operator ' s parse operator", "true": "check for and get an operator kind", "bleu": 0.10390302174233558, "rouge": 0.11050724637681159}, {"predict": "performs a drag from the ui object , this method will first realized by the ui", "true": "drags this object to a destination ui object", "bleu": 0.11502783619900048, "rouge": 0.2659883720930233}, {"predict": "sends a local entry to the contacts based on the current track , if exists or already present in local track", "true": "method that hashes contacts and syncs them to server", "bleu": 0.06429451441231726, "rouge": 0.071849234393404}, {"predict": "removes the xy series from the list", "true": "removes the xy series from the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a glue , or variable spacing , to a ui component", "true": "add a glue , or variable spacing , to a ui component", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the given value to the file , if it isn ' t exist", "true": "write result to file - - write a result ' result ' out in plain text format to file ' f name '", "bleu": 0.05844094339631021, "rouge": 0.20713073005093377}, {"predict": "this method will write metadata at the end of file file format in thrift format", "true": "this method will write metadata at the end of file file format in thrift format", "bleu": 1.0, "rouge": 1.0}, {"predict": "print tree as done in penn tree bank merged files", "true": "display a node , implementing penn tree bank style layout", "bleu": 0.23462350320528, "rouge": 0.3}, {"predict": "replaces the original regular expression with the regular expression", "true": "run regex expression against original string", "bleu": 0.15619699684601276, "rouge": 0.13832199546485258}, {"predict": "returns true if the two characters are equivalent", "true": "compare two characters in a string", "bleu": 0.21105340631872638, "rouge": 0.2932692307692307}, {"predict": "writes time length into the file , writing the file at the given index", "true": "helper methods which adjusts the actual length of the backing file for caching", "bleu": 0.11114924776032006, "rouge": 0.2237163814180929}, {"predict": "creates a new instance of c rl list to get the c bus c bus c # of events", "true": "creates a sequence of subnet s with 2 pins from p pin list", "bleu": 0.09629943614188137, "rouge": 0.2587486744432662}, {"predict": "runs a connection with the server", "true": "run this command with the arguments supplied", "bleu": 0.24608524656663955, "rouge": 0.3034825870646766}, {"predict": "return a char reference that is a char pattern that has the pattern : : : = ' | ' , ' \" ' \" ' , and returns the ' : '", "true": "parse an entity reference", "bleu": 0.036612667086152566, "rouge": 0.0629514963880289}, {"predict": "creates a method invocation expression class", "true": "creates a j sni method invocation expression", "bleu": 0.41386440336942737, "rouge": 0.7587064676616916}, {"predict": "generates a simple exemplar of this class to test serialization", "true": "generates a simple exemplar of this class to test serialization", "bleu": 1.0, "rouge": 1.0}, {"predict": "drop all tables form the form table", "true": "drop the tables by the passing table name", "bleu": 0.2024757945132846, "rouge": 0.5269978401727862}, {"predict": "creates a new disk based on the given descriptor", "true": "creates a new segment", "bleu": 0.2626909894424158, "rouge": 0.4959349593495934}, {"predict": "create new contact", "true": "given an email checks if the person exists in the manager", "bleu": 0.031392692871325185, "rouge": 0.0}, {"predict": "removes from this list all of its elements that are contained in the specified collection", "true": "removes from this list all of its elements that are contained in the specified collection", "bleu": 1.0, "rouge": 1.0}, {"predict": "the function convert polar stereo graphic to geodetic converts polar stereo graphic coordinates ( east ing and north ing ) to geodetic coordinates ( latitude and longitude ) according to the current ellipsoid and polar stereo graphic projection parameters", "true": "the function convert polar stereo graphic to geodetic converts polar stereo graphic coordinates ( east ing and north ing ) to geodetic coordinates ( latitude and longitude ) according to the current ellipsoid and polar stereo graphic projection parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "asserts aspects of a uri", "true": "asserts aspects of a uri", "bleu": 1.0, "rouge": 1.0}, {"predict": "a function to find the maximum of two values , but ignoring any double", "true": "a function to find the maximum of two values , but ignoring any double", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets shared lock on the directory block when update", "true": "sets exclusive lock on the directory block when crabbing down for modification", "bleu": 0.473364131565402, "rouge": 0.6499238964992391}, {"predict": "removes a reference from the database that is associated to the user", "true": "removes the reference being stored for the given connection", "bleu": 0.13065113298388567, "rouge": 0.2932692307692307}, {"predict": "tests if queue starts with a letter or digit", "true": "test if the queue matches a word character ( letter or digit )", "bleu": 0.19372466508699207, "rouge": 0.5281385281385281}, {"predict": "construct a new environment variables", "true": "constructs a <unk> environment with two locations , in which <unk> is placed at random", "bleu": 0.040889869516541145, "rouge": 0.18345864661654135}, {"predict": "generates and builds a builds a local class", "true": "generate the source files for the stub and / or skeleton classes needed by rmi for the given remote implementation class", "bleu": 0.03494671304222457, "rouge": 0.12761506276150628}, {"predict": "add long click view id", "true": "add long click view id", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a point from this spawn point", "true": "remove a creature re spawn point from the zone", "bleu": 0.23099966849728554, "rouge": 0.3667334669338677}, {"predict": "construct an ex if y object from xml file", "true": "create a bug from an osb g px xml wp t element", "bleu": 0.12026590852507517, "rouge": 0.1856925418569254}, {"predict": "converts an array of bytes into a long", "true": "converts an array of 8 bytes into a long", "bleu": 0.6598203338556885, "rouge": 0.931297709923664}, {"predict": "decodes unicode escapes", "true": "decodes unicode escapes", "bleu": 1.0, "rouge": 1.0}, {"predict": "pass mouse event straight through to delegate", "true": "pass mouse event straight through to delegate", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove formatting from a line of irc text", "true": "remove formatting from a line of irc text", "bleu": 1.0, "rouge": 1.0}, {"predict": "xor for two negative numbers ; the first is shorter", "true": "xor for two negative numbers ; the first is shorter", "bleu": 1.0, "rouge": 1.0}, {"predict": "the state of the board state as well as the way of each line", "true": "just prints out sorted after the time ( starting with 0 : 00 ) note : this is not the order in which the <unk> happened", "bleu": 0.04460942357504384, "rouge": 0.1423017107309487}, {"predict": "returns true if this l dap name is empty", "true": "determines whether this l dap name is empty", "bleu": 0.6389431042462724, "rouge": 0.7134502923976607}, {"predict": "write local peers to the common log file in this to a p sensor", "true": "this method saves a file with the last record read from the device", "bleu": 0.11114924776032006, "rouge": 0.1491442542787286}, {"predict": "creates organization config instance", "true": "creates organization configuration for the default instance of the service given configuration attributes", "bleu": 0.05355679762998549, "rouge": 0.32218309859154926}, {"predict": "deletes entity domain of entity", "true": "deletes an authentication domain ( circle of trust ) within a given realm", "bleu": 0.06554932163900559, "rouge": 0.3086003372681282}, {"predict": "add a source code remark on the given element and the value of the title attribute as a source element", "true": "add a source code remark on the given element with a preset evidence element collection", "bleu": 0.45298528719709075, "rouge": 0.6451923076923077}, {"predict": "notify the action if a certain type is too far", "true": "user event : single / block delete / insert / overwrite", "bleu": 0.0959156018869021, "rouge": 0.0}, {"predict": "method retrieves the p em encoded data from the stream and returns its decoded representation", "true": "method retrieves the p em encoded data from the stream and returns its decoded representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "saves the specified entity to the specified destination", "true": "saves an entity asynchronously", "bleu": 0.17747405280050269, "rouge": 0.3546511627906977}, {"predict": "tell whether this stream supports the mark ( ) operation", "true": "tell whether this stream supports the mark ( ) operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "encode parts of the message using text compaction as described in iso / iec 15438 : 2001 ( e ) , chapter 4", "true": "encode parts of the message using text compaction as described in iso / iec 15438 : 2001 ( e ) , chapter 4", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the name of a parent relation relating something to the given parent", "true": "follow the most conventional pattern , returns the parent name unchanged", "bleu": 0.12011055432195765, "rouge": 0.2538141470180305}, {"predict": "create a new in t column", "true": "create a new in t column", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a column ( as in \" insert into a structure suitable for use in \" select scope )", "true": "converts a select statement ' s parse tree into a relational expression", "bleu": 0.11154288433080788, "rouge": 0.269018743109151}, {"predict": "executes the script at the specified location and returns the result", "true": "executes the script at the specified location and returns the result", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a implementation of dom test document builder factory using org", "true": "creates a implementation of dom test document builder factory using org", "bleu": 1.0, "rouge": 1.0}, {"predict": "format a rate in the form \" 1 \" , \" - z \"", "true": "formats the rate in <unk> for display as <unk>", "bleu": 0.1250076305588977, "rouge": 0.18100890207715134}, {"predict": "checks whether this iterator has been closed", "true": "checks whether this close able iteration has been closed", "bleu": 0.375738646537643, "rouge": 0.7334669338677354}, {"predict": "start the stop watch", "true": "start the network listening thread", "bleu": 0.36827215283744186, "rouge": 0.43571428571428567}, {"predict": "makes a new sim pli fier for the given package and set of types", "true": "makes a new sim pli fier for the given package and set of types", "bleu": 1.0, "rouge": 1.0}, {"predict": "escapes characters in the string array", "true": "escapes the provided string so that it no longer contains the constants", "bleu": 0.09663861439684919, "rouge": 0.31443298969072164}, {"predict": "converts a name into the format for the correct language", "true": "human readable name of the mode , such as \" c + + \"", "bleu": 0.09351498865776114, "rouge": 0.16180371352785147}, {"predict": "the graphical representation of the series values as text", "true": "the graphical representation of the series values as text", "bleu": 1.0, "rouge": 1.0}, {"predict": "turns the doc document into a string", "true": "convert a document to a string , assuming later encoding to utf - 8", "bleu": 0.09663861439684919, "rouge": 0.2695139911634757}, {"predict": "creates the client to use for testing", "true": "obtain a client connection to the replica set or cluster", "bleu": 0.14390022429682173, "rouge": 0.22803738317757008}, {"predict": "cast a string to a boolean value ( primitive value type )", "true": "cast a string to a boolean value ( primitive value type )", "bleu": 1.0, "rouge": 1.0}, {"predict": "are there more work list items ?", "true": "are there more work list items ?", "bleu": 1.0, "rouge": 1.0}, {"predict": "changes current seed by supplementing a seed argument to the current seed , if this already set ; the argument is used as first seed otherwise", "true": "changes current seed by supplementing a seed argument to the current seed , if this already set ; the argument is used as first seed otherwise", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate an instance of a class file", "true": "outputs the bytecode generated as a class file", "bleu": 0.29969770769039067, "rouge": 0.3952483801295896}, {"predict": "check the configuration for use : 1", "true": "the cff flag determines whether font information should be embedded in the compact font format using swf tag define font 4", "bleu": 0.02513860735449254, "rouge": 0.06552094522019333}, {"predict": "tests an array of strings using the launcher context ' s default generator", "true": "test the image generator", "bleu": 0.10571070857151538, "rouge": 0.2601279317697228}, {"predict": "we can also just a difference between the given string", "true": "<unk> requires the pattern", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "calculates the approximate height of a text , depending on a demo text avoid repeated calls ( e", "true": "calculates the approximate height of a text , depending on a demo text avoid repeated calls ( e", "bleu": 1.0, "rouge": 1.0}, {"predict": "check that the operation has been shutdown and should be shut down", "true": "checks if service is being shutdown", "bleu": 0.10390302174233558, "rouge": 0.1182170542635659}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is called when all tasks are completed", "true": "checks the currently queued tasks if there are ones which are no longer blocked by dependencies and executes them", "bleu": 0.051418956078360945, "rouge": 0.1342134213421342}, {"predict": "call short method v : invoke a virtual method that returns a short value", "true": "call short method v : invoke a virtual method that returns a short value", "bleu": 1.0, "rouge": 1.0}, {"predict": "utility function to draw an horizontal margin indicator", "true": "utility function to draw a vertical margin indicator", "bleu": 0.5133450480401704, "rouge": 0.75}, {"predict": "fires a property change of a boolean property with the given name", "true": "fires a property change of a boolean property with the given name", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove all markers from network", "true": "remove marker icons from panel", "bleu": 0.3021375397356768, "rouge": 0.4}, {"predict": "adds the string that matches the given string", "true": "captures string token from current position according to the current lexical state", "bleu": 0.10764345432696364, "rouge": 0.1930379746835443}, {"predict": "converts a long value to a localized string ( s s ys integer )", "true": "this static method converts the passed in number into a local iz able representation of an integer , with digit grouping using locale dependant separators", "bleu": 0.04791236911996935, "rouge": 0.14639999999999997}, {"predict": "test job handshake packet from client handshake", "true": "tests correct parsing of client handshake packets", "bleu": 0.24446151121745047, "rouge": 0.2857142857142857}, {"predict": "initialize the layout with starting values", "true": "initialize the layout with starting values", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks a stack frame value", "true": "checks a stack frame value", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates a quantitative , linearly scaled layout", "true": "calculates a quantitative , square root scaled layout", "bleu": 0.5154486831107657, "rouge": 0.7904967602591793}, {"predict": "creates a template that is the string that is contained in a single string", "true": "creates a new template based on the string value", "bleu": 0.15310245441182443, "rouge": 0.45252225519287836}, {"predict": "determines whether the cursor should be shown", "true": "return whether or not we should apply the workaround where we take focus for the default button or if that should be determined by the dialog", "bleu": 0.01840235360676039, "rouge": 0.21962196219621963}, {"predict": "initiate signature type by private key", "true": "initiate signature type by private key", "bleu": 1.0, "rouge": 1.0}, {"predict": "selects zones for the initiators in the given set of initiators", "true": "given the map of all existing zones for a set on initiators and ports , this function selects the zones that should be used by vip r", "bleu": 0.04729903977708846, "rouge": 0.19566960705693665}, {"predict": "checks whether the extension of the filename is one of those specified", "true": "checks whether the extension of the filename is one of those specified", "bleu": 1.0, "rouge": 1.0}, {"predict": "write a resource post resource", "true": "write jar post resource", "bleu": 0.3860973950960897, "rouge": 0.6802973977695167}, {"predict": "closes the file opened when creating the mp 4 parser", "true": "close the file", "bleu": 0.16590387014219712, "rouge": 0.34078212290502796}, {"predict": "create a new event listener", "true": "constructs a new single typed event listener", "bleu": 0.3028512683288236, "rouge": 0.6472148541114059}, {"predict": "return a list of node objects that have the given name and are immediate children of the given element ; if name is null , all child elements will be included", "true": "return a list of node objects that have the given name and are immediate children of the given element ; if name is null , all child elements will be included", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a job to the stage", "true": "provides a <unk> instance to work on the given context", "bleu": 0.13487005099534619, "rouge": 0.3588235294117647}, {"predict": "creates a straight - line from the current glyph id and verifies the font id attributes for the swf change", "true": "description of the method", "bleu": 0.06108557268562171, "rouge": 0.09472049689440994}, {"predict": "returns the total number of events in the given array", "true": "computes entropy for an array of integers", "bleu": 0.13950796967929133, "rouge": 0.12151394422310759}, {"predict": "adds a method to this class", "true": "adds the given method to this class", "bleu": 0.5446761861605913, "rouge": 0.7587064676616916}, {"predict": "add a callback to be invoked when a swipe event is sent to this view", "true": "add a callback to be invoked when a swipe event is sent to this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "atomic ally removes all of the elements from this de que", "true": "atomic ally removes all of the elements from this de que", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a replication request to the operation", "true": "authorization related operations should take effect on all replicas , before they complete", "bleu": 0.06628576403773602, "rouge": 0.0}, {"predict": "layer and show an image layer with the it", "true": "shows the initial splash window", "bleu": 0.14113991930789777, "rouge": 0.1506172839506173}, {"predict": "in u u encoded buffers , encoded lines start with a character that represents the number of bytes encoded in this line", "true": "find the end of the line for the next operation", "bleu": 0.06586656967644004, "rouge": 0.20109890109890108}, {"predict": "adds a transaction to the end of this tx", "true": "add a new server transaction to the set of existing transactions", "bleu": 0.23278666914796883, "rouge": 0.4911433172302737}, {"predict": "returns the distance between two pointer touch points", "true": "determine the space between the first two fingers", "bleu": 0.19070828081828378, "rouge": 0.375}, {"predict": "returns true if the method call contains a given method", "true": "search for polymorphic containment based on inheritance of receiver and arguments", "bleu": 0.0959156018869021, "rouge": 0.0}, {"predict": "creates new swing", "true": "instantiate s a new jk tag mapping", "bleu": 0.14162677936694862, "rouge": 0.18654434250764526}, {"predict": "takes an attribute set and set", "true": "filter by attribute set instance", "bleu": 0.2907153684841096, "rouge": 0.3696969696969697}, {"predict": "ensures the given file , overwriting anything , overwriting anything already saved", "true": "opens the save file stream if necessary", "bleu": 0.11498759556447223, "rouge": 0.22101449275362317}, {"predict": "test the journal commit / commit / commit", "true": "test verifies that exact match and find always return the same reference for the same commit record ( at least as long as the test holds a hard reference to the commit record of interest )", "bleu": 0.006089285934824051, "rouge": 0.16310160427807485}, {"predict": "prints an object to this output stream and flushes this output stream", "true": "prints an object to standard output and flushes standard output", "bleu": 0.3541698766144061, "rouge": 0.7393939393939394}, {"predict": "stop the progress file and stop running uploads", "true": "smart lifecycle stop implementation", "bleu": 0.16036590969929357, "rouge": 0.17732558139534885}, {"predict": "reads bytes from a given file reader until either a specified character in is read , the buffer is completely filled or the end of file is reached", "true": "reads bytes from a given file reader until either a certain character is read , the buffer is completely filled or the end of file is reached", "bleu": 0.8409760644533056, "rouge": 0.9485645933014354}, {"predict": "generate the graph file", "true": "generate the graph file", "bleu": 1.0, "rouge": 1.0}, {"predict": "close a byte array output stream passed in", "true": "close a byte array output stream passed in", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests the name of the save point for a single point", "true": "tests behavior when used for a sequence of sql statements", "bleu": 0.17033186037639278, "rouge": 0.28818897637795277}, {"predict": "method for bean context child interface", "true": "method for bean context child interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the extended entity configuration under the realm", "true": "creates the extended entity configuration under the realm", "bleu": 1.0, "rouge": 1.0}, {"predict": "true if the entry is expired", "true": "true if the entry is expired", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the user ' s native image into the screen bar", "true": "loads the user image into the action bar profile pic", "bleu": 0.317023313852343, "rouge": 0.6724409448818898}, {"predict": "direction dependent operations are not used in the left - click key", "true": "returns a direction corresponding to the specified arrow key", "bleu": 0.1235622127262679, "rouge": 0.2932692307692307}, {"predict": "construct a trace graph by a span", "true": "create a new trace graph", "bleu": 0.2626909894424158, "rouge": 0.5154929577464789}, {"predict": "create a date from separate strings for month , day , year , hour , minute , and second", "true": "makes a date from separate strings for month , day , year , hour , minute , and second", "bleu": 0.9457416090031758, "rouge": 0.9473684210526315}, {"predict": "handles completion of a task", "true": "restart a failed task unless exceeding the <unk> limitation", "bleu": 0.13575914775035755, "rouge": 0.2717149220489978}, {"predict": "update the long term at each position and beta", "true": "update the lt p buffer for next frame", "bleu": 0.18575057999133596, "rouge": 0.2378167641325536}, {"predict": "tries to find the configuration files in the class path that contains the configuration files", "true": "finds a log 4 j configuration file in the current working directory", "bleu": 0.11633270842295028, "rouge": 0.22676579925650556}, {"predict": "draws a range marker on the chart perpendicular to the x - axis to mark a value or range of values", "true": "draws a line on the chart perpendicular to the y - axis to mark a value or range of values", "bleu": 0.705417147174719, "rouge": 0.8819277108433734}, {"predict": "attempts to add a word to the end of the word if it is not already added", "true": "attempt to add a word to the line", "bleu": 0.32702929224554894, "rouge": 0.5133239831697054}, {"predict": "this is invoked to tell whether the cloud let is currently preference", "true": "called when m play example is clicked", "bleu": 0.10390302174233558, "rouge": 0.11050724637681159}, {"predict": "read parameters of the header - authenticate header", "true": "read the www - authenticate header", "bleu": 0.3303164318013807, "rouge": 0.7331730769230769}, {"predict": "returns the string representation of the given boolean value", "true": "returns the string value of the given boolean", "bleu": 0.5410822690539396, "rouge": 0.8323586744639376}, {"predict": "test if all the messages sent are being received", "true": "sends and consumes the messages", "bleu": 0.18575057999133596, "rouge": 0.3012345679012346}, {"predict": "adds + live to the query", "true": "adds + live to the query", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the contents at the given uri", "true": "gets the contents at the given uri", "bleu": 1.0, "rouge": 1.0}, {"predict": "use this method to check whether a key is currently valid", "true": "check existence of config section element", "bleu": 0.11390778025531027, "rouge": 0.12423625254582485}, {"predict": "creates a new allocation of a single site", "true": "create an allocation site for a given source code line / column", "bleu": 0.11567041937737582, "rouge": 0.1930379746835443}, {"predict": "draws an image , applying a transform from image space into user space before drawing", "true": "draws an image , applying a transform from image space into user space before drawing", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse the character from a sub array of integers into an integer , where the character is greater than a decimal number", "true": "fast method for parsing integers that are known to fit into regular 32 - bit signed in t type", "bleu": 0.0612957497932821, "rouge": 0.09886547811993517}, {"predict": "creates new form instance of activity monitor", "true": "creates new form activity monitor sample", "bleu": 0.4111336169005197, "rouge": 0.7800511508951408}, {"predict": "convert from lat lng", "true": "returns two locations with the most extreme latitudes on the great circle with the given starting location and azimuth", "bleu": 0.0071055938730635, "rouge": 0.0}, {"predict": "initialize for gui builders", "true": "initialize the service activation check box", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "paint the check mark in enabled state", "true": "paint the check mark in enabled state", "bleu": 1.0, "rouge": 1.0}, {"predict": "find uri characters and equivalent characters , which have equivalent starting characters", "true": "tries to find an index where the supplied uri can be split into a namespace and a local name that comply with the serialization constraints of the turtle format", "bleu": 0.029966440614733122, "rouge": 0.13616071428571427}, {"predict": "write the log file", "true": "write to file log", "bleu": 0.42728700639623407, "rouge": 0.5}, {"predict": "create a new image to disk", "true": "refresh local files from in it al path", "bleu": 0.13309610652103346, "rouge": 0.0}, {"predict": "create a dns record with a name , type , class , and ttl", "true": "create a dns record with a name , type , class , and ttl", "bleu": 1.0, "rouge": 1.0}, {"predict": "indents the specified text , surrounds it with brackets and put the content on a separate line", "true": "indents the specified text , surrounds it with brackets and put the content on a separate line", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an element position to element", "true": "adds the content spec to the given element declaration", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "expands the hash \" spine \" - equivalent to increasing the number of buckets in a conventional hash table", "true": "expands the hash \" spine \" - - equivalent to increasing the number of buckets in a conventional hash table", "bleu": 0.9064567434335018, "rouge": 0.9698744769874479}, {"predict": "this is a separate thread that will reconnect to", "true": "attempts to reconnect to a failed server", "bleu": 0.19960198807747329, "rouge": 0.2557651991614256}, {"predict": "get a collection of all initialize rules", "true": "returns un modifiable collections of records", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "gets a copy of the contents of this writer as a string", "true": "returns the signature that was built by this signature writer", "bleu": 0.1235622127262679, "rouge": 0.2772727272727273}, {"predict": "test whether the name of the difference between the list of meta data", "true": "change event to do why just on var ? should it be returned for get ter / setter props ?", "bleu": 0.04688002076015863, "rouge": 0.0}, {"predict": "reset all components before parsing and namespace context", "true": "reset all components before parsing and namespace context", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a given circle to this circle", "true": "distance between circle center", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "create a new simple command with the provided command name and arguments", "true": "constructs a simple command from the given command name and the list of arguments", "bleu": 0.21543754406384827, "rouge": 0.6069651741293532}, {"predict": "grows the size of the stack", "true": "grows the size of the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the given string in lowercase", "true": "returns the given string in lowercase", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an instance with the specified selection and secondary selection mechanisms", "true": "create an instance with over ides", "bleu": 0.21200626759025185, "rouge": 0.3727087576374745}, {"predict": "breadth - first search implementation on your graph", "true": "breadth - first search implementation for integers", "bleu": 0.5873949094699213, "rouge": 0.6747787610619468}, {"predict": "creates the view and analyzes the type", "true": "creates the view and analyzes the type", "bleu": 1.0, "rouge": 1.0}, {"predict": "check that the number of arguments passed to this function is correct", "true": "check that the number of arguments passed to this function is correct", "bleu": 1.0, "rouge": 1.0}, {"predict": "announce multi cast announcement to the current announcement", "true": "announce membership in the specified groups , and return false if interrupted , otherwise return true", "bleu": 0.06528905536667998, "rouge": 0.15721649484536082}, {"predict": "create a new drawing attributes for a source", "true": "create a drawing attributes with the default settings - clear fill paint and pattern , sold black edge line of width 1", "bleu": 0.046117103733359116, "rouge": 0.24596774193548387}, {"predict": "closes this input stream", "true": "closes this input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates policy tree from organization mbe an", "true": "creates the policy tree , ou = policy , ou = services ,", "bleu": 0.1114789227233716, "rouge": 0.2846034214618974}, {"predict": "rolls back volume returned from source and create the snapshot", "true": "roll back method to clean up stale snapshot volume on storage system", "bleu": 0.12273680279953825, "rouge": 0.1788856304985337}, {"predict": "converts a string denoting an amount of time into milliseconds", "true": "converts a string denoting an amount of time into seconds", "bleu": 0.8931539818068694, "rouge": 0.9}, {"predict": "to detach this activity from the database", "true": "this method should be called in activity on destroy method", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "this menu is used to read the preferences menu", "true": "update button actions from preferences settings", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "tries to add a download object to the active list", "true": "tries to add a download object to the active list", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a expr into t la code t , where t = true", "true": "adds the expression to t la code / t la code next line and its mapping to mapping vector / mapping vector next line", "bleu": 0.08441786206289703, "rouge": 0.25651808242220353}, {"predict": "checks if the internal case is uppercase ;", "true": "true if hunk is longer than 1 character and all letters in the hunk are uppercase", "bleu": 0.0741826891259906, "rouge": 0.23582474226804123}, {"predict": "adds fill components to empty cells in the first row and first column of the grid", "true": "adds fill components to empty cells in the first row and first column of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "see if type = \" foo ! \" , not = \" , \" ) { , \"", "true": "simulate keyboard type to type out a string", "bleu": 0.06809398432036522, "rouge": 0.08265582655826557}, {"predict": "delete an array of strings from picking one", "true": "this function ensures that prefix / suffix sets aren ' t redundant", "bleu": 0.08179133792443427, "rouge": 0.0}, {"predict": "returns a random number between 0 and n - 1", "true": "returns the next random in t", "bleu": 0.13950796967929133, "rouge": 0.26180257510729615}, {"predict": "positions the gesture detector and selected time", "true": "updates the user preference fields", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "stores last used segment in the cache", "true": "store current system time as the last used", "bleu": 0.22772101321113858, "rouge": 0.2634989200863931}, {"predict": "returns true if the given child element can be used for both the given child containment path utility , which is used for reference configure the specified by reducing probability", "true": "takes into account transparency when figuring out what can be contained", "bleu": 0.053091875602826286, "rouge": 0.10645724258289702}, {"predict": "extracts all the entries for all the specified oid in the array of strings", "true": "extract the arcs from an object identifier", "bleu": 0.08839374326825923, "rouge": 0.10132890365448505}, {"predict": "tests whether they are duplicate string", "true": "test case for is duplicate", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "updates the stats based on observed density estimator using conditional scheme", "true": "updates stats for conditional density estimator based on current test instance", "bleu": 0.21200626759025185, "rouge": 0.36363636363636365}, {"predict": "return true if this file should be shown in the directory pane , false if it shouldn ' t", "true": "return true if this file should be shown in the directory pane , false if it shouldn ' t", "bleu": 1.0, "rouge": 1.0}, {"predict": "add two numbers of the same length", "true": "add two numbers of the same length", "bleu": 1.0, "rouge": 1.0}, {"predict": "starts a new socket", "true": "adds a keep alive connection", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "this method will increment the access count for a column by 1 whenever a column is getting used in query or incremental data load", "true": "this method will increment the access count for a column by 1 whenever a column is getting used in query or incremental data load", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a cluster policy with the same cluster name and at the same cluster being created", "true": "creating cluster policy object", "bleu": 0.10123734869668824, "rouge": 0.22426470588235295}, {"predict": "compares two doubles with a possibly - infinite double equality , ignoring any double precision", "true": "compares two doubles for equality", "bleu": 0.16188613565728213, "rouge": 0.43963963963963953}, {"predict": "convert bitmap to byte array", "true": "convert bitmap to byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates new form configure coerce ive parsing dialog nb", "true": "creates new form configure coerce ive parsing dialog nb", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the logarithm of the base number", "true": "gets the log at a certain base of a number", "bleu": 0.15215596197411094, "rouge": 0.34205607476635513}, {"predict": "wraps the priority entry , and add the id as well as part", "true": "api method", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "evaluates the uf 6 problem", "true": "evaluates the uf 6 problem", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a file saver for files related to the specified extension", "true": "constructs save dialog properties", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "reads next variable length block from input", "true": "reads next variable length block from input", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a run of this action to the list", "true": "will add the run to the list", "bleu": 0.2907153684841096, "rouge": 0.639412997903564}, {"predict": "copy an array object into a new object object", "true": "copies all the converters in the set to the given array", "bleu": 0.11301601243449393, "rouge": 0.09822866344605477}, {"predict": "add all output sensor to the passed sensor list will be ignored", "true": "add an output sensor to this route", "bleu": 0.2044800736021839, "rouge": 0.44202898550724634}, {"predict": "initializes the channel and resets its channel channel to be able", "true": "initialize the socket stream with a new socket", "bleu": 0.11390778025531027, "rouge": 0.108348134991119}, {"predict": "resets the state for this activity to its next player , and resets the queue to a new position , or a new state will remove a new more longer in the queue will trigger animation", "true": "resets both media players , and clears the queue", "bleu": 0.058050415117661236, "rouge": 0.24918300653594777}, {"predict": "if a value is present , otherwise do nothing with the value , otherwise do nothing", "true": "if a value is present , invoke the consumer with the value", "bleu": 0.42818185319516083, "rouge": 0.6598557692307692}, {"predict": "send the in ste to the node", "true": "send a dim / bright commands to the x 10 hardware to reach a specific intensity", "bleu": 0.0726217243534906, "rouge": 0.2436750998668442}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the next token from standard input , parses it as a float , and returns the float", "true": "reads the next token from standard input , parses it as a float , and returns the float", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct", "true": "creates a new task scheduler", "bleu": 0.015401555084618098, "rouge": 0.0}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates control width and creates text layouts", "true": "calculates control width and creates text layouts", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the cache and deletes all of its stored values", "true": "closes the cache and deletes all of its stored values", "bleu": 1.0, "rouge": 1.0}, {"predict": "always return true since we wanna get all var s in scope", "true": "always return true since we wanna get all var s in scope", "bleu": 1.0, "rouge": 1.0}, {"predict": "character content from a character array", "true": "inserts a string of characters into the document", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "converts text to human readable format", "true": "converts the supplies iso 8601 duration into a human readable string", "bleu": 0.13576587000692578, "rouge": 0.33516483516483514}, {"predict": "sends a plain text message", "true": "sends a text message to the group", "bleu": 0.3028512683288236, "rouge": 0.6472148541114059}, {"predict": "returns a string object representing this double ' s value", "true": "returns a string object representing this long ' s value", "bleu": 0.7016879391277371, "rouge": 0.9}, {"predict": "remove this thread from the list of running threads", "true": "remove a thread from the list", "bleu": 0.4111336169005197, "rouge": 0.6916099773242631}, {"predict": "create a property event event object", "true": "creates a default dock node event handler that will help this dock pane track the current docking area", "bleu": 0.03308426786106403, "rouge": 0.15288220551378442}, {"predict": "read all properties to log", "true": "reads how much of the source to log", "bleu": 0.1971902775417715, "rouge": 0.2953995157384988}, {"predict": "deletes cod envy license file on disk", "true": "deletes current version of license file in / t mp /", "bleu": 0.14834636222628117, "rouge": 0.32049036777583184}, {"predict": "returns the network number of net recognized by the current test environment for zero", "true": "alias for test net 3 params", "bleu": 0.10511846841633776, "rouge": 0.10777385159010601}, {"predict": "encoding loop on private thread", "true": "encoding loop on private thread", "bleu": 1.0, "rouge": 1.0}, {"predict": "read from the stream in class , of class position", "true": "de - serialize from input stream", "bleu": 0.13950796967929133, "rouge": 0.26180257510729615}, {"predict": "updates the bounds for the fast scroller", "true": "updates the bounds for the fast scroller", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d netscape ca policy url dialog", "true": "creates a new d netscape ca policy url dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the key typed into the text box , text text box , and text box text into the text box", "true": "call this method from your gui screen to process the keys into the text box", "bleu": 0.16923267918690046, "rouge": 0.28638497652582157}, {"predict": "locate the best instance of ' pattern ' in ' text ' near ' loc ' using the bit ap algorithm", "true": "locate the best instance of ' pattern ' in ' text ' near ' loc ' using the bit ap algorithm", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a directory in the parent directory", "true": "creates a new directory with the given parent folder and folder name", "bleu": 0.11434175042957104, "rouge": 0.40197693574958815}, {"predict": "is operating system linux ?", "true": "is operating system windows 8 or 8", "bleu": 0.3406115671352173, "rouge": 0.48541114058355433}, {"predict": "finds all function functions that are used in the function interface", "true": "find unused functions in a unit", "bleu": 0.12605968092174913, "rouge": 0.2484725050916497}, {"predict": "adds items to list", "true": "adds the items to the list", "bleu": 0.3258798048281462, "rouge": 0.7721518987341772}, {"predict": "returns a list containing no proxy elements in the specified proxy list", "true": "gets an un modifiable proxy list that will have as it ' s only entry an direct proxy", "bleu": 0.08912425958886255, "rouge": 0.12869198312236285}, {"predict": "adds an array of definitions to the existing list of definitions", "true": "adds a list of definitions to the existing list of definitions", "bleu": 0.7292571723872933, "rouge": 0.8181818181818181}, {"predict": "adds a new observation with the specified value and group", "true": "adds a new observation with the specified value and group", "bleu": 1.0, "rouge": 1.0}, {"predict": "counts a referenced header ( counts and counts for field ( i", "true": "add the given v cf record to the statistics", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "read some bytes from the stream", "true": "read some bytes from the stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new ld if entry reader which will read lines of ld if from the provided array of ld if lines", "true": "creates a new ld if entry reader which will read lines of ld if from the provided array of ld if lines", "bleu": 1.0, "rouge": 1.0}, {"predict": "update the stats info in the current page", "true": "a person may re - appear on the same link", "bleu": 0.12489309605176803, "rouge": 0.10892857142857142}, {"predict": "remove item at the given position", "true": "remove item at the given position", "bleu": 1.0, "rouge": 1.0}, {"predict": "check license that were used to populate basic metadata - used positions on basic metadata page ) license names : license texts - used to populate text area on basic metadata page", "true": "present the <unk> to the user - if the pre accept parameter is set , then simply display them through system", "bleu": 0.04180647946097227, "rouge": 0.07840616966580977}, {"predict": "add an existing tiff key to the registry", "true": "add an existing geo key to the directory", "bleu": 0.43167001068522526, "rouge": 0.75}, {"predict": "produces a string gts whose values are two gts instances", "true": "detect patterns in a geo time serie instance", "bleu": 0.12605968092174913, "rouge": 0.11338289962825278}, {"predict": "return - dump for the next - larger string", "true": "debug method : output all item sets", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "flatten a boolean into an xml serialize r", "true": "flatten a boolean into an xml serialize r", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a default rule", "true": "will add the rule to the rules list", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "constructs a new elide", "true": "builds a new skype connection without connecting to anything", "bleu": 0.1354797537848421, "rouge": 0.28773584905660377}, {"predict": "called from on touch event to end a drag operation", "true": "called from on touch event to end a drag operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a flags to the output", "true": "or new flags with existing flags", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "does the supplied key store contain the key store", "true": "check whether or not a trusted certificate in the supplied key store matches the supplied x", "bleu": 0.18888540073339224, "rouge": 0.38077403245942576}, {"predict": "remove last articles , which is not relevant after date is available , but not remove destination with old db", "true": "delete given amount of last updated articles from db", "bleu": 0.07264339766175722, "rouge": 0.22208737864077668}, {"predict": "move all views ( excluding headers and footers ) held by this abs list view into the supplied list", "true": "move all views ( excluding headers and footers ) held by this two way abs list view into the supplied list", "bleu": 0.821383861063855, "rouge": 0.941510966693745}, {"predict": "constructs a new proxy ver i fier with the proxy interface and the proxy class loader", "true": "returns a ver i fier for the smart proxies of the specified mahal o server proxy", "bleu": 0.1702602472176709, "rouge": 0.4375}, {"predict": "called for every time the display in this method is useful for debugging", "true": "displays our component in the location ( 0 , translate y )", "bleu": 0.10571070857151538, "rouge": 0.08058124174372522}, {"predict": "inserts any necessary separators and whitespace before a name", "true": "inserts any necessary separators and whitespace before a name", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies data from an input stream to an output stream using a buffer of specified size", "true": "copies data from an input stream to an output stream using a buffer of specified size", "bleu": 1.0, "rouge": 1.0}, {"predict": "test the configuration files option with copying of sub directory as - is", "true": "test the configuration files option with copying of sub directory as - is", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the provided number of milliseconds to the required number of bytes", "true": "add two long integers , checking for overflow", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "write each of the canonical nodes to the x st", "true": "serializes the general qualifier", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "add a check box for gui", "true": "adds a pre configured j check box to the specified container , setting its alignment constraint to left and adding an empty padding border", "bleu": 0.015553181121654934, "rouge": 0.1804733727810651}, {"predict": "draws the background for the plot", "true": "draws the background for the plot", "bleu": 1.0, "rouge": 1.0}, {"predict": "push the state of this object to what it was when the previous animation was called", "true": "push the current graphics state on to the stack", "bleu": 0.1203921753741131, "rouge": 0.4212707182320442}, {"predict": "drop a full text index for a database and prepared statement", "true": "drop an existing full text index for a table", "bleu": 0.43361890903486755, "rouge": 0.6110183639398998}, {"predict": "gets but does not remove the head of the queue", "true": "gets but does not remove the head of the queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a processor to the end of the processor queue", "true": "adds a processor to the internal processor queue", "bleu": 0.5193071778680676, "rouge": 0.7936802973977695}, {"predict": "computes and returns the given data buffer for an integer operation to be opcode during the correct operation , utils", "true": "adds a copy of the given byte array as a data element ( i", "bleu": 0.08638804535733371, "rouge": 0.18227091633466133}, {"predict": "initializes the resource name with configuration information , u sally set by the administrators", "true": "initializes the resource name with configuration information , u sally set by the administrators", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete an old , free pool entry to make room for a new one", "true": "delete an old , free pool entry to make room for a new one", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert less than one thousand", "true": "convert less than one thousand", "bleu": 1.0, "rouge": 1.0}, {"predict": "get true if the base 64 of an embedded base 64 string", "true": "detect if an uri represents an embedded base 64 image", "bleu": 0.3026643726685863, "rouge": 0.46212121212121204}, {"predict": "change listener ( new state )", "true": "for internal use only", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "parses link label and returns the corresponding integer", "true": "attempt to parse a link label , returning number of characters parsed", "bleu": 0.12801036176909558, "rouge": 0.1930379746835443}, {"predict": "inserts the comments from the document fragment into the comments list", "true": "this method try to attributes the nodes received to child of the node", "bleu": 0.10510262682013449, "rouge": 0.1641991924629879}, {"predict": "reads the given file into a string", "true": "dev uel ve el conte ni do de un file como string", "bleu": 0.10063351655856649, "rouge": 0.20098846787479407}, {"predict": "invoked when a processing exception occurs", "true": "invoked when an unexpected exception occurred during processing", "bleu": 0.236682065782701, "rouge": 0.4178082191780822}, {"predict": "checks if the user should have access to the app", "true": "checks if the user should have access to the app", "bleu": 1.0, "rouge": 1.0}, {"predict": "close the save file", "true": "saves and closes the track", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "returns the index of one of the available operators randomly selected using the probabilities", "true": "returns the index of one of the available operators randomly selected using the probabilities", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string list from the chunk of the string", "true": "returns a list of string chunks , derived from a given string", "bleu": 0.17357605112141905, "rouge": 0.44721407624633425}, {"predict": "this method will convert boolean to a boolean", "true": "this method will convert boolean to string with comma separated", "bleu": 0.5653934257689434, "rouge": 0.6535714285714286}, {"predict": "208 * decode the contents of the string into a byte buffer", "true": "decode the contents of the string into a byte buffer", "bleu": 0.8242367502646054, "rouge": 0.9242424242424241}, {"predict": "removes all the instances from the model", "true": "clears the content of the panel", "bleu": 0.20556680845025982, "rouge": 0.31202046035805625}, {"predict": "tries to fold a given number of background images into convex quadrilateral", "true": "get a brighter shade of an input color", "bleu": 0.11498759556447223, "rouge": 0.2074829931972789}, {"predict": "stops the thread pool", "true": "shuts down the network thread , this will trigger failures if you have network requests", "bleu": 0.025419978385188596, "rouge": 0.190625}, {"predict": "this ctor interprets the byte array as a sequence of characters to send", "true": "this ctor interprets the byte array as a sequence of characters to send", "bleu": 1.0, "rouge": 1.0}, {"predict": "executed when the asynchronous send callback is completed", "true": "executed when the i / o has completed", "bleu": 0.3155984539112945, "rouge": 0.5}, {"predict": "write the go lom b code of a value", "true": "write the go lom b code of a value", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new force function to the simulator", "true": "add a new force function to the simulator", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a number to a metric value ( reference type )", "true": "work around for google g son parser emitting numbers as ' lazily parsed ' numbers", "bleu": 0.06658411377036827, "rouge": 0.0}, {"predict": "gets the overlap between this sequence and end points", "true": "test whether the specified range overlaps the current region", "bleu": 0.14113991930789777, "rouge": 0.1111111111111111}, {"predict": "constructs a new enumerated distribution based on the given concatenated", "true": "creates a new <unk> object", "bleu": 0.16590387014219712, "rouge": 0.2837209302325582}, {"predict": "prepare - e", "true": "prepare - e", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if this url is working or not", "true": "method to quickly indicate if the service is not configured", "bleu": 0.1485237584394808, "rouge": 0.3267857142857143}, {"predict": "convert a csv list into an array of strings", "true": "convert a csv list into an array of strings", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will be used to read the byte array from file based on offset and length ( number of bytes ) need to read", "true": "this method will be used to read the byte array from file based on offset and length ( number of bytes ) need to read", "bleu": 1.0, "rouge": 1.0}, {"predict": "fatal exception : return a fatal error", "true": "fatal error : print a message and terminate the vm", "bleu": 0.18094495256969623, "rouge": 0.34205607476635513}, {"predict": "move a file to a backup", "true": "move original file to backup directory", "bleu": 0.3303164318013807, "rouge": 0.6666666666666666}, {"predict": "push a pair of nodes into the stack", "true": "push a pair of nodes into the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "stop the storage with the given parameters", "true": "clears storage in preparation for restore operation", "bleu": 0.18575057999133598, "rouge": 0.14285714285714285}, {"predict": "append the specified container into the cloud", "true": "cloud specific container config options", "bleu": 0.20556680845025982, "rouge": 0.17183098591549298}, {"predict": "removes users from the people container", "true": "removes users from the organization", "bleu": 0.6147881529512643, "rouge": 0.7393939393939394}, {"predict": "checks to see if the filename matches one of the wildcard s", "true": "checks to see if the filename matches one of the wildcard s", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the region from the model", "true": "include a region in the model", "bleu": 0.31239399369202553, "rouge": 0.5}, {"predict": "a utility function to close an input stream without raising an exception", "true": "a utility function to close an input stream without raising an exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "called by the start of an element ; group name & lt ; element & gt ;", "true": "this function fetches the request id value of the batch request xml element and call the default implementation ( super )", "bleu": 0.06789611016977404, "rouge": 0.15495342929720574}, {"predict": "closes all connected clients sockets , then closes the underlying server socket channel , effectively killing the server socket selector thread , freeing the port the server was bound to and stops all internal worker threads", "true": "closes all connected clients sockets , then closes the underlying server socket channel , effectively killing the server socket selector thread , freeing the port the server was bound to and stops all internal worker threads", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new instance of the storage", "true": "creates new instance of storage for storing temporary data", "bleu": 0.27470644934024185, "rouge": 0.48897795591182364}, {"predict": "calculates the width and stores it in the render er state", "true": "calculates the bar width and stores it in the render er state", "bleu": 0.7918754728665413, "rouge": 0.949080622347949}, {"predict": "opens the camera and starts sending preview frames to the underlying detector", "true": "opens the camera and starts sending preview frames to the underlying detector", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a break point listener", "true": "adds a break point listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the peer callback object", "true": "updates the container", "bleu": 0.35930411196308426, "rouge": 0.5236051502145923}, {"predict": "removes and signals threads from queue for phase", "true": "removes and signals threads from queue for phase", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an initialized dateformat object", "true": "returns an initialized dateformat object", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints the stack trace to system", "true": "used in environments where full debug may not be available", "bleu": 0.09536752763778475, "rouge": 0.0}, {"predict": "looks up the given type element for a type", "true": "check the name of a type and its enclosed elements and type parameters", "bleu": 0.135323305042906, "rouge": 0.26406926406926406}, {"predict": "creates a new block", "true": "create a new block with default style at ( start x , start y )", "bleu": 0.042751137399864, "rouge": 0.2859375}, {"predict": "returns a poisson distribution for a poisson distribution with mean 1", "true": "returns value for poisson distribution", "bleu": 0.17033186037639278, "rouge": 0.5362637362637362}, {"predict": "finds the expression by the given source", "true": "recursive parsing statement", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "add the channel to the list of connections", "true": "adds the given channel to this set of stored states , broadcasting the contract and refund transactions when the channel expires and notifies the wallet of an update to this wallet extension", "bleu": 0.013828950874622525, "rouge": 0.22559171597633138}, {"predict": "deletes all files in a folder", "true": "deletes all files in a folder", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the data from a input stream to a file", "true": "convenient way of sending data from an input stream to an output file in the most efficient way possible", "bleu": 0.12189858500919001, "rouge": 0.3918629550321199}, {"predict": "releases the underlying receiver", "true": "releases the underlying receiver", "bleu": 1.0, "rouge": 1.0}, {"predict": "trim all occurrences of the supplied leading character from the given string", "true": "trim all occurrences of the supplied leading character from the given string", "bleu": 1.0, "rouge": 1.0}, {"predict": "retrieves and removes the head of this queue , waiting if necessary until an element with an expired delay is available on this queue", "true": "retrieves and removes the head of this queue , waiting if necessary until an element with an expired delay is available on this queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the thread safe thread will be run but the timer would be scheduled for monitoring", "true": "schedules time out on the timer wheel in a thread - safe manner", "bleu": 0.101824256461955, "rouge": 0.19934640522875816}, {"predict": "submits task to execution pool", "true": "submits task to execution pool", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the attribute selection ( selector ) to the session", "true": "adds the given attribute selection", "bleu": 0.2086130724305753, "rouge": 0.5674418604651164}, {"predict": "creates the buffer containing any left over bytes", "true": "creates the buffer containing any left over bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "samples the given value as a new action values", "true": "returns a sample point for the action , assuming a uniform distribution over the action values", "bleu": 0.0969633851135701, "rouge": 0.3046192259675406}, {"predict": "on open we manage some statistics , and delete this connection handler", "true": "on close we manage some statistics , and remove this connection from the channel group", "bleu": 0.4162258679097663, "rouge": 0.6535714285714286}, {"predict": "method used to configure the head of the simulation", "true": "load in headless mode a specified model and create an experiment", "bleu": 0.09503475972243516, "rouge": 0.0}, {"predict": "checks if this id is equal to the ' next ' execution window", "true": "determines if this id corresponds to the ' next ' execution window", "bleu": 0.6162607099729586, "rouge": 0.8058124174372522}, {"predict": "check whether the given class is visible in the given class loader", "true": "check whether the given class is visible in the given class loader", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the head of the queue", "true": "remove the event and save the response into the other path", "bleu": 0.10624253482403696, "rouge": 0.2234432234432234}, {"predict": "constructs a xml builder", "true": "returns a xml for displaying attribute in property sheet", "bleu": 0.1354797537848421, "rouge": 0.28773584905660377}, {"predict": "returns true if the argument is an one - less than or more element", "true": "returns true if the at g string matches the name of the arg , or , if allow <unk> is true , returns true if the arg length is one and it matches the first letter of the arg name", "bleu": 0.0431958912319161, "rouge": 0.20446927374301674}, {"predict": "appends a string list to a list , in string", "true": "adds all items in the specific array to the specific list", "bleu": 0.13564514503163538, "rouge": 0.18885448916408668}, {"predict": "remove the super card from the list of super card nodes", "true": "removes a supercard toast from the list", "bleu": 0.21200626759025185, "rouge": 0.3472485768500949}, {"predict": "test based on some sample data", "true": "test based on some sample data", "bleu": 1.0, "rouge": 1.0}, {"predict": "a function that generates password - based aes & h mac keys", "true": "a function that generates password - based aes & h mac keys", "bleu": 1.0, "rouge": 1.0}, {"predict": "partially un qualifies a qualified value", "true": "escapes the provided assertion value according to the l dap standard", "bleu": 0.09600096733558854, "rouge": 0.1117216117216117}, {"predict": "filter the child view at index and remove it if appropriate", "true": "filter the child view at index and remove it if appropriate", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if a declaration has already been made for a given prefix", "true": "check if a declaration has already been made for a given prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new message to the end of a step", "true": "executes one simulation step", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "calculate attacking status codes for attacking this rp entity ( with an accompanying order )", "true": "manage attack status rate", "bleu": 0.08225964699966554, "rouge": 0.11753371868978806}, {"predict": "convenience method used by subclasses", "true": "the function supplied here may be called more than once per vertex depending on the implementation", "bleu": 0.025437622301677208, "rouge": 0.0}, {"predict": "releases any changes in milliseconds", "true": "changes the state of a connection desc from busy to idle and records the current time so that we will know how long it has been idle", "bleu": 0.0033518621807937647, "rouge": 0.05560619872379216}, {"predict": "for each shard , executes a replica host and check for that the shard is for that shard , and for each replica of the shard", "true": "validate if there is less replicas than requested to remove", "bleu": 0.04668049023095243, "rouge": 0.060396039603960394}, {"predict": "return this as a class declaration or throw an unsupported operation exception", "true": "return this as a class declaration or throw unsupported operation exception", "bleu": 0.7611606003349892, "rouge": 0.9640804597701149}, {"predict": "converts a partition spec to a name separated by spaces", "true": "converts a map of partition key - value pairs to a name", "bleu": 0.2374142677623577, "rouge": 0.5366568914956013}, {"predict": "convert the specified char sequence to an input stream , encoded as bytes using the specified character encoding", "true": "convert the specified char sequence to an input stream , encoded as bytes using the specified character encoding", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "regression test for harmony - 4396", "true": "regression test for harmony - 4396", "bleu": 1.0, "rouge": 1.0}, {"predict": "method used to delete a sync take uploaded images and save it to mongo db", "true": "method delete cheque remove cheque from db by id", "bleu": 0.09782375748961449, "rouge": 0.26180257510729615}, {"predict": "compute the correlation correlation between a default instance of data matrix", "true": "assumes that the given co variance matrix was extracted in such a way that the order of the variables ( in either direction ) is x , y , z 1 ,", "bleu": 0.021229058981052696, "rouge": 0.12824106517168885}, {"predict": "add a column to this class", "true": "add a derived column to this table , using an expression instance to dynamically calculate the column data values", "bleu": 0.05601045625155317, "rouge": 0.36570743405275774}, {"predict": "increments the put time accumulator", "true": "increments put and get time accumulators", "bleu": 0.2658156069371863, "rouge": 0.5366568914956013}, {"predict": "check whether the specified saturation is valid or not", "true": "check whether the specified saturation is valid or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert cell to string ( cell simple size )", "true": "utility method to parse a cell definition for a particular value", "bleu": 0.12507277759788113, "rouge": 0.19645732689210954}, {"predict": "this method tests if a property change is changed", "true": "call for circuit builder to make icon color changes for its gui", "bleu": 0.08504083946364166, "rouge": 0.0}, {"predict": "runs the given command to consumer with one command", "true": "run command cm d in separate process in directory", "bleu": 0.14113991930789777, "rouge": 0.1111111111111111}, {"predict": "returns the selectable channel", "true": "returns the socket channel underlying this socket com m channel", "bleu": 0.11337974147240094, "rouge": 0.3978260869565217}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a string from its xml tag", "true": "creates a mojang son string from the given byte array tag", "bleu": 0.15685718045401453, "rouge": 0.4273204903677758}, {"predict": "adds a number of choo sable file names to use", "true": "add filter ( s ) for possible types to the input file choose r", "bleu": 0.09351498865776114, "rouge": 0.08090185676392574}, {"predict": "windows reg to pool value actual ( )", "true": "retries <unk> um value ex ( ) max attempts times before giving up", "bleu": 0.12139281957861149, "rouge": 0.2739520958083832}, {"predict": "parse the entire text using the format", "true": "parses the value as an rfc 822 date / time", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "when empty query index is sorted un sorted fields closes the doc query", "true": "test sorts when there ' s nothing in the index", "bleu": 0.1135935489027116, "rouge": 0.1781021897810219}, {"predict": "creates a model for a particular data set", "true": "validates all resources in a given model , which is expected to be the default graph of a given data set", "bleu": 0.049422115544674704, "rouge": 0.3190376569037656}, {"predict": "adds a new annotation object to the set of annotations", "true": "adds specified annotation to the end of annotations array and tagged it", "bleu": 0.18578670478212825, "rouge": 0.5366568914956013}, {"predict": "attempts to find the preferred idp request and config id", "true": "finds the preferred idp from the http ser v let request", "bleu": 0.22447582175704436, "rouge": 0.37770897832817335}, {"predict": "check if all directories exist", "true": "verify whether directory already exists or not", "bleu": 0.15388864725803575, "rouge": 0.0}, {"predict": "assert the specified values have been received in the declared order", "true": "assert the specified values have been received in the declared order", "bleu": 1.0, "rouge": 1.0}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds the event position that is closest to the given time the cell in the row", "true": "finds the position in the cursor of the event that best matches the time and id", "bleu": 0.16659659447684105, "rouge": 0.375}, {"predict": "prints a float followed by a newline", "true": "prints a float followed by a newline", "bleu": 1.0, "rouge": 1.0}, {"predict": "extracts the register of a sub register", "true": "extracts a sub register ( like a x , al , ah ) from a parent register ( like <unk> x )", "bleu": 0.04488665805698605, "rouge": 0.2523267838676318}, {"predict": "post processing on failed authentication", "true": "post processing on failed authentication", "bleu": 1.0, "rouge": 1.0}, {"predict": "build the given method", "true": "build <unk> of method", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "build a qualifier regular expression including a qualifier", "true": "just used for like and not like", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "returns a set of changes for some key in a data object", "true": "scans the methods looking for ones annotated with the name annotation", "bleu": 0.10390302174233558, "rouge": 0.08764367816091953}, {"predict": "remove all code that were left from the cf block", "true": "remove all phi instructions from the ir", "bleu": 0.2086130724305753, "rouge": 0.48605577689243035}, {"predict": "returns the number of times the token appears in the target", "true": "returns the number of times the token appears in the target", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method computes the description using the test suite from the tests to preserve the given tests", "true": "builds the name map based on coverage goal stored as covered in each of the tests", "bleu": 0.10216198665886358, "rouge": 0.18281718281718282}, {"predict": "builds interceptor lists together for methods of the given resource", "true": "build <unk> of action", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "check gml footprint validity", "true": "check gml footprint validity", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a timetable ( network change events file )", "true": "creates a timetable ( network change events file )", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute pro bit ( inverse cd f ) for exp gamma distributions", "true": "compute pro bit ( inverse cd f ) for log gamma distributions", "bleu": 0.7910665071754358, "rouge": 0.9166666666666665}, {"predict": "generate a pbe based key suitable for a mac algorithm , the key size is chosen according the mac size , or the hashing algorithm , whichever is greater", "true": "generate a pbe based key suitable for a mac algorithm , the key size is chosen according the mac size , or the hashing algorithm , whichever is greater", "bleu": 1.0, "rouge": 1.0}, {"predict": "the quick assist assistant", "true": "the quick assist assistant", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a byte at the specified offset from this native object ' s base address", "true": "writes a byte at the specified offset from this native object ' s base address", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a validation error to the validation error", "true": "add a new validation error to the accumulating validation errors", "bleu": 0.4133650395148845, "rouge": 0.7624999999999998}, {"predict": "parses a value setting string for option values", "true": "parses a given option setting string to a map of settings", "bleu": 0.1909027782642041, "rouge": 0.4093959731543625}, {"predict": "processes the client credentials", "true": "generates client ' s credentials given the client ' s salt , identity and password", "bleu": 0.0324838397986111, "rouge": 0.190625}, {"predict": "this method builds the common core index files", "true": "build the underlying luce ne suggester", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "callback when tour is being cancelled", "true": "loads the given json data and start the tour", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "open the j mx connection and collect the m beans", "true": "create a connection to the j mx agent and setup the m x bean proxies", "bleu": 0.1818513197242336, "rouge": 0.46329113924050636}, {"predict": "performs a random test of the word", "true": "runs a test which serializes and de serializes random word values", "bleu": 0.1319006407505858, "rouge": 0.32049036777583184}, {"predict": "registers a listener to receive events", "true": "registers a listener to receive events", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a unique name with data loaded", "true": "create a name for a message according to < a href = \" http : / / cr", "bleu": 0.04270613179243733, "rouge": 0.14823815309842042}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is called when the user clicks on the mouse pointer ( to handle )", "true": "handles a ' click ' on the plot by updating the anchor values", "bleu": 0.10878661088699644, "rouge": 0.14055299539170507}, {"predict": "adjusts list of instructions in both the code generation", "true": "the osr barrier instruction is not in ir , so the bc index was not adjusted in osr adjust bc index", "bleu": 0.04117308135088016, "rouge": 0.12436289500509684}, {"predict": "used to have some meaningful info on this object", "true": "used to have some meaningful info on this object mostly used for bean shell", "bleu": 0.573753420737433, "rouge": 0.7530864197530865}, {"predict": "merges the data into the concatenation of the vector", "true": "returns a copy of the vector , with an empty bit range inserted at the specified location", "bleu": 0.11419133232289488, "rouge": 0.2186379928315412}, {"predict": "creates a unique new temporary directory under \" java", "true": "creates a unique new temporary directory under \" java", "bleu": 1.0, "rouge": 1.0}, {"predict": "synchronizes the au th data collection for all authentication data in the stored data store", "true": "ensures that all au th sources have au th data ( e", "bleu": 0.16188613565728213, "rouge": 0.22676579925650556}, {"predict": "creates an element in the given xml document", "true": "creates an element in the xml encryption specification namespace", "bleu": 0.5387410466197604, "rouge": 0.6984732824427481}, {"predict": "move all views remaining in m active views to m scrap views", "true": "move all views remaining in m active views to m scrap views", "bleu": 1.0, "rouge": 1.0}, {"predict": "draw wind on loading animation", "true": "draw wind on loading animation", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if we have proxy configuration settings in the properties", "true": "checks if we have proxy configuration settings in the properties", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if the expression is equal to its default static value", "true": "check if the expression is equal to its default static value", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse key - value pairs to map , ignore empty key", "true": "parse key - value pairs to map , ignore empty key", "bleu": 1.0, "rouge": 1.0}, {"predict": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "true": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes a new buffer available either by allocating a new one or re - cycling an existing one", "true": "makes a new buffer available either by allocating a new one or re - cycling an existing one", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new website address from | origin or host or pattern |", "true": "creates a new website address from | origin or host or pattern |", "bleu": 1.0, "rouge": 1.0}, {"predict": "test of a simple file with nothing", "true": "test verifies that no files are found using a <unk> en <unk> unique base name", "bleu": 0.06555660318294844, "rouge": 0.17062937062937064}, {"predict": "clears pending ramming attack from this phase", "true": "resets the pending rams list", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "add the pad bytes to the passed in block , returning the number of bytes added", "true": "add the pad bytes to the passed in block , returning the number of bytes added", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a page to the page", "true": "add a collection of commands to the page list", "bleu": 0.29654680334613515, "rouge": 0.6434599156118143}, {"predict": "returns a string representation of the matrix", "true": "returns a string representation of the system", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "inserts a sequence of statements before the start of this sequence when the sequence object is not null , otherwise does nothing", "true": "adds a sequence of statements to the end of this sequence when the sequence object is not null , otherwise does nothing", "bleu": 0.747357556981764, "rouge": 0.8636363636363636}, {"predict": "notify all target activity events", "true": "call back from service to activity", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "sensitivity in percent to a percent change in the underlying forward price", "true": "sensitivity in percent to a percent change in the underlying spot price", "bleu": 0.842362674378975, "rouge": 0.9166666666666665}, {"predict": "reads the contents of http entity into a byte", "true": "reads the contents of http entity into a byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the first foo in the ordered set where u u id = & # 63 ;", "true": "returns the first foo in the ordered set where u u id = & # 63 ;", "bleu": 1.0, "rouge": 1.0}, {"predict": "rounds the given float to the next decimal value", "true": "static method to round a float value to the number of decimal places defined by decimal places", "bleu": 0.09081302407530907, "rouge": 0.29151732377538825}, {"predict": "creates a new instance of the specified callback stores its environment configured settings", "true": "this runner needs runner options ( user configurations ) and environment name ( inputted by user )", "bleu": 0.07022101421400616, "rouge": 0.06510138740661686}, {"predict": "returns a string describing this result listener", "true": "returns a string describing this result producer", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "is operating system windows and the following operating system", "true": "is operating system windows me ?", "bleu": 0.392814650900513, "rouge": 0.5532879818594103}, {"predict": "converts the given date to a string with special missing value handling", "true": "converts the input to a string with special missing value handling", "bleu": 0.7016035864257111, "rouge": 0.8764367816091955}, {"predict": "computes the size of this form component based on the provided form spec and the number of components", "true": "computes and returns the pixel size of the given component using the given form specification , measures , and cell size", "bleu": 0.10250058233345427, "rouge": 0.4046434494195688}, {"predict": "start the next generated segment", "true": "start up this replica , which possibly requires heavy copying of files from the primary node , if we were down for a long time", "bleu": 0.005533842072529231, "rouge": 0.11902439024390245}, {"predict": "are two nodes for each node type node type", "true": "checks if i element type of both nodes are the same", "bleu": 0.1343994460963362, "rouge": 0.09822866344605477}, {"predict": "returns the next line of logs that were unable to read through the pattern", "true": "read one log message from log file", "bleu": 0.08839374326825923, "rouge": 0.10132890365448505}, {"predict": "appends this node ' s text content to the given builder", "true": "appends this node ' s text content to the given builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if a response message contains a body", "true": "checks if a response message contains a body", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the database from the given input stream", "true": "loads the database from the given input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "cast a long value to a string", "true": "cast a long value to a string", "bleu": 1.0, "rouge": 1.0}, {"predict": "resets this stream to the beginning of the source string", "true": "resets this stream to the beginning of the source string", "bleu": 1.0, "rouge": 1.0}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "implements input stream", "true": "implements input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a char sequence to a file creating the file if it does not exist using the default encoding for the vm", "true": "writes a char sequence to a file creating the file if it does not exist using the default encoding for the vm", "bleu": 1.0, "rouge": 1.0}, {"predict": "compares this object to its other", "true": "checks if the identity provider is configured for proxy ing the authentication requests for a requesting service provider", "bleu": 0.02513860735449254, "rouge": 0.0}, {"predict": "this compile the specified object", "true": "creates a copy of rules", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "remove all of the listeners", "true": "remove all of the listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a selection input dialog whose combo box can be editable", "true": "create a selection input dialog whose combo box can be editable", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method builds the common persistent upgrade file", "true": "build the underlying luce ne suggester", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "convert a \"", "true": "convert a \"", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new uri instance of the given un encoded component parts", "true": "creates a new uri instance of the given un encoded component parts", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the specified solution to the population , returning its assigned identifier", "true": "adds the specified solution to the population , returning its assigned identifier", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets byte array output stream", "true": "creates a newly allocated byte array", "bleu": 0.2941733261715515, "rouge": 0.3577712609970674}, {"predict": "create a disk based on the specified project", "true": "create a disk in the specified project", "bleu": 0.43167001068522526, "rouge": 0.8097345132743362}, {"predict": "performs the given domain name based on the host and domain", "true": "performs domain - match as described in the netscape draft", "bleu": 0.1354599427337814, "rouge": 0.28818897637795277}, {"predict": "disables the attribute name", "true": "disables all the attribute change notifications the attribute name of which equals the specified attribute name to be sent to the listener", "bleu": 0.007855246784369016, "rouge": 0.273542600896861}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the instruction to push the given handle on the stack", "true": "generates the instruction to push a handle on the stack", "bleu": 0.6340466277046861, "rouge": 0.8645669291338582}, {"predict": "generate the multi - part post body providing the parameters and boundary string", "true": "generate the multi - part post body providing the parameters and boundary string", "bleu": 1.0, "rouge": 1.0}, {"predict": "look up a character value for the given key", "true": "lookup a string key in the standard key sets", "bleu": 0.16784459625186196, "rouge": 0.3333333333333333}, {"predict": "assert that the expected port change events have been re ce vied , asserting the expected ordering", "true": "assert that the expected port change events have been re ce vied , asserting the expected ordering", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method checkpoints the checkpoints", "true": "custom serialize r", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "get a depending on the node selected by this node", "true": "* public properties *", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "decode the on - the - wire bytes from the given byte buffer", "true": "decodes octets to characters using the utf - 8 decoding and appends the characters to a string buffer", "bleu": 0.08176074349645106, "rouge": 0.25077081192189105}, {"predict": "construct a vector from an array of elements", "true": "construct a vector by appending one vector to another vector", "bleu": 0.2324522441081612, "rouge": 0.3267857142857143}, {"predict": "reverses ongoing animations or starts pending animations in reverse", "true": "reverses ongoing animations or starts pending animations in reverse", "bleu": 1.0, "rouge": 1.0}, {"predict": "start address book monitoring", "true": "start address book monitoring", "bleu": 1.0, "rouge": 1.0}, {"predict": "support for reporting changes for constrained integer properties", "true": "support for reporting changes for constrained integer properties", "bleu": 1.0, "rouge": 1.0}, {"predict": "we use this auto di rich let er to check the model", "true": "correctness test for the di rich let lm model", "bleu": 0.21401603033752975, "rouge": 0.39102564102564097}, {"predict": "sets the urn for the given writes , partition , and sets the callback for each entry", "true": "called when the sinks found by the media route provider for the particular | source urn | have changed", "bleu": 0.10051217619023026, "rouge": 0.16501352569882777}, {"predict": "generates a new user entity to a user", "true": "converts the passed d to to a user", "bleu": 0.2984745896009823, "rouge": 0.375}, {"predict": "generates the statement to drop a foreign key without a foreign key and hence oracle", "true": "generates the statement to drop a foreign key constraint from the database using an alter table statement", "bleu": 0.44891990088786093, "rouge": 0.4944275582573455}, {"predict": "locks the file ( blocking )", "true": "locks the file , with a time out ( non - blocking )", "bleu": 0.1582341759519314, "rouge": 0.5922330097087379}, {"predict": "write a data object to an header", "true": "create a header which points to the given data object", "bleu": 0.18938334565508194, "rouge": 0.34205607476635513}, {"predict": "collects all the files with version ids where they ' re in a project", "true": "given a list of action - target files , returns all the files that should be subject to the action does not keep directories , but recursively adds directory contents", "bleu": 0.05547633852971425, "rouge": 0.12797202797202795}, {"predict": "updates a particle position", "true": "updates a particle position", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the tick label for the axis", "true": "updates the tick labels", "bleu": 0.345720784641941, "rouge": 0.5736677115987461}, {"predict": "checks whether the position / position is within the specified visual position", "true": "allows to answer if particular visual position belongs to visual rectangle identified by the given visual position of its top - left and bottom - right corners", "bleu": 0.044514610403955455, "rouge": 0.19182389937106917}, {"predict": "asserts that the indices are treated as a unicode character for all tables in the qualifier hash map for each s", "true": "validates that the same statements are found in each of the statement indices", "bleu": 0.09770653288423854, "rouge": 0.3071500503524673}, {"predict": "show item , show list item", "true": "request to display a new badge over the passed menu item id", "bleu": 0.0812630644213965, "rouge": 0.10481099656357389}, {"predict": "put an option boolean value", "true": "put an option integer value", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "determines the target page based on a target offset and the number of items will be fling with the same offset", "true": "figure out what the target page would be given current scroll and velocity", "bleu": 0.1196655750514248, "rouge": 0.2457200402819738}, {"predict": "converts a given cell to a string ; no alignment considered", "true": "converts a given cell to a string ; no alignment considered", "bleu": 1.0, "rouge": 1.0}, {"predict": "clone the input vector so that this vector has the same values", "true": "clone the input vector so that this vector has the same values", "bleu": 1.0, "rouge": 1.0}, {"predict": "disables bluetooth and checks to make sure that bluetooth was turned on and that the correct actions were broadcast", "true": "disables bluetooth and checks to make sure that bluetooth was turned off and that the correct actions were broadcast", "bleu": 0.8578928092681435, "rouge": 0.9473684210526315}, {"predict": "convert a limited file glob into a regular expression", "true": "converts the given glob pattern into a regular expression", "bleu": 0.4111336169005197, "rouge": 0.5555555555555556}, {"predict": "allows the if not failed loss", "true": "should the data of this tile be forced to case no data loss", "bleu": 0.07612610271614867, "rouge": 0.19741100323624597}, {"predict": "splits string based on the given separator character as per character , and return the element as needed", "true": "does not take into account escaped separators", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "finds the split points for a block", "true": "find the points the ir where live ranges should be split", "bleu": 0.1247439242120089, "rouge": 0.2136602451838879}, {"predict": "test split - delimited string ( using semicolon )", "true": "test split of escaped semicolons", "bleu": 0.18575057999133596, "rouge": 0.3012345679012346}, {"predict": "deletes the object at the given offset from the array", "true": "removes the object at the source array offset and copies all other objects to the destination array", "bleu": 0.1959466642032866, "rouge": 0.4953596287703016}, {"predict": "create a new dictionary adapter", "true": "open the database if it exists or create it if it doesn ' t", "bleu": 0.04512859433163675, "rouge": 0.09697933227344992}, {"predict": "check if the tab is associated with an activity that hasn ' t been destroyed", "true": "check if the tab is associated with an activity that hasn ' t been destroyed", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new wrapper around the given http response", "true": "create a new http stream", "bleu": 0.19960198807747329, "rouge": 0.4518518518518518}, {"predict": "handle the given file , which means the input file should be read", "true": "when a file is found , add it", "bleu": 0.10571070857151538, "rouge": 0.19902120717781402}, {"predict": "description of the method descriptor on false after startup", "true": "peeks the next char , without <unk> it", "bleu": 0.14113991930789777, "rouge": 0.1189083820662768}, {"predict": "construct the initial partial hull", "true": "construct the initial partial hull", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a callback to be invoked when a swipe event is sent to this view", "true": "add a callback to be invoked when a swipe event is sent to this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a short ( 16 bit ) from the source stream", "true": "reads a short ( 16 bit ) from the source stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints the characters to the output stream", "true": "prints the string representation of the specified integer to the target", "bleu": 0.17359100558362855, "rouge": 0.4273204903677758}, {"predict": "creates a proximity proximity node with the given information", "true": "creates a proximity browsing node", "bleu": 0.2777619034011791, "rouge": 0.6024691358024692}, {"predict": "see if zoning required in the see are required", "true": "looks at the v array to see if zoning is disabled , and looks to make sure that there is at least one active network system registered", "bleu": 0.03759098586913923, "rouge": 0.15288220551378442}, {"predict": "sends a reply to an incoming stream", "true": "sends a reply to an incoming stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes frame with constant loaded", "true": "initializes a cc animation with a name , delay and an array of cc sprite frames", "bleu": 0.03347779366253814, "rouge": 0.17403708987161198}, {"predict": "navigate to the path , navigate the root path to dump", "true": "navigate to root node of currently active dump", "bleu": 0.17033186037639278, "rouge": 0.433392539964476}, {"predict": "add a set of messages to the end of the list of messages", "true": "add a list of new messages to the end of the current message list", "bleu": 0.48173651810505935, "rouge": 0.7358262967430639}, {"predict": "makes a random cache entry", "true": "makes a random cache entry", "bleu": 1.0, "rouge": 1.0}, {"predict": "display the current render surface", "true": "display the current render surface", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a list of window of size window size", "true": "constructs a list of window of size window size", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the center text in the center of the chart", "true": "draws the unit text in the center of the pie chart makes most sense when center - hole is enabled", "bleu": 0.24428927628823094, "rouge": 0.5659793814432991}, {"predict": "creates a path using the provided json path structure", "true": "creates a path using the provided json path structure", "bleu": 1.0, "rouge": 1.0}, {"predict": "should be called by the group frames here before any frames", "true": "take the vector of frames , and group them into boundary rectangles , represented by groups", "bleu": 0.09091421815660788, "rouge": 0.14336075205640422}, {"predict": "underlying implementation of add ( array , index , element ) methods", "true": "underlying implementation of add ( array , index , element ) methods", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a double value of the double value", "true": "get the double value corresponding to the instance", "bleu": 0.2984745896009823, "rouge": 0.375}, {"predict": "converts the matrix into a single line mat lab string : matrix is enclosed by parentheses , rows are separated by semicolon and single cells by blanks , e", "true": "converts the matrix into a single line mat lab string : matrix is enclosed by parentheses , rows are separated by semicolon and single cells by blanks , e", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new binary file with the specified file as the input", "true": "constructs a new binary file with the specified file as the input", "bleu": 1.0, "rouge": 1.0}, {"predict": "create an object output stream for this file", "true": "create an object output stream for this path", "bleu": 0.8633400213704505, "rouge": 0.875}, {"predict": "get the set of keys for resident entries", "true": "get the set of keys for resident entries", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate matrix for fit center", "true": "calculate matrix for fit center", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an certificate validity period", "true": "this method allows to add a candidate for the signing certificate", "bleu": 0.0910020781697788, "rouge": 0.2341650671785029}, {"predict": "adds a policy listener", "true": "adds a policy listener that would be notified whenever a policy is added , removed or changed", "bleu": 0.03877420783172201, "rouge": 0.34269662921348315}, {"predict": "verifies the code of an entry if there are an entry", "true": "verify the code associated", "bleu": 0.14991106946711685, "rouge": 0.2911694510739857}, {"predict": "returns a new scripting engine for the scripting language identified by the file name extension", "true": "returns a new scripting engine for the scripting language identified by the file name extension", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds raw module that raw a raw module id raw raw raw providers", "true": "returns the raw module with the given id", "bleu": 0.1350862565735141, "rouge": 0.2985318107667211}, {"predict": "extract type from a list of input objects , returning null if type is an instance of class", "true": "extract type - checked value from an argument list using the specified type check and extraction function", "bleu": 0.11076007888812259, "rouge": 0.28719397363465166}, {"predict": "obtains a local date in japanese calendar system from the pro lept ic - year , month - of - year and day - of - month fields", "true": "obtains a local date in japanese calendar system from the pro lept ic - year and day - of - year fields", "bleu": 0.7431716301533402, "rouge": 0.8585790884718499}, {"predict": "authenticate the user", "true": "recovers entry associated with given alias", "bleu": 0.16620830006469264, "rouge": 0.0}, {"predict": "creates a new url class loader for the given base url", "true": "creates a class loader with the given base url as its class path", "bleu": 0.33882036760976125, "rouge": 0.6567967698519516}, {"predict": "min ( ) for unequal big decimals", "true": "min ( ) for unequal big decimals", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new underlying g px exp server", "true": "create a new smtp server with this class as the listener", "bleu": 0.15587146574232644, "rouge": 0.3070469798657718}, {"predict": "concatenates an elements to an array", "true": "concatenates elements to an in t array", "bleu": 0.3851442247849805, "rouge": 0.7587064676616916}, {"predict": "move camera position vertically ( up or down )", "true": "change camera position horizontally ( left or right )", "bleu": 0.2208959113415788, "rouge": 0.5555555555555556}, {"predict": "decodes base 64 data into oct ect s", "true": "decodes base 64 data into oct ect s", "bleu": 1.0, "rouge": 1.0}, {"predict": "shuts down the associated reporting service provided by the given implementation", "true": "shut down the health checker", "bleu": 0.14991106946711685, "rouge": 0.2681318681318681}, {"predict": "resets the builder to its initial , empty state", "true": "resets the builder to its initial , empty state", "bleu": 1.0, "rouge": 1.0}, {"predict": "deflate current sam line by replacing all fields that equal over shorter of both previous line by one line", "true": "deflate current sam line by replacing all fields that equal over shorter of both previous line by an ampersand", "bleu": 0.8914703664390793, "rouge": 0.8947368421052632}, {"predict": "the function that splits the list of integers in the correct order", "true": "determines which index to use as the splitting index for the vp radius", "bleu": 0.10579369505074822, "rouge": 0.15885416666666669}, {"predict": "send an error log message", "true": "send an error log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an address listener", "true": "register for notification on changes to specific types", "bleu": 0.11115018927487523, "rouge": 0.0}, {"predict": "cleans a directory without deleting it", "true": "recursive remove all from directory", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "finds parent version if it is owner or not", "true": "go through all candidates for entries involved in transaction and find their min version", "bleu": 0.08097951150551161, "rouge": 0.08367626886145405}, {"predict": "constructs a adjusted - based scalar value to the provided string", "true": "la string a conti <unk> il value del field di cui b is og na <unk> il parsing per est <unk> re valore e unit a ' di mi <unk>", "bleu": 0.024080520695165593, "rouge": 0.09003690036900369}, {"predict": "called to ensure that the character array is exactly this method ' s length", "true": "characters read from xml are assigned to a variable , based on the current m context", "bleu": 0.08480125343826811, "rouge": 0.13174946004319654}, {"predict": "compute the standard deviation ( significance etc ) for the given instance", "true": "computes standard deviation for given instance , without transforming target back into original space", "bleu": 0.15233734832972273, "rouge": 0.3793532338308458}, {"predict": "initializes the logger to be used by the directory", "true": "sub - classes can override to initialize other properties", "bleu": 0.14113991930789777, "rouge": 0.1111111111111111}, {"predict": "adds the specified element at the specified position in this list", "true": "inserts the specified element at the specified position in this list", "bleu": 0.9036020036098448, "rouge": 0.9090909090909091}, {"predict": "create a new multiplexed data stores on data stores", "true": "create a single data store to handle provided managers within a single transaction", "bleu": 0.1279808802469055, "rouge": 0.26406926406926406}, {"predict": "match attempts to find and other name for the input value", "true": "general method for matching raw name pattern", "bleu": 0.12605968092174913, "rouge": 0.1157495256166983}, {"predict": "if the value is equal to the default value , or a new value if the string is null", "true": "returns a value if that value is not null , or a specified default value otherwise", "bleu": 0.1835554260049945, "rouge": 0.40627973358706}, {"predict": "compare based on the key constraints of the passed key value", "true": "compare the incoming tuple with the last received message in kafka", "bleu": 0.1354599427337814, "rouge": 0.2727272727272727}, {"predict": "render the track and car", "true": "render the track and car", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a time string into a java", "true": "converts a time string into a java", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the menu at which there is a valid menu at tr", "true": "called internally to fill the given menu", "bleu": 0.11498759556447223, "rouge": 0.22101449275362317}, {"predict": "compute the cross - track distance", "true": "compute the cross - track distance", "bleu": 1.0, "rouge": 1.0}, {"predict": "choose an alias to authenticate the client side of a secure socket given the public key type and the list of certificate issuer authorities recognized by the peer ( if any )", "true": "returns an alias to authenticate the server side of a secure socket given the public key type and the list of certificate issuer authorities recognized by the peer ( if any )", "bleu": 0.8866029039778043, "rouge": 0.9375000000000001}, {"predict": "the probability density function of the distribution", "true": "probability density function of the gamma distribution", "bleu": 0.7071067811865475, "rouge": 0.8571428571428571}, {"predict": "order line - charge", "true": "in voice batch line - charge", "bleu": 0.4056114983537769, "rouge": 0.5791139240506329}, {"predict": "does the actual work of getting the actor to find out the contents of the document", "true": "does the actual parsing", "bleu": 0.1431712315455507, "rouge": 0.33639705882352944}, {"predict": "broker a broker b broker c", "true": "broker a - > broker b < - broker c", "bleu": 0.21937646382401524, "rouge": 0.7176470588235294}, {"predict": "body method that takes care of var in t test", "true": "writes the wb xml to stream", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "discards any active baggage currently in this thread", "true": "discards any active baggage currently in this thread", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts as is to string to is at replicas in as necessary", "true": "produces either one or two tokens from the given leaf which represents a location where the production parser inserted a semicolon", "bleu": 0.04127145858834645, "rouge": 0.0}, {"predict": "write packet data from buffer", "true": "writes this packet to the given buffer", "bleu": 0.20252884954471367, "rouge": 0.32360742705570295}, {"predict": "register a file type to be used for creating a file or creating files from the associated output stream", "true": "registers a file type", "bleu": 0.11986062961075741, "rouge": 0.295638126009693}, {"predict": "parse integer from integer string formatted as an integer", "true": "parses an integer based on locale conventions", "bleu": 0.18575057999133596, "rouge": 0.2557651991614256}, {"predict": "returns request security token response object based on the data in the input xml document", "true": "returns request security token response object based on the xml document received from server", "bleu": 0.6262844962765468, "rouge": 0.7633674630261661}, {"predict": "remove a previously client request", "true": "request resources for running container processes", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "filter the collection of items based on the given player , returning the result of the given player adapter", "true": "add to result collection only items <unk> suits player ' s level", "bleu": 0.08097785064266201, "rouge": 0.20176405733186328}, {"predict": "utility method for formatting using the d conversion character", "true": "utility method for formatting using the d conversion character", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a host to represent an area", "true": "visualize node ' s location , radio ranges and connections", "bleu": 0.10175282441454783, "rouge": 0.0}, {"predict": "returns the index of the largest value in an array that is less than ( or optionally equal to ) a specified key", "true": "returns the index of the largest value in an array that is less than ( or optionally equal to ) a specified key", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a single symbol if it is in the set", "true": "add a single symbol to the set", "bleu": 0.403527863746399, "rouge": 0.7290836653386453}, {"predict": "replaces unprintable characters by their escaped ( or unicode escaped ) equivalents in the given string", "true": "replaces unprintable characters by their escaped ( or unicode escaped ) equivalents in the given string", "bleu": 1.0, "rouge": 1.0}, {"predict": "insert the list of elements at the beginning of the list", "true": "return the list size", "bleu": 0.14991106946711685, "rouge": 0.2911694510739857}, {"predict": "returns true if this point and the set of bounds are identical within the bounds of error points", "true": "determine whether the plane intersects another plane within the bounds provided", "bleu": 0.13400825781778894, "rouge": 0.28841607565011823}, {"predict": "decode a base 64 string into a long value", "true": "decode a base 64 string into a long value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the smallest ( \" bottom \" ) n values in the column", "true": "returns the smallest ( \" bottom \" ) n values in the column", "bleu": 1.0, "rouge": 1.0}, {"predict": "counts the sum of any authentication score that has been out and a user out of the given page", "true": "calculate the hub score of a page by summing the authority scores of that page ' s out links", "bleu": 0.09629943614188137, "rouge": 0.2631578947368421}, {"predict": "makes sure to make sure we drop our own our graphics", "true": "ends the print job and does any necessary cleanup", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "browse for a file", "true": "<unk> the files for the specific path", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "append a string to the end of the buffer", "true": "add a string to the end of the buffer", "bleu": 0.8801117367933934, "rouge": 0.8888888888888888}, {"predict": "create a new wizard creation page creation page", "true": "pass in the selection", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "unwraps user data to the application buffer", "true": "unwraps user data to the application buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "5", "true": "5", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the current context is permission to date permissions", "true": "checks whether the provider may be changed using permission ' current time", "bleu": 0.21258637840736228, "rouge": 0.3577712609970674}, {"predict": "stores password , value settings with current values", "true": "stores password into shared state map", "bleu": 0.21105340631872638, "rouge": 0.2932692307692307}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete a child node from the tree", "true": "deletes the specified child node of this node , if it exists", "bleu": 0.1285981829222983, "rouge": 0.20098846787479407}, {"predict": "adds fill components to empty cells in the first row and first column of the grid", "true": "adds fill components to empty cells in the first row and first column of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "float value of a small positive big decimal", "true": "float value of a small positive big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "wait for the external process to finish , and the underlying process is empty", "true": "awaits for successful process termination , as well as successful termination of reader threads , throws an exception otherwise ( and destroys the process )", "bleu": 0.055107049387350414, "rouge": 0.29279999999999995}, {"predict": "refreshes the super methods by s in the set of meta classes", "true": "called from expand o meta class creation handle in the registry if it exists to set up inheritance handling", "bleu": 0.08670262200807066, "rouge": 0.18597560975609756}, {"predict": "parses a placeholder column of the old string", "true": "parses a string to find placeholder s of format $ { placeholder }", "bleu": 0.13434323860909256, "rouge": 0.3652694610778443}, {"predict": "note : this is called only when a member of the relation to avoid conflicts", "true": "marks the relation as canceled and invokes the the handler ' s failed ( ) method", "bleu": 0.10127778387827421, "rouge": 0.12828601472134593}, {"predict": "do the real work", "true": "routes a single get request", "bleu": 0.23530495254141282, "rouge": 0.0}, {"predict": "change document state and annotations and updates the particular text state according to the document state given by the current document state", "true": "change the state of an annotation document", "bleu": 0.06964541799727335, "rouge": 0.3042394014962594}, {"predict": "removes an edge from the list of entries at the beginning of the list was removed by this segment", "true": "disconnects this vertex from an edge", "bleu": 0.09629943614188137, "rouge": 0.1765557163531114}, {"predict": "press a long press", "true": "if this component is focused this method is invoked when the user presses and holds the key", "bleu": 0.011715143759476299, "rouge": 0.0}, {"predict": "returns true if at least one of the variables given as argument is a descendant of this node , and false otherwise", "true": "returns true if at there exists at least one descendant whose identifier matches the regular expression pattern , and false otherwise", "bleu": 0.31551109791813603, "rouge": 0.5137825421133231}, {"predict": "writes a given number of bytes to a file", "true": "writes a given number of bytes to a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "the data class for generate files", "true": "generate data files whose names are included in sun", "bleu": 0.1593301391270729, "rouge": 0.2573839662447257}, {"predict": "check whether the specified object is a c glib - generated class", "true": "check whether the given object is a c glib proxy", "bleu": 0.48442732379638637, "rouge": 0.7393939393939394}, {"predict": "first , un - rotate image and crop rectangles ( make image rectangle axis - aligned )", "true": "first , un - rotate image and crop rectangles ( make image rectangle axis - aligned )", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests fix for bug # fail with prepared statement and prepared statement", "true": "tests fix for bug # <unk> , statement", "bleu": 0.39553325358771796, "rouge": 0.6224489795918368}, {"predict": "checks repeated in t field equality ; null - value and 0 - length fields are considered equal", "true": "checks repeated boolean field equality ; null - value and 0 - length fields are considered equal", "bleu": 0.8086627571031982, "rouge": 0.9190207156308852}, {"predict": "adds the given annotation to the front", "true": "bring the given annotation to the front", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "adds a frame to a cc animation", "true": "adds an image to the animation with the specified duration ( time to display the image )", "bleu": 0.05293793409875998, "rouge": 0.23252858958068615}, {"predict": "print the code point corresponding to the unicode script point", "true": "builds a string denoting an ascii - encoded ion string , with double - quotes surrounding a single unicode code point", "bleu": 0.05934269577876743, "rouge": 0.12127236580516898}, {"predict": "helper method that will cleans up mini and try to upload all mini dump jobs and try to file", "true": "mark file we just uploaded for cleanup later", "bleu": 0.06439931429457924, "rouge": 0.0799475753604194}, {"predict": "start ssl shutdown process", "true": "start ssl shutdown process", "bleu": 1.0, "rouge": 1.0}, {"predict": "extracts thumbnail from source bitmap to linear scale", "true": "creates a centered bitmap of the desired size", "bleu": 0.16036590969929357, "rouge": 0.125}, {"predict": "writes the contents of the file info object into the given file", "true": "write the p <unk> info file into the application bundle", "bleu": 0.16261701715194898, "rouge": 0.3696969696969697}, {"predict": "converts all events to an array", "true": "returns an array holding the collected events", "bleu": 0.2644358066258934, "rouge": 0.3034825870646766}, {"predict": "returns the pkcs 9 block in der form of this der input stream", "true": "decode this set of pkcs 9 attributes from the contents of its der encoding", "bleu": 0.14386773665469615, "rouge": 0.2943305186972256}, {"predict": "process an attribute string of type t prefix list into a vector of prefixes that may be resolved to urls", "true": "process an attribute string of type t prefix list into a vector of prefixes that may be resolved to urls", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a clone of the target", "true": "creates a deep clone of this", "bleu": 0.31239399369202553, "rouge": 0.5}, {"predict": "dump a long value into a string builder", "true": "dump a long value into a string builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "enter special space character", "true": "simulate keyboard to type out a special character", "bleu": 0.14628187563941414, "rouge": 0.31443298969072164}, {"predict": "utility method for simple entry and simple immutable entry", "true": "helper method to check for equality between two object , including null checks", "bleu": 0.10015045110931886, "rouge": 0.17604617604617603}, {"predict": "returns true if the given mime type has an entry in the map", "true": "returns true if the given mime type has an entry in the map", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the pop out of the given notification id or is found ( or optionally ) but also throws an exception if s the notification number of notification type", "true": "returns an it er able that skips forward to a given notification id then only returns count more notifications", "bleu": 0.08218074077265651, "rouge": 0.12987934705464868}, {"predict": "any object data is based on the given object as their dependency data", "true": "using the given pd x writer , write out the relevant fields for the object instance passed in", "bleu": 0.09195488969268498, "rouge": 0.18807810894141833}, {"predict": "write an integer value to buffer", "true": "write byte to buffer", "bleu": 0.31239399369202553, "rouge": 0.6224489795918368}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "is queue is empty", "true": "is queue is empty", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new instance of this item", "true": "creates a viterbi point for the given item", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "draws the border of the content border around the content area", "true": "draws the bottom edge of the border around the content area", "bleu": 0.5331675363405771, "rouge": 0.8181818181818181}, {"predict": "emits an add method to add to a list", "true": "emits an add method to add to a list", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses a p em encoded public key and returns the corresponding public key", "true": "parse a pkcs 1 p em encoded rsa public key into the modulus / exponent components and construct a new rsa public key", "bleu": 0.12053527501245603, "rouge": 0.4761491760624458}, {"predict": "take a publisher and prepare to consume it on a publisher with the specified point to the current round - robin fashion", "true": "take a publisher and prepare to consume it on par all all is m number of ' rails ' , possibly ordered and round - robin fashion", "bleu": 0.3995274045949144, "rouge": 0.5210249671484888}, {"predict": "returns the next recurrence of this rule", "true": "returns the next recurrence of this rule", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the given variable to the queue , but not yet be full", "true": "add a single var to the queue", "bleu": 0.1777835117834348, "rouge": 0.31715771230502604}, {"predict": "canonical ize s simple url simple url", "true": "given a possibly abbreviated url ( missing a protocol name , typically ) , this method ' s job is to transform that url into a canonical form , by including a protocol name and additional syntax , if necessary", "bleu": 0.002094242210773789, "rouge": 0.07554179566563468}, {"predict": "read the contents of a file in / proc / pid / filename", "true": "read the contents of a file in / proc / pid / filename", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the animation duration given the | initial velocity | and a desired | displacement |", "true": "calculates the animation duration given the | initial velocity | and a desired | displacement |", "bleu": 1.0, "rouge": 1.0}, {"predict": "shows user home points page", "true": "shows user home points page", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the norm in a range of distinct values", "true": "returns the norm l 2", "bleu": 0.18575057999133596, "rouge": 0.3012345679012346}, {"predict": "determines the height of this view", "true": "determines the height of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "arranges the components of the specified container according to this layout", "true": "arranges the components of the specified container according to this layout", "bleu": 1.0, "rouge": 1.0}, {"predict": "unlocks to allow both puts and takes", "true": "unlocks to allow both puts and takes", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts an integer into the buffer", "true": "inserts a byte array", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "vec the mean of an array in ascending order by min , 1 )", "true": "the mean of the values in the double array", "bleu": 0.18207052811092136, "rouge": 0.3620178041543027}, {"predict": "creates a visual sprite that has been drawn", "true": "used internally to create common functions between motion and stationary sprite", "bleu": 0.11021777041988566, "rouge": 0.10234899328859062}, {"predict": "close the current output stream", "true": "closes the output stream", "bleu": 0.3860973950960897, "rouge": 0.6802973977695167}, {"predict": "create a sync token containing the provided string", "true": "creates a sync token , and converts any thrown exceptions to runtime exceptions so it can be used for static fields", "bleu": 0.05877313144421374, "rouge": 0.1914225941422594}, {"predict": "returns true if a and b are equal , whether or not either of them are null", "true": "returns true if a and b are equal or are both null", "bleu": 0.48405751151242604, "rouge": 0.7829638273045508}, {"predict": "initial is es with watch", "true": "in it performs the initial read of values from etc d", "bleu": 0.08222966016687185, "rouge": 0.11708253358925146}, {"predict": "close input stream without a exception", "true": "close input stream without a exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate the y axis dimension", "true": "throws a bunch of random numbers between 0 , 1 at the monitor", "bleu": 0.05512018958855254, "rouge": 0.10286677908937607}, {"predict": "replaces all occurrences of old character in string with new str", "true": "returns a string with all occurrences of old char replaced by new str", "bleu": 0.33882036760976125, "rouge": 0.4925975773889637}, {"predict": "this method detects the backward sorts on the following properties : in t pb back at the time stamps and puts it", "true": "this method is invoked when the user clicks on create chall an from menu tree", "bleu": 0.08282282660969602, "rouge": 0.2238532110091743}, {"predict": "canonical a canonical representation by \" import \" and \"", "true": "apply the <unk> rule x & ( y | z ) = = x & y | x & z to simplify the intersection to a canonical form with no par ens", "bleu": 0.018382672796289943, "rouge": 0.08701854493580599}, {"predict": "start view activity to open first uri", "true": "start the application in browser to see the url or choose by other application to view this uri", "bleu": 0.04852353400948068, "rouge": 0.2223572296476306}, {"predict": "for each state of each state reader , we first check for for that we occur as described in the same state reader", "true": "wait to see * all * cores live and active", "bleu": 0.04449945957170705, "rouge": 0.0}, {"predict": "adds the specified object at the end of this vector", "true": "adds the specified object at the end of this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate matrix for fit center", "true": "calculate matrix for fit center", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether cg exists for game", "true": "uses a field in the volume to determine if the volume is an rp volume", "bleu": 0.04144655666113052, "rouge": 0.0}, {"predict": "create an external problem using the process specified process", "true": "constructs an external problem using the specified process", "bleu": 0.5814307369682193, "rouge": 0.8323586744639376}, {"predict": "splits file into path by using path ' s elements", "true": "split a file into a list of directories ending with the file name", "bleu": 0.12290460988295328, "rouge": 0.16991643454039}, {"predict": "parses up a pro bit data from the plane", "true": "parses a sts d atom ( defined in 14496 - 12 )", "bleu": 0.11192003885776355, "rouge": 0.1856925418569254}, {"predict": "returns true if taxon list is a subset of the taxa in this taxa", "true": "returns true if taxa are all found in available taxa", "bleu": 0.1892240568795935, "rouge": 0.5154929577464789}, {"predict": "draws the text of a label", "true": "draws the text of a label", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns whether this map has any attributes", "true": "indicates whether this map layer has any map objects", "bleu": 0.30895757752065417, "rouge": 0.6112224448897796}, {"predict": "executes all pending actions", "true": "runs the commands that have been queued up", "bleu": 0.11115018927487523, "rouge": 0.0}, {"predict": "returns a collection of thread pools in the thread tree", "true": "print the thread roots and return them for processing", "bleu": 0.16590387014219712, "rouge": 0.21254355400696867}, {"predict": "add a new field and its position", "true": "internal : process an attribute override for either an embedded object mapping , or an element collection mapping containing embed d able objects", "bleu": 0.01588545205297843, "rouge": 0.0}, {"predict": "returns the minimum dimensions for this layout given the components in the specified target container", "true": "returns the minimum dimensions needed to layout the components contained in the specified target container", "bleu": 0.5035337887555859, "rouge": 0.8}, {"predict": "checks a resource change callback on a resource ( resource change of resource - specific resource )", "true": "will check if a given resource was changed and will invoke the appropriate callback", "bleu": 0.0859076483566362, "rouge": 0.19698600645855757}, {"predict": "creates a tel url based on given uri string", "true": "creates a tel url based on given uri string", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs an sv m model", "true": "creates a classification model", "bleu": 0.2730120862709067, "rouge": 0.22676579925650556}, {"predict": "method to in it aliz e a entire host", "true": "restart the cfm l engine", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "creates a new instance with the given parameters", "true": "constructs a new sorter", "bleu": 0.21105340631872638, "rouge": 0.3546511627906977}, {"predict": "obtains the string representation of this object", "true": "obtains the string representation of this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "log pdf of non - integer , but also construct the doubles", "true": "probability density function of the wald distribution", "bleu": 0.11498759556447223, "rouge": 0.22101449275362317}, {"predict": "read short , 16 - bits", "true": "read short , 16 - bits", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate a format for an codec with codec output", "true": "generate the format associated to the codec name", "bleu": 0.16784459625186196, "rouge": 0.35672514619883033}, {"predict": "receive notification of an xml comment anywhere in the document", "true": "receive notification of an xml comment anywhere in the document", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the maximum element of this stream according to the provided key extractor function", "true": "returns the maximum element of this stream according to the provided key extractor function", "bleu": 1.0, "rouge": 1.0}, {"predict": "find given resource index by performing a commit operation", "true": "find the oldest entry whose commit counter is <unk> the specified commit counter", "bleu": 0.10015045110931886, "rouge": 0.17604617604617603}, {"predict": "starts the underlying animator for a set of properties", "true": "starts the underlying animator for a set of properties", "bleu": 1.0, "rouge": 1.0}, {"predict": "tuple out one exception", "true": "write exception throw in log", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "splits a variable name by replacing occurrences of a variable with the given name", "true": "splits a qualified var name into two parts , a left and a right left will be the text before the first instance of '", "bleu": 0.06553369521824345, "rouge": 0.24400000000000005}, {"predict": "end housekeeping for a child thread managed by the launcher ' s housekeeping , but not spawned by the launcher itself , e", "true": "end housekeeping for a child thread managed by the launcher ' s housekeeping , but not spawned by the launcher itself , e", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method register an transport for the transport", "true": "create management bean for j space container", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "update ( table ) according to the hash table of the form : table \" , \" ) values to be a join node", "true": "update the data using values", "bleu": 0.06024757292375468, "rouge": 0.23461538461538461}, {"predict": "stops the video exports ( if they were created ) and prints the game instead", "true": "stop the video fading timer", "bleu": 0.1082597837309053, "rouge": 0.21981981981981977}, {"predict": "remove a time out listener", "true": "de registers a time out event listener for time out notification", "bleu": 0.1618271218800702, "rouge": 0.4683301343570058}, {"predict": "process the generic properties properties file into properties object", "true": "process a package ' s generic properties creator", "bleu": 0.19960198807747329, "rouge": 0.35672514619883033}, {"predict": "add a table to the list of blocks that are not used in case of drop table", "true": "method to add table level lock if lock is not present for the table", "bleu": 0.09880782578056979, "rouge": 0.26264800861141013}, {"predict": "utility to grab a random element from an array of strings", "true": "utility to grab a random element from an array of strings", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates a mapping from a map", "true": "see <unk>", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "join a sync rho nous ly amount on the given resource", "true": "wait for a thread to join", "bleu": 0.12605968092174913, "rouge": 0.12423625254582485}, {"predict": "initializes this mutable during a random field", "true": "define a new local variable", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "gets connection from a data source", "true": "gets connection from a pool", "bleu": 0.6147881529512643, "rouge": 0.7393939393939394}, {"predict": "tell the user of an error , and probably throw an exception", "true": "tell the user of an error , and probably throw an exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "if the mouse event is adjusted , invoke the event", "true": "if button 1 is pressed , this is implemented to request focus on the associated text component , and to set the caret position", "bleu": 0.04091139068322835, "rouge": 0.2190305206463196}, {"predict": "decode the base 64 - encoded data in input and return the data in a new byte array", "true": "decode the base 64 - encoded data in input and return the data in a new byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "this is an implementation of the b sf apply ( ) method", "true": "allow an anonymous function to be declared and invoked", "bleu": 0.10390302174233558, "rouge": 0.09775641025641024}, {"predict": "return the set of keys of the key set", "true": "returns the total key set of all scopes", "bleu": 0.23356898886410005, "rouge": 0.35672514619883033}, {"predict": "writes a list of content objects to the output stream", "true": "this will handle printing out a list of nodes", "bleu": 0.23462350320528, "rouge": 0.31881533101045295}, {"predict": "consumes the list of active keys and their own information", "true": "this api is to check whether the planning budget is available or not", "bleu": 0.0933873085201553, "rouge": 0.084958217270195}, {"predict": "override this method to get random coefficient for x ( x )", "true": "reduce a polynomial modulo another polynomial", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends hex we don ' t want to the given string builder", "true": "returns a javascript representation of the character in a hex escaped format", "bleu": 0.11498759556447223, "rouge": 0.08333333333333333}, {"predict": "this function will print all the public methods named by map", "true": "just a small method to show how many times each activity chain index was sampled", "bleu": 0.06658411377036827, "rouge": 0.0}, {"predict": "constructs a vector representation in the current enumeration value in source", "true": "convenience method", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "add the specified in t token", "true": "add the specified in t token", "bleu": 1.0, "rouge": 1.0}, {"predict": "perform a large value test on the cache filter", "true": "split filters with two many value <unk>", "bleu": 0.14113991930789777, "rouge": 0.1278825995807128}, {"predict": "adds the given tags for the given platform - data ident if the given platform was missing", "true": "adds needed tags related to the data to the builder", "bleu": 0.09507244120026231, "rouge": 0.3885350318471337}, {"predict": "compares two ascii strings that they have the same index", "true": "sorts on the following : 1", "bleu": 0.12605968092174913, "rouge": 0.13090128755364808}, {"predict": "call graph info with package name and load source code", "true": "helper method to load the build number from the android manifest", "bleu": 0.11406351620367239, "rouge": 0.09442724458204334}, {"predict": "build a random regular expression nodes of a left - right edge of the right edge pool", "true": "build a random left - regular bipartite graph of given left and right sizes", "bleu": 0.17694975149532557, "rouge": 0.45963401506996776}, {"predict": "we only want the current page that is being shown to be focus able", "true": "we only want the current page that is being shown to be focus able", "bleu": 1.0, "rouge": 1.0}, {"predict": "configure http url connection", "true": "configure request with standard headers", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "converts the to a title string", "true": "get the remainder in each loop it should be the last digit note that the map shall have 1 offset", "bleu": 0.02142071121599405, "rouge": 0.07011494252873564}, {"predict": "un escapes the character identified by the character or characters that immediately follow a backslash", "true": "un escapes the character identified by the character or characters that immediately follow a backslash", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the text in the input", "true": "packs using defaults settings", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "return replica tor , fetches a replica tor", "true": "creates a new instance", "bleu": 0.16036590969929357, "rouge": 0.17732558139534885}, {"predict": "converts the given double to a localized string version", "true": "converts the given double to a localized string version", "bleu": 1.0, "rouge": 1.0}, {"predict": "implements the abstract method simulate method", "true": "implements the abstract method simulate method", "bleu": 1.0, "rouge": 1.0}, {"predict": "re - measure the loading views height , and adjust internal padding as necessary", "true": "re - measure the loading views height , and adjust internal padding as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "return list of long as a long array", "true": "return list of boxed longs as a primitive array", "bleu": 0.325547788760636, "rouge": 0.6984732824427481}, {"predict": "updates the menu state of a criterium", "true": "updates the state of the context menu depending on the state of the criterium tree", "bleu": 0.10663283420190642, "rouge": 0.5118881118881118}, {"predict": "tests that cache would keep values if underlying map values are underlying", "true": "this test performs complex set of operations on store from multiple threads", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "converts a list of strings to a comma - separated list", "true": "formats the list objects from the poke model into formatted strings that are easily readable", "bleu": 0.08762962180865386, "rouge": 0.14969325153374236}, {"predict": "removes the notification listener of the notification cache ( real ) , if any", "true": "removes the specified listener from this communicator server", "bleu": 0.1250076305588977, "rouge": 0.28683385579937304}, {"predict": "compare the length of two files", "true": "determines if a file is newer than another by comparing the time stamps and sizes", "bleu": 0.04928854007377984, "rouge": 0.08840579710144927}, {"predict": "colm in / col belonging to u ac is dense", "true": "cum prod , opcode : u cum * , dense input", "bleu": 0.12623203108004888, "rouge": 0.18885448916408668}, {"predict": "given a source directory and a list of module specs that possibly contain wildcard s it returns a expanded list of module names of modules that were actually found in the given source directory", "true": "given a source directory and a list of module specs that possibly contain wildcard s it returns a expanded list of module specs of modules that were actually found in the given source directory", "bleu": 0.9234732618882052, "rouge": 0.9705882352941176}, {"predict": "method generated by intel lij idea gui designer > > > important ! ! < < < do not edit this method or call it in your code !", "true": "method generated by intel lij idea gui designer > > > important ! ! < < < do not edit this method or call it in your code !", "bleu": 1.0, "rouge": 1.0}, {"predict": "issue a report of error list by replacing issue with it ' s error and un caught exception", "true": "this helper function will dump the actual error reports", "bleu": 0.06809398432036522, "rouge": 0.07881136950904392}, {"predict": "the optional arguments passed in the provided argument and updates the information of this parser accordingly", "true": "parses the provided set of arguments and updates the information associated with this parser accordingly", "bleu": 0.329340597116918, "rouge": 0.5840425531914895}, {"predict": "get issuer names ( ) method testing", "true": "get issuer names ( ) method testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "we have the initial checkpoint record the initial is is user map , and is a reference to the index writer", "true": "generates initial checkpoint and instantiate s iterators for shards", "bleu": 0.0821610732492254, "rouge": 0.21554770318021202}, {"predict": "creates a pooled data source", "true": "creates a pooled x a data source", "bleu": 0.40505769908942735, "rouge": 0.8090185676392573}, {"predict": "convert degrees to radians , with error of less than 0", "true": "convert radians to degrees , with error of less than 0", "bleu": 0.6786502681586727, "rouge": 0.8181818181818181}, {"predict": "add a fixed view to appear at the top of the grid", "true": "add a fixed view to appear at the top of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "return true if the local path is an absolute path", "true": "return true if the local path is an absolute path", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the demand and collection of the all members to have different same as the same length", "true": "method called internally to prepare the map with field names dynamically ( i", "bleu": 0.07994607499472013, "rouge": 0.1366181410974244}, {"predict": "returns a new instance of the list of specifiers ( if necessary )", "true": "get the template at the given position", "bleu": 0.09552040806823771, "rouge": 0.10571923743500866}, {"predict": "set the recipe to the specified ingredient", "true": "defines an advanced crafting recipe , using a format string", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "write a tag to bold tag values", "true": "writes & lt ; tag & gt ; value & lt ; / tag & gt ; to output stream", "bleu": 0.034485837896937335, "rouge": 0.1363128491620112}, {"predict": "write the given bytes to the encoder / decoder", "true": "write the given bytes to the encoder / decoder", "bleu": 1.0, "rouge": 1.0}, {"predict": "connects to a client", "true": "a general connection method that returns a socket for a host and port", "bleu": 0.037870374782798366, "rouge": 0.1073943661971831}, {"predict": "set the current adapter when finished", "true": "<unk> that this batch of input to the filter is finished", "bleu": 0.10624253482403696, "rouge": 0.2234432234432234}, {"predict": "compute the parameters of projection", "true": "called when some <unk> parameters change", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "configures client and returns a response object which is used to configure the response ' s default cookie set", "true": "configures the http client", "bleu": 0.07658412276041004, "rouge": 0.19709208400646203}, {"predict": "parses in i data from filename and returns index", "true": "read and parse file", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "generates a test suite for the test suite", "true": "skip the data set tests for now until we can figure out what is wrong with them", "bleu": 0.05761738913376924, "rouge": 0.0751231527093596}, {"predict": "helper method to load the xml element from the given element", "true": "update static data from xml file", "bleu": 0.12605968092174913, "rouge": 0.12423625254582485}, {"predict": "create an om raster , lat / lon placement with an image icon", "true": "create an om raster , lat / lon with x / y placement with an image icon", "bleu": 0.6357837389341354, "rouge": 0.8463180362860192}, {"predict": "first queue starts queue and returns true if threads waiting for all threads in the queue", "true": "starts de queuing the queue into the running pool and launch them", "bleu": 0.11502783619900048, "rouge": 0.21995192307692307}, {"predict": "this method gets called when a bound property is changed on the associated j text component", "true": "property change listener change method", "bleu": 0.08513012360883544, "rouge": 0.10517241379310344}, {"predict": "returns common pool queue for a thread that has submitted at least one task", "true": "returns common pool queue for a thread that has submitted at least one task", "bleu": 1.0, "rouge": 1.0}, {"predict": "null safe compare", "true": "asserts that given object 1 equals object 2", "bleu": 0.08533418657851909, "rouge": 0.0}, {"predict": "re - measure the loading views height , and adjust internal padding as necessary", "true": "re - measure the loading views height , and adjust internal padding as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "return flags as a string , separated by \" \"", "true": "return flags as a string , separated by \" \"", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method format method to convert the supplied object to a sql statement", "true": "this method attempts to return a sql statement", "bleu": 0.21972813874997157, "rouge": 0.5970636215334422}, {"predict": "indent text by two spaces", "true": "indent text by two spaces", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a fake view to the bottom of the list", "true": "add a view for the dummy view to draw", "bleu": 0.21834177214239062, "rouge": 0.42508710801393734}, {"predict": "compile a list of projects", "true": "compile a list of projects", "bleu": 1.0, "rouge": 1.0}, {"predict": "print geo location info to a specific configuration info", "true": "internal function used in the implementation of print info", "bleu": 0.15619699684601276, "rouge": 0.2222222222222222}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "rejects the promise , this will be the callback s from the game", "true": "resolves the promise , triggers any done / always callback s", "bleu": 0.21142141714303078, "rouge": 0.42302357836338417}, {"predict": "adjusts the name to avoid name conflicts in the new session and , if the name is adjusted , adjusts the position so the user can see the two nodes", "true": "adjusts the name to avoid name conflicts in the new session and , if the name is adjusted , adjusts the position so the user can see the two nodes", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates sync snapshot", "true": "create the block snapshot in db", "bleu": 0.19765609300943976, "rouge": 0.20962199312714777}, {"predict": "( re - ) the properties file", "true": "saves the currently known settings", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "returns count of items in the list as string", "true": "returns count of items in the list", "bleu": 0.7598356856515925, "rouge": 0.8951781970649895}, {"predict": "force buffered operations to the filesystem", "true": "force buffered operations to the filesystem", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a uri from the template , substituting in the provided arguments", "true": "constructs a uri from the template , substituting in the provided arguments", "bleu": 1.0, "rouge": 1.0}, {"predict": "disposes the native resources associated with the given native graphics config info pointer on the single queue flushing thread", "true": "disposes the native resources associated with the given o gl surface data ( referenced by the p data parameter )", "bleu": 0.3911568672753959, "rouge": 0.4594142259414226}, {"predict": "handle japanese encoding - by toshi mm", "true": "handle japanese encoding - by toshi mm", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new scanner exception for a file with a message only", "true": "creates a new scanner exception for a file with a message only", "bleu": 1.0, "rouge": 1.0}, {"predict": "render the normal s into a texture", "true": "render the normal s into a texture", "bleu": 1.0, "rouge": 1.0}, {"predict": "find all resources by type", "true": "find all resources by type", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the sum of all y - values", "true": "calculates the sum of all y - values", "bleu": 1.0, "rouge": 1.0}, {"predict": "return true if the ref count is free", "true": "release the provided number of reference counts", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "ensures the truth of an expression involving one or more parameters to the calling method", "true": "checks the truth of an expression", "bleu": 0.30130404892785684, "rouge": 0.5160744500846023}, {"predict": "returns the number of node objects in the list", "true": "returns an estimate of the memory footprint in bytes of this node list and all its subtree s", "bleu": 0.07101864697284951, "rouge": 0.34936998854524626}, {"predict": "finds the tcp connection given the thread id", "true": "finds the tcp connection given the thread id", "bleu": 1.0, "rouge": 1.0}, {"predict": "estimates the distribution given by the given number of times and max observed", "true": "estimate from simple characteristics", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "reads data for a stream in shared preferences", "true": "reads repository metadata from stream input", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "checks if the xml schema is a primitive data type", "true": "checks whether the supplied data type is a primitive xml schema data type", "bleu": 0.2483306698647389, "rouge": 0.5947075208913649}, {"predict": "add a line to the contents of this basic component", "true": "handle gui layout details during construction", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "applies a regex to the text of a text view turning the matches of a links", "true": "applies a regex to the text of a text view turning the matches into links", "bleu": 0.8193228857188178, "rouge": 0.9085106382978723}, {"predict": "resetting the foreign key", "true": "process the settings when we are going to consume them", "bleu": 0.08017158404431235, "rouge": 0.13260869565217392}, {"predict": "tell if the table contains the given node", "true": "tell if the table contains the given node", "bleu": 1.0, "rouge": 1.0}, {"predict": "persist the existing file to disk with the environment that we need to execute", "true": "creates file with temporary files list", "bleu": 0.09782375748961449, "rouge": 0.21554770318021202}, {"predict": "clamp a value to be within the provided range", "true": "clamp a value to be within the provided range", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds an already writ te value to the set of write to", "true": "add a value that shall be written to the write set", "bleu": 0.16261701715194898, "rouge": 0.3505747126436781}, {"predict": "load the given unit", "true": "load the given unit", "bleu": 1.0, "rouge": 1.0}, {"predict": "performs cleanup and bookkeeping for a dying worker", "true": "performs cleanup and bookkeeping for a dying worker", "bleu": 1.0, "rouge": 1.0}, {"predict": "finishes writing compressed data to the output stream without closing the underlying stream", "true": "finishes writing compressed data to the output stream without closing the underlying stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "frees the object", "true": "frees the object", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the provided injector has the given key", "true": "returns true if a binding exists for the given key", "bleu": 0.33932513407933634, "rouge": 0.6}, {"predict": "create an replication service message", "true": "creates a replication service that will run as a thread internal to the replication service manager", "bleu": 0.039812030418083365, "rouge": 0.17403708987161198}, {"predict": "checks that the directory and returns the index with the given directory , if it doesn ' t exist", "true": "this runs the check index tool on the index in", "bleu": 0.09107438368292149, "rouge": 0.21916167664670658}, {"predict": "handles a policy change on a policy map", "true": "handles policy changed notifications - clears the cached resource names for the service type name", "bleu": 0.0739821920909478, "rouge": 0.16486486486486487}, {"predict": "starts a drag from the view", "true": "start all animations about dismissing", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "creates a tagging decorator for the given output stream", "true": "creates a tagging decorator for the given output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds the list of messages from the builder and returns them", "true": "builds the list of messages from the builder and returns them", "bleu": 1.0, "rouge": 1.0}, {"predict": "stores given short value", "true": "stores given short value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the sha - 256 hash of the given byte range", "true": "calculates the sha - 256 hash of the given byte range , and then hashes the resulting hash again", "bleu": 0.43664315155765615, "rouge": 0.6360792492179353}, {"predict": "constructs a default us token word processor", "true": "constructs a pronounceable fsm with information in the given url", "bleu": 0.15925177647011352, "rouge": 0.22803738317757008}, {"predict": "apply zero or blank , left or right padding", "true": "apply zero or blank , left or right padding", "bleu": 1.0, "rouge": 1.0}, {"predict": "put an object into the trie for lookup", "true": "put an object into the trie for lookup", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes the obe jct immutable", "true": "makes the object immutable", "bleu": 0.3860973950960897, "rouge": 0.6802973977695167}, {"predict": "utility method to find the specified library path , specified by the passed library name", "true": "returns the full library path for the name", "bleu": 0.12874330508144843, "rouge": 0.46003016591251883}, {"predict": "removes a component listener from this instance", "true": "removes a component listener from this instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "this is used to determine if a string is empty", "true": "returns true if the string is null or 0 - length", "bleu": 0.1613101715871968, "rouge": 0.28328173374613}, {"predict": "assert the multi cast header and file", "true": "verify that we can encode and decode a record", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "over rid of words note : this may make it left over a u term if it doesn ' t return false otherwise", "true": "checks a term if it can be processed indexed", "bleu": 0.10414419091986514, "rouge": 0.27141268075639596}, {"predict": "sends given response to the socket", "true": "sends given response to the socket", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the associated with the input string to recover point associated with the current displays", "true": "decode an encoded string", "bleu": 0.08225964699966554, "rouge": 0.11753371868978806}, {"predict": "causes the current thread to block until signal shutdown is called", "true": "causes the current thread to block until signal shutdown is called", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the given connection to the list of connections in this object ' s list", "true": "allows the remote end of the specified connection to access objects registered in this object space", "bleu": 0.1884991955924285, "rouge": 0.38485804416403785}, {"predict": "determines the distance between the given point , this turn the point to the given point", "true": "returns the euclidean distance between a specified point and this point", "bleu": 0.12512236921161915, "rouge": 0.45979899497487436}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a string to an in t", "true": "convert a string to an in t treating empty strings as the default value", "bleu": 0.30934850332660563, "rouge": 0.5390279823269514}, {"predict": "adds given item to the data it er able", "true": "convenience : add an item wrapping it into a sing <unk> able behind the scenes", "bleu": 0.09111821689187218, "rouge": 0.23921568627450981}, {"predict": "caution : while the background thread should be slowed down , updates of the gui have to be done in the gui thread !", "true": "caution : while the background thread should be slowed down , updates of the gui have to be done in the gui thread !", "bleu": 1.0, "rouge": 1.0}, {"predict": "start loop", "true": "poll er main loop", "bleu": 0.27952792741962756, "rouge": 0.31443298969072164}, {"predict": "gets all the keys in this cache", "true": "retrieve the names from all files in dir", "bleu": 0.19148978368719022, "rouge": 0.2634989200863931}, {"predict": "creates a new dialogue with the specified system", "true": "creates a new dialogue recorder for the dialogue system", "bleu": 0.4284449847620205, "rouge": 0.6984732824427481}, {"predict": "generates unique id for request future", "true": "generates unique id for request future", "bleu": 1.0, "rouge": 1.0}, {"predict": "reschedules scheduled was previously scheduled for a specific module", "true": "searches the calendar alerts table for alarms that should have fired but have not and then reschedules them", "bleu": 0.05746166391236872, "rouge": 0.06987399770904926}, {"predict": "add a column name to this projection", "true": "add a column name to this projection", "bleu": 1.0, "rouge": 1.0}, {"predict": "perform an asynchronous min operation", "true": "perform an asynchronous min operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "changes to the target state", "true": "changes to the next state", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "read dialog to display", "true": "read fields to display", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "converts g month day object representation to string", "true": "converts month object representation to string", "bleu": 0.48549177170732344, "rouge": 0.8798076923076923}, {"predict": "adds a new test rule list", "true": "adds the given test to the list", "bleu": 0.22236312185643822, "rouge": 0.45522388059701485}, {"predict": "generate a random value with the generators parameters", "true": "returns a random number from the distribution ; bypasses the internal state", "bleu": 0.13755608571892394, "rouge": 0.28955696202531644}, {"predict": "swaps the values in the list at the given index", "true": "swaps in place the elements at the specified positions in the specified list", "bleu": 0.17381336617464685, "rouge": 0.42479108635097496}, {"predict": "builds a list of name / back pair of a specified type", "true": "populate a list of name value pairs used in the common ws requests for ip t registrations and updates", "bleu": 0.16137176267520634, "rouge": 0.2479674796747967}, {"predict": "allows this input to be used within the closure , ensuring that it is closed before this method returns", "true": "allows this close able to be used within the closure , ensuring that it is closed once the closure has been executed and before this method returns", "bleu": 0.5132338768907073, "rouge": 0.7588113337940566}, {"predict": "returns true if the given string is contained in a list of strings", "true": "check whether the string matches the pattern", "bleu": 0.10571070857151538, "rouge": 0.21143847487001732}, {"predict": "adds a server to the load of the initial values", "true": "add a new server to the load snapshot", "bleu": 0.3672056269893592, "rouge": 0.5669144981412639}, {"predict": "adds the leaf to this index", "true": "append leaf to the end of the leaves list", "bleu": 0.1894765350842885, "rouge": 0.2573839662447257}, {"predict": "convert a component timestamp to a spec if ed number of microseconds", "true": "convenience method for converting component time longs to strings", "bleu": 0.11498759556447223, "rouge": 0.19551282051282048}, {"predict": "set the ' content - length ' request header to the given value", "true": "set the ' content - length ' request header to the given value", "bleu": 1.0, "rouge": 1.0}, {"predict": "draw into the provided canvas", "true": "draw into the provided canvas", "bleu": 1.0, "rouge": 1.0}, {"predict": "modify lun , export / un export / expand , etc", "true": "modify lun ( export / un export / expand etc ) in a sync mode", "bleu": 0.40728895472895155, "rouge": 0.6736196319018404}, {"predict": "replaces this string with the specified target sequence", "true": "copies this string replacing occurrences of the specified target sequence with another sequence", "bleu": 0.2841013598855867, "rouge": 0.5479041916167664}, {"predict": "closes the cache and deletes all of its stored values", "true": "closes the cache and deletes all of its stored values", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the scene object to a scene using this scene as the", "true": "semantic concepts are similar if they share a syn set or a concept", "bleu": 0.09559539481714499, "rouge": 0.07942708333333334}, {"predict": "feature analytics immediately to show track", "true": "google analytics usage tracking", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "adds a tuple without firing a notification", "true": "adds a tuple without firing a notification", "bleu": 1.0, "rouge": 1.0}, {"predict": "update an a song record", "true": "adds a song to the adapter", "bleu": 0.2941733261715515, "rouge": 0.3577712609970674}, {"predict": "filter elements by name", "true": "filter children by name and class", "bleu": 0.3081980909598119, "rouge": 0.5791139240506329}, {"predict": "emits a put method to put a value into a map", "true": "emits a put method to put a value into a map", "bleu": 1.0, "rouge": 1.0}, {"predict": "since these hash code is equal to objects", "true": "returns true if the object is a complex effect with an identical content", "bleu": 0.08583768591139128, "rouge": 0.09131736526946108}, {"predict": "provides the right name of the node for display", "true": "provides the right name of the node for display", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse the text into array list", "true": "parse json - formatted list of events / <unk> / <unk> from wikipedia , extract list of events and split the events into a string array of individual events", "bleu": 0.006290316201744721, "rouge": 0.20435510887772193}, {"predict": "removes a listener from the list that is notified each time a change to the data model occurs", "true": "removes a listener from the list that is notified each time a change to the data model occurs", "bleu": 1.0, "rouge": 1.0}, {"predict": "replaces the start and end index of the builder", "true": "replaces a portion of the string builder with another string", "bleu": 0.18885888592159467, "rouge": 0.41709401709401706}, {"predict": "recursively adds a permission to a directory", "true": "recursively adds a permission to a directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "use internal thread to handle transactions derived from within inclusive range of 10 transactions", "true": "running process accepting connections", "bleu": 0.07432998184513635, "rouge": 0.0}, {"predict": "learn a device using the given characteristics", "true": "learn a device using the given characteristics", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the given type signature is valid , false if it is not", "true": "returns true if the given type signature is valid , false if it is not", "bleu": 1.0, "rouge": 1.0}, {"predict": "remainder of division of a negative numbers", "true": "remainder of division of two numbers of different signs", "bleu": 0.40661103887968814, "rouge": 0.6112224448897796}, {"predict": "show the show presentation", "true": "returns true if action group has visible children", "bleu": 0.11115018927487523, "rouge": 0.0}, {"predict": "given a string and a set of arguments , make sure that the given type can be found on the given type", "true": "check that all d references in the given type snippet are within bounds", "bleu": 0.1090009697802911, "rouge": 0.23968565815324167}, {"predict": "randomize all available arrays", "true": "randomize and normalize weights", "bleu": 0.35930411196308426, "rouge": 0.25}, {"predict": "saves the pixels from the buffer on the sd card", "true": "saves the pixels from the buffer on the sd card", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will check the specified file name for a particular file as its ancestors", "true": "check if the file is valid or not", "bleu": 0.09782375748961449, "rouge": 0.2760180995475113}, {"predict": "remove a class from the list of s rc classes", "true": "remove a class from the list of s rc classes", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the values range", "true": "updates the values range", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the current scope by appending any necessary whitespace and the given bracket", "true": "closes the current scope by appending any necessary whitespace and the given bracket", "bleu": 1.0, "rouge": 1.0}, {"predict": "append a byte array to the buffer", "true": "append specified bytes to the buffer", "bleu": 0.3655552228545123, "rouge": 0.6240409207161125}, {"predict": "checks if there is enough to be enough to phone size", "true": "checks if there is enough space on phone self", "bleu": 0.43361890903486755, "rouge": 0.6110183639398998}, {"predict": "method to handle cancel button", "true": "method to handle cancel button", "bleu": 1.0, "rouge": 1.0}, {"predict": "applies a given attribute to this string", "true": "applies a given attribute to this string", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert string to value", "true": "converts string back to correct ( previous ) data type", "bleu": 0.08872444253557525, "rouge": 0.26521739130434785}, {"predict": "copy nodelist members into this nodelist , adding in document order", "true": "copy nodelist members into this nodelist , adding in document order", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of this vector , i", "true": "returns the string representation ( in ion format ) of this timestamp in utc", "bleu": 0.14026062829965458, "rouge": 0.41838134430727025}, {"predict": "the function should be used by the increment ing the base 64 algorithm", "true": "flatten the trie into a byte array for a minimized memory footprint", "bleu": 0.09552040806823771, "rouge": 0.08058124174372522}, {"predict": "records the current dialogue state in the given state", "true": "records a dialogue state in the component and makes it available for display in the network selection list on the left side", "bleu": 0.10078721266643585, "rouge": 0.2999016715830875}, {"predict": "write the utf - 8 encoded bytes to the output stream", "true": "returns the number of octets written", "bleu": 0.11390778025531027, "rouge": 0.12423625254582485}, {"predict": "geo key taken from ' s not a geo server", "true": "instantiate s a new geo server wp s client", "bleu": 0.18850319022747347, "rouge": 0.42508710801393734}, {"predict": "creates the instance of tls v 1 connection state", "true": "creates the instance of ssl v 3 connection state", "bleu": 0.4671379777282001, "rouge": 0.7777777777777778}, {"predict": "returns whether the file is a valid zip file", "true": "returns whether the file is a valid zip file", "bleu": 1.0, "rouge": 1.0}, {"predict": "performs maintenance on this pool , evicting the connection that has been idle the longest if either it has exceeded the keep alive limit or the idle connections limit", "true": "performs maintenance on this pool , evicting the connection that has been idle the longest if either it has exceeded the keep alive limit or the idle connections limit", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if the given object equals ( ) and if not either a ( )", "true": "this is used to compare the expected and current versions of the class", "bleu": 0.09103526405546068, "rouge": 0.14472123368920523}, {"predict": "generates a device - and invocation - specific seed to be mixed into the linux prng", "true": "generates a device - and invocation - specific seed to be mixed into the linux prng", "bleu": 1.0, "rouge": 1.0}, {"predict": "decodes the plain text of the internal bytes using the internal encoding", "true": "decodes back a string to a byte array", "bleu": 0.10390302174233558, "rouge": 0.10374149659863945}, {"predict": "delegates to string , entry ( string , string , string , string , has a single user authorization ) to a single namespace", "true": "creates a list of user namespace <unk> from the list of persisted entities", "bleu": 0.06024757292375468, "rouge": 0.1713483146067416}, {"predict": "method to read data header for this header", "true": "method to read header data from the input stream", "bleu": 0.29150322793751426, "rouge": 0.465648854961832}, {"predict": "resets this stream to the beginning of the source string", "true": "resets this stream to the beginning of the source string", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method returns a specification for the supplied key", "true": "this method returns a specification for the supplied key", "bleu": 1.0, "rouge": 1.0}, {"predict": "draw a text in text and style properties", "true": "draw the text under the graphics", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "compares two percent objects", "true": "compares two percent objects", "bleu": 1.0, "rouge": 1.0}, {"predict": "get a cloned pr dic a ted node test", "true": "get a cloned pr dic a ted node test", "bleu": 1.0, "rouge": 1.0}, {"predict": "tell if the control size is outside of the table", "true": "returns true if the given point is outside the preferred size of the item at the given row of the table", "bleu": 0.10868144445422531, "rouge": 0.42445328031809143}, {"predict": "adds a source folder to the internal list", "true": "root folder for labels - > documents", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "generate the s rdf group method , given an s rdf group volume", "true": "returns a work flow", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "performs the ball from the ball over to the ball over it", "true": "attempt a field goal using the offense ' s <unk>", "bleu": 0.10390302174233558, "rouge": 0.09242424242424242}, {"predict": "unzips all bytes in an array", "true": "returns an g <unk> copy of the input array", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "calculates the exact ( width or height , in epsilon for example : 1 , float ) or return the same epsilon of the same", "true": "calculates the m - value needed for the gs s algorithm", "bleu": 0.07265857755970445, "rouge": 0.23898139079333985}, {"predict": "create a server socket from server listening to bind to the given address", "true": "create a secure server socket", "bleu": 0.15807437922444714, "rouge": 0.48316831683168315}, {"predict": "prints an array of bytes to a stream using base 64 encoding", "true": "prints a byte array to the stream , properly encoded in base 64", "bleu": 0.1607716496330015, "rouge": 0.4765625000000001}, {"predict": "add or remove client from an existing v set or v v set", "true": "delete a v v set or consistency group", "bleu": 0.22355093096292097, "rouge": 0.2985318107667211}, {"predict": "makes the given visitor visit this annotation", "true": "makes the given visitor visit this annotation", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds an index of an key comment string", "true": "finds the index of the specified key within the array containing key / value comments", "bleu": 0.0999647494062524, "rouge": 0.32972972972972975}, {"predict": "returns true if this cookie has expired", "true": "returns true if this cookie has expired", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes ' close able ' , ignoring any checked exceptions", "true": "closes ' close able ' , ignoring any checked exceptions", "bleu": 1.0, "rouge": 1.0}, {"predict": "utility method to check if a shortcut can be added to the home screen", "true": "utility method to check if a shortcut can be added to the home screen", "bleu": 1.0, "rouge": 1.0}, {"predict": "create the rounded icon generator to draw the rounded effect of its bounds we should be displayed", "true": "constructs the generator and initializes the common members ignoring display density", "bleu": 0.0859076483566362, "rouge": 0.22289890377588306}, {"predict": "create a new map entry", "true": "creates a new in memory entry store which provides constant time storage and retrieval of entries by id or parent id", "bleu": 0.01573818077442266, "rouge": 0.20771850170261064}, {"predict": "persist a connection to the database", "true": "persist a connection to the database", "bleu": 1.0, "rouge": 1.0}, {"predict": "new instance , based on the supplied base code and format", "true": "constructs a new class an not at or for the specified code base urls", "bleu": 0.10904215887663019, "rouge": 0.2349165596919127}, {"predict": "self mix of self", "true": "produce the next identifier", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "c hole sky algorithm for symmetric and positive definite matrix", "true": "c hole sky algorithm for symmetric and positive definite matrix", "bleu": 1.0, "rouge": 1.0}, {"predict": "stores given url data in the url", "true": "create stream that will be cached after it is read", "bleu": 0.10175282441454783, "rouge": 0.0}, {"predict": "parse the title in the pattern , s box", "true": "return a 2 element array", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "return the list based on the selection", "true": "returns the selection produced by this object", "bleu": 0.24446151121745047, "rouge": 0.2857142857142857}, {"predict": "calculates the list containing k - 1 linear array list that list top - value list", "true": "if a randomize operation changes the ratio of ex c it a tory to inhibitory synapses , this method can be called to change the ex c it a tory ratio to reflect this value", "bleu": 0.025963220798937345, "rouge": 0.07349397590361446}, {"predict": "a repository root has been removed", "true": "a repository root has been removed", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts the priority queue of the priority queue", "true": "insert the object passed with the priority value passed", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "wrap program command line for tile gid", "true": "wrap the given command into a command with ch own", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "run a dml query query", "true": "the main method to handle the query", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "finds the index of an element in the given level", "true": "returns the index of an element in a level", "bleu": 0.5900468726392808, "rouge": 0.7439024390243903}, {"predict": "returns the number of attributes in the array", "true": "get the number of attributes in the attribute set", "bleu": 0.6406746857842317, "rouge": 0.6984732824427481}, {"predict": "consume an tag name off the queue ( word or : , - , _ , : \" )", "true": "consume an tag name off the queue ( word or : , _ , - )", "bleu": 0.7162326270441588, "rouge": 0.8705994291151284}, {"predict": "re - sort a feature sequence , which is also used for outside the given set", "true": "launches a deep sort on the array of feature vectors", "bleu": 0.09672649511413092, "rouge": 0.16052631578947368}, {"predict": "remove all listeners from this dispatcher", "true": "remove all existing listeners", "bleu": 0.31239399369202553, "rouge": 0.6224489795918368}, {"predict": "decrypt s a hex bin string ( handling is case sensitive )", "true": "decrypt s a hex bin string ( handling is case sensitive )", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the huber loss loss between the x and y ; - 1 b & y ) ^ 2 with x i = b ; d ted loss", "true": "rank loss - the average fraction of labels which are not correctly ordered", "bleu": 0.05146852383843666, "rouge": 0.10445205479452054}, {"predict": "spurious , also for non - conflicted names , and also copying them into convex hull", "true": "recursively add a cluster and its children", "bleu": 0.07692375026049747, "rouge": 0.09355828220858894}, {"predict": "writes the attribute to the output service", "true": "print service attribute listener", "bleu": 0.20556680845025982, "rouge": 0.19122257053291536}, {"predict": "convenience method for decoding data to a file", "true": "convenience method for decoding data to a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "evicts - 1 and sets the pool of idle connections", "true": "make one pass of the idle object e <unk>", "bleu": 0.14991106946711685, "rouge": 0.21254355400696867}, {"predict": "generate a random population", "true": "generate random population of given size", "bleu": 0.3081980909598119, "rouge": 0.5791139240506329}, {"predict": "creates a streaming session that can be customized by adding tracks", "true": "creates a streaming session that can be customized by adding tracks", "bleu": 1.0, "rouge": 1.0}, {"predict": "consul tar todos loc a is cad a is f de dados", "true": "consul tar todos visit antes cad as tr dos na base de dados", "bleu": 0.21990063276566446, "rouge": 0.4765625000000001}, {"predict": "asserts that the expected values can be selected from the test table", "true": "asserts that the expected values can be selected from the test table", "bleu": 1.0, "rouge": 1.0}, {"predict": "append a single character to this writer", "true": "append a single character to this writer", "bleu": 1.0, "rouge": 1.0}, {"predict": "insert a list of instructions before the given instruction", "true": "inserts each instruction in a list before another instruction", "bleu": 0.21105340631872635, "rouge": 0.4444444444444444}, {"predict": "creates a new stream access - control - list builder", "true": "creates a new persistent subscription settings builder", "bleu": 0.24808415001701817, "rouge": 0.48605577689243035}, {"predict": "allows arrays to behave similar to collections", "true": "counts the size of an array", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "we decode out the pre processes : 1 ) and the scanner for plain shell commands", "true": "run recovery of stopped scanners", "bleu": 0.06468490584192432, "rouge": 0.0}, {"predict": "convert a 2 - dimensional array of doubles", "true": "forward pass - given input x , get output y", "bleu": 0.12489309605176803, "rouge": 0.10892857142857142}, {"predict": "goto the frame field value", "true": "description of the method", "bleu": 0.2730120862709067, "rouge": 0.22676579925650556}, {"predict": "pops a type from the output frame stack", "true": "pops a type from the output frame stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete the attribute value", "true": "delete the attribute value", "bleu": 1.0, "rouge": 1.0}, {"predict": "push an executing attribute set , so we can check for recursive attribute definitions", "true": "push an executing attribute set , so we can check for recursive attribute definitions", "bleu": 1.0, "rouge": 1.0}, {"predict": "animate to the final position of the stack", "true": "animate to the final position of the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new range with no lower bound", "true": "add a new range with no upper bound", "bleu": 0.7506238537503395, "rouge": 0.875}, {"predict": "send a reply to a soap response", "true": "send a response back to the client", "bleu": 0.2777619034011791, "rouge": 0.42857142857142855}, {"predict": "this method is used to reduce muti ple oo cur rence s of the description", "true": "like string", "bleu": 0.06917184228205472, "rouge": 0.0}, {"predict": "returns the text matched by the current regular expression", "true": "returns the text matched by the current regular expression", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the path will relative path segments like \"", "true": "returns the path will relative path segments like \"", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new in memory message with the given arguments", "true": "creates a new store for configuration values", "bleu": 0.23462350320528, "rouge": 0.36454183266932266}, {"predict": "next player is not available", "true": "changes to the next track", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "bit ( since linux 2", "true": "the address of the start ( i", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "draws a bite out of a theme with a teeth shaped", "true": "draw single bitmap with the giving center x , center y and radius", "bleu": 0.09497094417933137, "rouge": 0.08209959623149395}, {"predict": "spins / blocks until node s is matched by a fulfill operation", "true": "spins / blocks until node s is matched by a fulfill operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert the device specific device to the m qt t multi cast device", "true": "get the application ' s m qt t device", "bleu": 0.19674979811155635, "rouge": 0.4699537750385208}, {"predict": "start collecting profiling data", "true": "start collecting locking data", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "add a callback to be invoked when a swipe event is sent to this view", "true": "add a callback to be invoked when a swipe event is sent to this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to be overridden by subclasses to read the next object from the source stream", "true": "method to be overridden by subclasses to read the next object from the source stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert the pixels to pixels that should return 0", "true": "converts pixels to meters", "bleu": 0.18575057999133596, "rouge": 0.3306233062330623}, {"predict": "removes the results of a search from the specified category", "true": "removes the results of a search from the specified category", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a char to the buffer , adding all occurrences", "true": "checks if a character is part of an open html tag or close html tag , and if so adds it to the buffer , otherwise returns false", "bleu": 0.06308352567353562, "rouge": 0.2424483306836248}, {"predict": "computes the length of a vector", "true": "computes the length of a vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts given json string in given json object to object", "true": "converts given json string in to a object", "bleu": 0.49616830003403634, "rouge": 0.7936802973977695}, {"predict": "create cache for web", "true": "creates the cache instance for the test", "bleu": 0.1878296463217631, "rouge": 0.346590909090909}, {"predict": "creates a new attribute list panel", "true": "creates the attribute selection panel with no initial instances", "bleu": 0.1593301391270729, "rouge": 0.3860759493670886}, {"predict": "returns the array of values and column numbers", "true": "returns a 2 - dimensional array with the prepared data", "bleu": 0.1485237584394808, "rouge": 0.21785714285714283}, {"predict": "creates a new environment environment backed by the java environment", "true": "make sure nobody can instantiate the class", "bleu": 0.12605968092174913, "rouge": 0.12151394422310759}, {"predict": "removes a photo from this user", "true": "removes the given photo from this user", "bleu": 0.5446761861605913, "rouge": 0.7587064676616916}, {"predict": "performs a binary search for the specified element in a part of the specified sorted array", "true": "performs a binary search for the specified element in a part of the specified sorted array", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the filtered match for a classification", "true": "get the set of matches active for the given read", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "converts a array to an array", "true": "copies the content of the underlying atomic array to a normal one", "bleu": 0.11492332782473744, "rouge": 0.20962199312714777}, {"predict": "final exception with final exception and appends register - to register - interest response", "true": "add a failure object to the list of objects to be evaluated at every potential failure point", "bleu": 0.07134415891605017, "rouge": 0.06340956340956341}, {"predict": "dump the parse stack for debugging purposes", "true": "dump the parse stack for debugging purposes", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a set of categories that each item in the given set", "true": "creates a new set with the given categories , making them all lowercase in the process", "bleu": 0.14889953668322528, "rouge": 0.4178082191780822}, {"predict": "load a j ms message listener", "true": "load a j ms message listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method uploads a content to the remote server", "true": "this method uploads a file to the remote server", "bleu": 0.6580370064762462, "rouge": 0.8888888888888888}, {"predict": "create ssl socket that is connected to the given socket", "true": "create a ssl socket that wraps the existing socket", "bleu": 0.26985534666825095, "rouge": 0.6376306620209059}, {"predict": "format the node , recursively", "true": "format the node , recursively", "bleu": 1.0, "rouge": 1.0}, {"predict": "server helper method to register a j mx mbe an", "true": "server helper method to register a j mx mbe an", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the tags from this ex if interface object into a jpeg stream , removing prior ex if tags", "true": "writes the tags from this ex if interface object into a jpeg stream , removing prior ex if tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "sorts the content of this adapter using the specified comparator", "true": "sorts the content of this adapter using the specified comparator", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if general exceptions have been caught", "true": "return true if <unk> was caused by a region destroyed exception", "bleu": 0.10489671869455933, "rouge": 0.10683012259194395}, {"predict": "appends the json representation of the specified string to the end of this array", "true": "appends the json representation of the specified string to the end of this array", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new bundle variables bundle", "true": "create a new simple arguments bundle implementation from provided key - & gt ; value map", "bleu": 0.05900360388141482, "rouge": 0.25206611570247933}, {"predict": "instantiate s a new device for video capture", "true": "set ups the parameters for video capture ( with more options )", "bleu": 0.1810339897381413, "rouge": 0.28955696202531644}, {"predict": "reads all available rows from the given cursor and returns a list of new image to objects", "true": "reads all available rows from the given cursor and returns a list of new image to objects", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the plain date string into a date object", "true": "method that converts a an iso 8601 string to java date", "bleu": 0.14211011212459496, "rouge": 0.2946859903381642}, {"predict": "create dom from string", "true": "create dom from io stream", "bleu": 0.5208154731870476, "rouge": 0.6535714285714286}, {"predict": "obtains the string representation of this object", "true": "obtains the string representation of this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "reset the count of count to false", "true": "resets counter to zero", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "schedule a task for repeated fixed - rate execution after a specific time has been reached", "true": "schedule a task for repeated fixed - rate execution after a specific time has been reached", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies the value of the data attribute from the specified attribute value", "true": "copies the value of the realm attribute from the specified attribute value", "bleu": 0.7611606003349892, "rouge": 0.9166666666666665}, {"predict": "copy file in assets into the given file", "true": "copy file in assets into destination file", "bleu": 0.6104735835807844, "rouge": 0.8097345132743362}, {"predict": "test if the current house is identical to the same object", "true": "check if address are content identical if number are equals and street ( if number is null , we look at the name )", "bleu": 0.043932030450036325, "rouge": 0.16066725197541704}, {"predict": "replacement for the math", "true": "replacement for the math", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns three symmetric encryption of the given key in the results of the given entries", "true": "compares the distance of two keys relative to this one using the xor metric", "bleu": 0.09782375748961449, "rouge": 0.2081911262798635}, {"predict": "discards any whitespace from a base - 64 encoded block", "true": "discards any whitespace from a base - 64 encoded block", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new selector instance", "true": "construct a syncs elector with brand new selector", "bleu": 0.2118947430943267, "rouge": 0.44309927360774815}, {"predict": "removes the child at the specified index from this list", "true": "removes the child at the given index", "bleu": 0.47987820666906633, "rouge": 0.7290836653386453}, {"predict": "given the location of the ' middle snake ' , split the diff in two parts and re curse", "true": "given the location of the ' middle snake ' , split the diff in two parts and re curse", "bleu": 1.0, "rouge": 1.0}, {"predict": "paint the provided painter using the provided transform at the specified position and size", "true": "paint the provided painter using the provided transform at the specified position and size", "bleu": 1.0, "rouge": 1.0}, {"predict": "load a directory recursively", "true": "load a module candidate from a directory", "bleu": 0.26563123324397914, "rouge": 0.5198863636363635}, {"predict": "returns true if the given throw able has been specifically suppressed by the given exception", "true": "checks if passed throw able has given class in one of the suppressed exceptions", "bleu": 0.18207052811092136, "rouge": 0.3469852104664391}, {"predict": "write a variable size long", "true": "write a variable size long value", "bleu": 0.8187307530779819, "rouge": 0.8944281524926685}, {"predict": "updates the data to be signed or verified , using the specified byte value", "true": "updates the data to be signed or verified using the specified byte", "bleu": 0.7241577342575828, "rouge": 0.9360613810741688}, {"predict": "save the state of this de que to a stream ( that is , serialize it )", "true": "saves this de que to a stream ( that is , serializes it )", "bleu": 0.611904949990603, "rouge": 0.7879440258342303}, {"predict": "checks if the initiator associated with the initiator / migration", "true": "check if the passed in initiator is for rp", "bleu": 0.17827531042796255, "rouge": 0.31881533101045295}, {"predict": "this parses the collection of the properties from the given refresh to the configured data", "true": "initializes the meter command class", "bleu": 0.08225964699966554, "rouge": 0.10990990990990988}, {"predict": "sorts an array of strings , returning a new array with the sorted items", "true": "sorts an array of strings , returning a new array with the sorted items", "bleu": 1.0, "rouge": 1.0}, {"predict": "read a dml file will matches the config file", "true": "start with the internal default settings , then merge in the settings from any specified configuration file , if available", "bleu": 0.04601170352846859, "rouge": 0.1291005291005291}, {"predict": "if there is no field with the specified key , then associate the given value with the specified key", "true": "if there is no field with the specified key , then associate the given value with the specified key", "bleu": 1.0, "rouge": 1.0}, {"predict": "combine the results from the given source and return it", "true": "for multi line records this method combines the current result with the result from previous read ( s )", "bleu": 0.06094929250459501, "rouge": 0.13062098501070665}, {"predict": "determine if the specified macintosh web browser is equivalent to the application", "true": "checks that at least one <unk> device is present", "bleu": 0.10390302174233558, "rouge": 0.09775641025641024}, {"predict": "check if the given compilation is contained in the generated code", "true": "creates a change from each compilation unit and stores it in the changes list", "bleu": 0.12263782424860158, "rouge": 0.2349165596919127}, {"predict": "indents out ; writes object ; ends current line", "true": "indent out ; write object ; end current line", "bleu": 0.2730120862709067, "rouge": 0.6666666666666666}, {"predict": "draws the inverse and swap values on to the specified rotation area", "true": "draw the combat indicators", "bleu": 0.10390302174233558, "rouge": 0.13738738738738737}, {"predict": "create an activity resolves to the given process", "true": "creates a new instance", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": ", + / - , l sr # ! 0 b 01 / l sr / if shift i mm = = 0 then / l sr # 32 / index = 0 else index = rm logical shift right shift i mm if u = 0", "true": "operation : , + / - , l sr # address = rn 0 b 01 / l sr / if shift i mm = = 0 then / l sr # 32 / index = 0 else index = rm logical shift right shift i mm if", "bleu": 0.8669792028364426, "rouge": 0.9035480537375128}, {"predict": "ends the formal type parameters section of the signature", "true": "ends the formal type parameters section of the signature", "bleu": 1.0, "rouge": 1.0}, {"predict": "tells if there is a digit or a letter character ahead", "true": "tells if there is a digit or a letter character ahead", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets project name from uri", "true": "gets project name from uri", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a reference to this ref", "true": "adds the given object to the set of hard references , which will prevent that object from being disposed until the queue has been flushed completely", "bleu": 0.007880239271634741, "rouge": 0.0561694290976059}, {"predict": "reset the second line of notes area", "true": "reset the second line of notes area", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the require property to the list of attributes to be used for the cluster and encapsulates the requirements", "true": "add a required property of type object", "bleu": 0.0712695567709093, "rouge": 0.16781292984869325}, {"predict": "determines whether the point x , y will add a new point to the current pattern ( in addition to finding the cell , also makes heuristic choices such as filling in gaps based on current pattern )", "true": "determines whether the point x , y will add a new point to the current pattern ( in addition to finding the cell , also makes heuristic choices such as filling in gaps based on current pattern )", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a head rule from the specified directory", "true": "constructs a new head rule by decoding the specific head tag sets", "bleu": 0.14544785215055717, "rouge": 0.3860759493670886}, {"predict": "or for two negative numbers ; the first is shorter", "true": "or for two negative numbers ; the first is shorter", "bleu": 1.0, "rouge": 1.0}, {"predict": "submit a task to the executor core", "true": "this is a thread safe way to avoid rejection exception", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "subtract two numbers of different scales using math context ; the first is positive", "true": "subtract two numbers of different scales using math context ; the first is positive", "bleu": 1.0, "rouge": 1.0}, {"predict": "allocate a random sql statement that writes the named row descriptors to the inverse blocks that will be adjusted to the underlying field descriptor", "true": "creates an xs <unk> a , populates type information and allocates memory for the sql data fields", "bleu": 0.06024757292375468, "rouge": 0.10066006600660064}, {"predict": "add two numbers of the specified vector to the vector", "true": "overwrites a bit range within the vector", "bleu": 0.16590387014219712, "rouge": 0.24302788844621517}, {"predict": "checks whether the given string is empty", "true": "check if the given string is empty or null", "bleu": 0.5112863131654277, "rouge": 0.6112224448897796}, {"predict": "add listener for scroll view", "true": "add listener for scroll view", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the upc / e an checksum on a string of digits , and reports whether the checksum is correct or not", "true": "computes the upc / e an checksum on a string of digits , and reports whether the checksum is correct or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the callback s object", "true": "gets the callback s object", "bleu": 1.0, "rouge": 1.0}, {"predict": "if a block is available in the cache", "true": "called at the beginning of update memory used", "bleu": 0.16036590969929357, "rouge": 0.125}, {"predict": "translates a java 2 d point on the chart to a screen location", "true": "translates a java 2 d point on the chart to a screen location", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads in the properties from the property file", "true": "reads all declared properties in the component span tag", "bleu": 0.2116253761537182, "rouge": 0.34923664122137404}, {"predict": "updates the traffic p max and po down", "true": "update all the traffic projections based on their heading and ground speed", "bleu": 0.13755608571892394, "rouge": 0.28955696202531644}, {"predict": "log a throw able throw able to the logger level with it and logs the exception to it if it is logged", "true": "logs the stack trace for the given throw able if logger is initialized else prints the stack trace using system", "bleu": 0.10616735292999413, "rouge": 0.1921259842519685}, {"predict": "computes the contrast between 2 colors for both samples and low ( for both ) to have a given color", "true": "calculates the con <unk> st between two colors , using the algorithm provided by the wc ag v 2", "bleu": 0.07681104116622756, "rouge": 0.1545608108108108}, {"predict": "reads a single byte from the pro xie d input stream and writes it to the associated output stream", "true": "reads a single byte from the pro xie d input stream and writes it to the associated output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds at which at last index at which the specified index is at least one", "true": "adds an item to the menu", "bleu": 0.09103526405546068, "rouge": 0.2064297800338409}, {"predict": "many fields in gsm sim ' s are stored in gsm sim ' s default are gsm sim", "true": "decodes a binary - coded decimal into a string and returns it", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "assume that the graphics has been set with the paint / color needed , just render the shape of the graphics and color returned", "true": "assume that the graphics has been set with the paint / color needed , just render the shape of the background", "bleu": 0.829360614494932, "rouge": 0.8997050147492625}, {"predict": "adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one", "true": "adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an individual expression / edge from the list of expression", "true": "keeps track of layout editor panels that are using this layout block", "bleu": 0.10400927574124633, "rouge": 0.08628005657708629}, {"predict": "table handler for ( private )", "true": "uses the wildcard expand er handler to process all found files and directories", "bleu": 0.06878769894132081, "rouge": 0.09870550161812298}, {"predict": "creates a new ip interface", "true": "creates a new ip interface for a host", "bleu": 0.5488116360940264, "rouge": 0.7384987893462469}, {"predict": "syntax - based proposal based for edit proposals in the edit tree", "true": "collects all edit proposals from contained <unk> pos al providers", "bleu": 0.1367440667823257, "rouge": 0.18484848484848485}, {"predict": "create a new instance", "true": "create a new instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures that the specified namespace exists in the specified namespace", "true": "ensures that an image name has a namespace prefix", "bleu": 0.17827531042796255, "rouge": 0.31881533101045295}, {"predict": "returns map containing the given entries", "true": "returns map containing the given entries", "bleu": 1.0, "rouge": 1.0}, {"predict": "test whether two ers are identical to the class i fier", "true": "tests the filter in conjunction with the filtered class i fier", "bleu": 0.22416933501922287, "rouge": 0.36363636363636365}, {"predict": "changes the first letter of the passed string to upper case", "true": "changes the first letter of the passed string to upper case", "bleu": 1.0, "rouge": 1.0}, {"predict": "choose many elements based on the ratio", "true": "returns a random index based on the given proportions", "bleu": 0.2598013194025897, "rouge": 0.3667334669338677}, {"predict": "set the bounds of the page on which page 3 = 0 , y 1 if a = 1 = 1 ) and ending at ( x 2 , x 2 = 2 = 3 = 3 = = = 2 = 0 , y 2 = 2", "true": "track actual size of shape", "bleu": 0.025042878540631138, "rouge": 0.04420289855072463}, {"predict": "return the root component identified by the given components ( i", "true": "partitions the given list of components into a map where each value is a list of siblings , in the same order as in the original list , and where the keys are the parents ( or null for the components that do not have a parent )", "bleu": 0.006169962003074778, "rouge": 0.1218172740888667}, {"predict": "count the number of newline characters to make it reaches at the given offset", "true": "count the number of non - newline characters before first newline in the string", "bleu": 0.29256127307315066, "rouge": 0.5}, {"predict": "spanning is specified in the uncompressed grid number", "true": "spanning is specified in the uncompressed grid number", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if this set of rules equals another", "true": "checks if this set of rules equals another", "bleu": 1.0, "rouge": 1.0}, {"predict": "description of the method row d ( d * log i true * o ( d * log - d ) * relevant i - d instance", "true": "returns a text description that can be used for display", "bleu": 0.044915755686574035, "rouge": 0.05893719806763285}, {"predict": "adds some recognized possible coordinates ( recognized by some recognized possible combo )", "true": "adds a claimed signer role", "bleu": 0.09552040806823771, "rouge": 0.12079207920792079}, {"predict": "writes map to a stream ( map , value ) pair", "true": "stores the contents of a map in an output stream , as part of serialization", "bleu": 0.09956647337521526, "rouge": 0.22453987730061348}, {"predict": "sleep the current thread", "true": "sub classes ( tests basically ) can use this to override how the sleep is being done", "bleu": 0.015417996259849322, "rouge": 0.08567415730337079}, {"predict": "redirect current system", "true": "allow again printing to previous streams that were muted", "bleu": 0.06114461654585454, "rouge": 0.0}, {"predict": "creates a number from the private key and creates the integers with the given name and creates it", "true": "computes chinese reminder theorem : x = = <unk> s i mod mod <unk> i", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "determines the height of this view", "true": "determines the height of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "puts an array of bytes into this byte vector", "true": "puts an array of bytes into this byte vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "remainder of division of equal equal numbers", "true": "remainder of division of two positive numbers", "bleu": 0.5410822690539396, "rouge": 0.7142857142857143}, {"predict": "waits until the specified document field is in a task", "true": "waits until the given task completes and returns its final state", "bleu": 0.22447582175704436, "rouge": 0.37770897832817335}, {"predict": "creates a new action object with specified content and line number", "true": "creates a new action object with specified content and line number", "bleu": 1.0, "rouge": 1.0}, {"predict": "tries to merge and their loading their loading", "true": "returns a list of all <unk> that might be touching a chunk - area", "bleu": 0.0636991580240073, "rouge": 0.0}, {"predict": "4 b base sec | 2 b window id | 3 b operator id | 3 b tuple id", "true": "4 b base sec | 3 b operator id | 2 b window id | 3 b tuple id", "bleu": 0.9079992234951468, "rouge": 0.7894736842105263}, {"predict": "calculates the distance between two widget s ( assumed to be rectangles )", "true": "calculate the gap rectangle between two rectangles", "bleu": 0.14283632578659286, "rouge": 0.42287694974003465}, {"predict": "moves the current tile position to the next available tile", "true": "moves the current tile position to the next available tile", "bleu": 1.0, "rouge": 1.0}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "if this unit has a unit set , and another unit tests if they are part of the unit ' s enemy force a unit has the unit test", "true": "does this ba mount a my <unk> <unk> ?", "bleu": 0.0462136266712202, "rouge": 0.11630123927550047}, {"predict": "checks if the intent is available for intent", "true": "indicates whether the specified action can be used as an intent", "bleu": 0.12197601375336842, "rouge": 0.20469798657718125}, {"predict": "java x", "true": "java x", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a connection request to the server", "true": "send a connect request for establishing a tunnel to proxy server", "bleu": 0.16417223692914015, "rouge": 0.5341506129597198}, {"predict": "by cert s can be signed or equals to by trusted cert s", "true": "returns true if the certificate is self - signed , false otherwise", "bleu": 0.09552040806823771, "rouge": 0.08058124174372522}, {"predict": "this method calls proc insert user roles and adds a record in the database", "true": "this method calls proc insert user roles and adds a record in user roles table", "bleu": 0.7920859560743244, "rouge": 0.8224719101123595}, {"predict": "find the nearest neighbours within dependency distance links of the provided start and end", "true": "find the nearest neighbours within dependency distance links of the provided start dependencies", "bleu": 0.8507331335123524, "rouge": 0.8948655256723717}, {"predict": "base construct er from a java", "true": "base construct er from a java", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new value to the series", "true": "adds a new value to the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "re calculates the list of parameters according to the distribution and clears the resulting search list of the list of parameters", "true": "rewind the configuration to the initial situation", "bleu": 0.0821610732492254, "rouge": 0.23552123552123552}, {"predict": "in place solution", "true": "sort and merge , o ( n log n ) time", "bleu": 0.031392692871325185, "rouge": 0.0}, {"predict": "format the type string to a map that has the same type , e", "true": "outputs the simple name of the type", "bleu": 0.1250076305588977, "rouge": 0.30398671096345514}, {"predict": "makes an sha 1 hash of the given file stores exists in the key store", "true": "get the sha 1 hash of the first signing certificate inside a key store , encoded as base 16 ( each byte separated by ' : ' )", "bleu": 0.1467014961495706, "rouge": 0.3087490961677513}, {"predict": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "true": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "bleu": 1.0, "rouge": 1.0}, {"predict": "when a subplot was selected , forward the forward forward for listeners", "true": "pans all domain axes by the specified percentage", "bleu": 0.10390302174233558, "rouge": 0.10374149659863945}, {"predict": "initialize view animation , in web call and do notification", "true": "basic animations to build the liquid button", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "create a new check box that is associated with the specified box", "true": "creates an image of the check box and puts it in a label", "bleu": 0.14294845713017917, "rouge": 0.15885416666666669}, {"predict": "close an window to the window", "true": "closes the window ( and open dial )", "bleu": 0.20830666398386113, "rouge": 0.2785388127853881}, {"predict": "populate the host data for the given host", "true": "populate an instance of host with the provided host parameter", "bleu": 0.157044754112095, "rouge": 0.43571428571428567}, {"predict": "creates a new journal and update i media about iteration", "true": "update the given a <unk> with the new settings or create one if no a <unk> is specified", "bleu": 0.06735938555336447, "rouge": 0.1358574610244989}, {"predict": "deletes the entry identified by the given alias from this key store", "true": "deletes the entry identified by the given alias from this key store", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new disjoint positive result set", "true": "construct a disjoint sets object", "bleu": 0.20556680845025982, "rouge": 0.34366197183098596}, {"predict": "write the clusters using the current clusters", "true": "prints out the cluster information", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "adds a feature to the gui attribute of the e 00 layer object", "true": "adds a feature to the gui attribute of the e 00 layer object", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes an existing value from the series", "true": "removes an existing value from the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "wrap the token stream in the given text", "true": "note : the caller must remember to close the token stream eventually", "bleu": 0.19142013845510458, "rouge": 0.28955696202531644}, {"predict": "checks for p trace of p poly line for shape and net nos in p shapes tree context p shapes", "true": "checks , if a trace poly line with the input parameters can be inserted while <unk> aside obstacle traces and vi as", "bleu": 0.0865061560266903, "rouge": 0.23606811145510836}, {"predict": "a method that will delete a file or folder only if it is within the ' target ' directory ( for safety )", "true": "a method that will delete a file or folder", "bleu": 0.37494051432044967, "rouge": 0.610678531701891}, {"predict": "expands the given array of doubles into an array of doubles", "true": "create an array to hold double data for 3 d polygons and lines", "bleu": 0.12498879161997976, "rouge": 0.1641991924629879}, {"predict": "post - process the j in j mx bean", "true": "adds the annotated classes and the mapping resources to the existing session factory configuration", "bleu": 0.08097951150551161, "rouge": 0.08367626886145405}, {"predict": "encode value from an n bits unsigned integer", "true": "encode value as an n bits unsigned integer", "bleu": 0.6606328636027614, "rouge": 0.875}, {"predict": "read from the file", "true": "skip over n bytes in the input file", "bleu": 0.14628187563941414, "rouge": 0.31443298969072164}, {"predict": "creates the lock file", "true": "creates the lock file", "bleu": 1.0, "rouge": 1.0}, {"predict": "handles add l dap attribute mapping request", "true": "handles edit l dap attribute mapping request", "bleu": 0.7071067811865475, "rouge": 0.8571428571428571}, {"predict": "main entry point", "true": "gets value for key", "bleu": 0.32372956394183194, "rouge": 0.0}, {"predict": "handle the swf has been loaded", "true": "called when a swf has been loaded by the player", "bleu": 0.3303628065217446, "rouge": 0.47843137254901963}, {"predict": "quick reply for a reply , with quick reply error message for the user", "true": "show the quick reply dialog , resetting the text in the edit text and storing the current sms mm s message ( in case another message comes in )", "bleu": 0.047385320446252224, "rouge": 0.1750358680057389}, {"predict": "write a number of bytes to the r rd file on the disk", "true": "writes bytes to the underlying r rd file on the disk", "bleu": 0.5316967153331754, "rouge": 0.7614424410540915}, {"predict": "returns true if there are any changes in the directory", "true": "checks if the config has changed since it was loaded", "bleu": 0.13950796967929133, "rouge": 0.2}, {"predict": "throws away old view objects to shared exception every time - to - date space views are visible", "true": "iterate through each view in the view <unk> arch y and implement <unk> specific compatibility workaround s", "bleu": 0.06809398432036522, "rouge": 0.05743879472693032}, {"predict": "starts the acceptor , and register the given addresses", "true": "starts the acceptor , and register the given addresses", "bleu": 1.0, "rouge": 1.0}, {"predict": "allows you to set the header for a given callback state", "true": "use this method to replace the header text from the xml file with new text", "bleu": 0.1119806851646963, "rouge": 0.22453987730061348}, {"predict": "create", "true": "creates a gt fs - lib service object based on the information in the given pattern timetable , which is usually part of a modification de serialized from json", "bleu": 5.814294263555917e-13, "rouge": 0.0}, {"predict": "removes the first occurrence of the specified object from the data", "true": "removes the first occurrence of the specified object from the data", "bleu": 1.0, "rouge": 1.0}, {"predict": "create the users from local , initial , depending on case of users )", "true": "allow a list of users to use this menu", "bleu": 0.11633270842295028, "rouge": 0.18100890207715134}, {"predict": "finds the distributed distributed serial device info under the passed name", "true": "finds the distributed device with the passed name", "bleu": 0.317023313852343, "rouge": 0.7584369449378331}, {"predict": "register a listener for an incoming packet type", "true": "register a listener for an incoming packet type", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a set of bytes from the given input stream , and returns the new state set with the new modified state", "true": "pulls copy state off the wire", "bleu": 0.0612957497932821, "rouge": 0.15926892950391647}, {"predict": "notifies all tasks that a task has been started", "true": "interrupts currently running tasks", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "constructs a new request params instance and populate it with multiple initial key / value string param", "true": "constructs a new request params instance and populate it with multiple initial key / value string param", "bleu": 1.0, "rouge": 1.0}, {"predict": "will evaluate file copy and then display option", "true": "ask user whether to overwrite the give existing file", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "create the tv show task", "true": "instantiate s a new scrape task - to update a single data source", "bleu": 0.05512018958855254, "rouge": 0.10286677908937607}, {"predict": "returns the index within the line of this line", "true": "line in the original source file for the given offset", "bleu": 0.15019394384099988, "rouge": 0.20854700854700853}, {"predict": "clears the selection of this sensor selection model", "true": "clear this sensor selection model", "bleu": 0.44632361378533286, "rouge": 0.6421052631578947}, {"predict": "returns an array allocated in an area of the java heap where it will never be moved", "true": "returns an array allocated in an area of the java heap where it will never be moved", "bleu": 1.0, "rouge": 1.0}, {"predict": "copy the files and do not including files", "true": "loads and parses a thrift file and all files included ( both directly and transitively ) by it", "bleu": 0.050847167445562676, "rouge": 0.14386792452830188}, {"predict": "assures that the proxy has been started", "true": "<unk> that proxy is in a stable status", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "adds the message to this message", "true": "this adds a message object to the internal message cache", "bleu": 0.15512258520268649, "rouge": 0.47843137254901963}, {"predict": "creates a new key instance with the given hash", "true": "creates a key with this hash", "bleu": 0.2208959113415788, "rouge": 0.6916099773242631}, {"predict": "concatenates a list of in t arrays into a single array", "true": "concatenates a list of in t arrays into a single array", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a road to be adjusted i and human readable representation", "true": "makes com parisi on of way with os m way tags and new tag with new value and compares forward and backward permissions with expected permissions copy of os m way is made since otherwise tags would be changed", "bleu": 0.009887792420924123, "rouge": 0.03633114949374628}, {"predict": "displays a display view", "true": "sets the values to ui model", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "read bytes from the file", "true": "read a byte array", "bleu": 0.2730120862709067, "rouge": 0.22676579925650556}, {"predict": "how big should the nth chunk be ?", "true": "how big should the nth chunk be ?", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the tip text for this property", "true": "tip text suitable for displaying in t the gui", "bleu": 0.20873176328735715, "rouge": 0.3667334669338677}, {"predict": "starts a new query not related to a previous class query", "true": "starts a new query not related to a previous class query", "bleu": 1.0, "rouge": 1.0}, {"predict": "return list vs an ' s peer devices ' ip '", "true": "issues the \" show interface \" command and collects in information into a list of interfaces", "bleu": 0.0723014165286922, "rouge": 0.07168037602820211}, {"predict": "forward data set for further further further", "true": "clear data lists for selected service", "bleu": 0.20556680845025982, "rouge": 0.31202046035805625}, {"predict": "makes a new edge for a triangle which can be used to build the edge of the a vertex", "true": "creates a new quad edge , recording it in the edges list", "bleu": 0.09629943614188137, "rouge": 0.269018743109151}, {"predict": "this should never be used to sort these s", "true": "sort n string sequence list", "bleu": 0.14113991930789777, "rouge": 0.1506172839506173}, {"predict": "associate the given value with the specified key", "true": "associate the given value with the specified key", "bleu": 1.0, "rouge": 1.0}, {"predict": "insert all files in sub directory sub directory of directory directory which match file kinds into result list", "true": "insert all files in sub directory sub directory of directory directory which match file kinds into result list", "bleu": 1.0, "rouge": 1.0}, {"predict": "create the button shape", "true": "create the button edge shape", "bleu": 0.5506953149031837, "rouge": 0.8714285714285713}, {"predict": "dispose of object , releasing resources", "true": "dispose of object , releasing resources", "bleu": 1.0, "rouge": 1.0}, {"predict": "test that the specified map of method can be run with the read / method", "true": "load an element with default configuration and call to string", "bleu": 0.08225964699966554, "rouge": 0.08299319727891155}, {"predict": "creates reserve disk cache folder which will be used if primary disk cache folder becomes unavailable", "true": "creates reserve disk cache folder which will be used if primary disk cache folder becomes unavailable", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the provided resource name has been set of open", "true": "checks if a resource has been requested using the short name of the resource", "bleu": 0.16622367556408266, "rouge": 0.4698331193838254}, {"predict": "calls the super method and reads the id of this node , and the methods of data input for primitive types and the specified input stream", "true": "reads the id of this node , the num entries and the entries array from the specified stream", "bleu": 0.30778741582971547, "rouge": 0.563944530046225}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new connection factory that is capable to fail over to the servers defined in case there is an error", "true": "creates a new connection pool that is capable to fail over to the servers defined in case there is an error", "bleu": 0.8725129388059689, "rouge": 0.9523809523809522}, {"predict": "create a format with a format for the specified format string", "true": "constructs an array of control specifications possibly preceded , separated , or followed by ordinary strings", "bleu": 0.06079800197674292, "rouge": 0.0}, {"predict": "if we ' re running on j dk 1", "true": "if we ' re running on j dk 1", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance of this property property with the specified description", "true": "creates a parameterized instance", "bleu": 0.14694106251955755, "rouge": 0.4121621621621622}, {"predict": "creates and en queues node for current thread and given mode", "true": "creates and en queues node for current thread and given mode", "bleu": 1.0, "rouge": 1.0}, {"predict": "regrettably , serializing a tree set causes it to forget its bounds", "true": "regrettably , serializing a tree set causes it to forget its bounds", "bleu": 1.0, "rouge": 1.0}, {"predict": "paints the border of the component", "true": "paints the border for the specified component with the specified position and size", "bleu": 0.14168664218430702, "rouge": 0.4935275080906149}, {"predict": "this method checkpoints the checkpoints file", "true": "restores the check pointed operator", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "reads the bytecode of a class", "true": "reads the bytecode of a class", "bleu": 1.0, "rouge": 1.0}, {"predict": "return true if the host is supported and return true", "true": "find out if the http caller info supports <unk> protocol", "bleu": 0.16590387014219712, "rouge": 0.2}, {"predict": "creates a new project configuration with the given project", "true": "creates a new configuration object", "bleu": 0.2777619034011791, "rouge": 0.6024691358024692}, {"predict": "converts a chart coordinate spaced shape to the screen shape", "true": "converts a screen coordinate spaced shape to the same shape in the chart coordinate space", "bleu": 0.35447813855923, "rouge": 0.6177215189873417}, {"predict": "adds a window to the manager , returning when there is already closed", "true": "add a latch that will be released when the game shuts down", "bleu": 0.1135935489027116, "rouge": 0.16116248348745044}, {"predict": "instantiate s a new performance logger", "true": "instantiate s a new performance logger", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds a suitable set of peer discoveries", "true": "builds a authentication request message for the user specified in the discovery information provided as a parameter", "bleu": 0.05858545453338479, "rouge": 0.1550190597204574}, {"predict": "create a hash from a hexadecimal representation of the digest note that this is in the reverse byte order of the internal binary representation", "true": "create a hash from a hexadecimal representation of the digest note that this is in the reverse byte order of the internal binary representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "does a substring of short text exist within long text such that the substring is at least half the length of long text ?", "true": "does a substring of short text exist within long text such that the substring is at least half the length of long text ?", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the pin of the input string is negative", "true": "tests the string to see if it contains a numeric run", "bleu": 0.1354599427337814, "rouge": 0.18181818181818182}, {"predict": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "true": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the uri of the uri of a uri", "true": "returns the type of a uri : abs uri root rel uri no root rel uri", "bleu": 0.15422428388597817, "rouge": 0.38077403245942576}, {"predict": "internal conversion", "true": "internal conversion", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a glue , or variable spacing , to a ui component", "true": "add a glue , or variable spacing , to a ui component", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether this string represents a resource reference to the specified string", "true": "return the str is resource reference or not", "bleu": 0.14694106251955755, "rouge": 0.2074829931972789}, {"predict": "waits until required number of nodes join barrier", "true": "wait until all nodes leave barrier", "bleu": 0.19070828081828378, "rouge": 0.43990384615384615}, {"predict": "returns an enumeration which contains the subnet mask", "true": "returns an enumeration which contains the subnet mask", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds property as a select - clause and returns the column value", "true": "adds a single property name and an \" as \" - as name for the column", "bleu": 0.12895078137940602, "rouge": 0.4178082191780822}, {"predict": "this method adds a declaration of an interface", "true": "add an interface implemented by this class", "bleu": 0.22679164443904004, "rouge": 0.26991150442477874}, {"predict": "cuts the string from beginning to the first index of provided substring", "true": "cuts the string from the first index of provided substring to the end", "bleu": 0.6471303894309438, "rouge": 0.7942708333333333}, {"predict": "iterate over http get request", "true": "executes an http get request against the gb if registry", "bleu": 0.18693159143202892, "rouge": 0.37731958762886597}, {"predict": "tests queue to see if there is no elements in the queue , waiting for elements", "true": "iterator iterates through all elements", "bleu": 0.07692375026049747, "rouge": 0.10517241379310344}, {"predict": "creates a new stream access - control - list builder", "true": "creates a new tcp settings builder", "bleu": 0.24808415001701817, "rouge": 0.5236051502145923}, {"predict": "method to initialize current user ' s current user and assigns any authentication checks to the current user", "true": "creates a new shared connection directory which exposes share keys as connections", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "call the object finalize method on the given object", "true": "call the object finalize method on the given object", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the tv show", "true": "removes the tv show", "bleu": 1.0, "rouge": 1.0}, {"predict": "check em m policy token", "true": "checks device encrypt policy on the device ( device external storage encryption )", "bleu": 0.05512018958855254, "rouge": 0.10286677908937607}, {"predict": "helper function that is called instead of object to object", "true": "replacement function for the java instance of instruction , which returns a distance integer", "bleu": 0.09351498865776114, "rouge": 0.16180371352785147}, {"predict": "adds the specified object into this vector at the specified location", "true": "adds the specified object into this vector at the specified location", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the current age of the response , in milliseconds", "true": "returns the current age of the response , in milliseconds", "bleu": 1.0, "rouge": 1.0}, {"predict": "changes a udp packet to the remote device", "true": "listens for ganglia messages", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "returns the array element holding the bit value for the given integer", "true": "returns the array element holding the bit value for the given integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "invalidates the switch points", "true": "callback for constant meta class update change", "bleu": 0.142719668098593, "rouge": 0.0}, {"predict": "get v dc config param object from v dc , if one is available", "true": "build v dc config for a v dc for sync v dc config call", "bleu": 0.195647514979229, "rouge": 0.35714285714285715}, {"predict": "create an available adapter instance , which uses the proxy to send", "true": "each os x adapter has the name of the <unk> wt method it <unk> to listen for ( handle about , for example ) , the object that will ultimately perform the task , and the method to be called on that object", "bleu": 0.009867014550104136, "rouge": 0.13203463203463203}, {"predict": "returns the normalized kernel function that computes the given instance", "true": "output the prediction made by this perce ptr on on the given instance", "bleu": 0.1837852585949438, "rouge": 0.33983286908078}, {"predict": "finish timing and subclasses", "true": "instantiate whatever object ( if any ) the wizard creates from its gathered data", "bleu": 0.0248009595334312, "rouge": 0.0}, {"predict": "check whether the given attachment point is valid given the current topology", "true": "check whether the given attachment point is valid given the current topology", "bleu": 1.0, "rouge": 1.0}, {"predict": "fire a change from all cluster change listeners to the cluster", "true": "fire a cluster change event to all registered listeners", "bleu": 0.21200626759025185, "rouge": 0.5091819699499166}, {"predict": "constructs a new batched image request object", "true": "constructs a new batched image request object", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the cache and deletes all of its stored values", "true": "closes the cache and deletes all of its stored values", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the pixel data for the specified pixel data", "true": "returns the a rgb representation for the specified integer value which is packed in the format of the associated color model", "bleu": 0.08234616270176032, "rouge": 0.3109072375127421}, {"predict": "check to see if the digits that are going to be truncated because of the precision should force a round in the preceding digits", "true": "check to see if the digits that are going to be truncated because of the precision should force a round in the preceding digits", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a component to the policy panel", "true": "subclasses might add an additional component here which is seen during all steps , e", "bleu": 0.06555660318294844, "rouge": 0.17062937062937064}, {"predict": "this method will delete all files in a given directory and delete all files from current directory", "true": "this is a quiet method", "bleu": 0.0859076483566362, "rouge": 0.20165289256198346}, {"predict": "create directory that is optionally cleaned up after the jvm shuts down", "true": "create directory that is automatically cleaned up after the jvm shuts down through use of a runtime shutdown hook", "bleu": 0.42475436656235216, "rouge": 0.681910569105691}, {"predict": "emit declaration of decoded member and open first chunk", "true": "emit declaration of decoded member and open first chunk", "bleu": 1.0, "rouge": 1.0}, {"predict": "read cookie in utf - 8 form for use in jvm", "true": "read all cookies from the request ' s ' cookie ' header , and parse it based on cookie version 1", "bleu": 0.05078822537842343, "rouge": 0.11833171677982542}, {"predict": "merge out node s to the set of resources visited", "true": "if this repository has not already been visited , merge its items of the given type into result", "bleu": 0.07122387860714109, "rouge": 0.1358574610244989}, {"predict": "translate a transferable string into the format while parsing the native while parsing the flavor map", "true": "translation function for converting string into a byte array", "bleu": 0.10878661088699644, "rouge": 0.16850828729281767}, {"predict": "creates one buffer for the camera preview callback", "true": "creates one buffer for the camera preview callback", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts the given box at the given position in the list of child boxes", "true": "inserts the given box at the given position in the list of child boxes", "bleu": 1.0, "rouge": 1.0}, {"predict": "create the position of the views to make a valid position of the pixel width with the indices of the grid", "true": "creates a position within the content that will track change as the content is <unk>", "bleu": 0.07305267243289862, "rouge": 0.2291079812206573}, {"predict": "returns a string with the given number of spaces , padding and padding the given string", "true": "pad a string", "bleu": 0.10123734869668824, "rouge": 0.2401574803149606}, {"predict": "resets the internal representation that will be computed using the inverse function and as a tag that matches the internal values as an en v", "true": "change the d tx for the strike refs we use", "bleu": 0.05377336385080629, "rouge": 0.12385786802030457}, {"predict": "add a listener to start activity events", "true": "adds a listener that will be informed one time about user activity , then removed", "bleu": 0.0837738790831083, "rouge": 0.2559440559440559}, {"predict": "mute the given username", "true": "mute the given username", "bleu": 1.0, "rouge": 1.0}, {"predict": "the real guts of parse network response", "true": "the real guts of parse network response", "bleu": 1.0, "rouge": 1.0}, {"predict": "overridden to ensure that the cursor for this component is appropriate for the orientation", "true": "overridden to ensure that the cursor for this component is appropriate for the orientation", "bleu": 1.0, "rouge": 1.0}, {"predict": "determine if the selection ' s selection is empty", "true": "check if the selection is empty", "bleu": 0.3655552228545123, "rouge": 0.6916099773242631}, {"predict": "writes remaining compressed data to the output stream and closes the underlying stream", "true": "writes any remaining uncompressed data to the output stream and closes the underlying output stream", "bleu": 0.6196088421025032, "rouge": 0.846242774566474}, {"predict": "factory method that creates a new adapter based on the list of items", "true": "create a new instance of your parcel able adapter using the provided list of items", "bleu": 0.1947911080410563, "rouge": 0.49364161849710986}, {"predict": "fill a specified byte array with replacement", "true": "replacement function for next bytes", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "draws a triangle to indicate the presence of far - out values", "true": "draws a triangle to indicate the presence of far out values", "bleu": 0.7910665071754358, "rouge": 0.9640804597701149}, {"predict": "sometimes we need to know which class is a j dk class", "true": "sometimes we need to know which class is a j dk class", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the set of named objects that match the specified set of named objects", "true": "applies the specified queries to the set of named objects", "bleu": 0.3641410562218426, "rouge": 0.5154929577464789}, {"predict": "check if we ' ve crossed a reasonable touch slop for the given child view", "true": "check if we ' ve crossed a reasonable touch slop for the given child view", "bleu": 1.0, "rouge": 1.0}, {"predict": "create element of indexed endpoint type", "true": "create end point element in dom", "bleu": 0.24446151121745047, "rouge": 0.3333333333333333}, {"predict": "add the de st file into the merged code base", "true": "put file from c into this writer", "bleu": 0.13950796967929133, "rouge": 0.24302788844621517}, {"predict": "provide a string representation of this date / time converter", "true": "provide a string representation of this number converter", "bleu": 0.5900468726392808, "rouge": 0.7936802973977695}, {"predict": "test where each operation locks one or more resources", "true": "test where each operation locks one or more resources", "bleu": 1.0, "rouge": 1.0}, {"predict": "the spec notes that \" the xml - stylesheet processing instruction is allowed only in the prolog of an xml document", "true": "the spec notes that \" the xml - stylesheet processing instruction is allowed only in the prolog of an xml document", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the contents of this byte array output stream as a byte array", "true": "returns the contents of this byte array output stream as a byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse a string value to a calendar", "true": "parse a string value to a calendar", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the bitmap to byte array", "true": "converts the specified bitmap to a byte array", "bleu": 0.3061645186842447, "rouge": 0.8356164383561644}, {"predict": "persists template file to disk", "true": "save template to file", "bleu": 0.32466791547509893, "rouge": 0.4535315985130111}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a transform tree node to the list of things like \" mode \"", "true": "adds a composite operation to the transform node", "bleu": 0.13834368456410945, "rouge": 0.28683385579937304}, {"predict": "add or set the text to the list of parameters", "true": "<unk> negative hex levels <unk> / salt <unk> effect works best with more elevation", "bleu": 0.07105602552547084, "rouge": 0.0}, {"predict": "a run n able to run the module associated with the launcher ' s name , unique key", "true": "add a module that was loaded in this browser tab", "bleu": 0.07535838128770536, "rouge": 0.1506172839506173}, {"predict": "expands a two - digit string into a list of english words", "true": "expands a two - digit string into a list of english words", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the index within the first occurrence of the first occurrence of the specified character searching forward or to the beginning of the index", "true": "computes index of given char within string buffer", "bleu": 0.06024757292375468, "rouge": 0.13738738738738737}, {"predict": "create a new diagnostic factory", "true": "create a new diagnostic factory", "bleu": 1.0, "rouge": 1.0}, {"predict": "pops nodes of already explored states from the head of the frontier and checks whether there are still some nodes left", "true": "pops nodes of already explored states from the head of the frontier and checks whether there are still some nodes left", "bleu": 1.0, "rouge": 1.0}, {"predict": "this test doesn ' t pass on ri ; fails for types", "true": "this test doesn ' t pass on ri ; fails for types", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the bounding box is enabled depending on the current selected element", "true": "checks if is enabled", "bleu": 0.15807437922444714, "rouge": 0.5202558635394456}, {"predict": "initializes the disk based cache by scanning for all files currently in the specified root directory", "true": "initializes the disk based cache by scanning for all files currently in the specified root directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "determine the variance in the array", "true": "compute variance ( ml estimator )", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "set some user to the user", "true": "<unk> user information in the request and response to reduce the number of queries and transactions", "bleu": 0.04961591899093189, "rouge": 0.25206611570247933}, {"predict": "send this location list from the list of locations", "true": "send a list of locations known by operations to the client", "bleu": 0.23278666914796883, "rouge": 0.3929146537842191}, {"predict": "serializes an text node", "true": "serializes an text node", "bleu": 1.0, "rouge": 1.0}, {"predict": "verifies that visual representation are within the visual axis", "true": "allows to answer if given visual position points to soft wrap - introduced virtual space", "bleu": 0.07246365075155338, "rouge": 0.07973856209150328}, {"predict": "this method parses the cluster xml schema", "true": "look for the requested cluster xml file in the resource bundle ( class path ) under / config / - cluster", "bleu": 0.03555135945989538, "rouge": 0.19656283566058}, {"predict": "validate the world for this entity", "true": "used to determine if a task is valid", "bleu": 0.13309610652103346, "rouge": 0.0}, {"predict": "clear both rendering and picking queues", "true": "clear both rendering and picking queues", "bleu": 1.0, "rouge": 1.0}, {"predict": "attempts to read the next position from the remaining position of the specified position", "true": "convenience method to advance parse position by 1", "bleu": 0.09782375748961449, "rouge": 0.19122257053291536}, {"predict": "specifies the current row / column ' s grow priority", "true": "specifies the current row / column ' s grow priority", "bleu": 1.0, "rouge": 1.0}, {"predict": "flushes this output stream", "true": "flush the buffer and set the offset to zero", "bleu": 0.08656385444580769, "rouge": 0.0}, {"predict": "generates the for a section item", "true": "generates a label for a pie section", "bleu": 0.27960682295094563, "rouge": 0.6069651741293532}, {"predict": "remove a graph listener", "true": "remove a graph listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "execute shell commands in full directory", "true": "convenience method to execute command without providing input or output", "bleu": 0.11341174240707227, "rouge": 0.11960784313725491}, {"predict": "increment the numeric badge label", "true": "increment the numeric badge label", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a service configuration from an input stream , encoded as a properties object", "true": "creates service configuration and loads it with populated attribute values loaded from provided input stream property file", "bleu": 0.12357170806586705, "rouge": 0.3170478170478171}, {"predict": "ensures there is enough space in the buffer for the given number of additional bytes", "true": "ensures there is enough space in the buffer for the given number of additional bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "splits a single sentence into an array of sentence , separated by vocabulary characters", "true": "splits a sentence ( on white space ) , then looks up the integer representations of each word using the supplied symbol table", "bleu": 0.07273945259874635, "rouge": 0.20713073005093377}, {"predict": "checks if a given actions is granted by this action", "true": "checks whether a list of actions is empty", "bleu": 0.18850319022747347, "rouge": 0.4535315985130111}, {"predict": "add a string to the dictionary , and set its var names", "true": "adds the specified string to the underlying dictionary", "bleu": 0.2044800736021839, "rouge": 0.4149659863945578}, {"predict": "create a deep copy of an array", "true": "deep copy - make a deep copy of m", "bleu": 0.38849358632832764, "rouge": 0.48897795591182364}, {"predict": "tests whether one of choice alternatives has the same identifier or not", "true": "tests whether one of choice alternatives has the same identifier or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "test if the data for all the test data in the passed array", "true": "use to wait for a single message to arrive", "bleu": 0.09552040806823771, "rouge": 0.09399075500770414}, {"predict": "creates a new date from the given date and time in the specified fields", "true": "initializes new date specified as a string in form mm / dd / yyyy", "bleu": 0.13834368456410945, "rouge": 0.21428571428571427}, {"predict": "copies a source file", "true": "copy file object from one place to another", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "instantiate s a new map", "true": "instantiate s a new map objects", "bleu": 0.8187307530779819, "rouge": 0.8944281524926685}, {"predict": "reads vector of opaque values", "true": "reads vector of opaque values", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes a string into its url safe form using the default string char set", "true": "encodes a string into its url safe form using the default string char set", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests comparison of different number of attributes", "true": "tests comparison of different number of attributes", "bleu": 1.0, "rouge": 1.0}, {"predict": "increments a keep alive count , clearing the refs and the list of alive references , removing them to the refs list is empty", "true": "increments the \" keep - alive count \"", "bleu": 0.07929026506841375, "rouge": 0.27477477477477474}, {"predict": "note : this method is responsible for taking into account the only non - final arguments , but are only in only possible", "true": "factory method : collect or filter selected argument ( s )", "bleu": 0.05856458233275369, "rouge": 0.06282183316168899}, {"predict": "create an object in the free marker predicate set", "true": "creates an in predicate using the specified values", "bleu": 0.17747405280050263, "rouge": 0.35672514619883033}, {"predict": "recursively deletes a file that may represent a directory", "true": "recursively deletes a file that may represent a directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method sorts the sort keys according to the sort keys", "true": "loops through sort keys constructing the key statements", "bleu": 0.16108992769687397, "rouge": 0.32504440497335696}, {"predict": "convert an of instruction experimenter to string form", "true": "convert an of instruction experimenter to string form", "bleu": 1.0, "rouge": 1.0}, {"predict": "add or replace an element type for this schema", "true": "add or replace an element type for this schema", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints the relative magnitudes of the collected timer data to the standard output stream", "true": "prints the relative magnitudes of the collected timer data to the standard output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a client using the specified url", "true": "creates a zookeeper client", "bleu": 0.2626909894424158, "rouge": 0.5736677115987461}, {"predict": "adds a description to the current update context", "true": "optionally add cv numbers and bit numbers to tool tip text based on roster preferences setting", "bleu": 0.0589953212431261, "rouge": 0.07860824742268041}, {"predict": "reads characters until the end character is encountered , ignoring escape sequences", "true": "reads characters until the end character is encountered , ignoring escape sequences", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a key into a string", "true": "copies the given attribute set to a new set , converting any css attributes found to arguments of an html style attribute", "bleu": 0.015348610281018882, "rouge": 0.06475583864118895}, {"predict": "closes this stream", "true": "closes this input stream and releases any system resources associated with the stream", "bleu": 0.027106373194939883, "rouge": 0.3370165745856354}, {"predict": "this function will install a trust manager that will blindly trust all ssl certificates", "true": "this function will install a trust manager that will blindly trust all ssl certificates", "bleu": 1.0, "rouge": 1.0}, {"predict": "update amount counters and set amount based on whether amount changes to 0 , specific value", "true": "updates the amount on the document", "bleu": 0.08513012360883544, "rouge": 0.19805194805194803}, {"predict": "test for creation of a unique attribute", "true": "tests the creation of a data set ( unique attribute names )", "bleu": 0.201267033117133, "rouge": 0.5024711696869852}, {"predict": "updates the set of mime points", "true": "redraw the panel with the legend entries", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "evaluate the a vt and return a string", "true": "evaluate the a vt and return a string", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a dex file", "true": "read the dex file from file , if the file is a zip file , it will return the content of classes", "bleu": 0.005644844940217165, "rouge": 0.1367713004484305}, {"predict": "adds a listener to the set of listeners that are sent update events through the life of an animation", "true": "adds a listener to the set of listeners that are sent update events through the life of an animation", "bleu": 1.0, "rouge": 1.0}, {"predict": "immediately run commercial of the given stream", "true": "tries to run a commercial on the given stream with the given length", "bleu": 0.16236629910298045, "rouge": 0.474339035769829}, {"predict": "imports a list of subtree s at the given position in the root of the tree", "true": "imports a list of subtree s at the given position in the root of the tree", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates default for incomplete statements , where the statement are visible", "true": "generates js code for a while statement", "bleu": 0.1354599427337814, "rouge": 0.3472485768500949}, {"predict": "description of the method", "true": "calculates the incomplete gamma function for two doubles", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "initializes the use in the order for the specified slots of this inventory", "true": "add slots to list where slot activated item can be activated when equipped", "bleu": 0.09552040806823771, "rouge": 0.07692307692307691}, {"predict": "converts the action type to html output according to the comments extracted from xml : \" , \" or \" action type \"", "true": "attempts to convert the http verb into a textual representation of intent based on rest conventions", "bleu": 0.05856458233275369, "rouge": 0.10599478714161598}, {"predict": "hides a hidden key by adding an non - hidden key", "true": "turn the provided key into a hidden key", "bleu": 0.22416933501922287, "rouge": 0.32504440497335696}, {"predict": "removes the m qt t token associated with the activity", "true": "get a token identified by a string , and remove it from our map", "bleu": 0.08450033111870488, "rouge": 0.08090185676392574}, {"predict": "determines if the array of types are an implementation of the same bytes as an implementation of types", "true": "identifies whether the array containing type names given as argument explicitly refers to all types the empty or null array doesn ' t explicitly map to all types", "bleu": 0.06354897414320826, "rouge": 0.20919067215363513}, {"predict": "continued fraction expansion # 2 for incomplete beta integral", "true": "continued fraction expansion # 2 for incomplete beta integral", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an element or attribute value", "true": "reads text until the specified delimiter is encountered", "bleu": 0.13309610652103346, "rouge": 0.0}, {"predict": "use this method to check whether a key is currently valid", "true": "check existence of config section element", "bleu": 0.11390778025531027, "rouge": 0.12423625254582485}, {"predict": "determines whether or not this element has no children", "true": "true , if the node is a leaf", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "draws the shadow for the specified rectangle", "true": "draws a shadow around the given rectangle", "bleu": 0.23356898886410002, "rouge": 0.5714285714285714}, {"predict": "we only want the current page that is being shown to be focus able", "true": "we only want the current page that is being shown to be focus able", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if all of the characters in the text are permitted for use in xml documents", "true": "returns true if all of the characters in the text are permitted for use in xml documents", "bleu": 1.0, "rouge": 1.0}, {"predict": "a new thread that interrupts the specified thread", "true": "interrupts the specified thread , guarding against null", "bleu": 0.44632361378533286, "rouge": 0.5}, {"predict": "write the instance to a stream ( ie serialize the object )", "true": "overridden to avoid exposing implementation details", "bleu": 0.10390302174233558, "rouge": 0.1182170542635659}, {"predict": "convenience method that creates a border layout container and places the given component in the south", "true": "convenience method that creates a border layout container and places the given component in the east", "bleu": 0.9351334836242398, "rouge": 0.9375000000000001}, {"predict": "does an update and return the event id generated", "true": "does an update and return the event id generated", "bleu": 1.0, "rouge": 1.0}, {"predict": "load the layout file", "true": "load a layout from a file", "bleu": 0.25916266987614406, "rouge": 0.5791139240506329}, {"predict": "adds a marker to the file", "true": "track the specified file , using the provided marker , deleting the file when the marker instance is garbage collected", "bleu": 0.030293460317336256, "rouge": 0.2103448275862069}, {"predict": "evaluates the cf 5 problem", "true": "evaluates the cf 5 problem", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts all separators to the unix separator of forward slash", "true": "converts all separators to the unix separator of forward slash", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether this schema definition has the specified name", "true": "checks if the extension contains a parameter", "bleu": 0.15619699684601276, "rouge": 0.2557651991614256}, {"predict": "free a memory in memory", "true": "free memory up to the given window id this method will be called by another thread", "bleu": 0.03347779366253814, "rouge": 0.17403708987161198}, {"predict": "checks if the given identifier is reserved keyword", "true": "returns true if the given identifier is a sql - 99 non - reserved keyword", "bleu": 0.27539274978744366, "rouge": 0.577027027027027}, {"predict": "sorts the given list using the given comparator", "true": "sorts the specified list using the specified comparator", "bleu": 0.3688939732334406, "rouge": 0.75}, {"predict": "called by the halo g writer to close the log file with the committing root block", "true": "write the current root block to the journal and return its address to be stored in the commit record", "bleu": 0.1037300874121511, "rouge": 0.2250922509225092}, {"predict": "convert string to string", "true": "provides a java string literal representing the parameter string", "bleu": 0.11392443929712959, "rouge": 0.28773584905660377}, {"predict": "makes a random cache entry", "true": "makes a random cache entry", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the maximum of all elements in the array , ignoring elements that are nan", "true": "find the maximum of all elements in the array , ignoring elements that are nan", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the provided line is a start element of the text", "true": "tries to find out if the line finishes with an element start", "bleu": 0.16261701715194898, "rouge": 0.3333333333333333}, {"predict": "parses a long ( 64 - bit )", "true": "parses a 64 - bit in t", "bleu": 0.3549481056010052, "rouge": 0.6747787610619468}, {"predict": "removes the instance at the given position from the set", "true": "removes the instance at the given position", "bleu": 0.6786502681586726, "rouge": 0.850597609561753}, {"predict": "extracts the access key from the given uri", "true": "extracts the access key from the given uri", "bleu": 1.0, "rouge": 1.0}, {"predict": "do one transaction operation", "true": "do one transaction operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds an unnamed value to the formatted output", "true": "adds an unnamed value to the formatted output", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies this text , except when it is removed from one , to another", "true": "copy the elements of an array , and remove one element", "bleu": 0.09782375748961449, "rouge": 0.16353887399463804}, {"predict": "creates a new monitor manager object", "true": "constructs a web top naming $ site monitor object with the provided site urls", "bleu": 0.06924459302580939, "rouge": 0.2798165137614679}, {"predict": "calculates the union if two ip ranges", "true": "calculates the union if two ip ranges", "bleu": 1.0, "rouge": 1.0}, {"predict": "lookup a vertex , by id )", "true": "lookup a vertex by id", "bleu": 0.4111336169005197, "rouge": 0.8591549295774649}, {"predict": "atomic ally adds the given value to the current value of the current value", "true": "concurrent addition bound to long", "bleu": 0.08839374326825923, "rouge": 0.11509433962264153}, {"predict": "for each entry point which is either the http response and put it into the response", "true": "start a monitor by providing a summary label and optionally a detail string", "bleu": 0.07692375026049747, "rouge": 0.07027649769585254}, {"predict": "returns the norm of the vector", "true": "computes the norm of a vector", "bleu": 0.4347208719449915, "rouge": 0.6666666666666666}, {"predict": "called when event occurs to relevant and relevant data columns are relevant", "true": "harmonic accuracy - - average over all labels", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "writes data to output stream", "true": "writes the entry ' s data fields in fcc format to an output stream", "bleu": 0.07063006710882745, "rouge": 0.4848966613672496}, {"predict": "creates a new instance of a close able static bitmap", "true": "creates a new instance of a close able static bitmap", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads up the text file", "true": "this reads in a label file and returns a string of the phonetic symbols , separated by the entry separator character entry separator", "bleu": 0.00887113600998264, "rouge": 0.12801678908709338}, {"predict": "adds a new converter object to this object", "true": "returns a copy of this set , with the given converter added", "bleu": 0.11567041937737582, "rouge": 0.1930379746835443}, {"predict": "parses the xml - serialized object from the xml object", "true": "serializes the java objects of the configured list into a flow of sax events", "bleu": 0.09351498865776114, "rouge": 0.16180371352785147}, {"predict": "creates a map with data loaded from the file system", "true": "sorts the given map and returns a subset which is <unk> by a lower and an upper limit", "bleu": 0.06735938555336447, "rouge": 0.06792873051224944}, {"predict": "dumps the s sx file position from the s sx file", "true": "displays the contents of this index", "bleu": 0.11390778025531027, "rouge": 0.12423625254582485}, {"predict": "compares two parameter to param", "true": "compares the parameter from the api and the parameter from reflection", "bleu": 0.0910020781697788, "rouge": 0.2341650671785029}, {"predict": "generate random number of size n directly into num", "true": "generate random number of size n directly into num", "bleu": 1.0, "rouge": 1.0}, {"predict": "escape a string to create a valid json string", "true": "escape a string to create a valid json string", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the complete contents of this byte array output stream to the specified output stream argument", "true": "writes the complete contents of this byte array output stream to the specified output stream argument", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks this solution element is equivalent to the weight of the following unit test case", "true": "this methods checks whether the headings hierarchy is well - structured", "bleu": 0.10343603005129705, "rouge": 0.1582360570687419}, {"predict": "returns an iterator to navigate the elements of the array", "true": "returns an iterator to navigate the elements of the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "update mouse wheel changing the supplied mouse wheel", "true": "zoom the display in or out , depending on the direction of the mouse wheel motion", "bleu": 0.0834319834185865, "rouge": 0.23582474226804123}, {"predict": "creates a new folder with a default folder name", "true": "creates a new folder with a default folder name", "bleu": 1.0, "rouge": 1.0}, {"predict": "the function name for val parser coverage checking is extracted from the first input", "true": "the function name for val parser coverage checking is extracted from the first input", "bleu": 1.0, "rouge": 1.0}, {"predict": "handles the start of an element", "true": "if a new tag is encountered , check if it is of interest or not by seeing if it matches against our node tree", "bleu": 0.010997759840144799, "rouge": 0.060157790927021684}, {"predict": "compares the two operands for conversion making an equivalent integer", "true": "a method to determine the equivalence of any two markers", "bleu": 0.13950796967929133, "rouge": 0.2}, {"predict": "disc ret ize a value using b crypt ' s formula", "true": "disc ret ize s the continuous data in the given column using the specified <unk> and category names", "bleu": 0.12416588812571398, "rouge": 0.2643553629469122}, {"predict": "loads the work space screen ids in an ordered list", "true": "loads the work space screen ids in an ordered list", "bleu": 1.0, "rouge": 1.0}, {"predict": "called by the loader to render the current set of attributes", "true": "does the actual rendering of the included file", "bleu": 0.1354599427337814, "rouge": 0.216696269982238}, {"predict": "macro : expected : parses s , f mts", "true": "macro : expected : parses s , f mts", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks repeated in t field equality ; null - value and 0 - length fields are considered equal", "true": "checks repeated boolean field equality ; null - value and 0 - length fields are considered equal", "bleu": 0.8086627571031982, "rouge": 0.9190207156308852}, {"predict": "multiply a 4 x by y", "true": "multiplies this matrix by a scale matrix with specified values", "bleu": 0.1255107248036171, "rouge": 0.11960784313725491}, {"predict": "sets the state of the keyboard if there are interested in the current image", "true": "changes the lock icon ' s image to whatever it currently is not", "bleu": 0.09782375748961449, "rouge": 0.1491442542787286}, {"predict": "returns a geometry object that matches the given distance", "true": "buffer polygons by buffering the individual boundary segments and either union ing or differ enc ing them", "bleu": 0.05802435550866946, "rouge": 0.07287933094384706}, {"predict": "records the end time", "true": "computes the response time of the request that just finished for the local thread and updates the request response average in the last minute , and <unk> to the request response per minute per hour counter", "bleu": 0.00013339180428307028, "rouge": 0.08739255014326647}, {"predict": "is an accessible user in the current evaluation ?", "true": "check if an user has au th to <unk> na", "bleu": 0.1397712139461423, "rouge": 0.20854700854700853}, {"predict": "clears the list and channel objects", "true": "remove all entries from the table list", "bleu": 0.20693220168471366, "rouge": 0.3034825870646766}, {"predict": "returns an index for accessing arrays in this class", "true": "returns an index for accessing arrays in this class", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the id from the given file", "true": "load a file", "bleu": 0.18575057999133598, "rouge": 0.21554770318021202}, {"predict": "format the given parameter object into string", "true": "format the given parameter object into string", "bleu": 1.0, "rouge": 1.0}, {"predict": "test for bug # center statement does not affect second statement", "true": "tests fix for bug # <unk> ( <unk> ) - calling server prepared statement", "bleu": 0.17066020143571542, "rouge": 0.31322207958921694}, {"predict": "using the trigonometric unit circle , calculate the positions that the text will need to be drawn at based on the specified circle radius", "true": "using the trigonometric unit circle , calculate the positions that the text will need to be drawn at based on the specified circle radius", "bleu": 1.0, "rouge": 1.0}, {"predict": "force buffered operations to the filesystem", "true": "force buffered operations to the filesystem", "bleu": 1.0, "rouge": 1.0}, {"predict": "method called to try to expand shared name area to fit one more potentially shared string", "true": "method called to try to expand shared name area to fit one more potentially shared string", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a request property to this user", "true": "adds a general request property specified by a key - value pair", "bleu": 0.15048220633585796, "rouge": 0.40197693574958815}, {"predict": "updates the member if it is not already present", "true": "updates the member client address", "bleu": 0.2626909894424158, "rouge": 0.4518518518518518}, {"predict": "is this client product only", "true": "is table org level only", "bleu": 0.3021375397356768, "rouge": 0.4}, {"predict": "convenience method to dec re ment this trigger as a run n able", "true": "convenience method to dec re ment this trigger as a run n able", "bleu": 1.0, "rouge": 1.0}, {"predict": "handles actions from within the property panel", "true": "handles user <unk> with the panel", "bleu": 0.22089591134157885, "rouge": 0.4680306905370844}, {"predict": "serializes the given object to a buffer", "true": "serializes the object into a byte buffer", "bleu": 0.29071536848410967, "rouge": 0.7142857142857143}, {"predict": "resolves a module name to the module pointer , if it is one", "true": "find the module pointer that the string mod name resolves to ; return null if either mod name is not found in the context or if it is found and resolves to null , i", "bleu": 0.05299681422237968, "rouge": 0.2694006309148265}, {"predict": "creates the instance of tls v 1 connection state", "true": "creates the instance of tls v 1 connection state", "bleu": 1.0, "rouge": 1.0}, {"predict": "receive notification of the beginning of an element", "true": "receive notification of the beginning of an element", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a certificate store to the list of certificate stores that are used to find certificates and cr ls", "true": "adds a certificate store to the list of certificate stores that are used to find certificates and cr ls", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new nar class loader", "true": "construct a nar class loader", "bleu": 0.4347208719449915, "rouge": 0.7393939393939394}, {"predict": "returns the basic block indicated by this node", "true": "returns the basic block indicated by this node", "bleu": 1.0, "rouge": 1.0}, {"predict": "replaces the names of the given type , where the matches of its super classes are passed", "true": "returns an array of types , where original types got substituted given a substitution", "bleu": 0.10802314890908067, "rouge": 0.19698600645855757}, {"predict": "checks if a point is scrolling", "true": "checks to see if the user is currently scrolling the menu", "bleu": 0.12071482560966854, "rouge": 0.4468864468864468}, {"predict": "tests whether a single filter is correctly merged into a descriptor that already contains the same filter", "true": "tests whether a single filter in the merge descriptor is ignored because a filter with the same name already exists in the source descriptor", "bleu": 0.22259154070499268, "rouge": 0.4259115593483321}, {"predict": "construct an edge from source code and destination", "true": "edge which <unk> to another non - accepting state", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "generates the instruction at new access type", "true": "generates the instruction to push the given value on the stack", "bleu": 0.1952347922420459, "rouge": 0.32049036777583184}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an extended text label from the text line and line", "true": "create an extended glyph array for the text between start and limit", "bleu": 0.1801493500422797, "rouge": 0.4314002828854314}, {"predict": "pads the string at the left with the specified character until it reaches the desired length", "true": "pads the string at the right with the specified character until it reaches the desired length", "bleu": 0.8282477531331041, "rouge": 0.9375000000000001}, {"predict": "ask whether we support a given dom feature", "true": "ask whether we support a given dom feature", "bleu": 1.0, "rouge": 1.0}, {"predict": "atomic ally removes all of the elements from this queue", "true": "atomic ally removes all of the elements from this queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a quoted char descriptor from the reader", "true": "reads the value of a string enclosed in single quotes , skipping over the quotes and any leading spaces", "bleu": 0.048218604638712956, "rouge": 0.20701357466063344}, {"predict": "convert confusion matrix in a csv file", "true": "outputs the confusion matrix as comma - separated values for easy import into <unk>", "bleu": 0.08993236413460196, "rouge": 0.17967599410898377}, {"predict": "subtract two positive numbers of different length", "true": "subtract two positive numbers of different length", "bleu": 1.0, "rouge": 1.0}, {"predict": "allocates a data value cache", "true": "assign an id value to this field", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "writes a \" in t \" value to an output stream", "true": "writes a \" in t \" value to an output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether this iterator has been closed", "true": "returns true if this lock is still open ie", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "same as perform find but now returning a list instead of an iterator extra parameters view index : startpage of the partial list ( 0 = first page ) view size : the length of the page ( number of records ) extra output parameter : list size", "true": "same as perform find but now returning a list instead of an iterator extra parameters view index : startpage of the partial list ( 0 = first page ) view size : the length of the page ( number of records ) extra output parameter : list size", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of soap element", "true": "converts a java x", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "close the file opened when creating the mp 4 parser", "true": "closes the file writer and deletes the lock file ( if possible )", "bleu": 0.13206959826272413, "rouge": 0.25487465181058494}, {"predict": "initializes this static object with the context of the calling activity", "true": "initializes this static object with the context of the calling activity", "bleu": 1.0, "rouge": 1.0}, {"predict": "do we set primitive values for equality with x , y", "true": "compare two instances of the class mapped by this type for persistence \" equality \"", "bleu": 0.08762962180865386, "rouge": 0.14969325153374236}, {"predict": "writes a boolean to the stream", "true": "write a boolean s as one byte", "bleu": 0.24608524656663955, "rouge": 0.3034825870646766}, {"predict": "read words from the file names", "true": "train the statistics of the c <unk> from a given file set", "bleu": 0.09663861439684919, "rouge": 0.20962199312714777}, {"predict": "test de bus queda open l dap con atri but os", "true": "test de bus queda open l dap con limit e", "bleu": 0.7102992180127422, "rouge": 0.768503937007874}, {"predict": "create a format with a format for the specified format string", "true": "constructs an array of control specifications possibly preceded , separated , or followed by ordinary strings", "bleu": 0.06079800197674292, "rouge": 0.0}, {"predict": "returns the larger of two double precision numbers", "true": "fun t ions used - - - - - - - - - - - - - utility d max , dm in", "bleu": 0.020680088821143392, "rouge": 0.0}, {"predict": "append the contents of another fast string buffer on to this fast string buffer , growing the storage if necessary", "true": "append the contents of another fast string buffer on to this fast string buffer , growing the storage if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "write a 32 - bit integer in little endian", "true": "write a fixed - width 32 bit integer in network byte order ( big - endian )", "bleu": 0.14213006365009043, "rouge": 0.5101553166069295}, {"predict": "queue the cube load the specified callback", "true": "queue a cube load , running the specified callback when the load has finished", "bleu": 0.16252612884279297, "rouge": 0.5390279823269514}, {"predict": "checks whether the current debug is available on the given date", "true": "check availability of an object", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "invoked when the button has been pressed", "true": "invoked when the button part is clicked", "bleu": 0.5169731539571706, "rouge": 0.5714285714285714}, {"predict": "returns the next z message id that was previously used", "true": "find largest message id as the current start point", "bleu": 0.17827531042796255, "rouge": 0.21254355400696867}, {"predict": "remove a change listener", "true": "removes a change listener from this loader", "bleu": 0.3158905525406873, "rouge": 0.5198863636363635}, {"predict": "dumps the request log of the request log of the current thread without resetting the request log for thread", "true": "exports a snapshot of the request log of the current thread and also resets the request log for that thread", "bleu": 0.5098958267439677, "rouge": 0.6635983263598326}, {"predict": "url decodes the given string", "true": "description of the method", "bleu": 0.2730120862709067, "rouge": 0.22676579925650556}, {"predict": "then accept both result completes exceptionally if either source cancelled", "true": "then accept both result completes exceptionally after exceptional completion of either source", "bleu": 0.5170736949462367, "rouge": 0.7155425219941348}, {"predict": "converts a string to model", "true": "transforms the given , comma - separated string into a default list model", "bleu": 0.06554932163900559, "rouge": 0.20573355817875214}, {"predict": "tests installment wise demand tables", "true": "test for bug <unk> exception with sy base and metadata", "bleu": 0.08445588027797912, "rouge": 0.0}, {"predict": "adds the specified collection at the end of the array", "true": "adds the specified collection at the end of the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "reset the current file list", "true": "reset the current file list for the logger", "bleu": 0.5488116360940264, "rouge": 0.7384987893462469}, {"predict": "initialize a new compose state", "true": "initialize a new compose state", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates and returns a list of tool bar tool", "true": "creates <unk> for the application", "bleu": 0.14113991930789777, "rouge": 0.1506172839506173}, {"predict": "parses a date value", "true": "parses a date value", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new regular expression filter with the specified flags case sensitivity", "true": "construct a new regular expression filter with the specified flags case sensitivity", "bleu": 1.0, "rouge": 1.0}, {"predict": "execute a sql query", "true": "this method is a thin wrapper for jd bc execute query ( )", "bleu": 0.045035719139523436, "rouge": 0.2147887323943662}, {"predict": "counts the written bytes", "true": "counts the written bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes a string using utf - 8", "true": "url - encodes a null able string , catching the useless exception that never happens", "bleu": 0.08858009236942327, "rouge": 0.2559440559440559}, {"predict": "checks to see if a raw modules is raw in a raw database", "true": "checks the existence of all necessary raw module tables", "bleu": 0.10571070857151538, "rouge": 0.18798151001540828}, {"predict": "constructs a new currency", "true": "this method is used to convert the string value given to an appropriate representation", "bleu": 0.0248009595334312, "rouge": 0.0}, {"predict": "parses a string using values representing a float", "true": "parses the supplied x sd : float string and returns its value", "bleu": 0.11567041937737582, "rouge": 0.1930379746835443}, {"predict": "create an instance of the specified java content interface", "true": "create an instance of the specified java content interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "requests a public share to share the share button", "true": "starts a dialog that requests a password to the user to protect a share link", "bleu": 0.11341174240707225, "rouge": 0.3986928104575163}, {"predict": "to do ( i", "true": "allocate objects until death", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "puts the entry with the specified key into the cache", "true": "puts the entry with the specified key into the cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the enlargement obtained by adding an object to an existing object", "true": "compute the enlargement obtained by adding an object to an existing object", "bleu": 1.0, "rouge": 1.0}, {"predict": "intersect this clip with another region", "true": "intersect this clip with another region", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new waiter to wait queue", "true": "adds a new waiter to wait queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "the number of code - units at the front of the xml code - units in the xml string form", "true": "returns the portion of its input that consists of xml safe chars", "bleu": 0.07681104116622756, "rouge": 0.26180257510729615}, {"predict": "assert that two strings are equal", "true": "compares a string line wise , i", "bleu": 0.15723447135049806, "rouge": 0.0}, {"predict": "recursively prints a warning message that is based on the issued by the given exception", "true": "used internally to log a message about the class at level warning , in case an exception was thrown", "bleu": 0.08291923626472852, "rouge": 0.23040604343720492}, {"predict": "adds fill components to empty cells in the first row and first column of the grid", "true": "adds fill components to empty cells in the first row and first column of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds prefix to the prefix unless it prefix = true", "true": "prefix one of the registered <unk> with an expression like \" piece of \"", "bleu": 0.09351498865776114, "rouge": 0.16180371352785147}, {"predict": "clears the password expiration warned time", "true": "clears the password expiration warned time", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a locale with the most - specific field removed , or null if this locale had an empty language , country and variant", "true": "returns a locale with the most - specific field removed , or null if this locale had an empty language , country and variant", "bleu": 1.0, "rouge": 1.0}, {"predict": "append a representation of the time zone of ' calendar ' to ' buffer '", "true": "append a representation of the time zone of ' calendar ' to ' buffer '", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the listeners in the meta - in - memory", "true": "remove listeners , <unk> that our <unk> ld flags are accurate and it removes only as declared", "bleu": 0.06927760750451363, "rouge": 0.07076566125290024}, {"predict": "returns a string with the given number of characters found in the given string", "true": "pads the given string to the left with spaces to ensure that it ' s at least total chars long", "bleu": 0.11860785323676018, "rouge": 0.17102803738317757}, {"predict": "show the should have in the set of flags that we can be drawn in the list of flags", "true": "set whether to show scores on the plot lines", "bleu": 0.07658412276041004, "rouge": 0.15269086357947434}, {"predict": "writes a char sequence to a file creating the file if it does not exist using the default encoding for the vm", "true": "writes a char sequence to a file creating the file if it does not exist using the default encoding for the vm", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates a random m / or util class for an loco io number of characters describing an type parameters", "true": "the kernel helper function , called k ' in 1 and 2", "bleu": 0.05415315253510895, "rouge": 0.0}, {"predict": "gets connection from a jd bc", "true": "gets connection from a pool", "bleu": 0.6147881529512643, "rouge": 0.7393939393939394}, {"predict": "emits a method to clear a list or map", "true": "emits a method to clear a list or map", "bleu": 1.0, "rouge": 1.0}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "start collecting profiling data", "true": "start recording the gesture", "bleu": 0.35930411196308426, "rouge": 0.25}, {"predict": "adds an input method listener", "true": "add input method listener", "bleu": 0.5081327481546147, "rouge": 0.6802973977695167}, {"predict": "add a fixed view to appear at the bottom of the list", "true": "add a fixed view to appear at the bottom of the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the class", "true": "load the driver class for the given url , if the database url is known", "bleu": 0.010890544041151608, "rouge": 0.1983739837398374}, {"predict": "add a document to the luce ne search index", "true": "add a document to the luce ne search index", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a command class name in the form of a command class", "true": "add a command in the hash map", "bleu": 0.22997519112894443, "rouge": 0.552536231884058}, {"predict": "prints that the column is an auto increment column", "true": "prints that the column is an auto increment column", "bleu": 1.0, "rouge": 1.0}, {"predict": "stores g cm messaging signing block of an alphabet into the underlying block", "true": "save the g cm info to the preferences", "bleu": 0.1350862565735141, "rouge": 0.2985318107667211}, {"predict": "main worker run loop", "true": "main worker run loop", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the block light to a buffer", "true": "write the block light to a buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "cas wait status field of a node", "true": "cas wait status field of a node", "bleu": 1.0, "rouge": 1.0}, {"predict": "execute a full text search from the request parameters", "true": "execute a full text search from the request parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next token if it matches the specified pattern", "true": "returns the next token if it matches the specified pattern", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new operation duration to this class", "true": "add a new operation duration to this class", "bleu": 1.0, "rouge": 1.0}, {"predict": "paints the background of a solid background", "true": "paint the background of an un editable control , e", "bleu": 0.22521602211604308, "rouge": 0.34205607476635513}, {"predict": "add attributes specified in a service schema", "true": "adds default values to an existing attribute", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "return canonical form", "true": "return canonical form", "bleu": 1.0, "rouge": 1.0}, {"predict": "add all the resource ' s value to the resource directory", "true": "sets the list of directories where the resources come from", "bleu": 0.12605968092174913, "rouge": 0.1921259842519685}, {"predict": "helper method used to decode short unicode string , length for which actual length ( in bytes ) is known", "true": "helper method used to decode short unicode string , length for which actual length ( in bytes ) is known", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a class node instance and initialize the class node which represents an additional class node and its corresponding actual values", "true": "wrap type in class & lt ; & gt ; if using class = = true", "bleu": 0.06429451441231726, "rouge": 0.11080835603996367}, {"predict": "push an import href on to the stylesheet stack", "true": "push an import href on to the stylesheet stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "internal conversion", "true": "returns a formatted string of the results", "bleu": 0.0524476438328049, "rouge": 0.0}, {"predict": "this method will sort the list in ascending order by this checker", "true": "sorts the encapsulated test suites by their name in alphabetic order , then returns with the current ( sorted ) instance", "bleu": 0.061715225299305954, "rouge": 0.1732954545454545}, {"predict": "expand the array passed in by the single element to add", "true": "expand the array passed in by the multiple elements to add", "bleu": 0.670422683816333, "rouge": 0.8181818181818181}, {"predict": "adds a marker to this log with the specified name", "true": "adds a marker to this log with the specified name", "bleu": 1.0, "rouge": 1.0}, {"predict": "replaces a with b in c", "true": "replaces a with b in c", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "true": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "bleu": 1.0, "rouge": 1.0}, {"predict": "enables or disables the current member , so that it matches the current member variables", "true": "enables or disables the final button , so that it matches the current member variables", "bleu": 0.7447819789879647, "rouge": 0.8666666666666667}, {"predict": "w sp type decoder test , decode them test", "true": "w sp type decoder test , decode string app id test", "bleu": 0.6266108809965137, "rouge": 0.7858293075684382}, {"predict": "removes all children actions ( separators as well ) from the group", "true": "removes all children actions ( separators as well ) from the group", "bleu": 1.0, "rouge": 1.0}, {"predict": "check is a file is writable", "true": "check is a file is writable", "bleu": 1.0, "rouge": 1.0}, {"predict": "handle ssl for ngc", "true": "this method validates the relying party", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "rotate transformation about the x axis", "true": "rotate transformation about the z axis", "bleu": 0.6434588841607617, "rouge": 0.8333333333333334}, {"predict": "start a factory service", "true": "starts a default factory service for the given instance service", "bleu": 0.11337974147240094, "rouge": 0.3978260869565217}, {"predict": "closes the reader of available data , using credits", "true": "notify the reader of available space in the pipe", "bleu": 0.392814650900513, "rouge": 0.4444444444444444}, {"predict": "create a constraints between return type and any type to which it is assigned", "true": "the first half of step 6", "bleu": 0.07432998184513635, "rouge": 0.0}, {"predict": "find the number of non - white space character", "true": "allows to answer how many columns are necessary for representation of the given char on a screen", "bleu": 0.06421450514370824, "rouge": 0.07287933094384706}, {"predict": "constructs an instance with the value present", "true": "constructs an instance with the value present", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new kafka consumer listener which will be used to create at the given topic", "true": "construct an instance with the supplied configuration properties and specific topics / partitions / initial offsets", "bleu": 0.07692375026049747, "rouge": 0.0625}, {"predict": "this is not quite complete - we should follow up on the chain , a bit tricky if a certificate appears in more than one chain", "true": "this is not quite complete - we should follow up on the chain , a bit tricky if a certificate appears in more than one chain", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds a string if the given match er is not a single group", "true": "captures the group passed in by matching against a pattern", "bleu": 0.1135935489027116, "rouge": 0.1781021897810219}, {"predict": "p vector 2 d to p vector and move all in t vectors into p i", "true": "translates the line by p vector", "bleu": 0.10123734869668824, "rouge": 0.19805194805194803}, {"predict": "reject the given run n able in the server , the listeners will have been shut down , in the task is discarded", "true": "invokes the rejected execution handler for the given command", "bleu": 0.07483887206915212, "rouge": 0.13570634037819798}, {"predict": "calculates the menu of pixels of a window", "true": "method that calculates space left for edit text when format text panel is visible", "bleu": 0.07575149194183216, "rouge": 0.08664772727272725}, {"predict": "adds a new game action to the list for this phase", "true": "adds a pending ramming attack to the list for this phase", "bleu": 0.5706745777055999, "rouge": 0.7272727272727273}, {"predict": "turn an array of resource - colors ( contains resource - id integers ) into an array list of actual color integers", "true": "turn an array of resource - colors ( contains resource - id integers ) into an array list of actual color integers", "bleu": 1.0, "rouge": 1.0}, {"predict": "test the configuration files option", "true": "test configuration file property", "bleu": 0.3021375397356768, "rouge": 0.4535315985130111}, {"predict": "generate the salt for the header , based on the font and current data", "true": "generate the random salt bytes if required", "bleu": 0.1250076305588977, "rouge": 0.30398671096345514}, {"predict": "adds a listener to the list of resource listeners", "true": "add a <unk> listener", "bleu": 0.15619699684601276, "rouge": 0.3306233062330623}, {"predict": "selects the tuple expression to select the next tuple for the given map of variables", "true": "selects from a list of tuple expressions the next tuple expression that should be evaluated", "bleu": 0.195647514979229, "rouge": 0.3333333333333333}, {"predict": "many fields in gsm sim ' s are many fields , the input must be gsm words , the default character if the minimum and non - many fields will be many in the fields are many in gsm words", "true": "writes the given phone number to the stream ( bcd coded )", "bleu": 0.03333168744598931, "rouge": 0.08519553072625699}, {"predict": "adds a message to the list of messages , if the not already present", "true": "add a message to the history", "bleu": 0.24601372576927535, "rouge": 0.43109540636042404}, {"predict": "this method starts the container , which can ' re connected to the container ' s container", "true": "start the executor for the given container", "bleu": 0.0859076483566362, "rouge": 0.27031019202363366}, {"predict": "convert a string to a date object", "true": "convert a date time string ( e", "bleu": 0.3073940764756322, "rouge": 0.42857142857142855}, {"predict": "call this method to accept all the entry entries", "true": "implementation of visitor pattern", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "returns the latest extension that has been set for the current version", "true": "reload the list of registered extensions , loading only the latest extension versions", "bleu": 0.1881307496206822, "rouge": 0.23828125000000006}, {"predict": "start processing given node", "true": "start processing given node", "bleu": 1.0, "rouge": 1.0}, {"predict": "produces a string representation of the date in sql format", "true": "produces a string representation of the date in sql format", "bleu": 1.0, "rouge": 1.0}, {"predict": "clear bit ( in t n ) inside a negative number", "true": "clear bit ( in t n ) inside a negative number", "bleu": 1.0, "rouge": 1.0}, {"predict": "compare to a number of an greater scale", "true": "compare to a number of an greater scale", "bleu": 1.0, "rouge": 1.0}, {"predict": "method reads in t input stream", "true": "reads a single character", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "cancel the current action", "true": "cancels the current completion , which means the state of the text is returned to what it was before completion and the info popup is closed if necessary", "bleu": 0.0011721295359402829, "rouge": 0.11010830324909747}, {"predict": "after rotating , the matrix needs to be translated", "true": "after rotating , the matrix needs to be translated", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "specify the default hostname for the proxy server", "true": "if a proxy is used to access the o data web service this specifies it ' s host name / ip address", "bleu": 0.03084036601527587, "rouge": 0.06149193548387097}, {"predict": "verifies that the specified setter with the fields of the given class name and name", "true": "verifies that the setter methods are compliant with the naming convention", "bleu": 0.1892240568795935, "rouge": 0.4747081712062256}, {"predict": "extracts element at current take position , advances , and signals", "true": "extracts element at current take position , advances , and signals", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a random float value", "true": "get a random , positive float", "bleu": 0.31610981104846864, "rouge": 0.5366568914956013}, {"predict": "extracts the variation types of availability types", "true": "attempt to parse string as a variation", "bleu": 0.18575057999133598, "rouge": 0.14285714285714285}, {"predict": "resets all the indexes text indexes and the cursor box", "true": "resets all text box indexes except those which are contained in the excluded list", "bleu": 0.1374462580533874, "rouge": 0.40450928381962864}, {"predict": "learn a device using the given characteristics", "true": "learn a device using the given characteristics", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the level zero or zero data for this sample group", "true": "returns a fresh copy of all data from level 0 buffers", "bleu": 0.12605968092174913, "rouge": 0.09090909090909091}, {"predict": "adds a forward reference to this label", "true": "adds a forward reference to this label", "bleu": 1.0, "rouge": 1.0}, {"predict": "get version a ' s peer devices ' ip '", "true": "returns the device type and software version", "bleu": 0.12605968092174913, "rouge": 0.12151394422310759}, {"predict": "counts number of times the given character matches the given string", "true": "counts the amount of times a certain character is part of a string", "bleu": 0.15447751184440917, "rouge": 0.41049798115746977}, {"predict": "given an icon , return a image icon that will be displayed on the icon , fill it to try icon", "true": "adds a background color to the given icon , if an icon and color is actually given , otherwise the original icon is returned", "bleu": 0.10150326754660607, "rouge": 0.2634989200863931}, {"predict": "reads all bytes from given input stream and stores it in a byte array", "true": "read from in str up to a maximum number of bytes , throwing an exception if more the maximum amount of requested data is available", "bleu": 0.050661162270812646, "rouge": 0.14639999999999997}, {"predict": "searches for the first appearance of a string that has the required ' s not already a string", "true": "searches for the given target directory starting in the \" plugins \" sub directory of the given location", "bleu": 0.14025775160081475, "rouge": 0.2777777777777778}, {"predict": "validate existing order clause", "true": "checks that pre load - order - dependant caches has sync or a sync pre loading mode", "bleu": 0.013931732312048943, "rouge": 0.08567415730337079}, {"predict": "runs the thread loop back into the game loop thread", "true": "creates a new thread , and starts execution of the player", "bleu": 0.12623203108004888, "rouge": 0.18885448916408668}, {"predict": "removes the environment variable", "true": "removes the environment variable", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the minin al number of instances required to achieve a score as high as the given score threshold for the given lambda", "true": "calculates the minimal number of instances required to achieve a score as high as the given score threshold for the given lambda", "bleu": 0.8318180062062374, "rouge": 0.8924652523774688}, {"predict": "returns the value on the top of the stack", "true": "returns the value on the top of the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests fail : always returns false", "true": "tests fail : always returns false", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the index of the last directory separator character", "true": "returns the index of the last directory separator character", "bleu": 1.0, "rouge": 1.0}, {"predict": "utility method to determine whether the given point , in local coordinates , is inside the view , where the area of the view is expanded by the slop factor", "true": "utility method to determine whether the given point , in local coordinates , is inside the view , where the area of the view is expanded by the slop factor", "bleu": 1.0, "rouge": 1.0}, {"predict": "test that the bug # test of dns & servers & servers &", "true": "this test will check to see if all the partition attributes are sent to the client", "bleu": 0.08392612670891637, "rouge": 0.13540510543840176}, {"predict": "reconstructs a cg for the flattened , plus the extended attributes", "true": "local helper method to unroll variables in a type bounds array", "bleu": 0.11390778025531027, "rouge": 0.09090909090909091}, {"predict": "delete w / o value", "true": "delete a smart quota", "bleu": 0.2730120862709067, "rouge": 0.22676579925650556}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "create basic authentication header from basic authentication headers", "true": "method to create a basic http base 64 encrypted authentication header", "bleu": 0.16481400866629634, "rouge": 0.4093959731543625}, {"predict": "add new entry , group changes", "true": "adds a new extent entry", "bleu": 0.24446151121745047, "rouge": 0.3696969696969697}, {"predict": "map a single cache big data up to the transport", "true": "if this transport network is already built and cached , fetch it quick", "bleu": 0.0933873085201553, "rouge": 0.084958217270195}, {"predict": "returns the number of un processed tokens remaining in the string", "true": "returns the number of un processed tokens remaining in the string", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct this entry from xml file", "true": "ask sax to read and verify a file", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "has denied permissions string", "true": "is all granted boolean", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "execute the given run n able on the underlying executor", "true": "fires a event on the executor thread", "bleu": 0.17827531042796255, "rouge": 0.36454183266932266}, {"predict": "send a message over the outgoing message queue", "true": "get the next message from the outgoing queue and send it over the network", "bleu": 0.13636047819060018, "rouge": 0.346590909090909}, {"predict": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "true": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a field for the given field", "true": "tells this mapper to use an attribute for this field", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "returns true if token is a session token session token", "true": "checks if is session token", "bleu": 0.18850319022747347, "rouge": 0.5674418604651164}, {"predict": "returns the root ( mean ) of the given distribution", "true": "this returns the root mean squared error of two data sets", "bleu": 0.23494428299484157, "rouge": 0.47213622291021673}, {"predict": "write data to given buffer , like serialize", "true": "write data to given buffer , like serialize", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a hash map based on what bad in the case of cheque / library", "true": "creates account details map", "bleu": 0.09103526405546068, "rouge": 0.2350674373795761}, {"predict": "rotates the subtree so that its root ' s left child is the new root", "true": "rotates the subtree so that its root ' s left child is the new root", "bleu": 1.0, "rouge": 1.0}, {"predict": "byte compaction mode ( see 5", "true": "byte compaction mode ( see 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the enabled radio button", "true": "updates the primary loop iteration control of the experiment", "bleu": 0.1614457444314309, "rouge": 0.2717149220489978}, {"predict": "adds a recorded value", "true": "adds a recorded value", "bleu": 1.0, "rouge": 1.0}, {"predict": "the graphical representation of a series", "true": "the graphical representation of a series", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks a class signature", "true": "checks a class signature", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds the select command line from the card ' s card names : - builds a select command concatenating the : 1 : - aid lenght and the following ascending select command line", "true": "builds the select command ap du from a card let ' s app id : - builds the card let ' s aid appending the <unk> s mo prefix and a suffix - builds the command concatenating the header , aid lenght and aid", "bleu": 0.16735227572877878, "rouge": 0.45579078455790784}, {"predict": "finds the corresponding resources and reads them in as a properties files that cannot be read from the url", "true": "finds the corresponding resources and reads them in as a properties files any url that cannot be read in as a properties file will be added to the ' resources not loaded ' collection", "bleu": 0.349385521525824, "rouge": 0.6103590347263096}, {"predict": "adds the specified project entry to the project", "true": "should only be invoked from project comparison entry", "bleu": 0.17747405280050269, "rouge": 0.25}, {"predict": "creates a new source object from a url", "true": "creates a new source object from a url", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new zoom listener", "true": "adds a new zoom listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests whether a single ser v let is correctly merged into a descriptor that already contains another ser v let", "true": "tests whether a single ser v let is correctly merged into a descriptor that already contains the definition of an other ser v let", "bleu": 0.7086958412948493, "rouge": 0.8497067448680353}, {"predict": "extracts the re calculated by coefficients , i", "true": "extract the regular expression associated with this recursive production", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "sets the flag that indicates whether all objects are finalized when the vm is about to exit", "true": "sets the flag that indicates whether all objects are finalized when the vm is about to exit", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the specified result to this object", "true": "adds an am identity object to this search result", "bleu": 0.21846599816382303, "rouge": 0.3667334669338677}, {"predict": "registers a batch fix for the annotation which is only available on the annotation", "true": "registers a quick fix which would be available during batch mode only , in particular during com", "bleu": 0.11998609496359587, "rouge": 0.3170478170478171}, {"predict": "creates a new zip file to run the entry in the zip file , but has not already been created", "true": "creates a new file zip entry with the specified name", "bleu": 0.1352045976914347, "rouge": 0.42558139534883715}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "the start of a document", "true": "the start of the document", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "dumps and returns the logging db information from the given data", "true": "helper method used for debugging to dump the current window ' s layout hierarchy", "bleu": 0.08671803715615023, "rouge": 0.07830551989730423}, {"predict": "register a rule observer that will be called when the next l changes , and responses to the list of changes", "true": "registers an observer to be notified on routing rules changes", "bleu": 0.07305267243289862, "rouge": 0.20677966101694914}, {"predict": "heartbeat from a heartbeat node includes only its own information", "true": "send a heartbeat with the updated pods to other servers in the cluster", "bleu": 0.12290460988295328, "rouge": 0.16991643454039}, {"predict": "writes message to to to the output stream", "true": "writes message to to the output stream", "bleu": 0.816496580927726, "rouge": 0.9446902654867256}, {"predict": "initializes ssl key store using the ssl trust store", "true": "initializes an ssl engine", "bleu": 0.15619699684601276, "rouge": 0.3306233062330623}, {"predict": "creates a new random access source", "true": "constructs a new offset random access source", "bleu": 0.41386440336942737, "rouge": 0.7587064676616916}, {"predict": "create a new argument parser", "true": "create a parser for the named program", "bleu": 0.25880882365505126, "rouge": 0.48541114058355433}, {"predict": "set bit ( in t n ) outside zero", "true": "set bit ( in t n ) outside zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will convert boolean to a boolean", "true": "this method will convert boolean to string with comma separated", "bleu": 0.5653934257689434, "rouge": 0.6535714285714286}, {"predict": "draws an axis line at the current axis", "true": "draws an axis line at the current cursor position and edge", "bleu": 0.5933643406390795, "rouge": 0.716442953020134}, {"predict": "save a model value", "true": "save a model in x stream deep object serialized xml form", "bleu": 0.11620963994000619, "rouge": 0.3689516129032258}, {"predict": "sorts the span ( s ) in ascending order", "true": "sort the spans in ascending order by their start position", "bleu": 0.24855227187657006, "rouge": 0.41709401709401706}, {"predict": "split the data set by the data set", "true": "split the data set randomly", "bleu": 0.44632361378533286, "rouge": 0.6421052631578947}, {"predict": "drops a prefix from a path if it exists or returns original path if prefix does not match", "true": "drops a prefix from a path if it exists or returns original path if prefix does not match", "bleu": 1.0, "rouge": 1.0}, {"predict": "publish / send a message to an m qt t server once subscribed this method waits to arrive from the server that match the server", "true": "publish / send a message to an m qt t server", "bleu": 0.4265706803128101, "rouge": 0.6571988246816846}, {"predict": "removes the given adaptable object from this list", "true": "adds the given adaptable object to this list", "bleu": 0.5133450480401704, "rouge": 0.75}, {"predict": "creates a lazily concatenated stream whose elements are all the elements of the first stream followed by all the elements of the second stream", "true": "creates a lazily concatenated stream whose elements are all the elements of the first stream followed by all the elements of the second stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "compares the values of actual and expected", "true": "compares the values of actual and expected", "bleu": 1.0, "rouge": 1.0}, {"predict": "force au th module connection", "true": "sets the request ' s for ceau th parameter", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "fetch the user details for the user credentials", "true": "fetch the user details for the user credentials", "bleu": 1.0, "rouge": 1.0}, {"predict": "detaches and waits for the event to return channel to terminate", "true": "stop replica tor node manager j mx service", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "dispose of object , releasing resources", "true": "dispose of object , releasing resources", "bleu": 1.0, "rouge": 1.0}, {"predict": "the implementation for push message a sync ( ) function", "true": "the implementation for push message a sync ( ) function", "bleu": 1.0, "rouge": 1.0}, {"predict": "write data to characteristic , and send to remote bluetooth le device", "true": "write data to characteristic , and send to remote bluetooth le device", "bleu": 1.0, "rouge": 1.0}, {"predict": "links the element name to the element for this element", "true": "returns the js doc format of link to the element", "bleu": 0.24808415001701817, "rouge": 0.4}, {"predict": "reads a stream into a list", "true": "this function reads an input stream line - by - line and converts each line into an object using a transformer that is passed as a parameter", "bleu": 0.008778843448875268, "rouge": 0.2174688057040998}, {"predict": "removes the element from the specified json element", "true": "removes the first occurrence of the specified element from this array , if it is present", "bleu": 0.11411679850596974, "rouge": 0.3930412371134021}, {"predict": "send a stream ' s bytes from a stream", "true": "send a stream ' s byte tuples in a web socket binary message", "bleu": 0.34449658314088427, "rouge": 0.5281385281385281}, {"predict": "sorts the broker items", "true": "perform sorting according to sort type", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "this will answer if the host provided by the realm , which is only used as a valid xml document", "true": "decides whether it needs to escape xml special characters for attribute values or not", "bleu": 0.06108557268562171, "rouge": 0.06075697211155379}, {"predict": "update the path constraints object", "true": "calculate and store path constraints for an individual", "bleu": 0.1971902775417715, "rouge": 0.2953995157384988}, {"predict": "test of a journal on which a single index has been register ( and the journal committed )", "true": "test of a journal on which a single index has been register ( and the journal committed ) but no data was written on to the index", "bleu": 0.6065306597126334, "rouge": 0.7721518987341772}, {"predict": "returns true if they has been started", "true": "checks if class loader is an internal p 2 p class loader", "bleu": 0.0909326471926252, "rouge": 0.10049423393739704}, {"predict": "removes the sub symbols from current sub typing char at the end of the specified realm", "true": "remove the remove sub j trailers sub j - trailer = \" ( fwd ) \" / w sp", "bleu": 0.07583815044133388, "rouge": 0.1688191881918819}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the next source", "true": "step to the next input stream", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "not the given bitmap into the given byte array", "true": "bitmap transfer to bytes", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "inflate an individual name from the provided name", "true": "inflate a short name into a full g data uri using g prefix ( ending in \" # \" )", "bleu": 0.03959981382356705, "rouge": 0.13260869565217392}, {"predict": "add a warning handler that contains a failure handler", "true": "add a warning event handler", "bleu": 0.2777619034011791, "rouge": 0.6024691358024692}, {"predict": "read object is called to restore the state of the socket permission from a stream", "true": "read object is called to restore the state of the service permission from a stream", "bleu": 0.8153551038173115, "rouge": 0.9333333333333336}, {"predict": "prints a string to the stream , encoded as utf - 8 with preceeding length", "true": "prints a string to the stream , encoded as utf - 8 with preceeding length", "bleu": 1.0, "rouge": 1.0}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes an attribute value", "true": "writes the xml attribute name / val", "bleu": 0.1878296463217631, "rouge": 0.346590909090909}, {"predict": "pack from the attribute set as a string description as the string description as defined in the string description", "true": "translate attributes that describe an attribute syntax definition into the string description as defined in rfc 2252", "bleu": 0.3014335251508215, "rouge": 0.3928242870285189}, {"predict": "writes bytes to the socket", "true": "writes an nio buffer to the socket", "bleu": 0.36015288308423526, "rouge": 0.6472148541114059}, {"predict": "skips the annotation member value at the current position in the specified byte buffer", "true": "skips the annotation member value at the current position in the specified byte buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "first join of two arrays", "true": "recursive method to run through all child nodes and , for each result set tuple returned by a child node , execute the inner child of the child node until there are no inner child nodes", "bleu": 0.0005540590919571925, "rouge": 0.04292751583391977}, {"predict": "generates a flat list of analysis network / survey data for the config and pt distances for the node instances ( ) - imputation value ( for initializing the loaded in data set of stops per config usage detail usage", "true": "generates the external mats im config file with the specified parameter settings", "bleu": 0.037872108793174666, "rouge": 0.17039106145251398}, {"predict": "awaits the next http request , removes it , and returns it", "true": "awaits the next http request , removes it , and returns it", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a location from a column location to a column in a column of the control", "true": "returns the closest column to the passed in location", "bleu": 0.10123734869668824, "rouge": 0.2527624309392265}, {"predict": "returns all files in a directory matching a specified directory", "true": "given a java", "bleu": 0.12605968092174913, "rouge": 0.17039106145251398}, {"predict": "generate a drop string for a table", "true": "generate the drop statement for a table", "bleu": 0.38260294162784475, "rouge": 0.7142857142857143}, {"predict": "register all child listeners", "true": "register the child listeners on the child preference stores", "bleu": 0.14558246978804804, "rouge": 0.43160377358490565}, {"predict": "returns whether the specified scroll is out of bounds", "true": "returns whether the specified scroll is out of bounds", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method updates the luce ne index maps and updates the dimension index for the key row", "true": "this method updates the store to allow point lookups using the non - key field ( s )", "bleu": 0.20620415837726805, "rouge": 0.34109972041006525}, {"predict": "hard reduction of the instructions , and return the list of instructions", "true": "returns all instructions which are somewhat \" relevant \" for the returned object of the method", "bleu": 0.1113283703518327, "rouge": 0.2089041095890411}, {"predict": "checks if a new node locally access", "true": "checks if latest call to acquire / release was called on this node", "bleu": 0.1114789227233716, "rouge": 0.2846034214618974}, {"predict": "if delta y > 0 , try to move the content down", "true": "if delta y > 0 , try to move the content down", "bleu": 1.0, "rouge": 1.0}, {"predict": "compare to ( big integer a )", "true": "compare to ( big integer a )", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete a point at a certain point in the polygon coordinate list", "true": "delete a point at a certain point in the polygon coordinate list", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the path will relative path like \"", "true": "deletes all characters up to the leftmost whitespace from the cursor ( including the whitespace )", "bleu": 0.0589953212431261, "rouge": 0.07860824742268041}, {"predict": "cumulative density , static version", "true": "cumulative density , static version", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads an engine", "true": "read in continuous data set", "bleu": 0.23196236872272216, "rouge": 0.0}, {"predict": "generates the native gui d format as storage port from the passed in storage port", "true": "fc port value from indication source instance system name : sym me <unk> + <unk> + fa - 1 e is csi port value from indication source instance system name : sym me <unk> + <unk> + se - 1 g", "bleu": 0.01728491461145516, "rouge": 0.09886547811993517}, {"predict": "determines if there are any path relative to be able to the array non - ascii and native gui d 8 / in which i ed form", "true": "returns true if the paths are contiguous , or this object has no row mapper", "bleu": 0.053414136238197775, "rouge": 0.10041152263374485}, {"predict": "creates new instance reader", "true": "creates a new string reader", "bleu": 0.33277145517762347, "rouge": 0.6535714285714286}, {"predict": "returns the array element holding the bit value for the given integer", "true": "returns the array element holding the bit value for the given integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "update a synth style", "true": "private method to update styles", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "ensures correct size of the widget", "true": "each row or line at least show one child horizontal only show child can show or partly show in parent", "bleu": 0.018012599273714434, "rouge": 0.0}, {"predict": "causes current thread to wait until either another thread or block until either a permit in the source string , or to avoid blocking", "true": "causes current thread to wait until another thread invokes the method or the method for this object", "bleu": 0.2668730618874673, "rouge": 0.5033003300330033}, {"predict": "adds a field to run the unique against with a specific boost", "true": "adds a field to run the query string against with a specific boost", "bleu": 0.7003015589741095, "rouge": 0.8736979166666665}, {"predict": "return a string formatted as format", "true": "return a string formatted as format", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the stream size", "true": "initialize r for property stream buffer size", "bleu": 0.20183609024241697, "rouge": 0.5198863636363635}, {"predict": "register a sensor if max sensors are not 1 to max sensors", "true": "the numbers here are 0 to max sensors , not 1 to max sensors", "bleu": 0.37314877217644393, "rouge": 0.5310945273631842}, {"predict": "creates a new number object with the supplied parameters", "true": "parse the supplied string as a number", "bleu": 0.21105340631872635, "rouge": 0.2557651991614256}, {"predict": "return the probe ' s next sample", "true": "return the probe ' s next sample", "bleu": 1.0, "rouge": 1.0}, {"predict": "json formats a json - json text attribute and generates a string for the given template", "true": "perform the keyword substitution", "bleu": 0.07692375026049747, "rouge": 0.11213235294117647}, {"predict": "obtains all versions of the principal of the specified principal", "true": "constructs a key i mpl from a password", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "adds an annotation for its annotations", "true": "add the standard annotations encoded in the tag bits to the recorded annotations", "bleu": 0.06878769894132081, "rouge": 0.09870550161812298}, {"predict": "gets a text desc rp tion of the result producer", "true": "gets a text desc rp tion of the result producer", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method runs the temporary files in the temporary directory and uses them to find the temporary directory", "true": "process main logic for create file", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "checks whether the directory has expired", "true": "check if a new direction matches the existing one , and if so , reset the expiration point", "bleu": 0.02989501072722226, "rouge": 0.07644110275689221}, {"predict": "parses the string representation of the path", "true": "this method is used to parse the provided x path expression", "bleu": 0.1160873020151595, "rouge": 0.2136602451838879}, {"predict": "makes the given variable name available", "true": "makes the given variable name available", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method for reading and decrypting the records of the file", "true": "reads magic + share key version without verification", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "return whether media type can be supported", "true": "returns true if the specified css media type is unsupported , false otherwise", "bleu": 0.10374282717383708, "rouge": 0.1897356143079316}, {"predict": "exports all dependencies that have the given element", "true": "traverse the dependency structure beginning from all \" roots \" , i", "bleu": 0.10764345432696364, "rouge": 0.09651898734177215}, {"predict": "to do this is a temporary workaround for https : / / bugs", "true": "to do this is a temporary workaround for https : / / bugs", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns network availability status", "true": "returns network availability status", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a string that s \" regexp ish \" ( contains lots of times ) this test built by get s ys patterns , you get times , you get a regex note : to avoid errors , such as well", "true": "returns a string that s \" regexp ish \" ( contains lots of operators typically found in regular expressions ) if you call this enough times , you might get a valid regex !", "bleu": 0.34844509877176766, "rouge": 0.5424633170297911}, {"predict": "creates a list of expected partition key group entities", "true": "creates and persists specified partition value entities", "bleu": 0.16784459625186196, "rouge": 0.38364779874213834}, {"predict": "returns a description of the class i fier", "true": "returns the text of this g path result", "bleu": 0.19070828081828378, "rouge": 0.25}, {"predict": "creates a wait - to - be able once per active / code able in a program", "true": "registers a run n able to run on low memory events", "bleu": 0.0859076483566362, "rouge": 0.14859926918392205}, {"predict": "write data - - output this mod bus message to d out", "true": "write data - - output the completed mod bus message to d out", "bleu": 0.7003015589741095, "rouge": 0.8736979166666665}, {"predict": "extracts the hard reference from the soft / weak reference given", "true": "extracts the hard reference from the soft / weak reference given", "bleu": 1.0, "rouge": 1.0}, {"predict": "formats a long value", "true": "formats a long value", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the contribution of the given addon", "true": "removes the contribution of the given addon", "bleu": 1.0, "rouge": 1.0}, {"predict": "the use k to the byte array , the number of chunks", "true": "copy the next page to the output stream", "bleu": 0.14694106251955755, "rouge": 0.3112244897959184}, {"predict": "write part of an array of bytes", "true": "write part of an array of bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "does a backup status from a byte set , this must have backup db", "true": "used to confirm valid backup status data", "bleu": 0.11633270842295028, "rouge": 0.2026578073089701}, {"predict": "handle request sent error mapping error", "true": "handle request sent with a wrong binding", "bleu": 0.34801709319446883, "rouge": 0.45522388059701485}, {"predict": "checks that the machine is in the given state", "true": "checks that the machine is in one of the given states", "bleu": 0.5662068475521798, "rouge": 0.7858293075684382}, {"predict": "sort movies in movies", "true": "sort movies inside this movie set by using either the sort title , release date or year", "bleu": 0.018335190851298155, "rouge": 0.17134831460674158}, {"predict": "creates a new key value list parser", "true": "create a parser that uses the given regex es to parse a list of key value pairs", "bleu": 0.06967023936676962, "rouge": 0.23252858958068615}, {"predict": "poll the statistics for statistics", "true": "poll the statistics broker plugin", "bleu": 0.5081327481546147, "rouge": 0.6}, {"predict": "built a file path to run before g fsh", "true": "appends the extension to the filename , in case it is missing", "bleu": 0.10113117135596685, "rouge": 0.0928462709284627}, {"predict": "calculates icon that is closest to the vertical axis in reference to the current icon", "true": "calculates icon that is closest to the vertical axis in reference to the current icon", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the edge and the cell ( including boundary ) intersect", "true": "returns true if the edge and the cell ( including boundary ) intersect", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a tree for deciding what keys can legally be typed", "true": "create a tree for deciding what keys can legally be typed", "bleu": 1.0, "rouge": 1.0}, {"predict": "displays navigator state information in the status overlay views", "true": "displays navigator state information in the status overlay views", "bleu": 1.0, "rouge": 1.0}, {"predict": "get javascript type name from a type reference", "true": "returns the name of js type for the given type ref", "bleu": 0.13107175678306446, "rouge": 0.20469798657718125}, {"predict": "puts the entry with the specified key into the cache", "true": "puts the entry with the specified key into the cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "create the state machine using the given state machine and starts execution of states which are dependant on all states ( whose )", "true": "converts state machine definition to state machine domain object and saves in db", "bleu": 0.0916585247474253, "rouge": 0.29242569511025884}, {"predict": "calculates a quantitative , linearly scaled layout", "true": "calculates a quantitative , square root scaled layout", "bleu": 0.5154486831107657, "rouge": 0.7904967602591793}, {"predict": "removes all the listeners from this object", "true": "method called when layer detects that it has been removed from map handler , assumes it ' s being thrown away", "bleu": 0.02513860735449254, "rouge": 0.06552094522019333}, {"predict": "reads the default serial iz able field value for this instance , followed by the registrar ' s service id encoded as specified by the service id", "true": "reads the default serial iz able field value for this instance , followed by the registrar ' s service id encoded as specified by the service id", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a right - pointing triangle of the given di men is ions", "true": "returns a right - pointing triangle of the given di men is ions", "bleu": 1.0, "rouge": 1.0}, {"predict": "lookup a terminal by name string", "true": "lookup a terminal by name string", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to create a new layout for the specified user name and block if it exists", "true": "method to create a new layout block if the layout block does not exist returns null if a layout block with the same system name or username already exists , or if there is trouble creating a new layout block", "bleu": 0.09240352689958334, "rouge": 0.3315217391304348}, {"predict": "so our status for so it is in so lr document", "true": "allow user to alter certain values in software such as colour , please note all color and text highlighting values are static and common across the jvm", "bleu": 0.026598204708478963, "rouge": 0.04891740176423416}, {"predict": "escape some characters that match the regex pattern", "true": "this function will escape special characters within a string to ensure that the string will not be parsed as a regular expression", "bleu": 0.03504142113550254, "rouge": 0.24596774193548387}, {"predict": "constructs a char buffer with the given string", "true": "constructs a char buffer with the given initial string", "bleu": 0.7846630356446556, "rouge": 0.931297709923664}, {"predict": "updates the ui state for opt out promo", "true": "updates the ui state for opt out promo", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a value geometry object", "true": "create a new geometry objects", "bleu": 0.3021375397356768, "rouge": 0.4}, {"predict": "resets the list of queued operands", "true": "remember to clean the is new flag", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "tell whether the so is extracted", "true": "tell whether the so is extracted", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes the t the correct statement", "true": "perform all mung e completion tasks that are required no matter the configuration", "bleu": 0.06878769894132081, "rouge": 0.09870550161812298}, {"predict": "displays the gui and display the image panel", "true": "display message if in gui mode", "bleu": 0.17747405280050269, "rouge": 0.14663461538461536}, {"predict": "checks the command for each module", "true": "recursively walks the file tree of a directory", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "lays out springs that have a baseline along the baseline", "true": "lays out springs that have a baseline along the baseline", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the in t value from the json array for specified index", "true": "reads the in t value from the json array for specified index", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a property change listener", "true": "add a property change listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a dependent preference on this preference", "true": "removes a dependent preference on this preference", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates the storage policy selection state", "true": "validates the storage policy selection", "bleu": 0.8091067115702212, "rouge": 0.9242424242424241}, {"predict": "returns details for accessing arrays", "true": "returns a description of the cluster er as a string", "bleu": 0.10043553373039076, "rouge": 0.12577319587628866}, {"predict": "copy the objects in the specified collection to the given array type", "true": "returns a new array of the given component type ( possibly a java primitive ) that is a copy of the content of the given collection", "bleu": 0.05604177857307776, "rouge": 0.19741100323624597}, {"predict": "formats the g radle sync g files in a new formatter", "true": "returns an exception which indicates problem files nicely", "bleu": 0.11390778025531027, "rouge": 0.108348134991119}, {"predict": "computes the distances of all the node from the starting root node", "true": "computes the distances of all the node from the specified root node", "bleu": 0.7910665071754358, "rouge": 0.9166666666666665}, {"predict": "creates a string representation of the double argument", "true": "returns a string representation for the specified float value", "bleu": 0.2785146580372046, "rouge": 0.465648854961832}, {"predict": "returns the position of the buffer , if it exists", "true": "gets the current column position of this log stream", "bleu": 0.17827531042796255, "rouge": 0.31881533101045295}, {"predict": "constructs a new batched image request object", "true": "constructs a new batched image request object", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new frequency", "true": "adds a new frequency", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses an element with the given parser", "true": "parses an element with the given parser", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes a string , given interval , rules , defaulting to our long ( changing ) , defaulting to it to change , and makes it makes it ' s", "true": "slices the intervals into smaller intervals of the time grain duration", "bleu": 0.03392268780792677, "rouge": 0.0}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "check the verb for gerund form , e", "true": "determine if the expression contains a verb in gerund form", "bleu": 0.1867587389639562, "rouge": 0.43571428571428567}, {"predict": "tell the user of an error , and probably throw an exception", "true": "tell the user of an error , and probably throw an exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a request to use as a json object with the injection to be sent to the server", "true": "creates a new request with the given parameters", "bleu": 0.101824256461955, "rouge": 0.3306233062330623}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "download the file structure", "true": "download all the t log files to the temp t log directory", "bleu": 0.0538140946637381, "rouge": 0.22932330827067668}, {"predict": "parse the attributes from a - - - - - parse file attributes to a - - - - > e then a parse the range - - - - - - - - - - - - - - - > e", "true": "reads the attributes of an open file", "bleu": 0.039585298754221884, "rouge": 0.13790504898266767}, {"predict": "adds all participants to the set of participants", "true": "utility method for subclasses", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "create a panel to create radio button", "true": "create a panel containing a check box", "bleu": 0.345720784641941, "rouge": 0.42857142857142855}, {"predict": "this method will clear a amp ; bean to clear amp ; and register a amp ;", "true": "this is a utility method which copies the given s rc event to the given destination event", "bleu": 0.09083627868206415, "rouge": 0.1764705882352941}, {"predict": "assigns the language to the model using the given clusters", "true": "assigns the current probability values to the instances in the database and compute the expectation value of the current <unk> of distributions", "bleu": 0.06576327798794093, "rouge": 0.2927063339731286}, {"predict": "converts all separators to the unix separator of forward slash", "true": "converts all separators to the unix separator of forward slash", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the string representation of the given uri", "true": "gets the value of the uri as a string , returns null if the uri is null", "bleu": 0.08468476175754991, "rouge": 0.3004926108374384}, {"predict": "constructs a new kernel", "true": "creates a new kernel object with the specified offset and values", "bleu": 0.11620963994000619, "rouge": 0.3689516129032258}, {"predict": "initialize the work list , assuming that all nodes with the same label are in the same label", "true": "initialize the work list", "bleu": 0.18951629567590744, "rouge": 0.4107744107744108}, {"predict": "traverses the given adapter and add it to the top - level", "true": "removes the imported names before linking and cleans other caches attached to the a st", "bleu": 0.12100325656200607, "rouge": 0.29047619047619044}, {"predict": "file interface within the relative of the current instance", "true": "runs the d vc s command for adding a new file , e", "bleu": 0.10015045110931886, "rouge": 0.08802308802308802}, {"predict": "gets the main visible state of the tree", "true": "called whenever an item in the tree has been expanded", "bleu": 0.1643685581109115, "rouge": 0.21785714285714283}, {"predict": "accumulate the accumulate string into be used in be used", "true": "converts a string containing a mathematical expression in infix form to postfix form", "bleu": 0.10335004586873166, "rouge": 0.16991643454039}, {"predict": "returns whether this object has the specified object", "true": "determine if the object provide is in this adapter", "bleu": 0.16829946711936866, "rouge": 0.232824427480916}, {"predict": "determines if v 1 is equal to one another", "true": "determines if a kv no matches another kv no", "bleu": 0.19960198807747329, "rouge": 0.3333333333333333}, {"predict": "called when closing the url connection has been closed", "true": "override if you want to get notified if the url connection fails to close", "bleu": 0.15071985378948696, "rouge": 0.2510288065843621}, {"predict": "updates the schema of an xml schema", "true": "processes an xml schema & lt ; complex type gt ; tag", "bleu": 0.1692447266569478, "rouge": 0.30148270181219106}, {"predict": "adds a reference to the index at the index at or not have not been put", "true": "pushes a new level of an not at or s references and base the new one on the given values", "bleu": 0.09744539912175844, "rouge": 0.16339285714285715}, {"predict": "returns the version of the directory server , including the directory server resolution", "true": "returns the compact version string for this product , suitable for use in path names and similar cases", "bleu": 0.09723045789389204, "rouge": 0.25077081192189105}, {"predict": "sequences the given query", "true": "sequences the given query", "bleu": 1.0, "rouge": 1.0}, {"predict": "expunge stale entries from the table", "true": "expunge stale entries from the table", "bleu": 1.0, "rouge": 1.0}, {"predict": "convenience function", "true": "get a sublist of all of the elements in the list except for first", "bleu": 0.0015837816104164078, "rouge": 0.0}, {"predict": "create a list of integers consisting of the ranges defined by the provided argument e", "true": "create a list of integers consisting of the ranges defined by the provided argument e", "bleu": 1.0, "rouge": 1.0}, {"predict": "tear down after testing", "true": "tear down after testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "called from an object", "true": "look at the object received in a map handler status message and disconnect from it if necessary", "bleu": 0.015417996259849322, "rouge": 0.08567415730337079}, {"predict": "call re calculate estimated completion date , estimated start date , estimated start result for 0 , ending at or estimated worker in , it ' s z 0 , or hdd in the routing state", "true": "recalculated the estimated completion date property", "bleu": 0.06595800588816438, "rouge": 0.1639784946236559}, {"predict": "adds the given document type to the list of document types", "true": "add a document type to the document type list", "bleu": 0.3448444257953326, "rouge": 0.5091819699499166}, {"predict": "checks database metadata to see if a table exists", "true": "checks database metadata to see if a table exists", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "searches for the next token position in the specified position", "true": "returns the position of the next token after position pos in specification spec if that token exists and is in the plus cal algorithm ; otherwise , it returns null", "bleu": 0.040576514093271565, "rouge": 0.27518796992481204}, {"predict": "update to next task", "true": "method is called from update cycle , perform all tasks in gl thread", "bleu": 0.037870374782798366, "rouge": 0.1073943661971831}, {"predict": "merges the ratio into the ratio", "true": "determine the highest posterior density for a list of values", "bleu": 0.11341174240707227, "rouge": 0.11960784313725491}, {"predict": "checks if the given disk exists in the file or if it does not", "true": "checks if directories exist", "bleu": 0.11633270842295028, "rouge": 0.2469635627530364}, {"predict": "reads the bytecode of a class", "true": "reads the bytecode of a class", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a director to the output of the makes it already allocated", "true": "allocates existing ports to the already allocated context ( only )", "bleu": 0.17194656088289215, "rouge": 0.3505747126436781}, {"predict": "the graphical representation of a series", "true": "the graphical representation of a series", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts internal representation into an actual string", "true": "converts internal representation into an actual string", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a list of long objects to the data output", "true": "write a set of long objects", "bleu": 0.24808415001701817, "rouge": 0.5236051502145923}, {"predict": "checks whether the attribute name is defined", "true": "tells whether a given attribute is defined", "bleu": 0.2777619034011791, "rouge": 0.5714285714285714}, {"predict": "shows the stage", "true": "shows pre loading stage with scene while fx gl is being configured", "bleu": 0.029603567969095357, "rouge": 0.24063116370808674}, {"predict": "removes all mappings from this map , leaving it empty", "true": "removes all mappings from this map , leaving it empty", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the key ( and its corresponding value ) from this map", "true": "removes the key ( and its corresponding value ) from this map", "bleu": 1.0, "rouge": 1.0}, {"predict": "test copy of an stream containing exactly one byte more than a full block of data", "true": "test copy of an stream containing exactly one block ' s data", "bleu": 0.5043545474510804, "rouge": 0.7331730769230769}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts an ip string into an integer array", "true": "fill out a given four - byte array with the ipv 4 address specified in the given string", "bleu": 0.050847167445562676, "rouge": 0.07193396226415094}, {"predict": "evaluates the cf 2 problem", "true": "evaluates the cf 2 problem", "bleu": 1.0, "rouge": 1.0}, {"predict": "emits a reply to a remote user", "true": "emits an \" end \" line for a successful reply", "bleu": 0.14390022429682173, "rouge": 0.34205607476635513}, {"predict": "adds the headers for the tenant to be sent from the tenant", "true": "add the header values to the supplied connection", "bleu": 0.1235622127262679, "rouge": 0.3112244897959184}, {"predict": "adds a selection listener to the list of listeners", "true": "adds a long selection listener", "bleu": 0.23356898886410005, "rouge": 0.6024691358024692}, {"predict": "output a blank line", "true": "output a blank line", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of the capabilities", "true": "convert to string for debugging", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "re - measure the loading views height , and adjust internal padding as necessary", "true": "re - measure the loading views height , and adjust internal padding as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a debug client that is used", "true": "set the debug facility up for a specific client", "bleu": 0.16599826150636804, "rouge": 0.24448897795591182}, {"predict": "converts the given string value to the first case", "true": "alter the case of this element so that it is rendered according to whatever the value of case type is", "bleu": 0.05471744520945065, "rouge": 0.2582010582010582}, {"predict": "returns the string representation of this vector", "true": "returns the string representation of this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "to be overridden , but only if all size values are set ( the values ) for the out", "true": "add a reporter icon to the panel", "bleu": 0.0712695567709093, "rouge": 0.16781292984869325}, {"predict": "draws the selection rectangle", "true": "draws zoom rectangle ( if present )", "bleu": 0.1878296463217631, "rouge": 0.346590909090909}, {"predict": "determines the height of this view", "true": "determines the height of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new exception with the specified cause", "true": "construct a new exception with the specified root cause", "bleu": 0.7846630356446556, "rouge": 0.931297709923664}, {"predict": "checks if the storage group contains a given initiator group , usually an empty groups", "true": "checks if an initiator has connectivity to a storage system in a v array", "bleu": 0.13380161378318955, "rouge": 0.27758816837315126}, {"predict": "handles thumb selection and movement", "true": "handles thumb selection and movement", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a sub - shape", "true": "construct a new derivation from a node of interest", "bleu": 0.1614457444314309, "rouge": 0.2717149220489978}, {"predict": "plus ( math context ) for a positive big decimal", "true": "plus ( math context ) for a positive big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "test negative number of radix 24", "true": "test negative number of radix 24", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts an an an an trl and a filter or a st", "true": "converts an an trl or a st into a filter or a st", "bleu": 0.4951879812261037, "rouge": 0.71484375}, {"predict": "display a dialog with the window", "true": "a copy of display panel except returning a subclass of window", "bleu": 0.1141650334026257, "rouge": 0.33516483516483514}, {"predict": "construct a json token er from a reader", "true": "construct a json token er from a reader", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a sequence of 8 - bit bytes from standard input ; compresses them using ttt codes with an 8 - bit alphabet ; and writes the results to standard output", "true": "reads a sequence of 8 - bit bytes from standard input ; compresses them using huffman codes with an 8 - bit alphabet ; and writes the results to standard output", "bleu": 0.9157103753711766, "rouge": 0.9677419354838711}, {"predict": "uses the given token ize r", "true": "uses the given token ize r", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the azimuth angle in radians from a color radius", "true": "compute an angular offset to apply to a azimuth label", "bleu": 0.13950796967929133, "rouge": 0.1}, {"predict": "adds the all keys / values from the given named resource bundle to the defaults", "true": "adds the all keys / values from the given named resource bundle to the defaults", "bleu": 1.0, "rouge": 1.0}, {"predict": "displays the display change of the panel based on the current graphics environment", "true": "from the display changed listener interface ; called from x 11 graphics device when the display mode has been changed", "bleu": 0.08336577565998732, "rouge": 0.17511961722488037}, {"predict": "formats the value as a string", "true": "formats the value as an xs : date or xs : date time string", "bleu": 0.1696139203599157, "rouge": 0.4663608562691131}, {"predict": "extract a methods from a class", "true": "extract a set of methods from a given class", "bleu": 0.3081980909598119, "rouge": 0.7721518987341772}, {"predict": "update server address into server and management console", "true": "update the server address", "bleu": 0.22679164443904004, "rouge": 0.5319767441860466}, {"predict": "removes the item with the specified position from the list", "true": "remove an item from the adapter ' s list", "bleu": 0.18850319022747347, "rouge": 0.42508710801393734}, {"predict": "generates an enemy world by high player ' s current enemy list", "true": "function for choosing random enemy from map", "bleu": 0.10390302174233558, "rouge": 0.11050724637681159}, {"predict": "tests whether the destination beans reachable as a reachable request", "true": "is the route to the destination block , going via our <unk> block valid", "bleu": 0.1112086898712083, "rouge": 0.16180371352785147}, {"predict": "sorts the passed storage pool by removing all systems present in the storage pool", "true": "sort list of storage pools based on its storage system ' s average usage port metrics usage", "bleu": 0.0789552907486192, "rouge": 0.12681912681912683}, {"predict": "convenience method to cycle through a collection according to active overlay configuration", "true": "add multiple rhythm overlays to this group", "bleu": 0.10390302174233558, "rouge": 0.11050724637681159}, {"predict": "return a resource path relative to this file resource", "true": "creates an instance for a path prefixed by either class path : or file :", "bleu": 0.08617428905281956, "rouge": 0.23921568627450981}, {"predict": "checks if time stamps ( component name has larger than local version )", "true": "determines if this is running a mac os x lower than <unk>", "bleu": 0.10571070857151538, "rouge": 0.16116248348745044}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "escape a string for use inside as xml single - quoted attributes", "true": "escape a string for use inside as xml element content", "bleu": 0.6479121525090147, "rouge": 0.7393939393939394}, {"predict": "gather a list of all elements from all its elements , end the order by end v", "true": "feeds a vector through the network to get an output", "bleu": 0.07994607499472013, "rouge": 0.15541401273885352}, {"predict": "finds a file with the given name , and path", "true": "finds the named file in the named directory", "bleu": 0.14991106946711685, "rouge": 0.34014869888475835}, {"predict": "compares the results of the control and cloud clients", "true": "compares the results of the control and cloud clients", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the text for the selected element", "true": "retrieves the text elements for a given x path expression", "bleu": 0.17112717058426782, "rouge": 0.34205607476635513}, {"predict": "create a context with list of scheduled connections", "true": "creates an open cl context able to share entities with the current opengl context", "bleu": 0.08383280652235028, "rouge": 0.1732954545454545}, {"predict": "collapse all nodes in the tree", "true": "collapse the tree so that only the root node is visible", "bleu": 0.13576587000692578, "rouge": 0.33516483516483514}, {"predict": "queue a player ' s cape with the test mod 3 cape", "true": "queue the replacement of a player ' s cape with the test mod 3 cape", "bleu": 0.7247557929987696, "rouge": 0.8714285714285713}, {"predict": "removes a veto able change listener from the listener list for a specific property", "true": "removes a veto able change listener from the listener list", "bleu": 0.7012055133086459, "rouge": 0.8591549295774649}, {"predict": "called when a stream starts with the time limit", "true": "construct a new stream throughput", "bleu": 0.15619699684601276, "rouge": 0.3012345679012346}, {"predict": "iterates the list of arguments in search of the target server launcher command", "true": "iterates the list of arguments in search of the target locator launcher command", "bleu": 0.8091067115702212, "rouge": 0.9230769230769234}, {"predict": "a method to edit bookmark objects based on whether or not already exists", "true": "a method to edit a bookmark", "bleu": 0.27824623288353134, "rouge": 0.5637707948243993}, {"predict": "calculate the bounds for a view ' s title", "true": "calculate the bounds for a view ' s title", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a unicode character in a string to a utf - 8 string", "true": "/ converts a utf 32 code point sequence to a string with the corresponding character ( s )", "bleu": 0.1375046322292883, "rouge": 0.31346351490236385}, {"predict": "create the bounds for this selection", "true": "if the selection has more than one element , it will create a temporary element object as the bounds of the entire selection", "bleu": 0.019428047044074533, "rouge": 0.24948875255623723}, {"predict": "records the size of successive runs of white and black pixels in a row , starting at a given point", "true": "records the size of successive runs of white and black pixels in a row , starting at a given point", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method finds all method arguments in the given service list", "true": "returns ( method , params ) for the given service or ( null , null ) if no method was found", "bleu": 0.09452753864466681, "rouge": 0.23666343355965083}, {"predict": "a utility method that does nothing to see if it has no non - null character", "true": "utility method to find the first invalid character as per rfc 2396 section 2", "bleu": 0.11502783619900048, "rouge": 0.26991150442477874}, {"predict": "decodes a byte buffer into a character buffer , suitable for use in the format : has a char buffer", "true": "decodes contents of the byte buffer to the character buffer", "bleu": 0.10996031481933312, "rouge": 0.3546511627906977}, {"predict": "determine the time", "true": "handle activity that is triggered by the fast clock", "bleu": 0.07271361304044333, "rouge": 0.15288220551378442}, {"predict": "adds a new point to this spawn", "true": "add a creature re spawn point to the zone", "bleu": 0.20873176328735715, "rouge": 0.3667334669338677}, {"predict": "load org access add role to list", "true": "load org access role", "bleu": 0.3655552228545123, "rouge": 0.7648902821316614}, {"predict": "test similar to above , but instead reads a sequence of bytes", "true": "simple unit test that verifies that passing in a byte array as source works as expected", "bleu": 0.08239221254954013, "rouge": 0.13926940639269406}, {"predict": "generates a certificate object and initializes it with the data read from the input stream in stream", "true": "generates a certificate object and initializes it with the data read from the input stream in stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts safely an object to a string", "true": "returns pretty string representation of the object", "bleu": 0.20556680845025982, "rouge": 0.14285714285714285}, {"predict": "generates the last 6 bi - months where the last one is the bi - month which the given date is inside", "true": "generates the last 12 months where the last one is the month which the given date is inside", "bleu": 0.6086209927462802, "rouge": 0.8656093489148581}, {"predict": "finds the counter from the specified e num and cache", "true": "returns the counter associated with the key", "bleu": 0.17827531042796255, "rouge": 0.36454183266932266}, {"predict": "add sms to given uri", "true": "add an sms to the given uri with the specified thread id", "bleu": 0.11660850472671651, "rouge": 0.5475763016157988}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "should never be called", "true": "should never be called", "bleu": 1.0, "rouge": 1.0}, {"predict": "called once when a new sound file is added from the sound file", "true": "called once when a new sound file is added", "bleu": 0.6767781116542884, "rouge": 0.8459167950693374}, {"predict": "poll stale entries from the queue", "true": "expunge stale entries from the list", "bleu": 0.6147881529512643, "rouge": 0.6666666666666666}, {"predict": "work flow find the find bugs of the given resources", "true": "run a find bugs analysis on the given resource as build job but not delaying the current java build", "bleu": 0.08877114000709116, "rouge": 0.2612419700214133}, {"predict": "report a veto able property update to any registered listeners", "true": "report a veto able property update to any registered listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "called on the temporary file to write it to the output stream", "true": "full backup of the shared - storage filesystem", "bleu": 0.10390302174233558, "rouge": 0.10374149659863945}, {"predict": "remove the given tab list", "true": "remove the list of connections at the supplied index", "bleu": 0.17348474258688365, "rouge": 0.40757238307349664}, {"predict": "paints an range rings in the range of another p point", "true": "paints the circles and their labels on the given graphics", "bleu": 0.12605968092174913, "rouge": 0.1921259842519685}, {"predict": "converts all separators to the windows separator of backslash", "true": "converts all separators to the windows separator of backslash", "bleu": 1.0, "rouge": 1.0}, {"predict": "append back off back off - output to the output stream", "true": "translate pending bytes using selected character set", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "return a trie with infrequent values occurring in the given trie removed", "true": "optimize ( eliminate rows with no content ) the given trie and return the reduced trie", "bleu": 0.15937425748101036, "rouge": 0.2785388127853881}, {"predict": "installs any handler invocation handler that need the server to receive all existing traces after the given writer", "true": "this handler is called after the self request ( original request ) is performed successfully", "bleu": 0.09629943614188137, "rouge": 0.18484848484848485}, {"predict": "tries to close any previously closing tasks", "true": "close was signaled in close a sync ( ) but there were pending messages at that time", "bleu": 0.04451531901458464, "rouge": 0.0775095298602287}, {"predict": "creates a new storage entity from the given location", "true": "creates and persists a new storage entity", "bleu": 0.4111336169005197, "rouge": 0.639412997903564}, {"predict": "displays an information line to this class", "true": "display a line of text in a designated info line", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "writes a formatted string to the console using the specified format string and arguments", "true": "writes a formatted string to the console using the specified format string and arguments", "bleu": 1.0, "rouge": 1.0}, {"predict": "tear down after testing", "true": "tear down after testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "verify signer ( string ) creates instance", "true": "verify signer ( string , identity scope ) creates instance", "bleu": 0.45043204423208616, "rouge": 0.7981308411214955}, {"predict": "see iso 16022 : 2006 , 5", "true": "see iso 16022 : 2006 , 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a stream ' s bytes from a stream", "true": "send a stream ' s byte tuples in a web socket binary message", "bleu": 0.34449658314088427, "rouge": 0.5281385281385281}, {"predict": "invoke the correct source for a static method", "true": "invoke a method known to be static", "bleu": 0.20164945583740668, "rouge": 0.4048672566371681}, {"predict": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "true": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "bleu": 1.0, "rouge": 1.0}, {"predict": "new instance , based on the supplied pattern", "true": "new instance , based on the supplied pattern", "bleu": 1.0, "rouge": 1.0}, {"predict": "safe method for the loop safe loop of the loop", "true": "remove the safe point from the first loop in the test method , so only the safe points on monitor enter and monitor exit remain in the loop", "bleu": 0.03504440032867681, "rouge": 0.2909379968203497}, {"predict": "bind the item of fingerprint - source - up to frame cache", "true": "override this method to handle binding your items into views", "bleu": 0.10390302174233558, "rouge": 0.09242424242424242}, {"predict": "add two positive numbers of different length", "true": "add two positive numbers of different length", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds new values to the series", "true": "adds new values to the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to return a date instance which is exactly num days days before the point in time designated by the input date", "true": "method to return a date instance which is exactly num days days before the point in time designated by the input date", "bleu": 1.0, "rouge": 1.0}, {"predict": "how much available space in the cache", "true": "gets the number of entries that can be added to this cache without the need for removing stale entries", "bleu": 0.03702100183468252, "rouge": 0.14202561117578577}, {"predict": "decodes base 64 data into oct ect s", "true": "decodes base 64 data into oct ect s", "bleu": 1.0, "rouge": 1.0}, {"predict": "calls the super method and writes the conservative approximation of the kn n distances of this entry to the specified stream", "true": "calls the super method and writes the conservative approximation of the kn n distances of this entry to the specified stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "add data to an index in the header", "true": "add some data to the heap", "bleu": 0.239802967618271, "rouge": 0.5865384615384615}, {"predict": "paints the area at the ' s position", "true": "paints the table & a focused row border", "bleu": 0.21105340631872638, "rouge": 0.25}, {"predict": "add a region of the control to a label", "true": "adds a label and a field combination", "bleu": 0.19960198807747329, "rouge": 0.2557651991614256}, {"predict": "called by the track point", "true": "on track point start", "bleu": 0.35930411196308426, "rouge": 0.4535315985130111}, {"predict": "below method will be used to combines the byte array into one", "true": "combines a list of byte arrays into one big byte array", "bleu": 0.17996531271765898, "rouge": 0.3505747126436781}, {"predict": "commit the given resources and their associated providers", "true": "commit the given resources to their associated providers", "bleu": 0.5969491792019646, "rouge": 0.875}, {"predict": "can run all of accessibility services", "true": "check if this worker can spawn any worker", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "this function returns true if the object passed matches the same state represented in this session", "true": "compares this session id to the specified object", "bleu": 0.11502783619900048, "rouge": 0.2659883720930233}, {"predict": "determine if this player ' s player received from a player formatted in big player form", "true": "returns whether a given ident matches that of another offline player", "bleu": 0.08513012360883544, "rouge": 0.15326633165829145}, {"predict": "add a field with the specified value without any validation", "true": "add a field with the specified value without any validation", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string describing the header ( without the standard deviation )", "true": "returns the instances in the data set as a string in arf f format", "bleu": 0.13765233317534833, "rouge": 0.22761194029850743}, {"predict": "this can be overridden by sub lasses to mark a certain value as constantly non - null", "true": "this can be overwritten by sub lasses to mark a certain value as constantly non - null", "bleu": 0.8394327083733336, "rouge": 0.9411764705882352}, {"predict": "remove a item of the list", "true": "remove a item of the list of the adapter", "bleu": 0.6065306597126334, "rouge": 0.7721518987341772}, {"predict": "creates a new jp a entity mapping view bean", "true": "creates an instance of base view bean object", "bleu": 0.19960198807747329, "rouge": 0.35672514619883033}, {"predict": "fills and fills a layer with neurons governed by the specified node type", "true": "helper method to initialize a layer by adding the desired number of neurons with the desired neuron update rule", "bleu": 0.09793255205957545, "rouge": 0.2418235877106045}, {"predict": "returns the angle of a point in polar coordinates", "true": "returns the angle that the vector from ( 0 , 0 ) to p , relative to the positive x - axis", "bleu": 0.06196278431630437, "rouge": 0.1799410029498525}, {"predict": "fire whether the specified neuron is moved", "true": "fire a network changed event to all registered model listeners", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "creates a new certificate from its 12 encoded byte array", "true": "creates an x 509 certificate for a given byte array", "bleu": 0.1972940627795883, "rouge": 0.4}, {"predict": "handles a change in the current selection", "true": "handles a change in the current selection", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse the terms information from the input stream", "true": "parse the terms a ck information", "bleu": 0.3155984539112945, "rouge": 0.5865384615384615}, {"predict": "format a string value", "true": "formats a string using parameters", "bleu": 0.36827215283744186, "rouge": 0.43571428571428567}, {"predict": "add a server to the response", "true": "set the server url to be used by parse", "bleu": 0.1593301391270729, "rouge": 0.2573839662447257}, {"predict": "execute a query synchronously - make a free plan is traversed in a single space", "true": "handle read query - check if it is a read query or a read multiple and execute it", "bleu": 0.09211809669967322, "rouge": 0.23851417399804495}, {"predict": "calculates the number of rules", "true": "back fit confidence value ( does nothing if the confidence value is already set )", "bleu": 0.0369481680224917, "rouge": 0.09172932330827067}, {"predict": "helper method to add a single string to the object", "true": "add the given values to any existing name", "bleu": 0.14991106946711685, "rouge": 0.22676579925650556}, {"predict": "recursive jumper as described by jps algorithm", "true": "recursive jumper as described by jps algorithm", "bleu": 1.0, "rouge": 1.0}, {"predict": "attempt to create the given bytes to the given stream", "true": "create a data source from an input stream", "bleu": 0.13950796967929133, "rouge": 0.22676579925650556}, {"predict": "parse a string value to the required type", "true": "parse a string value to the required type", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new limit line to this axis", "true": "adds a new limit line to this axis", "bleu": 1.0, "rouge": 1.0}, {"predict": "read data - - read the function code and data value", "true": "read data - - read the function code and data value", "bleu": 1.0, "rouge": 1.0}, {"predict": "extracts buffered data into the provided byte array , starting at position bpo s , up to a maximum of b avail bytes", "true": "extracts buffered data into the provided byte array , starting at position bpo s , up to a maximum of b avail bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "deflate current sam line by replacing all fields that equal over shorter of both previous line by an ampersand", "true": "inflate the current sam line by replacing all & by the corresponding field in the previous sam line", "bleu": 0.3187271473320672, "rouge": 0.43455031166518254}, {"predict": "returns an array containing all of the elements in this queue , in proper sequence", "true": "returns an array containing all of the elements in this queue , in proper sequence", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds another image container to the list of those interested in the results of the request", "true": "adds another image container to the list of those interested in the results of the request", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "set the vertical and set of on to a set of bounds", "true": "this function calculates the position for each legend", "bleu": 0.10390302174233558, "rouge": 0.10374149659863945}, {"predict": "fetches metadata for a table", "true": "fetches metadata for the table from the cache or from the database if needed", "bleu": 0.08881260752338878, "rouge": 0.38791732909379967}, {"predict": "get the string encoded version of this object", "true": "returns the encoded string representing the object type signature", "bleu": 0.17795502018438056, "rouge": 0.34923664122137404}, {"predict": "reads bytes from the socket", "true": "reads more data from the input stream", "bleu": 0.25880882365505126, "rouge": 0.48541114058355433}, {"predict": "flush any buffered messages", "true": "flushes the buffered log records", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "images are independent dimensions based on all pages", "true": "creates the button pages for a category", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "and for two positive numbers ; the first is longer", "true": "and for two positive numbers ; the first is longer", "bleu": 1.0, "rouge": 1.0}, {"predict": "overridden implementation of create new export mask work flow for initiators for v nx", "true": "creates a new export mask for host for the given initiators", "bleu": 0.1892240568795935, "rouge": 0.40884718498659517}, {"predict": "compares two percent objects", "true": "compares two percent objects", "bleu": 1.0, "rouge": 1.0}, {"predict": "override to allow for colons in the id without url encoding them", "true": "override to allow for colons in the id without url encoding them", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a signed 16 - bit integer , byte - swapping if necessary", "true": "reads a signed 16 - bit integer , byte - swapping if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the database projects from the database", "true": "loads the projects of a database", "bleu": 0.2777619034011791, "rouge": 0.6240409207161125}, {"predict": "merge a phonetic string into a canonical string", "true": "<unk> a phonetic string , marking syllable boundaries with dash characters in the output", "bleu": 0.1409894129706051, "rouge": 0.25994318181818177}, {"predict": "removes the node at the head of the frontier if the corresponding state was not yet explored", "true": "cleans up the head of the frontier , removes the first node of a non - explored state from the head of the frontier , adds it to the corresponding explored map , and returns the node", "bleu": 0.11133604626435296, "rouge": 0.38190096755833813}, {"predict": "checks if the given path is a file", "true": "checks if the given path is a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "compares the class object with another , for equality and avoid the id", "true": "compares the current object instance with another object instance", "bleu": 0.16544619993389978, "rouge": 0.4699537750385208}, {"predict": "create a new zookeeper session embedded in the z k directory", "true": "create zookeeper testing server", "bleu": 0.12605968092174913, "rouge": 0.2911694510739857}, {"predict": "create an basic re - condition with a particular variable", "true": "creates a new basic condition , given a variable label , an expected value , and a relation to hold between the variable and its value", "bleu": 0.03349541370354708, "rouge": 0.20573355817875214}, {"predict": "read a partial path using the given path ( either de - > normalized )", "true": "read a file containing stop words ( one per line )", "bleu": 0.12300686288463772, "rouge": 0.3164721141374838}, {"predict": "return a string representation of the object", "true": "returns the string representation of this object", "bleu": 0.38260294162784475, "rouge": 0.5714285714285714}, {"predict": "sets current barrier generation as broken and wakes up everyone", "true": "sets current barrier generation as broken and wakes up everyone", "bleu": 1.0, "rouge": 1.0}, {"predict": "filters according to type", "true": "filters according to type", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a log event to the associated j ms message for the user and sends an exception to the log", "true": "create properly formatted message to send over udp that acts like a sy slog message sy slog format : \" & lt ; priority & gt ; timestamp <unk> link blue link : message \" details : http : / / en", "bleu": 0.025568174512979967, "rouge": 0.09095427435387674}, {"predict": "this method writes the stack trace of the trace element by the trace output stream", "true": "serializes the given exceptions stack trace elements as well as it ' s suppressed exceptions to the given output stream", "bleu": 0.10610096624171791, "rouge": 0.3342465753424658}, {"predict": "builds a client that is used to round a round - round 10", "true": "build the multi stream writer", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "produce a string from a number", "true": "produce a string from a number", "bleu": 1.0, "rouge": 1.0}, {"predict": "create image element with finite item", "true": "create image from attachment", "bleu": 0.2907153684841096, "rouge": 0.4149659863945578}, {"predict": "creates a new thread register values", "true": "creates a new thread register values object", "bleu": 0.846481724890614, "rouge": 0.9104477611940297}, {"predict": "synchronizes on a configuration map with the configuration provided as the parameter", "true": "add all of the supplied configuration parameters to the request", "bleu": 0.1235622127262679, "rouge": 0.2772727272727273}, {"predict": "see if this ap pod should be triggered", "true": "see if this anti - ba pod should be triggered", "bleu": 0.4649044882163224, "rouge": 0.7624999999999998}, {"predict": "appends all of the elements in the specified array to the end of this list", "true": "appends all of the elements in the specified array at the specified position in this list", "bleu": 0.597735737060173, "rouge": 0.7697160883280757}, {"predict": "read from the file", "true": "reads some number of bytes from the input stream and stores them into the buffer array b", "bleu": 0.018335190851298155, "rouge": 0.17134831460674158}, {"predict": "send an error log message", "true": "send an error log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the score of the song given the play counts", "true": "calculates the score of the song given the play counts", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove a scanning callback", "true": "remove a scanning callback", "bleu": 1.0, "rouge": 1.0}, {"predict": "paint a rectangle for the background", "true": "paint / copy background to component rectangle", "bleu": 0.22236312185643822, "rouge": 0.3034825870646766}, {"predict": "return the probe ' s next sample", "true": "return the probe ' s next average", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "is this is a page", "true": "check for for page break", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "shut down the executor service by letting current tasks run to completion but accepting no new tasks", "true": "shuts down the internal thread pool", "bleu": 0.09507244120026236, "rouge": 0.19032761310452417}, {"predict": "determine if the given character can be at the beginning of a proposition symbol", "true": "determine if the given character is part of a proposition symbol", "bleu": 0.49202745153855076, "rouge": 0.7359249329758714}, {"predict": "prints a little - endian number", "true": "prints a z dia <unk> at in default format", "bleu": 0.17632778423526832, "rouge": 0.2573839662447257}, {"predict": "returns the index of the first occur r rence of the pattern string in the text string", "true": "returns the index of the first occurrence of the pattern string in the text string", "bleu": 0.7160350546947922, "rouge": 0.8849740932642487}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the given integer array ( virtual machine ) to a string", "true": "returns the characters corresponding to the argument indices", "bleu": 0.11498759556447223, "rouge": 0.2074829931972789}, {"predict": "returns the substring of the string str corresponding to the given length and the return the position", "true": "truncate string to a given length", "bleu": 0.10802314890908067, "rouge": 0.38065522620904835}, {"predict": "deletes transactions which appeared after a certain height", "true": "deletes transactions which appeared above the given block height from the wallet , but does not touch the keys", "bleu": 0.11811097747384475, "rouge": 0.34502262443438914}, {"predict": "if a player exists , otherwise run it with the given player , otherwise a new list , otherwise if it exists", "true": "initial load of this script", "bleu": 0.04657469807170698, "rouge": 0.0}, {"predict": "starts the underlying animator for a set of properties", "true": "starts the underlying animator for a set of properties", "bleu": 1.0, "rouge": 1.0}, {"predict": "retrieve the region needing to be redrawn", "true": "retrieve the region needing to be redrawn", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new sort specification that sorts on the given fields , all in ascending order", "true": "creates a new sort specification that sorts on the given fields , all in ascending order", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the current iteration has been canceled", "true": "the attack is only successful if the x sw message is accepted", "bleu": 0.13309610652103343, "rouge": 0.1856925418569254}, {"predict": "start an intent to start a phone", "true": "starts the geo location service", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "deletes a resource configuration from the local drive", "true": "delete a specific resource configuration", "bleu": 0.22679164443904004, "rouge": 0.48157894736842105}, {"predict": "creates the movement from the group with data", "true": "create a new instance from a prototype", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "remove next file and returns it ' s size", "true": "remove next file and returns it ' s size", "bleu": 1.0, "rouge": 1.0}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the gui elements for the tabbed pane", "true": "creates the sub - components of the panel", "bleu": 0.22679164443904004, "rouge": 0.375}, {"predict": "generates a random float between two limits", "true": "generates a random float between two limits", "bleu": 1.0, "rouge": 1.0}, {"predict": "this constructs an instance", "true": "this constructs an instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "perform a kn n search on the k - tree", "true": "perform a kn n search on the k d - tree", "bleu": 0.7702121719547294, "rouge": 0.9442724458204335}, {"predict": "handles the start of an element", "true": "if a new tag is encountered , check if it is of interest or not by seeing if it matches against our node tree", "bleu": 0.010997759840144799, "rouge": 0.060157790927021684}, {"predict": "connect to the client client broker", "true": "connects to the broker", "bleu": 0.31239399369202553, "rouge": 0.6224489795918368}, {"predict": "checks the reference to a type in a type annotation", "true": "checks the reference to a type in a type annotation", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new source line", "true": "add a new tracer", "bleu": 0.5081327481546147, "rouge": 0.6802973977695167}, {"predict": "grows the capacity of this cache and make it ' s new capacity ( )", "true": "expands capacity of internal arrays", "bleu": 0.1082597837309053, "rouge": 0.21981981981981977}, {"predict": "assign damage to a value", "true": "damage component by given value", "bleu": 0.3021375397356768, "rouge": 0.4}, {"predict": "test for empty region and empty cluster policy", "true": "this tests the concurrency version ing system to ensure that event con flat ion happens correctly and that the statistic is being updated properly", "bleu": 0.021703165810650953, "rouge": 0.05733082706766917}, {"predict": "creates a new graph object", "true": "constructs an empty graph", "bleu": 0.2730120862709067, "rouge": 0.22676579925650556}, {"predict": "trim the supplied version number for any api version", "true": "separates api version for api group / api version combination", "bleu": 0.18885888592159467, "rouge": 0.41709401709401706}, {"predict": "queries the inventory", "true": "queries the inventory", "bleu": 1.0, "rouge": 1.0}, {"predict": "interval : working object must be less than the analyzed interval , which means that we are expected to an analyzed interval", "true": "if we do not use empty intervals to compute percentiles and there are no unique messages for this interval then we simply return", "bleu": 0.06655058708364833, "rouge": 0.1328011611030479}, {"predict": "read file and return list of characters using a specified encoding ( see list of known )", "true": "new nio based method to read a file as a string with the given encoding", "bleu": 0.09083627868206415, "rouge": 0.2528497409326425}, {"predict": "constructs a new bayes im editor from a bayes estimator wrapper", "true": "constructs a new bayes im editor from a bayes estimator wrapper", "bleu": 1.0, "rouge": 1.0}, {"predict": "saves data and writes it to disk", "true": "saves data and writes it to disk", "bleu": 1.0, "rouge": 1.0}, {"predict": "flatten a map into an xml serialize r", "true": "flatten a map into an xml serialize r", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns last added key", "true": "checks whether entry info should be sent to primary node from backup", "bleu": 0.040889869516541145, "rouge": 0.0}, {"predict": "generates an challenge token with a random ip address", "true": "generate a new token", "bleu": 0.15619699684601276, "rouge": 0.16531165311653115}, {"predict": "substitute the branches from this to infrequent regions", "true": "main routine : perform the transformation", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "adds fill components to empty cells in the first row and first column of the grid", "true": "adds fill components to empty cells in the first row and first column of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "run the task from a task", "true": "run a task , retrying a fixed number of times if there is a failure", "bleu": 0.06970452184190923, "rouge": 0.26521739130434785}, {"predict": "if the value is in t array , return an object with the same type as this", "true": "based on accumulated value , produce a value for this property", "bleu": 0.0859076483566362, "rouge": 0.22289890377588306}, {"predict": "remove a request to be executed by the a request", "true": "this is the way to remove a specific request object", "bleu": 0.1972940627795883, "rouge": 0.3}, {"predict": "callback function when heat map generation has failed", "true": "callback function when heat map generation has failed", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an inflated copy of the given resources", "true": "inflate a draw able from a vector xml resource", "bleu": 0.11900569447018795, "rouge": 0.0}, {"predict": "returns the object field offset", "true": "returns object field offset", "bleu": 0.537284965911771, "rouge": 0.9070631970260222}, {"predict": "add an string at ( x , y ) coordinates", "true": "add an string at ( x , y ) coordinates", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a number of bytes to the r rd file on the disk", "true": "writes bytes to the underlying r rd file on the disk", "bleu": 0.5445178846139404, "rouge": 0.8460471567267683}, {"predict": "con cat in ate the iv to the ciphertext using array copy", "true": "con cat in ate the iv to the ciphertext using array copy", "bleu": 1.0, "rouge": 1.0}, {"predict": "return timestamp value for this timestamp", "true": "returns an updated executor timestamp", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "creates a material package or generic coordinates with the given material", "true": "instantiate s a new material package object", "bleu": 0.16108992769687397, "rouge": 0.3472485768500949}, {"predict": "returns the edge whose first two coordinates are the same length in the given coordinates", "true": "returns the edge which starts at p 0 and whose first segment is parallel to p 1", "bleu": 0.15934326838673724, "rouge": 0.3090172239108409}, {"predict": "acquire the language probabilities for the target sequence and return the result", "true": "parses the specified string to determine the probability of a character appearing after the previous two characters beginning with the third character in the string and ending with the last", "bleu": 0.02915220822626821, "rouge": 0.17681159420289855}, {"predict": "marks an issue as being active", "true": "marks as resolved the specified issue", "bleu": 0.2626909894424158, "rouge": 0.3333333333333333}, {"predict": "decodes data from base 64 notation , automatically detecting gzip - compressed data and decompressing it", "true": "decodes data from base 64 notation , automatically detecting gzip - compressed data and decompressing it", "bleu": 1.0, "rouge": 1.0}, {"predict": "test if the database can be implemented by the user side and assign it to the db", "true": "perform a basic access on the db for a rudimentary test", "bleu": 0.10216198665886358, "rouge": 0.14859926918392205}, {"predict": "distinct aggregate function which update the distinct set", "true": "distinct count aggregate function which update the distinct count", "bleu": 0.662423225940787, "rouge": 0.8148854961832059}, {"predict": "display the javascript in the text directory and replaces en", "true": "<unk> egg ; run it and you ' ll see what all this mess is about !", "bleu": 0.06259938494637494, "rouge": 0.07076566125290024}, {"predict": "checks whether an entity given by name is present in the dtd", "true": "checks whether an entity given by name is un parsed", "bleu": 0.6479121525090147, "rouge": 0.7393939393939394}, {"predict": "flushes this output stream and forces any buffered output bytes to be written out to the stream", "true": "flush any buffered messages", "bleu": 0.09507244120026236, "rouge": 0.21441124780316342}, {"predict": "encode text as utf - 8", "true": "encode text as utf - 8", "bleu": 1.0, "rouge": 1.0}, {"predict": "called when a component loses the popup focus", "true": "ensures that if we lose focus , the popup goes away", "bleu": 0.15587146574232644, "rouge": 0.20469798657718125}, {"predict": "adds a request property to the response", "true": "adds a general request property specified by a key - value pair", "bleu": 0.15048220633585796, "rouge": 0.40197693574958815}, {"predict": "execute task that will catch all tasks or aborted", "true": "executes the task using the embedded executor", "bleu": 0.14113991930789777, "rouge": 0.1278825995807128}, {"predict": "serializes the given value to the byte buffer", "true": "serialize to a byte buffer", "bleu": 0.22679164443904004, "rouge": 0.48157894736842105}, {"predict": "all submission with no errors are counted", "true": "used to <unk> the vector containing all <unk>", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "calendar in a single string , this is on the field specified by the calendar context", "true": "private member function that does the real date / time formatting", "bleu": 0.07692375026049747, "rouge": 0.07663316582914573}, {"predict": "process incoming touch events", "true": "process incoming touch events", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse a bit ( bit ) bit from a bit string", "true": "method to construct a bit for a given string expression", "bleu": 0.17033186037639278, "rouge": 0.384251968503937}, {"predict": "moves the cf file to the beginning of the file", "true": "steps forward to the next record if there ' s one available", "bleu": 0.13583060054007276, "rouge": 0.1788856304985337}, {"predict": "returns a component from the range 0 , 1 if the second is between 0 and 1", "true": "apply composition to an individual color component of a pixel", "bleu": 0.07994607499472013, "rouge": 0.07770700636942676}, {"predict": "writes the entire contents of this byte stream to the specified output stream", "true": "writes the entire contents of this byte stream to the specified output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the listener for the tree model event posted after the tree changes", "true": "removes a listener previously added with add tree model listener ( )", "bleu": 0.14283632578659286, "rouge": 0.3223249669749009}, {"predict": "flush underlying connection", "true": "create the uri name object with the specified name", "bleu": 0.06114461654585454, "rouge": 0.0}, {"predict": "adds an additional parameterized view to the stream", "true": "adds a parameterized view to the stream", "bleu": 0.6104735835807844, "rouge": 0.8097345132743362}, {"predict": "copy data from the given recorder into the given buffer , and append to the complete recording", "true": "copy data from the given recorder into the given buffer , and append to the complete recording", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a zone rules to a rules", "true": "completes the build converting the builder to a set of time - zone rules", "bleu": 0.1130839610732672, "rouge": 0.2695139911634757}, {"predict": "applies a supplemental hash function to a given hash code , which means it ' s hash functions", "true": "gets hash code for a given object", "bleu": 0.11268706361337427, "rouge": 0.26068376068376065}, {"predict": "parses a template string", "true": "adds a template which should be \" parsed \" while the parsing process", "bleu": 0.04984021611241231, "rouge": 0.2147887323943662}, {"predict": "attach image from the camera path to be shared by the camera of ex if metadata is some ex , chapter 4", "true": "return the taken image from the camera to the calling activity", "bleu": 0.1676784955078518, "rouge": 0.38689217758985195}, {"predict": "a function to find the minimum of two values , but ignoring any double", "true": "a function to find the minimum of two values , but ignoring any double", "bleu": 1.0, "rouge": 1.0}, {"predict": "verifies that the name is registered , to perform messages and register the default server name", "true": "allows the m - let to perform any operations it needs before being registered in the mbe an server", "bleu": 0.1037300874121511, "rouge": 0.28136531365313655}, {"predict": "returns a string if it is an e num with a prefix", "true": "match the pattern , or if not possible throw an exception", "bleu": 0.11498759556447223, "rouge": 0.17528735632183906}, {"predict": "returns a string representation of the given annotation value , suitable for inclusion in a java source file as the initialize r of a variable of the appropriate type", "true": "returns a string representation of the given annotation value , suitable for inclusion in a java source file as the initialize r of a variable of the appropriate type", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a byte buffer that will fit the underlying byte buffer", "true": "create a ` byte buffer ` with a given capacity", "bleu": 0.16108992769687397, "rouge": 0.28818897637795277}, {"predict": "adds a new value to the series", "true": "adds a new value to the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates a collection attribute", "true": "validates if the collection does not contain same named elements ( methods and resources )", "bleu": 0.025419978385188596, "rouge": 0.190625}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "put a string in the buffer as null", "true": "put a string in the buffer", "bleu": 0.7259795291154771, "rouge": 0.8798076923076923}, {"predict": "an external entity declaration", "true": "an external entity declaration", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the alpha field", "true": "alpha controls the smoothing of the data", "bleu": 0.1878296463217631, "rouge": 0.1732954545454545}, {"predict": "creates a class descriptor from a field signature ( e", "true": "create a class descriptor from a field signature", "bleu": 0.6786502681586726, "rouge": 0.7936802973977695}, {"predict": "validates if a service ticket is outside the service ticket or not", "true": "this method validates a service ticket response object , raising an exception if the response reflects an operation failure", "bleu": 0.12412079652763455, "rouge": 0.30995934959349586}, {"predict": "schedules the specified task for execution at the specified time", "true": "schedules the specified task for execution after the specified delay", "bleu": 0.6315552371794037, "rouge": 0.8}, {"predict": "draws a filled ellipse with given semimajor and semi minor axes , centered on ( x , y )", "true": "draws an ellipse with given semimajor and semi minor axes , centered on ( x , y )", "bleu": 0.8492326635760689, "rouge": 0.9234194122885128}, {"predict": "discards any whitespace from a base - 64 encoded block", "true": "discards any whitespace from a base - 64 encoded block", "bleu": 1.0, "rouge": 1.0}, {"predict": "swap the provided cursor with the given cursor", "true": "overrides swap cursor to move the new cursor into the alphabet index as well as the cursor adapter", "bleu": 0.060467813303997864, "rouge": 0.35966981132075476}, {"predict": "dumps the buffer to make a buffer be able to be flushed by other thread", "true": "lock the flushing mechanism in order to prevent a thread flushing this buffer while another thread is doing a <unk> operation", "bleu": 0.0725687032143088, "rouge": 0.26967285587975237}, {"predict": "tests whether two classes in two classes in an array", "true": "checks if the class is supported to be randomized without recursion", "bleu": 0.0959156018869021, "rouge": 0.0}, {"predict": "generates the native gui d format as storage system + serial number + > + unique id for stor ge port objects", "true": "the format of this native gui d using the given device type & serial number", "bleu": 0.1317331393528801, "rouge": 0.3357798165137615}, {"predict": "an aes key derived from a base 64 encoded key", "true": "an aes key derived from a base 64 encoded key", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a writable sub raster given a region of the raster", "true": "creates a writable sub raster given a region of the raster", "bleu": 1.0, "rouge": 1.0}, {"predict": "sorts the tree of a given parent node using a j select tree", "true": "sorts visible tree nodes", "bleu": 0.10571070857151538, "rouge": 0.2601279317697228}, {"predict": "returns a random integer from a poisson distribution with mean & lambda ;", "true": "return an integer with a poisson distribution with mean lambda", "bleu": 0.3759663529467017, "rouge": 0.6233576642335765}, {"predict": "build a string with ' & ' character data", "true": "build a string for parsing", "bleu": 0.2626909894424158, "rouge": 0.4518518518518518}, {"predict": "returns whether a sound defined by the user", "true": "indicates whether a user installed or system sound is available", "bleu": 0.1867587389639562, "rouge": 0.3267857142857143}, {"predict": "method called to access a file output channel", "true": "iterate over view serialize rs", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "checks that the key associated with the specified key is valid", "true": "check if the supplied key is a valid key", "bleu": 0.17827531042796255, "rouge": 0.4073455759599332}, {"predict": "this method renders an arc , representing the progress ring into another", "true": "draw the arc around the ring only for the download mode", "bleu": 0.1235622127262679, "rouge": 0.2629310344827586}, {"predict": "formats a date and time in a format string", "true": "formats a date using a format string", "bleu": 0.37991784282579627, "rouge": 0.7672955974842767}, {"predict": "decode the base 64 - encoded data in input and return the data in a new byte array", "true": "decode the base 64 - encoded data in input and return the data in a new byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs and anim game item in st ace based on a md 5 model an md 5 animation", "true": "constructs and anim game item in st ace based on a md 5 model an md 5 animation", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new message digest based on the specified algorithm", "true": "creates a message digest with the specified algorithm name", "bleu": 0.31702331385234306, "rouge": 0.7439024390243903}, {"predict": "creates the gui of the component", "true": "creates the elements of this component", "bleu": 0.3303164318013807, "rouge": 0.6666666666666666}, {"predict": "merge sort", "true": "merge sort", "bleu": 1.0, "rouge": 1.0}, {"predict": "copy all cached control variables for the given access control", "true": "copy a cls for new configuration", "bleu": 0.13950796967929133, "rouge": 0.26180257510729615}, {"predict": "adds the provided bytes to the byte buffer ' s data at the given position", "true": "appends content from the specified byte buffer to this byte array", "bleu": 0.12300686288463772, "rouge": 0.2373540856031128}, {"predict": "post an byte to the queue", "true": "handle the response sent back from alexa ' s parsing of the intent , these can be any of the a vs item types ( play , speak , stop , clear , listen )", "bleu": 0.0017583190506878057, "rouge": 0.043262411347517724}, {"predict": "request when the progress bar is received", "true": "checks if there is info already cached and whether it is old enough to be updated , in which case it requests the data from the api", "bleu": 0.011806240243782996, "rouge": 0.05318221447253705}, {"predict": "removes the provided view if it is not already hidden", "true": "removes a view from the view group if it is hidden", "bleu": 0.25246406216009776, "rouge": 0.6609907120743034}, {"predict": "consume a css identifier ( id or class ) off the queue ( letter , digit , - , _ ) http : / / / / / / / www", "true": "consume a css identifier ( id or class ) off the queue ( letter , digit , - , _ ) http : / / www", "bleu": 0.8269771465270961, "rouge": 0.9269433080070133}, {"predict": "test verifies that the internal array starts with the same length", "true": "currently not being executed for <unk> but after transition to j dk 1", "bleu": 0.07986072651366037, "rouge": 0.0}, {"predict": "serialize a key serialize r", "true": "serialize this object and all its contents to xml", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "create an activity resolves to the given process", "true": "creates a new instance", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "rolls back the file contents", "true": "rollback the download ( delete the temporary file )", "bleu": 0.13575914775035755, "rouge": 0.2717149220489978}, {"predict": "parses the text graphic", "true": "parse x - like geometry string", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "writes one packet into byte buffer", "true": "this method will be called by dispatcher , and will be repeated till return false", "bleu": 0.04144655666113052, "rouge": 0.0}, {"predict": "position the graphics on the graphics device", "true": "since the image doesn ' t necessarily need to be <unk> when it is merely moved , raster objects have this function , called from generate ( ) and when a placement attribute is changed", "bleu": 0.0034021405464942423, "rouge": 0.04250871080139373}, {"predict": "searches in this vector for the index of the specified object", "true": "searches in this vector for the index of the specified object", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns whether an undo is possible , i", "true": "returns whether an undo is possible , i", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts the string representation of the char argument into this string buffer", "true": "inserts the string representation of the char argument into this string buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "return true if the local path is an absolute path", "true": "return true if the local path is an absolute path", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the destination for the transit on method", "true": "calculate the destination of the given um let diagram", "bleu": 0.2785146580372046, "rouge": 0.465648854961832}, {"predict": "receives and process an event on the underlying receiver", "true": "there is a change on the project that we ' re monitoring , whatever the type of event is , we need to updated the runner", "bleu": 0.030187756710582263, "rouge": 0.10508182601205857}, {"predict": "mouse click on mouse click", "true": "called on left mouse single click", "bleu": 0.2658156069371863, "rouge": 0.5366568914956013}, {"predict": "figures out the initial heights for all day and space when a view is being set up", "true": "measures the space needed for various parts of the view after loading new events", "bleu": 0.09083627868206415, "rouge": 0.19698600645855757}, {"predict": "update the priority - ordered list of visible tabs", "true": "update the priority - ordered list of visible tabs", "bleu": 1.0, "rouge": 1.0}, {"predict": "to string , level data to string , & walk graph methods to implement explore node interface", "true": "to string , level data to string , and walk graph methods to implement explore node interface", "bleu": 0.8394327083733336, "rouge": 0.9411764705882352}, {"predict": "request body to file map", "true": "starts file fragmenting", "bleu": 0.2730120862709067, "rouge": 0.26180257510729615}, {"predict": "shows the previous notification item", "true": "scrolls to the previous notification", "bleu": 0.5081327481546147, "rouge": 0.6}, {"predict": "the object implements the write external method to save its contents by calling the methods of this entry to the specified stream", "true": "calls the super method and writes the id of this node , the num entries and the entries array to the specified stream", "bleu": 0.18968713404530466, "rouge": 0.3984034833091437}, {"predict": "adds a new relation to the input node", "true": "adds a new incoming relation to the node", "bleu": 0.44632361378533286, "rouge": 0.875}, {"predict": "if using the database create a connection object , post the database to change the database using post gre sql database", "true": "initializes a new post gre sql database", "bleu": 0.16923267918690046, "rouge": 0.3925353925353925}, {"predict": "show ssh 2 methods for the ' ip address ' ip address", "true": "generates a set of fc port connection entries for the specified vs an id ( or all v <unk> if vs an id is null )", "bleu": 0.042582543247209274, "rouge": 0.09870550161812298}, {"predict": "associates a read object with the its serialization handle", "true": "associates a read object with the its serialization handle", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an extension header to this map", "true": "add an extension header to this map", "bleu": 1.0, "rouge": 1.0}, {"predict": "merges this frame with the given frame", "true": "merges this frame with the given frame", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the characters in the text and writes them to the buffer", "true": "submit command to key tool", "bleu": 0.10390302174233558, "rouge": 0.12708333333333333}, {"predict": "allows you to remove a scroll position to end location when the given position has been reached , so this method is needed and when the user has been created", "true": "smoothly snaps to a given position", "bleu": 0.06032401726201456, "rouge": 0.25258799171842644}, {"predict": "update property name to key - value pairs", "true": "updates the key in the persistent property store to \" value 2 \"", "bleu": 0.10793517579160734, "rouge": 0.2739520958083832}, {"predict": "removes an services from the api ( map", "true": "un assigns services from an entity", "bleu": 0.22679164443904004, "rouge": 0.2932692307692307}, {"predict": "expands the cluster to include density - reachable items", "true": "expands the cluster to include density - reachable items", "bleu": 1.0, "rouge": 1.0}, {"predict": "get float array elements : get all the elements of a float array", "true": "get float array elements : get all the elements of a float array", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses a line of text into a formatted integer and returns the number of characters specified by the previous configuration", "true": "this implementation looks for the longest matching string", "bleu": 0.06108557268562171, "rouge": 0.07741116751269035}, {"predict": "prepares ( allocates ) a set of transfer buffers for use in transferring data from the tuner via the bulk interface", "true": "prepares ( allocates ) a set of transfer buffers for use in transferring data from the tuner via the bulk interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes full text characters to the output stream , including setting the left - space character", "true": "outputs to the final destination as many full line pairs as there are in the pending output , removing those lines from their respective buffers", "bleu": 0.07129257696642183, "rouge": 0.18769230769230769}, {"predict": "add payment message to the payment - set of payment - formatted payment message", "true": "positive amount", "bleu": 0.07432998184513635, "rouge": 0.0}, {"predict": "attempt to register any unregistered extension namespaces", "true": "attempt to register any unregistered extension namespaces", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all the items from the stack", "true": "remove all map objects", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "deletes the display name of a existing user", "true": "deletes the display name of a existing user", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the new type node corresponding to the type of the given declaration including the extra dimensions", "true": "returns the new type node corresponding to the type of the given declaration including the extra dimensions", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the cache and deletes all of its stored values", "true": "closes the cache and deletes all of its stored values", "bleu": 1.0, "rouge": 1.0}, {"predict": "as we have to have a dictionary duration and writes them to the given cache", "true": "checks iterators are cleared", "bleu": 0.06917184228205472, "rouge": 0.0}, {"predict": "binds a callback to lifecycle events", "true": "adds a listener for all of this controller ' s lifecycle events", "bleu": 0.11492332782473744, "rouge": 0.31443298969072164}, {"predict": "returns paths list index of given path or - 1 if not found", "true": "returns paths list index of given path or - 1 if not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "force an existing volume", "true": "destroys a volume , releasing all storage blocks assigned to it", "bleu": 0.06243769243378541, "rouge": 0.12298387096774194}, {"predict": "computes a set of curves using the cardinal spline approach , but using straight lines for completely horizontal or vertical segments", "true": "computes a set of curves using the cardinal spline approach , but using straight lines for completely horizontal or vertical segments", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the targeted session is owner for the supplied app", "true": "checks if the app should be scaled in / out according to cool down settings", "bleu": 0.11443781455557568, "rouge": 0.21785714285714283}, {"predict": "converts the given species , returning the stored in stored bytes", "true": "takes an in t which is supposed to be in megabytes and converts it to a long", "bleu": 0.07306145289278965, "rouge": 0.06877113866967305}, {"predict": "calculates the approximate height of a text , depending on a demo text avoid repeated calls ( e", "true": "calculates the approximate height of a text , depending on a demo text avoid repeated calls ( e", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate a \" zone set clone \" for the device", "true": "generate a unique name for the zone set clone", "bleu": 0.31702331385234306, "rouge": 0.5313588850174217}, {"predict": "writes a block block", "true": "write a", "bleu": 0.35930411196308426, "rouge": 0.3546511627906977}, {"predict": "calls invoke and throws a runtime exception if it fails", "true": "calls invoke and throws a runtime exception if it fails", "bleu": 1.0, "rouge": 1.0}, {"predict": "build sql select statement for prepared statement", "true": "constructs a sql statement template later used for prepared statement", "bleu": 0.24924249970265266, "rouge": 0.5700934579439253}, {"predict": "starts the animation given as parameter", "true": "starts the animation given as parameter", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if key is a uri key", "true": "this method determines if the supplied key relates to a uri", "bleu": 0.16481400866629634, "rouge": 0.4093959731543625}, {"predict": "receives data from the device", "true": "receives data from the device", "bleu": 1.0, "rouge": 1.0}, {"predict": "add of channel handler and send a channel to channel handler", "true": "add a newly connected of channel handler", "bleu": 0.23462350320527994, "rouge": 0.4629981024667932}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "send the input stream to the connected stream", "true": "send array of bytes to bluetooth output stream", "bleu": 0.19070828081828378, "rouge": 0.375}, {"predict": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "true": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a list containing the elements of the specified collection , in the order they are returned by the collection ' s iterator", "true": "creates a list containing the elements of the specified collection , in the order they are returned by the collection ' s iterator", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the contents of http entity into a byte", "true": "reads the contents of http entity into a byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a tail argument to the flushes list", "true": "adds an arg after the command and any options", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "this method is called for text flavor and returns the result in cases", "true": "translating either a byte array or an input stream into an string", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "creates an inline uri handler object", "true": "create a handler for the supplied namespace prefix - the handler will be invoked iff it is the registered handler having the longest prefix <unk> to the actual uri", "bleu": 0.005289504344859496, "rouge": 0.05108877721943048}, {"predict": "calculate the n sga algorithm", "true": "calculates the d matrix for k rig ing system", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "de serialization object from file", "true": "de serialization object from file", "bleu": 1.0, "rouge": 1.0}, {"predict": "to check if the segment is merged or not", "true": "to check if the segment is merged or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate a pbe based key suitable for a mac algorithm , the key size is chosen according the mac size , or the hashing algorithm , whichever is greater", "true": "generate a pbe based key suitable for a mac algorithm , the key size is chosen according the mac size , or the hashing algorithm , whichever is greater", "bleu": 1.0, "rouge": 1.0}, {"predict": "add emo j icon group list", "true": "add emo j icon group list", "bleu": 1.0, "rouge": 1.0}, {"predict": "update the end of measurement", "true": "register a throughput measurement end point", "bleu": 0.24736929544091937, "rouge": 0.1788856304985337}, {"predict": "test whether the given path should include the include path", "true": "check whether a path should be included", "bleu": 0.17827531042796255, "rouge": 0.36454183266932266}, {"predict": "adds view to specified cache", "true": "adds view to specified cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate the units from the table", "true": "selects a number of units from the table with a filter", "bleu": 0.26718582988399503, "rouge": 0.4468864468864468}, {"predict": "returns an automaton that the given automata are the languages of the given automata", "true": "returns an automaton that accepts the concatenation of the languages of the given automata", "bleu": 0.5828233954152654, "rouge": 0.7857142857142857}, {"predict": "list the selection status of the item , if necessary", "true": "this method is public as an implementation side effect", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "adjust the filters of this cluster er that will be through the filters", "true": "adjust the final number of canopies to match the user - requested number ( if possible )", "bleu": 0.10500490802103207, "rouge": 0.26040554962646745}, {"predict": "creates quan tile values for h series", "true": "create a hilbert curve partition er from a list of points", "bleu": 0.08820727472213225, "rouge": 0.0}, {"predict": "reads the property from a safe serialization format", "true": "reads the property from a safe serialization format", "bleu": 1.0, "rouge": 1.0}, {"predict": "java x", "true": "java x", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the user input directory to a fully qualified path", "true": "if the user input starts with a <unk> character ( ~ ) , replace the <unk> character with the user ' s home directory", "bleu": 0.06402978670767466, "rouge": 0.2190305206463196}, {"predict": "returns the stamp bits for resizing a table of size n", "true": "returns the stamp bits for resizing a table of size n", "bleu": 1.0, "rouge": 1.0}, {"predict": "read a byte from the input stream", "true": "read a byte from the input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "compresses the two byte arrays", "true": "convenience method for computing the h mac key derivation function", "bleu": 0.10043553373039076, "rouge": 0.12577319587628866}, {"predict": "return true if the given emote is emote , false if not some devices available", "true": "check if the given emote is on the list of ignored emotes", "bleu": 0.30130404892785684, "rouge": 0.3779429987608426}, {"predict": "whether the specified property is allowed as a dynamically set of properties for this config", "true": "is the given word the name of an allowed css property ?", "bleu": 0.1082597837309053, "rouge": 0.15117719950433703}, {"predict": "reads a file as an active entry into the j mri directory", "true": "read all consists from a file", "bleu": 0.1367440667823257, "rouge": 0.2364341085271318}, {"predict": "create a zero number from a sign and an array of zero bytes", "true": "create a zero number from a sign and an array of zero length", "bleu": 0.9193227152249185, "rouge": 0.9230769230769234}, {"predict": "get the accept operation", "true": "accept a connection on a socket", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "constructs a 32 - bit vector value", "true": "trans code a document into a file using the given trans code r", "bleu": 0.07882750221706718, "rouge": 0.0948678071539658}, {"predict": "send a fatal error log message", "true": "send a fatal error log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "report download progress through the database if necessary", "true": "report download progress through the database if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "dom level 3 dom implementation for dom data", "true": "non - preferred : use the get dom implementation ( ) method instead of this one to get a dom level 2 dom implementation object and then use dom level 2 methods to create a dom document object", "bleu": 0.006532333852670282, "rouge": 0.194515306122449}, {"predict": "to set the super object refs to physical address ( ref ) , changing par it to the argument object", "true": "set the number of samples generated by one s ces a score call", "bleu": 0.08039313477786734, "rouge": 0.12603305785123967}, {"predict": "handles add request handler request", "true": "handles add request handler request", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws an data point at point", "true": "draws a data point at a given set of panel coordinates at a given size and connects a line to the previous point", "bleu": 0.026761149956590898, "rouge": 0.3118609406952965}, {"predict": "generates the instructions for a switch statement", "true": "generates the instructions for a switch statement", "bleu": 1.0, "rouge": 1.0}, {"predict": "method non - conventional format \" non - null bytes and checks if so lr", "true": "serialize the given set ' s elm ents into byte chunks , calling proc for each one", "bleu": 0.06053735079430112, "rouge": 0.0}, {"predict": "parse the current row data", "true": "goes once through the metadata , checks which columns are removed and checks that the remaining columns have unique names", "bleu": 0.0135924714044228, "rouge": 0.07218934911242604}, {"predict": "locates a given field anywhere in the class inheritance hierarchy", "true": "locates a given field anywhere in the class inheritance hierarchy", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a session from the given bytes", "true": "creates a session from the given bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "add the dump file for this accumulator", "true": "add the set dump file stream to the tree", "bleu": 0.23099966849728554, "rouge": 0.48897795591182364}, {"predict": "execute a date using the ordinal date format", "true": "creates a date using the ordinal date format", "bleu": 0.8633400213704505, "rouge": 0.875}, {"predict": "writes an attribute value", "true": "writes the xml attribute name / val", "bleu": 0.1878296463217631, "rouge": 0.346590909090909}, {"predict": "checks whether this page number is in the range", "true": "checks if a given page is present in the range built so far", "bleu": 0.19372466508699207, "rouge": 0.5281385281385281}, {"predict": "dispose of object , releasing resources", "true": "dispose of object , releasing resources", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the collection of dimensional item objects as a list of dimensional item objects", "true": "returns a list typed with the desired erasure based on the given collection", "bleu": 0.13834368456410945, "rouge": 0.2237163814180929}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the aliases that will be associated with the index when it gets created", "true": "sets the aliases that will be associated with the index when it gets created", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new table info to the given table", "true": "adds a newly created table to the relevant internal database structures", "bleu": 0.1957494756053795, "rouge": 0.4911433172302737}, {"predict": "returns a plaintext ( of a plaintext b ) that has been exactly like \" b 3 b 3", "true": "hash a password using the <unk> b crypt scheme", "bleu": 0.0712695567709093, "rouge": 0.15269086357947434}, {"predict": "removes a listener from the set listening to this component", "true": "removes a listener such that it is no longer notified of changes", "bleu": 0.1920934774690532, "rouge": 0.2683284457478006}, {"predict": "puts all views in the scrap heap into the supplied list", "true": "puts all views in the scrap heap into the supplied list", "bleu": 1.0, "rouge": 1.0}, {"predict": "schedule a task , but do not wake the scheduler", "true": "schedules a new task", "bleu": 0.13950796967929133, "rouge": 0.3096446700507614}, {"predict": "returns an integer hash code for this interval", "true": "utility method to combine a base hash with the identity hash of one or more objects", "bleu": 0.0589953212431261, "rouge": 0.07860824742268041}, {"predict": "parse a string containing numbers into an array of doubles", "true": "converts a string representation of a vector ( e", "bleu": 0.17827531042796255, "rouge": 0.31881533101045295}, {"predict": "returns a string describing this filter", "true": "returns a string describing this filter", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a lazily concatenated stream whose elements are all the elements of the first stream followed by all the elements of the second stream", "true": "creates a lazily concatenated stream whose elements are all the elements of the first stream followed by all the elements of the second stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "test the test case", "true": "below test is disabled intentionally 1 > in this release 8", "bleu": 0.06243769243378541, "rouge": 0.12298387096774194}, {"predict": "called when the menu bar is a part of a bean context , and it is added to the bean context after that", "true": "the method called by bean context membership listener methods to find components in the map handler", "bleu": 0.08607692533178168, "rouge": 0.26498696785403997}, {"predict": "decode the data source properties from xml", "true": "decode the data source properties from xml", "bleu": 1.0, "rouge": 1.0}, {"predict": "advance to the next character , or return the next element in the document", "true": "increments the iterator ' s index by one and returns the character at the new index", "bleu": 0.09635282645727884, "rouge": 0.1976241900647948}, {"predict": "adjust the chart entity horizontally to the position of the supplied table , like any cells that point may be visible", "true": "adjust the row heights of a table based on the table contents", "bleu": 0.09092617426809149, "rouge": 0.3187042842215256}, {"predict": "verifies that a volume is to be treated as an array of uris ( store )", "true": "validates a list of volumes", "bleu": 0.08513012360883544, "rouge": 0.21034482758620687}, {"predict": "returns an array of string containing the given substring , in the format of a readable string containing the given separator", "true": "finds format specifiers in the format string", "bleu": 0.11433361115787453, "rouge": 0.314028314028314}, {"predict": "returns the number of elements in this de que", "true": "returns the number of elements in this de que", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the index / disabled buttons based on whether there is something to update the button", "true": "updates status of index column up / down buttons", "bleu": 0.09672649511413092, "rouge": 0.33701657458563533}, {"predict": "retrieve the url for a poi contained in a different app and a monitor of a particular draw able", "true": "build the url to search for elements having a specific os m tag ( key = value ) , within a bounding box", "bleu": 0.08165610091628457, "rouge": 0.23407521105141982}, {"predict": "characters to receive the decoding of the packet and then shuts down the media content", "true": "wait for decoding to finish", "bleu": 0.09103526405546068, "rouge": 0.10990990990990988}, {"predict": "returns a plain text that contains some characters at the html rendering file", "true": "extract plain text from wikipedia article content", "bleu": 0.12571192676522522, "rouge": 0.21143847487001732}, {"predict": "continues a multi - part transformation ( encryption or decryption )", "true": "continues a multi - part transformation ( encryption or decryption )", "bleu": 1.0, "rouge": 1.0}, {"predict": "send an error log message", "true": "send an error log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method creates 4 bit packed in t", "true": "packs the given parameters into a single in t value in order to save space on the rendering queue", "bleu": 0.0533626579468417, "rouge": 0.13800904977375564}, {"predict": "updates a sql statement with the given arguments", "true": "update the data using the sql sentence", "bleu": 0.17747405280050269, "rouge": 0.13495575221238937}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a hash code", "true": "returns a hash code for this object", "bleu": 0.4723665527410147, "rouge": 0.693181818181818}, {"predict": "adds a new action view to the quick action view", "true": "adds an action to the quick action view", "bleu": 0.49616830003403634, "rouge": 0.7936802973977695}, {"predict": "add distinct entry to list", "true": "add distinct entry to list", "bleu": 1.0, "rouge": 1.0}, {"predict": "load the help file", "true": "displays the requested help file if it is found", "bleu": 0.14558246978804804, "rouge": 0.43160377358490565}, {"predict": "store the location in the app preferences", "true": "store the location in the app preferences", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next individual", "true": "returns one of the points in the closest pair of points", "bleu": 0.06909866532427987, "rouge": 0.24596774193548387}, {"predict": "compares the specified object to this list and return true if they are equal", "true": "compares the specified object to this list and return true if they are equal", "bleu": 1.0, "rouge": 1.0}, {"predict": "produce a comma delimited text row from a json array", "true": "produce a comma delimited text row from a json array", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a table from the transaction", "true": "remove a table from the memory database", "bleu": 0.5204069361525009, "rouge": 0.6069651741293532}, {"predict": "returns whether the given category is contained in this set of hidden categories", "true": "returns false if the given category is hidden in the project filter settings", "bleu": 0.29899503549981366, "rouge": 0.4615384615384617}, {"predict": "determine if the passed volume is a full copy source volume", "true": "determine if the passed volume is a source volume for any full copies", "bleu": 0.5724456222626465, "rouge": 0.7388963660834454}, {"predict": "regression test for harmony - regression tests", "true": "tests two linear regression models by comparing all values", "bleu": 0.15447878876032708, "rouge": 0.12224448897795591}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "performs an entity maintenance security check", "true": "performs an entity maintenance security check", "bleu": 1.0, "rouge": 1.0}, {"predict": "note : this method is only when a single root process is correctly", "true": "tests a successful quorum", "bleu": 0.09552040806823771, "rouge": 0.1300639658848614}, {"predict": "to be called when explanation is presented to the user", "true": "to be called when explanation is presented to the user", "bleu": 1.0, "rouge": 1.0}, {"predict": "simple puts the thread to sleep for the passed duration", "true": "simple puts the thread to sleep for the passed duration", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints a string followed by a newline", "true": "writes a string followed by a newline", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "reads characters into a portion of an array", "true": "reads characters into a portion of an array", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a byte from the stream", "true": "reads a single character", "bleu": 0.2907153684841096, "rouge": 0.4149659863945578}, {"predict": "call non virtual boolean method v : invoke a virtual method that returns a boolean value", "true": "call non virtual boolean method v : invoke a virtual method that returns a boolean value", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the argument with a specific program block name is either a partitioned program in the argument", "true": "determines if the given program block includes a rm var or rm file var instruction for the given var name", "bleu": 0.11340941636995293, "rouge": 0.31282051282051276}, {"predict": "creates a new project importer attached to the given root folder", "true": "creates a project importer with the root folder of all projects that has to be imported for the test", "bleu": 0.1133759613854127, "rouge": 0.44525547445255476}, {"predict": "test when long value is not near with double - length", "true": "check various sorted values of doubles ( including extreme values ) check for correct ordering of the encoded bytes and that values round - trip", "bleu": 0.03190178304848891, "rouge": 0.05191489361702128}, {"predict": "check whether the provided class is registered in this user ' s class", "true": "has this class already been registered", "bleu": 0.1135935489027116, "rouge": 0.22550831792975967}, {"predict": ", + / - , as r # ! 0 b 10 / as r / if shift i mm = = = 0 then / as r # 32 / if rm 31 = = = = = 0 xff ffffff else index = 0 else index", "true": "operation : , + / - , as r # 0 b 10 / as r / if shift i mm = = 0 then / as r # 32 / if rm 31 = = 1 then index = 0 xff ffffff else index = 0 else", "bleu": 0.8274494455400576, "rouge": 0.8958333333333334}, {"predict": "invoked by the virtual machine when resolving class references", "true": "return the class with the given name", "bleu": 0.15619699684601276, "rouge": 0.2557651991614256}, {"predict": "wait for the method to be sent to the next comma", "true": "wait for the bucket operator to complete any pending asynchronous operations", "bleu": 0.22416933501922287, "rouge": 0.36363636363636365}, {"predict": "byte compaction mode ( see 5", "true": "byte compaction mode ( see 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests whether all components of the test geometry intersects the area of the target geometry", "true": "tests whether all components of the test geometry are contained in the target geometry", "bleu": 0.6026080978557137, "rouge": 0.7633674630261661}, {"predict": "converts a simple object to an existing xml file", "true": "accepts a submitted form instance", "bleu": 0.14113991930789777, "rouge": 0.1506172839506173}, {"predict": "create a new endpoint with the endpoint and endpoint information", "true": "create a new endpoint", "bleu": 0.35084396956386854, "rouge": 0.6192893401015228}, {"predict": "parses value which have equivalent characters and equivalent starting characters", "true": "parses an rdf value", "bleu": 0.13950796967929133, "rouge": 0.3096446700507614}, {"predict": "constructs a data set containing the default time series", "true": "constructs an empty data set , tied to the default timezone", "bleu": 0.1957494756053795, "rouge": 0.4911433172302737}, {"predict": "special purpose function to see if we can optimize the pattern for a descendant iterator", "true": "special purpose function to see if we can optimize the pattern for a descendant iterator", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a list to a list of elements", "true": "returns a list of the given elements , in order", "bleu": 0.24578832304224082, "rouge": 0.43571428571428567}, {"predict": "this is to implement memory allocation in the array", "true": "this is to implement memory allocation in the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds an attribute to current element of the dom document", "true": "adds an attribute to current element of the dom document", "bleu": 1.0, "rouge": 1.0}, {"predict": "create http directory response", "true": "create resources ( files and folders ) into a container for a path", "bleu": 0.037870374782798366, "rouge": 0.1073943661971831}, {"predict": "draws the ellipse of the ellipse with the color", "true": "draws the in teri our of an array of ellipses", "bleu": 0.17861170664603615, "rouge": 0.31282051282051276}, {"predict": "this method does nothing", "true": "multiplies the range on the domain axis / axes by the specified factor", "bleu": 0.03184506239916981, "rouge": 0.0}, {"predict": "reset the challenge counts", "true": "reloads the due challenge counts from the database", "bleu": 0.18693159143202892, "rouge": 0.47164948453608246}, {"predict": "create an identity with the given flags", "true": "creates an identity matrix", "bleu": 0.24446151121745047, "rouge": 0.3824451410658307}, {"predict": "an s wt image into an s wt image whose size is ions", "true": "transform a java 2 d buffered image to a s wt image", "bleu": 0.18798317647335086, "rouge": 0.3223249669749009}, {"predict": "warning : this is possible to check if so lr a password is available", "true": "helper method to check whether the jvm has the unlimited strength policy installed", "bleu": 0.11633270842295028, "rouge": 0.1491442542787286}, {"predict": "current soft limit in bytes on the rss of the process ; see the description of r limit rss in get r limit ( 2 )", "true": "current soft limit in bytes on the rss of the process ; see the description of r limit rss in get r limit ( 2 )", "bleu": 1.0, "rouge": 1.0}, {"predict": "adding a new row with the totals", "true": "adding a new row with the totals", "bleu": 1.0, "rouge": 1.0}, {"predict": "fills the stack trace of the receiver with the given string buffer starting at the specified index", "true": "creates a printing stack trace from the given elements", "bleu": 0.11954726580677508, "rouge": 0.3257676902536716}, {"predict": "indicates whether a midi file of the file type specified can be written from the midi file type", "true": "indicates whether file writing support for the specified midi file type is provided by the system", "bleu": 0.1712473044894657, "rouge": 0.4756335282651072}, {"predict": "return real number uniformly in 0 , 1 )", "true": "returns a random real number uniformly in 0 , 1 )", "bleu": 0.7047383863965433, "rouge": 0.7858293075684382}, {"predict": "modifies the configuration object and all the config files", "true": "modify the attributes for the given configuration object", "bleu": 0.21105340631872635, "rouge": 0.35672514619883033}, {"predict": "creates configuration object containing all config settings", "true": "constructs a new instance", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "attempts to cas - increment the worker count field of c tl", "true": "attempts to cas - increment the worker count field of c tl", "bleu": 1.0, "rouge": 1.0}, {"predict": "performs an equivalent positions that performs the visible padded region", "true": "calculates every icon ' s height needed and start animation", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "a method to check if the path is a windows path", "true": "returns true if the path is on windows", "bleu": 0.33180774028439425, "rouge": 0.5417406749555951}, {"predict": "process an attribute string of type t char into a character value", "true": "process an attribute string of type t char into a character value", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a child element with the given name and appends it to the element child node list", "true": "creates a child element with the given name and appends it to the element child node list", "bleu": 1.0, "rouge": 1.0}, {"predict": "is the current sub - trace trace from the trace stack trace", "true": "are all segments balanced", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "attribute : : = name \" ) pairs of attributes with the currently collected attributes", "true": "attributes : : = ( s attribute ) * s ?", "bleu": 0.17609282679116184, "rouge": 0.3164721141374838}, {"predict": "reads a single file", "true": "reads a binary input file into a byte array", "bleu": 0.14558246978804804, "rouge": 0.43160377358490565}, {"predict": "unit test for an empty solution set", "true": "unit test of the stream - oriented api", "bleu": 0.21191828141393895, "rouge": 0.2634989200863931}, {"predict": "add a new term to the condition", "true": "this method adds a condition to the conjunction in the rule ' s head", "bleu": 0.10218289380194193, "rouge": 0.2695139911634757}, {"predict": "switches the underlying output stream from a memory based stream to one that is backed by disk", "true": "switches the underlying output stream from a memory based stream to one that is backed by disk", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove the indices in the interval index 0 , index 1 ( index 0 , index 1 , 2 , put the index 2 )", "true": "remove the indices in the interval index 0 , index 1 ( inclusive ) from the selection model", "bleu": 0.48467786813863123, "rouge": 0.6229379418695993}, {"predict": "rebuilds the event list and restores the event listeners", "true": "this is the method that rebuilds the list of visible events", "bleu": 0.1689983564524028, "rouge": 0.2946859903381642}, {"predict": "creates a new disk store factory factory factory factory", "true": "create disk store factory with default attributes", "bleu": 0.2626909894424158, "rouge": 0.38364779874213834}, {"predict": "delete all files and sub directories in given directory , as located at this test directory ( directory )", "true": "this is a quiet method", "bleu": 0.06439931429457924, "rouge": 0.09312977099236641}, {"predict": "inserts the specified byte array into this buffer", "true": "puts content from the specified byte array to this byte array", "bleu": 0.32105892380868783, "rouge": 0.511744966442953}, {"predict": "reserved transactions are reserved for a certain r op registers", "true": "marks a range of r op registers as \" reserved for a local variable", "bleu": 0.22745643949711022, "rouge": 0.32360742705570295}, {"predict": "register a new default template", "true": "this method registers the default resolver s", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "processes a response that requires authentication", "true": "processes a response that requires authentication", "bleu": 1.0, "rouge": 1.0}, {"predict": "releases the given byte array if necessary", "true": "releases specified byte array", "bleu": 0.2626909894424158, "rouge": 0.5736677115987461}, {"predict": "returns true if , at this time , the object will accept a connection according to the supplied event set descriptor", "true": "returns true if , at this time , the object will accept a connection according to the supplied event set descriptor", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a range marker", "true": "draws a marker for the range axis", "bleu": 0.25379544718731684, "rouge": 0.5198863636363635}, {"predict": "this is the default implementation method in it methods for get ter s", "true": "constructs a socks 5 instance without any parameter", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "lock - order for order to prevent duplicate", "true": "attempts the lock the order", "bleu": 0.17747405280050269, "rouge": 0.32105263157894737}, {"predict": "generate true if complete ( ) has been called and returns true", "true": "add the buffer ( which contains a fragment ) to the assembler", "bleu": 0.11498759556447223, "rouge": 0.16666666666666666}, {"predict": "flatten a string into an xml serialize r", "true": "flatten a string into an xml serialize r", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to check whether there is a specialized handler for a given intent", "true": "used to check whether there is a specialized handler for a given intent", "bleu": 1.0, "rouge": 1.0}, {"predict": "treat different names for the same e - mail case", "true": "treat similar name aliases", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "create a new data object", "true": "initializes a new instance to query the data from a specified table using a specified jd bc connection", "bleu": 0.028676835073019998, "rouge": 0.2367399741267788}, {"predict": "stores the stack for the given exception", "true": "stores the stack for the given exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a elf formatter", "true": "returns a elf formatter", "bleu": 1.0, "rouge": 1.0}, {"predict": "read a key from the specified url with the given url", "true": "reads all the data from the supplied url into a byte array", "bleu": 0.16278331364721524, "rouge": 0.25884016973125884}, {"predict": "checks the current recurrence validity for check time", "true": "checks the current recurrence validity for check time", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new network and get an id", "true": "create a new network and get an id", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new port object from the port sent from the active reference object", "true": "this static method converts the passed in number of bytes into a <unk> string grouping digits with locale - dependant thousand separator and with \" kb \" locale - dependant unit at the end", "bleu": 0.025191749905147415, "rouge": 0.0775095298602287}, {"predict": "create an intent for pending intent that has been pending intent", "true": "create a pending intent from the stor able fence", "bleu": 0.16108992769687397, "rouge": 0.3055091819699499}, {"predict": "returns true for a static method", "true": "returns true for a static method", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests if string have a random value", "true": "test one string operation using the string cache", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "writes a char sequence to a file creating the file if it does not exist", "true": "writes a char sequence to a file creating the file if it does not exist", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the given string and replaces all occurrences of ' \\ n ' , ' \\ r ' and ' \\ r \\ n ' with the system line separator", "true": "parses the given string and replaces all occurrences of ' \\ n ' , ' \\ r ' and ' \\ r \\ n ' with the system line separator", "bleu": 1.0, "rouge": 1.0}, {"predict": "decrypt key ( does not use salting , so the encryption result is the same for the same input )", "true": "decrypt key ( does not use salting , so the encryption result is the same for the same input )", "bleu": 1.0, "rouge": 1.0}, {"predict": "export a config with world edit", "true": "adds the given location to be the target for artifacts", "bleu": 0.09536752763778475, "rouge": 0.0}, {"predict": "checks what type of version of ip range is", "true": "check to see if the ip address is within the ranges specified range can be in the form of : x", "bleu": 0.04678165240801187, "rouge": 0.12436289500509684}, {"predict": "fills the grid based on positioning the new selection at a specific location", "true": "fills the grid based on positioning the new selection at a specific location", "bleu": 1.0, "rouge": 1.0}, {"predict": "locates a given field anywhere in the class inheritance hierarchy", "true": "locates a given field anywhere in the class inheritance hierarchy", "bleu": 1.0, "rouge": 1.0}, {"predict": "this is called by the nested wrapped line views to determine the break location", "true": "this is called by the nested wrapped line views to determine the break location", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the box to simplex and p box to the box in teri our simplex", "true": "returns an object of class simplex defining the same shape", "bleu": 0.09103526405546068, "rouge": 0.1659863945578231}, {"predict": "inject content from the schema", "true": "injects the configured content files into the destination file", "bleu": 0.13575914775035755, "rouge": 0.2717149220489978}, {"predict": "check whether char sequence c is empty", "true": "check whether char sequence c is empty", "bleu": 1.0, "rouge": 1.0}, {"predict": "turns a settings string value into a boolean value", "true": "turns a settings string value into a boolean value", "bleu": 1.0, "rouge": 1.0}, {"predict": "notify this object that it has been de registered as a listener with a source for named event", "true": "notify this object that it has been de registered as a listener with a source for named event", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "the code that does the real work of lookup", "true": "the code that does the real work of lookup", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the current instance of this task must be run after at least one task in the task manager queue", "true": "returns true if the current instance of this task must be run after at least one task in the task manager queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate key for the table this is unique", "true": "generate a u u id key string", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "returns a copy of the vector", "true": "creates a new array that contains all the values of this vector in the appropriate indices", "bleu": 0.05246244695020633, "rouge": 0.25206611570247933}, {"predict": "deletes an absolute path and all of the resources within this path", "true": "a method that will delete a file or folder only if it is within the ' target ' directory ( for safety )", "bleu": 0.04597775034039932, "rouge": 0.05407801418439716}, {"predict": "parse the content of the given url as a provider - configuration file", "true": "parse the content of the given url as a provider - configuration file", "bleu": 1.0, "rouge": 1.0}, {"predict": "make the supplied pattern of all placeholder s", "true": "initialize the pattern to match files", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "called to create a new line", "true": "writes a string to a file", "bleu": 0.24446151121745047, "rouge": 0.3333333333333333}, {"predict": "update ( sw , port ) to the list of attachment points", "true": "update the known attachment points", "bleu": 0.15537125692760353, "rouge": 0.5083333333333333}, {"predict": "removes bytes from storage", "true": "removes soft wraps with offsets equal or larger than a given offset from storage", "bleu": 0.041710075933029465, "rouge": 0.3029801324503311}, {"predict": "formats the constants that signals no weave / weave dps depending on the identity levels", "true": "formats given dps ( = damage per second ) to a readable string", "bleu": 0.09103526405546068, "rouge": 0.14472123368920523}, {"predict": "truncates a string to a length by length", "true": "sets the maximum length of the string", "bleu": 0.17747405280050269, "rouge": 0.13495575221238937}, {"predict": "escape a string to create a valid json string", "true": "escape a string to create a valid json string", "bleu": 1.0, "rouge": 1.0}, {"predict": "answers a sorted set of the specified portion of this tree set which contains elements less or equal to the start element but less than the end element", "true": "answers a sorted set of the specified portion of this tree set which contains elements greater or equal to the start element but less than the end element", "bleu": 0.9061874434879645, "rouge": 0.9642857142857144}, {"predict": "this method will check a new legion and also verify if it will be", "true": "method that checks if a legion is <unk>", "bleu": 0.11114924776032006, "rouge": 0.28683385579937304}, {"predict": "indexes the given field of the provided tuple instance", "true": "indexes the given field of the provided tuple instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "iterates from this number down to the given number , inclusive , dec re men ting by one each time", "true": "iterates from this number down to the given number , inclusive , dec re men ting by one each time", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses attributes of the do cue m nt element for this object", "true": "parses attributes of the do cue m nt element for this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method works around the bizarre semantics of buffered input stream ' s read method", "true": "this method works around the bizarre semantics of buffered input stream ' s read method", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts full screen information into a list", "true": "inserts full screen information into a list", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the string from a string", "true": "get an input string corresponding to the given location string", "bleu": 0.13487005099534619, "rouge": 0.23921568627450981}, {"predict": "adds the specified item to the end of the list", "true": "adds the specified item at the end of the array", "bleu": 0.587728372510532, "rouge": 0.8}, {"predict": "copies cached share information from the param and perform intermediate share", "true": "copy un managed cifs share into new cifs share a cls", "bleu": 0.12605968092174913, "rouge": 0.18181818181818182}, {"predict": "parse the resource list parser", "true": "parse the resource list", "bleu": 0.7598356856515925, "rouge": 0.9070631970260222}, {"predict": "deletes the entitlement of a existing user", "true": "deletes all entitlements of a existing user", "bleu": 0.5410822690539396, "rouge": 0.7142857142857143}, {"predict": "this method incorporates the signed properties dom", "true": "creates the signed properties dom object element", "bleu": 0.5169731539571706, "rouge": 0.5714285714285714}, {"predict": "creates the channel selection object", "true": "creates the channel selection object", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the mean of all elements in the array with given indices", "true": "compute the mean of all elements in the array with given indices", "bleu": 1.0, "rouge": 1.0}, {"predict": "setup with the run environment", "true": "setup and run a test", "bleu": 0.3021375397356768, "rouge": 0.4}, {"predict": "import text from file", "true": "import text from file", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns list of file cos ids", "true": "returns list of file cos ids", "bleu": 1.0, "rouge": 1.0}, {"predict": "puts the specified task into the queue", "true": "adds a monitor task to the queue", "bleu": 0.2626909894424158, "rouge": 0.42857142857142855}, {"predict": "invoked this to insert new child at location index in parents children", "true": "invoked this to insert new child at location index in parents children", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the probe ' s next sample", "true": "return the probe ' s next sample", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the given lines to a file", "true": "writes the lines given in input in file", "bleu": 0.25201472805660513, "rouge": 0.5269978401727862}, {"predict": "method that checks if the authentication tag is without the correct connection", "true": "verifies if the given chunk authentication tag equals the one in the authentication tag list , but does not verify if the complete list of all authentication tags is valid w", "bleu": 0.04906646340574376, "rouge": 0.2153954802259887}, {"predict": "returns the mime type for the given extension", "true": "returns the mime type for the given extension", "bleu": 1.0, "rouge": 1.0}, {"predict": "update the cache with this binder", "true": "update the cache with this binder", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes new line character from string", "true": "removes new line characters ( useful for base 64 decoding )", "bleu": 0.17867793336200125, "rouge": 0.33516483516483514}, {"predict": "parse the apache camel route file and return the corresponding text data", "true": "parse the spring integration route file and return dom document", "bleu": 0.33260249505555045, "rouge": 0.5545454545454546}, {"predict": "remove a d ted directory handler for the d ted frame cache", "true": "remove a d ted directory handler from the list used for the d ted frame cache", "bleu": 0.6099229828365414, "rouge": 0.8356164383561644}, {"predict": "adds an entry provider to the request", "true": "add a file to the binary package", "bleu": 0.24446151121745047, "rouge": 0.2857142857142857}, {"predict": "writes the entire contents of this byte stream to the specified output stream", "true": "writes the entire contents of this byte stream to the specified output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "read from input to establish our buffer of \" parse ahead \" look ahead symbols", "true": "read from input to establish our buffer of \" parse ahead \" look ahead symbols", "bleu": 1.0, "rouge": 1.0}, {"predict": "splits the given vector with the given style bind into this vector", "true": "this method creates a new vector which does not contain the first element up to the specified limit", "bleu": 0.07924391788091918, "rouge": 0.12869198312236285}, {"predict": "writes the header for persons csv file", "true": "writes the header for zones csv file", "bleu": 0.5946035575013605, "rouge": 0.8571428571428571}, {"predict": "called when the view navigates", "true": "called when the view navigates", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a task to run in the queue", "true": "delay task to be executed after refresh", "bleu": 0.21105340631872638, "rouge": 0.26991150442477874}, {"predict": "replace all occurrences of the regular expression with the replacement", "true": "replace all occurrences of the regular expression with the replacement", "bleu": 1.0, "rouge": 1.0}, {"predict": "needed to + repo via needed for a rp migration", "true": "migrates entities and skips those which are already migrated", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "adds entries to the passed in map , using the supplied app name as the key", "true": "adds entries to the passed in map , using the supplied app name as the key", "bleu": 1.0, "rouge": 1.0}, {"predict": "start housekeeping for a child thread managed by the launcher ' s housekeeping , but not spawned by the launcher itself , e", "true": "start housekeeping for a child thread managed by the launcher ' s housekeeping , but not spawned by the launcher itself , e", "bleu": 1.0, "rouge": 1.0}, {"predict": "the graphical representation of the labels on the x axis", "true": "the graphical representation of the labels on the x axis", "bleu": 1.0, "rouge": 1.0}, {"predict": "base 64 - encode the given byte array to a string", "true": "base 64 - encode the given byte array to a string", "bleu": 1.0, "rouge": 1.0}, {"predict": "decode the base 64 - encoded data in input and return the data in a new byte array", "true": "decode the base 64 - encoded data in input and return the data in a new byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns whether the specified object equals to this finite field", "true": "returns whether the specified object equals to this finite field", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a cubic be zi er to the game", "true": "the in t will be in the form : chunk x , chunk z , pos 1 x , pos 1 z , pos 2 x , pos 2 z , is edge and will represent the bottom and top parts of the chunk", "bleu": 0.0031970519577983548, "rouge": 0.06744057490326147}, {"predict": "override this method to extend elsa serialize r base functionality", "true": "creates new serialize r with configuration from this builder", "bleu": 0.17827531042796255, "rouge": 0.21254355400696867}, {"predict": "loads the given input stream from the given input stream", "true": "loads a binary file from the input stream", "bleu": 0.21834177214239062, "rouge": 0.5669144981412639}, {"predict": "returns whether or not the specified class node is a power - slot , false if it is a second - to ( no subclass )", "true": "returns true for long and double", "bleu": 0.04668049023095243, "rouge": 0.07043879907621246}, {"predict": "specifies filter to handle s ld if", "true": "you can add sections to filter the input specification , so living doc will only execute the specified sections", "bleu": 0.03702100183468252, "rouge": 0.07101280558789289}, {"predict": "consumes the cr lf , returning the character if the reader ' s use n", "true": "consumes a cr lf from the request", "bleu": 0.12300686288463772, "rouge": 0.3891547049441786}, {"predict": "process the log out from the log out log out and session into session object", "true": "process log out request return the session found or throw sam l service exception", "bleu": 0.12874330508144843, "rouge": 0.3469852104664391}, {"predict": "override the equals method", "true": "override the equals method", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes the supplied file on the filesystem", "true": "consume a file", "bleu": 0.18575057999133598, "rouge": 0.21554770318021202}, {"predict": "adds multivalued option to arguments", "true": "adds multivalued option to arguments", "bleu": 1.0, "rouge": 1.0}, {"predict": "or for two negative numbers ; the first is shorter", "true": "or for two negative numbers ; the first is shorter", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if activity is still activity", "true": "ensures that our weak reference to the activity is still valid", "bleu": 0.17867793336200125, "rouge": 0.33516483516483514}, {"predict": "start the timer", "true": "starts the timer", "bleu": 0.7071067811865475, "rouge": 0.6666666666666666}, {"predict": "returns true if at least one page , and false if given url is landing one", "true": "calculates whether the url is a landing page or not", "bleu": 0.11502783619900048, "rouge": 0.24078947368421053}, {"predict": "write functionality test 2 metadata into the buffer", "true": "writes the index row count definitions into a table definition buffer", "bleu": 0.13107175678306446, "rouge": 0.20469798657718125}, {"predict": "send a string to the multi cast address", "true": "send a string using udp to an already specified remote address", "bleu": 0.2270229421855783, "rouge": 0.511744966442953}, {"predict": "initialize the session keys", "true": "initialize r , startup the background expired token deletion thread and key updater thread ( no op unless multi v dc )", "bleu": 0.004417329886419301, "rouge": 0.1367713004484305}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the string representation of the bean", "true": "renders a string representation of this object", "bleu": 0.345720784641941, "rouge": 0.42857142857142855}, {"predict": "does the work of getting the path", "true": "does the work of getting the path", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate an array of spanned items representing the history of this connection", "true": "generate an array of spanned items representing the history of this connection", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes the input stream into the specified byte array", "true": "signs the global configuration directory content", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "returns true if the next item is up to the next element", "true": "requires the next few characters ( after whitespace ) to match the argument", "bleu": 0.14294845713017917, "rouge": 0.31770833333333337}, {"predict": "convenience method to de - serialize a byte array back into object form", "true": "convenience method to de - serialize a byte array back into an object who ' s class type is resolved by the specific class loader", "bleu": 0.33989603064884816, "rouge": 0.5975510204081633}, {"predict": "create an instance of a interval i", "true": "this is used to build partial intervals", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "check whether a map of string keys contains no key", "true": "returns true if the dictionary contains true for the given key or false if no value is defined for the key", "bleu": 0.049901060151857274, "rouge": 0.18190854870775347}, {"predict": "bind the specified stream to the current thread", "true": "bind the specified stream to the current thread", "bleu": 1.0, "rouge": 1.0}, {"predict": "in it center to also contain the map layer", "true": "in it map image layer", "bleu": 0.21105340631872635, "rouge": 0.6024691358024692}, {"predict": "samples in a new observation , for new instances", "true": "returns the sample skew of a data sequence", "bleu": 0.14113991930789777, "rouge": 0.1189083820662768}, {"predict": "evolves the specified permutations using the pm x operator", "true": "evolves the specified permutations using the pm x operator", "bleu": 1.0, "rouge": 1.0}, {"predict": "extracts the span from the text span", "true": "helper function for upload new ner task 2 : extract certain token spans from the html token spans that the crowd flower job task 1 uses to display a text fragment", "bleu": 0.009008718724407363, "rouge": 0.14175058094500387}, {"predict": "this method allows us to let the output will be called by the split task", "true": "cleans up when the chain finishes ( possibly early )", "bleu": 0.08225964699966554, "rouge": 0.08299319727891155}, {"predict": "return true if delay exists", "true": "return true if delay exists", "bleu": 1.0, "rouge": 1.0}, {"predict": "push boolean value on to the space preserve stack depending on the value of xml : space = default / preserve", "true": "push boolean value on to the space preserve stack depending on the value of xml : space = default / preserve", "bleu": 1.0, "rouge": 1.0}, {"predict": "register the default device types for use in this device", "true": "registers a <unk> - used set of device services with discovery manager", "bleu": 0.10320893749383378, "rouge": 0.08944281524926685}, {"predict": "construct an input stream reader with the specified detail stream and optionally ignoring any implementation", "true": "create an input stream reader that uses the named character encoding", "bleu": 0.23961829057131984, "rouge": 0.39559014267185466}, {"predict": "notification that a message has not delivered to the given message", "true": "the consumer object from the broker or the key used to store the sender", "bleu": 0.09596928383261212, "rouge": 0.15661103979460847}, {"predict": "decode a message from an http header", "true": "return a string representation of a decoded c bus message", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "takes an example set of example classes , and build a st m class file with m en param", "true": "classify example with maximum vote the following way", "bleu": 0.0712695567709093, "rouge": 0.1598951507208388}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the hash code of a tracer object", "true": "the hash code for all sun hints", "bleu": 0.2984745896009823, "rouge": 0.4048672566371681}, {"predict": "returns a deep copy of this iterator", "true": "returns a deep copy of this iterator", "bleu": 1.0, "rouge": 1.0}, {"predict": "return true if the key chain contains the private key", "true": "this method is here because there is no equals on ec key", "bleu": 0.10320893749383378, "rouge": 0.08944281524926685}, {"predict": "takes a byte array and returns the records associated with the given data", "true": "adds a copy of the given byte array as a data element ( i", "bleu": 0.15921582298395948, "rouge": 0.2943305186972256}, {"predict": "sets the rotation angle , in radians , of all 2 d rotation planes added to this builder", "true": "sets the rotation angle , in radians , of all 2 d rotation planes added to this builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the user group for the specified configuration file", "true": "this method writes a user registry xml", "bleu": 0.15619699684601276, "rouge": 0.2557651991614256}, {"predict": "converts the specified double to its string representation", "true": "converts the specified double to its string representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "see specification gb t 18284 - 2000", "true": "see specification gb t 18284 - 2000", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a record representing a start request in argument", "true": "sugar method to creates a record for this type", "bleu": 0.2626909894424158, "rouge": 0.3333333333333333}, {"predict": "creates a new user ready to use", "true": "initializes a new stopwatch", "bleu": 0.24446151121745047, "rouge": 0.3824451410658307}, {"predict": "lookup a record of a mary request producing data of output type audio into the cache", "true": "carry out a lookup in the cache with the given parameters , for a request with output type audio", "bleu": 0.16037816189829754, "rouge": 0.3376383763837638}, {"predict": "adds a new condition", "true": "will add the condition to the list", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "reads the bytes of a byte buffer from the buffer", "true": "reads the remaining bytes in a byte buffer into a byte", "bleu": 0.26238334426718246, "rouge": 0.56656346749226}, {"predict": "for each two local static methods in the class file and find the package for each line", "true": "peek into", "bleu": 0.06074588070876682, "rouge": 0.0}, {"predict": "prints msg and exception to system", "true": "prints msg and exception to system", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes the rp virtual pool uris in the database", "true": "fetch the rp protected target virtual pool uris", "bleu": 0.31239399369202553, "rouge": 0.594541910331384}, {"predict": "creates a ns data object from a file", "true": "creates a ns data object from a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the cardinality ( number of set bits ) low - endian layout for the array", "true": "compute the number of bits set to 1", "bleu": 0.1203921753741131, "rouge": 0.3546511627906977}, {"predict": "remove the literal characters by the string literals as they support", "true": "de - escapes a literal", "bleu": 0.11390778025531027, "rouge": 0.13406593406593406}, {"predict": "get the real uri from the cookie \" domain \" and \" path \" attributes , if they are not set then uses the uri provided ( coming from the response )", "true": "get the real uri from the cookie \" domain \" and \" path \" attributes , if they are not set then uses the uri provided ( coming from the response )", "bleu": 1.0, "rouge": 1.0}, {"predict": "send an info log message", "true": "send an info log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "add not null entry to list", "true": "add not null entry to list", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d key store type dialog", "true": "creates a new d new key store type dialog", "bleu": 0.6598203338556885, "rouge": 0.931297709923664}, {"predict": "pretty printing accumulator function for longs", "true": "pretty printing accumulator function for longs", "bleu": 1.0, "rouge": 1.0}, {"predict": "replace substring s of one string with another string and return altered string", "true": "replace substring s of one string with another string and return altered string", "bleu": 1.0, "rouge": 1.0}, {"predict": "insert data null - local date time delta", "true": "helper method for * set object * tests", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "removes an event listener", "true": "un registers an event listener", "bleu": 0.5208154731870476, "rouge": 0.6535714285714286}, {"predict": "follows all config messages in this thread then reads them as well as the server connection and issues a query for thread", "true": "this method is an infinite loop that periodically checks if there are any new messages in the job coordinator stream , and reads them if they exist", "bleu": 0.08212957345099224, "rouge": 0.16031537450722733}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method deals with the fact , that the decoding process doesn ' t always yield a single most likely value", "true": "this method deals with the fact , that the decoding process doesn ' t always yield a single most likely value", "bleu": 1.0, "rouge": 1.0}, {"predict": "read object is called to restore the state of the socket permission from a stream", "true": "read object is called to restore the state of the service permission from a stream", "bleu": 0.8153551038173115, "rouge": 0.9333333333333336}, {"predict": "gets the block index for a sources in the combined index", "true": "gets the index of the p red block associated with the register spec at the particular get sources ( ) index", "bleu": 0.07718141210688395, "rouge": 0.29582929194956353}, {"predict": "constructs a lockable file writer with a file encoding", "true": "constructs a lockable file writer with a file encoding", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends a new program description break point", "true": "append the description text for this program , if one exists", "bleu": 0.1160873020151595, "rouge": 0.10683012259194395}, {"predict": "decodes data from base 64 notation , automatically detecting gzip - compressed data and decompressing it", "true": "decodes data from base 64 notation , automatically detecting gzip - compressed data and decompressing it", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the url for the url", "true": "makes a url out of a location , as either a file or a resource", "bleu": 0.04928854007377984, "rouge": 0.08840579710144927}, {"predict": "parse an http : / / www", "true": "<unk> a string into a value", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "a locale independent version of to uppercase", "true": "a locale independent version of to uppercase", "bleu": 1.0, "rouge": 1.0}, {"predict": "write data - - output this mod bus message to d out", "true": "write data - - output the completed mod bus message to d out", "bleu": 0.7003015589741095, "rouge": 0.8736979166666665}, {"predict": "processes in environment variables for environment variables , in a var variable list and environment variables map", "true": "update the environment variables", "bleu": 0.09507244120026236, "rouge": 0.21441124780316342}, {"predict": "creates a new character class for each character of the specified string", "true": "creates a new character class for each character of the specified string", "bleu": 1.0, "rouge": 1.0}, {"predict": "notifies all time stamps and time of a bucket", "true": "this notifies all wan sites about updated timestamp on local site", "bleu": 0.14873743701255318, "rouge": 0.19645732689210954}, {"predict": "returns a new token in the receiver , starting at the specified position", "true": "returns the next occurrence of the regular expression , stepping forward the token ize r to the next line", "bleu": 0.07923788515260259, "rouge": 0.2418235877106045}, {"predict": "remove a service node from the node list", "true": "remove a service node from the node list", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the contents of this string as a string", "true": "return a copy of the result as a string", "bleu": 0.2907153684841096, "rouge": 0.4444444444444444}, {"predict": "initializes this static object with the context of the calling activity", "true": "initializes this static object with the context of the calling activity", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a content items", "true": "adds a content item", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "writes the data to the socket", "true": "executes a web socket handshake", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "sets the minimum and deals with the min / max value", "true": "sets the minimum and deals with the - 1 initialization !", "bleu": 0.6132297420585351, "rouge": 0.6363636363636364}, {"predict": "attempts to find the given number of bytes", "true": "emits any <unk> ally available blocks", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "rotate theta degrees about the x axis", "true": "rotate theta degrees about the x axis", "bleu": 1.0, "rouge": 1.0}, {"predict": "one rectangle is called by scale the circle containing the center of the center n number method , n number of work r n q n scaled to paint n n n n n ' s pattern n q n number n n ' s bounding :", "true": "scales a rect about its centro id", "bleu": 0.021511596337479864, "rouge": 0.0}, {"predict": "parses unprintable chars code strings from index code strings", "true": "returns a unprintable ext char handler parsed from the given index code strings", "bleu": 0.1864009928871988, "rouge": 0.4401154401154401}, {"predict": "determines the height of this view", "true": "determines the height of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the id is null ( or matches the null uri )", "true": "checks if the id is null ( or matches the null uri )", "bleu": 1.0, "rouge": 1.0}, {"predict": "called when a pending list is pending to be enabled or written to the next list", "true": "check if there are pending downloads and if so move the top one up to the active list", "bleu": 0.10151170915662612, "rouge": 0.232824427480916}, {"predict": "returns the value range from the limits", "true": "limit number within a values range", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "creates and displays the title", "true": "creates and displays the title", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines whether the network is connected to the network type", "true": "according to the different type of network to determine whether the network connection", "bleu": 0.22211370348624584, "rouge": 0.42479108635097496}, {"predict": "remove an item from the list", "true": "delete an item by position", "bleu": 0.2907153684841096, "rouge": 0.3696969696969697}, {"predict": "this method calculates the backward channel from the previous transfer channel", "true": "converts the color channel value according to the of <unk> within the distance", "bleu": 0.11294012253658708, "rouge": 0.24629878869448185}, {"predict": "apply matrix to handle the image inside the image view", "true": "apply matrix to handle the image inside the image view", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a listener to be notified when startup is complete", "true": "add a listener to be notified when startup is complete", "bleu": 1.0, "rouge": 1.0}, {"predict": "quietly closes given resource ignoring possible checked exception", "true": "quietly closes given resource ignoring possible checked exceptions", "bleu": 0.8633400213704505, "rouge": 0.875}, {"predict": "runs any thread files", "true": "start creating the optimized file", "bleu": 0.23530495254141282, "rouge": 0.0}, {"predict": "creates a des encryption key from the given key material", "true": "creates a des encryption key from the given key material", "bleu": 1.0, "rouge": 1.0}, {"predict": "see iso 16022 : 2006 , 5", "true": "see iso 16022 : 2006 , 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks that the given string is a valid type descriptor", "true": "checks that the given string is a valid type descriptor", "bleu": 1.0, "rouge": 1.0}, {"predict": "determine the javascript output to be used in the javascript code as an output", "true": "this exists solely so that the web ide can override it and use a different js output", "bleu": 0.0789552907486192, "rouge": 0.12681912681912683}, {"predict": "return a string representation of the node , at the end of the text", "true": "gets the combined text contents of each element in the set of matched elements , including their descendants", "bleu": 0.09085616449044709, "rouge": 0.18336673346693386}, {"predict": "scans a string like structure", "true": "scans the x pointer expression", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "adds count number of source lines to output", "true": "adds a line from the smap", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "construct a new string to hold the sequence of characters that are searched for the given string buffer", "true": "creates a string from the contents of a string buffer", "bleu": 0.11076007888812259, "rouge": 0.4518518518518518}, {"predict": "return the number of signers in the collection", "true": "return the number of signers in the collection", "bleu": 1.0, "rouge": 1.0}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "methods for starting asynchronous execution", "true": "methods for starting asynchronous execution", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the range of z - values in the specified data set for the given data set", "true": "returns the range of x - values in the specified data set for the data items belonging to the visible series", "bleu": 0.5259210079195978, "rouge": 0.7231160033869601}, {"predict": "checks if the given attribute set according to the test", "true": "checks for compliance related attributes if applicable", "bleu": 0.13950796967929133, "rouge": 0.24302788844621517}, {"predict": "updates zoning information for the un managed export mask for the ports in the export mask", "true": "set mask zoning map", "bleu": 0.08513012360883544, "rouge": 0.11213235294117647}, {"predict": "invitation the invitation invitation", "true": "wait session invitation answer", "bleu": 0.35930411196308426, "rouge": 0.25}, {"predict": "move the selected range of columns", "true": "called to move within the selected range of the given j table", "bleu": 0.23671529472186087, "rouge": 0.5240549828178694}, {"predict": "calculates the x - 1 ( x - 1 ) of the matrix matrix matrix given the new matrix", "true": "constructs the x ( t ) vector", "bleu": 0.09629943614188137, "rouge": 0.3356258596973865}, {"predict": "read stream as binary", "true": "read stream as binary st l", "bleu": 0.6065306597126334, "rouge": 0.7721518987341772}, {"predict": "indicates the number of components making up this identifier", "true": "returns the number of components that are stored in this container", "bleu": 0.3292100646487161, "rouge": 0.4911433172302737}, {"predict": "round ( big decimal , math context ) when precision = 0", "true": "round ( big decimal , math context ) when precision = 0", "bleu": 1.0, "rouge": 1.0}, {"predict": "rounds the less - bit hash of the integer word and swap the threshold of each word", "true": "eliminate below less frequency n - grams and noise latin <unk>", "bleu": 0.0859076483566362, "rouge": 0.22289890377588306}, {"predict": "returns the string representation of this vector", "true": "returns the string representation of this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the public key selector for this selector", "true": "translates a string into a token endpoint au th method type", "bleu": 0.09268172804333874, "rouge": 0.0}, {"predict": "generate the internal sorted hash map for tags", "true": "generate the internal sorted hash map for tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "set a shape object based on a list of shape", "true": "utility method that iterates over a shape object and prints out the points", "bleu": 0.17381336617464688, "rouge": 0.25487465181058494}, {"predict": "convert the characters from a fully qualified class name", "true": "shorten the class name", "bleu": 0.19960198807747329, "rouge": 0.4959349593495934}, {"predict": "adds a graphic to the overlay", "true": "adds a graphic to the overlay", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the string representation", "true": "returns the string representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "attempts to ensure the given native flip operation for the given target component", "true": "performs the native gl x flip operation for the given target component", "bleu": 0.5437427682227519, "rouge": 0.725231175693527}, {"predict": "add property you need to this property restriction", "true": "add \" on property p \" information , and tell p to point back here", "bleu": 0.07949903911132591, "rouge": 0.24729729729729732}, {"predict": "initial is e google analytics immediately so it will catch all sorts of errors prior to easy tracker on start", "true": "initial is e google analytics immediately so it will catch all sorts of errors prior to easy tracker on start", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the difference between which you should back in history ( for which you should back )", "true": "called when the user moves", "bleu": 0.07223943354597204, "rouge": 0.10082644628099173}, {"predict": "instantiate s a new service id", "true": "reads in 16 bytes in standard network byte order", "bleu": 0.1126634218241493, "rouge": 0.0}, {"predict": "handle parsing the element of an element", "true": "called by the generated handler code when an enter element event is consumed", "bleu": 0.09374222649442905, "rouge": 0.2846034214618974}, {"predict": "adds a finally clause for e arch return statement", "true": "adds a finally clause for e arch return statement", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next xml meta token", "true": "returns the next xml meta token", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if we ' ve crossed a reasonable touch slop for the given child view", "true": "check if we ' ve crossed a reasonable touch slop for the given child view", "bleu": 1.0, "rouge": 1.0}, {"predict": "encode a list into json text and write it to out", "true": "encode a list into json text and write it to out", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads color table as 256 rgb integer values", "true": "reads color table as 256 rgb integer values", "bleu": 1.0, "rouge": 1.0}, {"predict": "update the last modified time", "true": "update the last modified time", "bleu": 1.0, "rouge": 1.0}, {"predict": "push an import href on to the stylesheet stack", "true": "push an import href on to the stylesheet stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "given a key store it could be associated with a private key", "true": "based on a public certificate , private key , alias and password , this method will load the certificate and private key as an entry into the key store , and it will set the provided alias and password to the key store entry", "bleu": 0.012995915665057714, "rouge": 0.1618895966029724}, {"predict": "returns whether the file needs to be loaded", "true": "returns true if the given indicator file needs to be reloaded", "bleu": 0.33367328963567766, "rouge": 0.6140939597315436}, {"predict": "draws the chart legend", "true": "draws the chart legend", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the repository definition", "true": "parses repository definition", "bleu": 0.5081327481546147, "rouge": 0.8798076923076923}, {"predict": "disables the buttons and prepare the data in the stream", "true": "disables all buttons in the interface", "bleu": 0.18850319022747347, "rouge": 0.5236051502145923}, {"predict": "recursion", "true": "recursive", "bleu": 0.8408964152537145, "rouge": 0.0}, {"predict": "this method writes the given string to the output", "true": "writes the given string to android log cat", "bleu": 0.5169731539571706, "rouge": 0.594541910331384}, {"predict": "add a switch port to the quarantine queue", "true": "add a switch port to the quarantine queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will read the sort information from the given sort index and sort each substring", "true": "the method prepares the sort index and sort index inverted data", "bleu": 0.2545984531673679, "rouge": 0.45979899497487436}, {"predict": "adds given feature to given feature", "true": "add one geo json feature to this <unk> point set from a jackson node tree", "bleu": 0.06486736672746916, "rouge": 0.17681159420289855}, {"predict": "initialize a bit string with a bit set", "true": "initial is es the bit string from a character string of 1 s and 0 s in big - endian order", "bleu": 0.044657922628805316, "rouge": 0.1914225941422594}, {"predict": "sorts the individuals in this population using the given comparator", "true": "sorts the individuals in ascending order according to their performance , thus the best one will be in last position", "bleu": 0.13508740085185458, "rouge": 0.31443298969072164}, {"predict": "writes the contents of the given writer to the given writer", "true": "writes the current dom document into the given writer", "bleu": 0.2521193618434983, "rouge": 0.5091819699499166}, {"predict": "sets executor to executors", "true": "sets executor to executors", "bleu": 1.0, "rouge": 1.0}, {"predict": "check whether the specified method is renamed by renamed", "true": "determine whether the given method is a c glib ' renamed ' method , following the pattern \" c glib $ method name $ 0 \"", "bleu": 0.03697230021010266, "rouge": 0.26270456503014644}, {"predict": "creates a password reset exception object", "true": "creates a password reset exception object with local iz able error message", "bleu": 0.36787944117144233, "rouge": 0.6288659793814433}, {"predict": "builds the union of the arrays", "true": "returns a union of 2 arrays , ensuring that each string exists only once", "bleu": 0.08234616270176032, "rouge": 0.2798165137614679}, {"predict": "tries to change state change to window change - state", "true": "\\ notice window state change when wm changes a property on the window", "bleu": 0.13206959826272413, "rouge": 0.25487465181058494}, {"predict": "given a x path ( a ) , a context of the given dtm iterator into a context object", "true": "the here function returns a node - set containing the attribute or processing instruction node or the parent element of the text node that directly <unk> the x path expression", "bleu": 0.06251845301260874, "rouge": 0.1176848874598071}, {"predict": "returns the largest ( \" top \" ) n values in the column", "true": "returns the largest ( \" top \" ) n values in the column", "bleu": 1.0, "rouge": 1.0}, {"predict": "grab the method name from the signature", "true": "grab the class from the signature", "bleu": 0.4111336169005197, "rouge": 0.7800511508951408}, {"predict": "creates a time series set of all fields", "true": "create a metric delta set for tagged metrics and initialize it with the given collection", "bleu": 0.0739821920909478, "rouge": 0.16486486486486487}, {"predict": "returns the number of nodes in this node", "true": "returns the number of nodes in this model ' s nodelist", "bleu": 0.5933643406390795, "rouge": 0.716442953020134}, {"predict": "returns the next element", "true": "returns the next element", "bleu": 1.0, "rouge": 1.0}, {"predict": "escape values within the string assuming that the string has all converted bytes", "true": "return a new byte string with bytes 0 x 00 , 0 x 01 and 0 x <unk> escaped", "bleu": 0.06663085357710904, "rouge": 0.12091179385530225}, {"predict": "adds all of the specified number of times to this input", "true": "repeat the current input list", "bleu": 0.12605968092174913, "rouge": 0.2681318681318681}, {"predict": "replaces all occurrences of several class names in the class file", "true": "replaces all occurrences of several class names in the class file", "bleu": 1.0, "rouge": 1.0}, {"predict": "return to server configuration page request", "true": "called on request from the ui to return to the previous page", "bleu": 0.12151662434083678, "rouge": 0.31443298969072164}, {"predict": "constructs the output exception with the given throw able as a cause", "true": "constructs a new exception with the given cause , copying the message from the cause into this instance", "bleu": 0.2031593786786817, "rouge": 0.3860759493670886}, {"predict": "return the euclidean distance between this point", "true": "the \" size \" of the line from 0 , 0 to x , y", "bleu": 0.059237077985967744, "rouge": 0.08531468531468532}, {"predict": "runs the test case", "true": "called by parent when adb session is complete", "bleu": 0.11115018927487523, "rouge": 0.0}, {"predict": "returns the authorization challenges appropriate for this response ' s code", "true": "returns the authorization challenges appropriate for this response ' s code", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the given session to bytes", "true": "converts the given session to bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance of 75 bits with the same time", "true": "creates a new random number generator", "bleu": 0.21200626759025185, "rouge": 0.3727087576374745}, {"predict": "verifies that the certificate using the given certificate ' s certificate", "true": "internal method to verify the timestamp on a certificate", "bleu": 0.12605968092174913, "rouge": 0.2036727879799666}, {"predict": "stage one password hashing used in mysql 4", "true": "encrypts a password protocol for authentication is like this : 1", "bleu": 0.11021777041988566, "rouge": 0.10234899328859062}, {"predict": "reads the contents of an input stream into a byte", "true": "reads the contents of an input stream into a byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads an array of bytes to a string", "true": "a byte array into its hex string representation", "bleu": 0.19070828081828378, "rouge": 0.25}, {"predict": "wrap a proto in a checked message and compute the checksum", "true": "wrap a proto in a checked message and compute the checksum", "bleu": 1.0, "rouge": 1.0}, {"predict": "reduce values from the allowed height to the edge of the allowed range", "true": "if necessary , reduce this image to within ' width ' x ' height ' dimensions", "bleu": 0.09018449225581421, "rouge": 0.13540510543840176}, {"predict": "installs a sound defined by the user", "true": "installs a replacement sound as the built in sound responsible for the given sound identifier ( this will override the system sound if such a sound exists )", "bleu": 0.015304249901368699, "rouge": 0.20625528317836012}, {"predict": "count of fragment for the complex condition", "true": "returns the number of all pages that contain a template the name of which starts with any of the the given strings", "bleu": 0.024116926544041066, "rouge": 0.1261633919338159}, {"predict": "get the encoding value a glyph given its name and a name table", "true": "get the encoding value of a glyph given its name and a char set", "bleu": 0.647943329508522, "rouge": 0.8094089264173704}, {"predict": "transform source bitmap to targeted width and height", "true": "transform source bitmap to targeted width and height", "bleu": 1.0, "rouge": 1.0}, {"predict": "have track results from a collection", "true": "scores a collection of track results", "bleu": 0.3655552228545124, "rouge": 0.3333333333333333}, {"predict": "returns a random time in the current time , based on the default time of the epoch", "true": "returns a current time seconds from epoch", "bleu": 0.12512236921161915, "rouge": 0.4505169867060562}, {"predict": "send a verbose log message", "true": "send a verbose log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "quant ize s double ( 64 bit )", "true": "sugar encodes a single point as a byte array", "bleu": 0.11900569447018795, "rouge": 0.0}, {"predict": "stores long value with volatile semantic", "true": "stores long value with volatile semantic", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs commands and return output", "true": "runs commands as root ( if available ) and return output", "bleu": 0.1820041563395576, "rouge": 0.5854126679462572}, {"predict": "draws a circle of radius r , centered on ( x , y )", "true": "draws a circle of radius r , centered on ( x , y )", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints a double followed by a newline", "true": "prints a double followed by a newline", "bleu": 1.0, "rouge": 1.0}, {"predict": "write a value", "true": "write a 32 bit signed value", "bleu": 0.27952792741962756, "rouge": 0.6288659793814433}, {"predict": "maps the map to the string builder", "true": "checks each character and replaces it with its mapping", "bleu": 0.11737849637633067, "rouge": 0.0}, {"predict": "add a button press to list", "true": "adds the button pressed listener", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "dispose of object , releasing resources", "true": "dispose of object , releasing resources", "bleu": 1.0, "rouge": 1.0}, {"predict": "fills the xml attribute at the specified index", "true": "adds an attribute to the xml attributes object", "bleu": 0.22679164443904004, "rouge": 0.25}, {"predict": "create a property value for a specific properties", "true": "creates a j component with the properties to be changed", "bleu": 0.13821693129588736, "rouge": 0.21785714285714283}, {"predict": "copies all bytes from the input file to the output stream", "true": "copies the given file to the output stream <unk> , i", "bleu": 0.44833867003844585, "rouge": 0.6363636363636364}, {"predict": "de serialize a k db k db from a data source and attach it to the database", "true": "de serialize a header from a source into the supplied k db header", "bleu": 0.19209534151258667, "rouge": 0.4781634938409854}, {"predict": "transforms an output to the specified enumerated", "true": "transform the annotations on the given annotated declaration for inclusion on the given target element type", "bleu": 0.05135131375181345, "rouge": 0.08122503328894808}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "are all permissions granted boolean", "true": "returns whether the user has granted all the requested permission", "bleu": 0.11115018927487523, "rouge": 0.12577319587628866}, {"predict": "fetch a char set from cache ( if not a key cache is cached in cache", "true": "fetches the char set to be used for any given locale from cache", "bleu": 0.12729922658368398, "rouge": 0.28110599078341014}, {"predict": "paints a portion of a highlight", "true": "paints a portion of a highlight", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a control roll to this psr", "true": "adds a pending control roll to the list for this phase", "bleu": 0.24129671581039874, "rouge": 0.6409807355516637}, {"predict": "add the contents from the specified results", "true": "processes the given add - on changes", "bleu": 0.20556680845025982, "rouge": 0.14285714285714285}, {"predict": "re calculate the derived color from the ui manager parent color and offsets", "true": "re calculate the derived color from the ui manager parent color and offsets", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns string representation of oid", "true": "returns string representation of oid", "bleu": 1.0, "rouge": 1.0}, {"predict": "grows the size of the stack", "true": "grows the size of the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "called when the thread will increment the idle state", "true": "called by the thread before going into the idle state", "bleu": 0.29052561567528307, "rouge": 0.6256410256410255}, {"predict": "adds a cached span to the in - memory representation", "true": "adds a cached span to the in - memory representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the target object is \" equal to \" this name and the other object", "true": "compares this name with another , for equality", "bleu": 0.09507244120026236, "rouge": 0.17110799438990182}, {"predict": "called to repaint all the child layers", "true": "request repainting of all the child panels", "bleu": 0.345720784641941, "rouge": 0.42857142857142855}, {"predict": "validates a dns name for format", "true": "validates a dns name for format", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a comment from the input stream", "true": "reads the first comment line from the input , and returns the comment line ( including the line break character ) without the leading \" # \"", "bleu": 0.021973889077182434, "rouge": 0.2659110723626853}, {"predict": "helper method that locates the next character in the given string builder , to be safely embedded in the specified character", "true": "finds the first occurrence of the separator character ignoring the escaped separators starting from the index", "bleu": 0.07305267243289862, "rouge": 0.22161671207992734}, {"predict": "internal method used to guess whether provided content type represents an http content - port", "true": "guess a content type from the url", "bleu": 0.11633270842295028, "rouge": 0.291866028708134}, {"predict": "used for testing - - input is a full csv line", "true": "used for testing - - input is a full csv line :", "bleu": 0.9131007162822622, "rouge": 0.949080622347949}, {"predict": "initiates the web socket connection", "true": "connects to the currently configured system", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "validates that the http response header contains the passed request", "true": "sets http response cache validator headers appropriately and validates the http request against these using any conditional request headers", "bleu": 0.08877114000709116, "rouge": 0.2612419700214133}, {"predict": "show an active iv r zone set , if no such r zone set", "true": "collect the active iv r zone set , and its zones , members", "bleu": 0.4001601601922499, "rouge": 0.4474327628361858}, {"predict": "returns an empty immutable array containing the same mappings and ordered list", "true": "get an empty immutable array", "bleu": 0.2891784933232571, "rouge": 0.5083333333333333}, {"predict": "fill a region to the current rule", "true": "the new ordered list of non - optional non - minus nodes", "bleu": 0.0909326471926252, "rouge": 0.10049423393739704}, {"predict": "returns a accountable with the provided bytes", "true": "returns a string description of an accountable and any nested resources", "bleu": 0.14834636222628117, "rouge": 0.32049036777583184}, {"predict": "returns the hash code for this attribute", "true": "returns a hash code for this node", "bleu": 0.5410822690539396, "rouge": 0.7142857142857143}, {"predict": "deletes the given type vertex for an instance of which is passed in", "true": "deletes a type vertex - can be entity ( class type ) or just vertex ( struct / trait type )", "bleu": 0.073005070424173, "rouge": 0.16928769657724332}, {"predict": "read an array of strings from a reader", "true": "read the reader line for line and return the result in a list", "bleu": 0.10207878682119532, "rouge": 0.18263473053892215}, {"predict": "adds cache context to cache", "true": "adds cache context to shared cache context", "bleu": 0.5330859115179258, "rouge": 0.8090185676392573}, {"predict": "determines whether the specified method is a c glib - > = true if is preceded by the passed method", "true": "this method was added to address jackson - <unk> : need to weed out c glib - injected \" get callback s \"", "bleu": 0.10347067738883295, "rouge": 0.18373493975903613}, {"predict": "compares two media type", "true": "compares this named media type to another", "bleu": 0.24002491458061356, "rouge": 0.5198863636363635}, {"predict": "returns true if the underlying dependencies have changed", "true": "returns true if the underlying dependencies have changed", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new rgb element", "true": "returns a replaced element for some element in the stream which should be <unk> , but is not", "bleu": 0.02244083618904421, "rouge": 0.15782664941785254}, {"predict": "compare two version numbers are greater than or equal to the f xg version", "true": "compares whether this f xg version ' s value is greater than the value of the version parameter", "bleu": 0.15798828419545888, "rouge": 0.3056112224448898}, {"predict": "creates a pooled data source", "true": "creates a basic data source", "bleu": 0.45180100180492244, "rouge": 0.8}, {"predict": "finds a set containing the specified object in this set", "true": "find the names of a given object", "bleu": 0.14991106946711685, "rouge": 0.24302788844621517}, {"predict": "scroll the current item to center", "true": "keep the current item in the center", "bleu": 0.36798327352994814, "rouge": 0.6069651741293532}, {"predict": "add a meta object to the registry", "true": "add a meta object to the state", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "removes the given word from this word list", "true": "removes the word from the stop word list", "bleu": 0.31020161970069987, "rouge": 0.75}, {"predict": "add two numbers of different length and sign", "true": "add two numbers of different length and sign", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds item to the list", "true": "adds the item to the internal list", "bleu": 0.3769486629893372, "rouge": 0.8090185676392573}, {"predict": "calculate the bounds for a view ' s title", "true": "calculate the bounds for a view ' s title", "bleu": 1.0, "rouge": 1.0}, {"predict": "invoke all ( null ) throws null pointer exception", "true": "invoke all ( empty collection ) returns empty collection", "bleu": 0.2777619034011791, "rouge": 0.4444444444444444}, {"predict": "fixes the package name to the packages", "true": "assigns description to a package", "bleu": 0.20556680845025982, "rouge": 0.17183098591549298}, {"predict": "closes this character stream , as well as the the reader it its iterating over", "true": "closes this stream", "bleu": 0.11633270842295028, "rouge": 0.37888198757763975}, {"predict": "creates the block mirror data", "true": "creates the block object block mirror data", "bleu": 0.4739878501170792, "rouge": 0.8090185676392573}, {"predict": "starts a new , connecting the server that uses the process as argument to start", "true": "starts the server by starting all endpoints this server is assigned to", "bleu": 0.12300686288463772, "rouge": 0.30235439900867406}, {"predict": "appends the json representation of the specified string to the end of this array", "true": "appends the json representation of the specified string to the end of this array", "bleu": 1.0, "rouge": 1.0}, {"predict": "retains ( keeps ) only the elements in the receiver that are contained in the specified other list", "true": "retains ( keeps ) only the elements in the receiver that are contained in the specified other list", "bleu": 1.0, "rouge": 1.0}, {"predict": "forwards caught exceptions to input stream", "true": "forwards caught exceptions to input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the result as a result result", "true": "clears the result that may has been set", "bleu": 0.21191828141393895, "rouge": 0.2634989200863931}, {"predict": "returns a string containing the elements of the given collection", "true": "returns a list of the elements invoking to string on non - null elements", "bleu": 0.16345206800758835, "rouge": 0.32360742705570295}, {"predict": "check if value within allowed range", "true": "check if value within allowed range", "bleu": 1.0, "rouge": 1.0}, {"predict": "place string placeholder s by place all the place to a string", "true": "replaces the place holders by parameters", "bleu": 0.14694106251955755, "rouge": 0.2364341085271318}, {"predict": "qualifier a qualifier selector", "true": "searches for a qualifier selector in a node : ? qu al name = \" value \" - an element in an array , chosen by a qualifier value", "bleu": 0.0013650372104962324, "rouge": 0.15996503496503497}, {"predict": "checks if a frame id is multiple", "true": "are multiple occurrences of frame allowed", "bleu": 0.20556680845025982, "rouge": 0.15601023017902813}, {"predict": "parse an xml configuration file", "true": "parse an xml configuration from a file", "bleu": 0.5330859115179258, "rouge": 0.8090185676392573}, {"predict": "empirical unconditional hilbert - schmidt dependence measure for x and y values", "true": "empirical conditional hilbert - schmidt dependence measure y and x given z", "bleu": 0.4324227075463215, "rouge": 0.5833333333333334}, {"predict": "should be called by the rpf file layer handler before any frame files are loaded in the rpf to the specified rpf directory", "true": "create a a", "bleu": 0.04449945957170705, "rouge": 0.0}, {"predict": "posts the given event info to the queue", "true": "queue the given event in the event queue", "bleu": 0.3303164318013807, "rouge": 0.625}, {"predict": "choose an alias to authenticate the server side of a secure socket given the public key type and the list of certificate issuer authorities recognized by the peer ( if any )", "true": "choose an alias to authenticate the server side of a secure socket given the public key type and the list of certificate issuer authorities recognized by the peer ( if any )", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a 24 - image file to a local file", "true": "proc esa el esc a neo de una imagen en <unk> <unk> ivo", "bleu": 0.0933873085201553, "rouge": 0.084958217270195}, {"predict": "creates a new path handler", "true": "convenience method to create a path", "bleu": 0.24736929544091937, "rouge": 0.3577712609970674}, {"predict": "loads the lines from the specified reader", "true": "read statement lines from input stream", "bleu": 0.24446151121745047, "rouge": 0.31202046035805625}, {"predict": "load file and system files from source folder", "true": "load ignore file using", "bleu": 0.17747405280050269, "rouge": 0.3546511627906977}, {"predict": "remove the specified argument ( core", "true": "remove the 1 st occurrence of the argument ( core mutation method )", "bleu": 0.15225220543229737, "rouge": 0.4935275080906149}, {"predict": "description of the method", "true": "description of the method", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new pkcs 9 block in the attribute set", "true": "constructs an attribute from pkcs 9 attribute", "bleu": 0.18850319022747347, "rouge": 0.48605577689243035}, {"predict": "method used to create note ' s text / format", "true": "method used to put note object into database", "bleu": 0.24808415001701817, "rouge": 0.4535315985130111}, {"predict": "make sure that the transaction ids in the given messages are not 0 and differ between each other", "true": "make sure that the transaction ids in the given messages are not 0 and differ between each other", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a node as one of the list , starting at the end of the node", "true": "adds a \" next \" node ( node to the right or bottom ) to this divider ' s list of next nodes", "bleu": 0.06793187854788751, "rouge": 0.248371335504886}, {"predict": "callback for the config dialog", "true": "callback for the config dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "note", "true": "see the general contract of the read utf method of data input", "bleu": 1.4044400323157705e-05, "rouge": 0.0}, {"predict": "add obj to the list", "true": "for debugging purposes , it ' s useful to insert print statements here", "bleu": 0.05512018958855254, "rouge": 0.10286677908937607}, {"predict": "reset all internal state to be at the top of the grid", "true": "reset all internal state to be at the top of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "calls super", "true": "calls super", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes and returns the repaint manager based on the current time", "true": "return the repaint manager for the calling thread given a component", "bleu": 0.22416933501922287, "rouge": 0.36363636363636365}, {"predict": "this method is indicates if the business port is a power of the client port", "true": "determines if the given port ww n is a recover point initiator", "bleu": 0.14247788801610148, "rouge": 0.3779429987608426}, {"predict": "checks if a xml character is well - formed", "true": "checks if a xml character is well - formed", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the contents of the given buffer to the given output stream", "true": "initialization when the web socket completes", "bleu": 0.10390302174233558, "rouge": 0.1182170542635659}, {"predict": "removes wheel clicking listener", "true": "removes wheel clicking listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the given section to the list of sections", "true": "adds the given section to the list of sections", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate and return the preferred position for use j tabbed pane , which can be used for use or before the header", "true": "checks if it ' s worth to try to wrap target line ( it ' s long enough ) and tries to calculate preferred wrap position", "bleu": 0.05806707048579235, "rouge": 0.12314939434724093}, {"predict": "adds all the values in the given vector to the end of this vector , expanding its capacity as necessary", "true": "adds all the values in the given vector to the end of this vector , expanding its capacity as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "special purpose function to see if we can optimize the pattern for a descendant iterator", "true": "special purpose function to see if we can optimize the pattern for a descendant iterator", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads all of the data from the specified input stream", "true": "write the full contents of in str to the destination stream out str", "bleu": 0.11742832364135733, "rouge": 0.25487465181058494}, {"predict": "add a matching rule in the canonical mime t form such as \" image / * \" or a mime t literal such as \" text / html \"", "true": "add a matching rule in the canonical mime t form such as \" image / * \" or a mime t literal such as \" text / html \"", "bleu": 1.0, "rouge": 1.0}, {"predict": "a simple method which checks the input parsed information", "true": "validates a number , for use cases where you may need the number to be within a range", "bleu": 0.05746166391236872, "rouge": 0.13974799541809851}, {"predict": "sends message until the player is stop", "true": "note that if there is sleep in this method", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "construct a new instance with the specified detail string and exception", "true": "construct a new instance with the specified detail string and exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a string list to an array list of strings", "true": "make array list from \" , \" separated string", "bleu": 0.17827531042796255, "rouge": 0.21254355400696867}, {"predict": "returns the char set : which this media type will be used to char set the char set", "true": "returns the name of the char set that should be used in textual <unk>", "bleu": 0.1712473044894657, "rouge": 0.38364779874213834}, {"predict": "convert a positive big decimal to an engineering string representation", "true": "convert a positive big decimal to an engineering string representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all mappings from this hash map , leaving it empty", "true": "removes all mappings from this hash map , leaving it empty", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a layer to the map", "true": "adds a new layer to the map", "bleu": 0.5985529678206387, "rouge": 0.9104477611940297}, {"predict": "read the specified file of rules", "true": "read the specified file of rules", "bleu": 1.0, "rouge": 1.0}, {"predict": "applies updates to the word set being managed by this resource", "true": "applies updates to the word set being managed by this resource", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a text label", "true": "draws a text label", "bleu": 1.0, "rouge": 1.0}, {"predict": "write a portion of an array of characters to the buffer", "true": "writes characters to the buffer", "bleu": 0.317023313852343, "rouge": 0.5362637362637362}, {"predict": "detects a marker when the given file name is created from the server", "true": "detect episode from filename", "bleu": 0.09552040806823771, "rouge": 0.1300639658848614}, {"predict": "creates an operation that creates an array of the given type and returns an array", "true": "creates a simple array creation operation for the given type", "bleu": 0.17609282679116184, "rouge": 0.4149659863945578}, {"predict": "fire a spar ql udp ate event", "true": "send an event to all registered listeners", "bleu": 0.18575057999133598, "rouge": 0.14285714285714285}, {"predict": "set a preference type to their default preference type , e", "true": "the type of preference to retrieve", "bleu": 0.1354599427337814, "rouge": 0.2484725050916497}, {"predict": "expunges stale entries from the table", "true": "expunges stale entries from the table", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests whether a string containing the extension of the file", "true": "utility method for subclasses to determine if an entire string is digits", "bleu": 0.10320893749383378, "rouge": 0.08944281524926685}, {"predict": "tells whether a given type is a char", "true": "tells whether a given type is a char", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance of rsa public key", "true": "construct a key from its encoding", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "convert a calendar to a java", "true": "convert a calendar to a java", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a dialog that displays the image panel", "true": "create and return the image file panel", "bleu": 0.22679164443904004, "rouge": 0.4048672566371681}, {"predict": "write the text and append a newline ( using the platform ' s line - ending )", "true": "writes the given line with the given writer , followed by a new line", "bleu": 0.09083627868206415, "rouge": 0.19698600645855757}, {"predict": "returns the child at the given index in the list", "true": "returns the layer at the specified index", "bleu": 0.21834177214239062, "rouge": 0.6075697211155379}, {"predict": "if there is a security manager , makes sure caller has permission to modify threads", "true": "if there is a security manager , makes sure caller has permission to modify threads", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the first value of the array", "true": "the identity function for value conversion - returns the value untouched", "bleu": 0.15685718045401453, "rouge": 0.32049036777583184}, {"predict": "removes the leading and trailing quotes at the given string", "true": "trims white spaces and remove quotes from the string", "bleu": 0.15851165692617156, "rouge": 0.42508710801393734}, {"predict": "returns whether a namespace is defined", "true": "returns whether a namespace is defined", "bleu": 1.0, "rouge": 1.0}, {"predict": "a shallow clone requires cloning the attributes but not the child nodes", "true": "a shallow clone requires cloning the attributes but not the child nodes", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d basic constraints dialog", "true": "creates a new d basic constraints dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "static version of last indexof", "true": "static version of last indexof", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new float column", "true": "create a new float column", "bleu": 1.0, "rouge": 1.0}, {"predict": "read from reverse data nodes created in fact does nothing during reading", "true": "read pr j records ( in fact does nothing )", "bleu": 0.3026643726685863, "rouge": 0.46212121212121204}, {"predict": "purges one entry whose wrapped key has been garbage collected", "true": "purges one entry whose wrapped key has been garbage collected", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the user has permission ' converter manager", "true": "checks whether the user has permission ' converter manager", "bleu": 1.0, "rouge": 1.0}, {"predict": "compares this artifact represented by id if it matches the supplied id", "true": "determine whether this coordinates object equals the target object", "bleu": 0.11498759556447223, "rouge": 0.19551282051282048}, {"predict": "adds a new value to the series", "true": "adds a new value to the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if size ( a ) = = size ( b )", "true": "check if size ( a ) = = size ( b )", "bleu": 1.0, "rouge": 1.0}, {"predict": "called by the source when the change has changed", "true": "import revision data from change object", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "a method that outputs the text file for the supplied document into a new line per line", "true": "selects output line file by written doc", "bleu": 0.07994607499472013, "rouge": 0.09010339734121123}, {"predict": "helper parsing luce ne ' s simple query", "true": "dispatches to luce ne ' s simple query parser ' s new fuzzy query , optionally lower casing the term first", "bleu": 0.14295384524208057, "rouge": 0.3828451882845188}, {"predict": "creates a call from st mt s to soot method m", "true": "creates a call from st mt s to soot method m", "bleu": 1.0, "rouge": 1.0}, {"predict": "this will display the player and display it", "true": "play current recorded file , if failed notify error message to caller , if success update fm recorder state", "bleu": 0.03409570231938704, "rouge": 0.0}, {"predict": "pdf of rayleigh distribution", "true": "s igm oid / logistic function", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "deletes all files in a folder", "true": "deletes all files in a folder", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates that the string is not empty", "true": "validates that the string is not empty", "bleu": 1.0, "rouge": 1.0}, {"predict": "reset the context associated with this context", "true": "resets the current context", "bleu": 0.20556680845025982, "rouge": 0.3824451410658307}, {"predict": "convert a list of java object objects in a list of java - return list of in list this list", "true": "converts an array / collection of values ( the object ) to a parameter values array", "bleu": 0.07264339766175722, "rouge": 0.17007434944237917}, {"predict": "log out the user out from the user", "true": "basic internal api call to aut hsv c to log out a user", "bleu": 0.12139281957861149, "rouge": 0.2739520958083832}, {"predict": "creates a new stateless network operation", "true": "compares the ip addresses of the instance on aw s and maps those to the network interfaces in the system", "bleu": 0.02142071121599405, "rouge": 0.07011494252873564}, {"predict": "creates a new instance of code source object , given its code source and modification", "true": "creates a new code source", "bleu": 0.18207052811092128, "rouge": 0.5495495495495495}, {"predict": "decodes base 64 data into oct ect s", "true": "decodes base 64 data into oct ect s", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a channel ' s socket", "true": "create a new broadcaster", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "closes file system file , deleting it ' s everything dir , and release any files that are no longer be closed", "true": "closes this database stream and releases any associated system resources", "bleu": 0.06964541799727335, "rouge": 0.20109890109890108}, {"predict": "returns a vector in pixels whose coordinates are in degree , in radians 2", "true": "return a new instance of vector rotated from the given number of degrees", "bleu": 0.09782375748961449, "rouge": 0.1491442542787286}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the contents at the given uri", "true": "gets the contents at the given uri", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a mapping from the specified field number to the specified data , replacing the previous mapping from the specified field if there was one", "true": "adds a mapping from the specified field number to the specified data , replacing the previous mapping if there was one", "bleu": 0.7709002428237395, "rouge": 0.9275887038377987}, {"predict": "hide the drawing tool", "true": "hide the special border of the title bar", "bleu": 0.1739594473063345, "rouge": 0.31443298969072164}, {"predict": "this method initial configuration with the transaction manager with the transaction configuration", "true": "this method removes the business transaction", "bleu": 0.15537125692760353, "rouge": 0.4728682170542636}, {"predict": "adds a point to the sample", "true": "adds a point to the sample", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a tag id to the tag", "true": "adds the given tag id to this request", "bleu": 0.33167003447658744, "rouge": 0.5269978401727862}, {"predict": "support for connecting to a server socket", "true": "attempt a secure connection with basic functionality to maximize compatibility", "bleu": 0.13391424795650428, "rouge": 0.11401869158878504}, {"predict": "attempt to match the host runtime to a capable platform implementation", "true": "attempt to match the host runtime to a capable platform implementation", "bleu": 1.0, "rouge": 1.0}, {"predict": "perform a interrupt to the particular root element , and return the record of id", "true": "takes in a collection of executions belonging to the same process instance", "bleu": 0.12300686288463772, "rouge": 0.22676579925650556}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize r for n + 1", "true": "populates the <unk> , ie , <unk> and in arrays , and i initial value", "bleu": 0.04144655666113052, "rouge": 0.0}, {"predict": "serializes the expression tree to a st term", "true": "serialize a node ( and it ' s children ) to a parsable string", "bleu": 0.09969456998702547, "rouge": 0.1732954545454545}, {"predict": "initialize the internal frame menu", "true": "initialize the internal frame menu button settings", "bleu": 0.6703200460356393, "rouge": 0.8090185676392573}, {"predict": "create a work flow", "true": "return a work flow", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "remove a data source listener", "true": "remove a data source listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the right string of a given length , starting from the given string", "true": "returns a substring of the given string , representing the ' length ' most - right characters", "bleu": 0.17099637641306709, "rouge": 0.3170478170478171}, {"predict": "clears the key store two methods", "true": "this function clears the block values for blocks in this section", "bleu": 0.12634437832866913, "rouge": 0.2234432234432234}, {"predict": "function that computes the vector from its stored data", "true": "loads an object from its stored data , with an unknown class", "bleu": 0.28146399662233007, "rouge": 0.3713850837138508}, {"predict": "stops the grid count and resets statistics to stopped", "true": "stops clock timer if all nodes into jvm were stopped", "bleu": 0.1397712139461423, "rouge": 0.20854700854700853}, {"predict": "push the folder of the last template loaded as a temporary relative reference", "true": "resolve the folder name and push the resulting folder as the last template folder", "bleu": 0.22243539687257283, "rouge": 0.4414957780458384}, {"predict": "prints the first screen list", "true": "print , to system", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "draws a horizontal bar zi er path", "true": "draws a cubic line", "bleu": 0.24446151121745047, "rouge": 0.3824451410658307}, {"predict": "adds a new event to the queue", "true": "adds a new event to the queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a compute location for local repository", "true": "creates a generator for a set of beans", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "initialize g state from the background values of the process", "true": "displays the initialized board on the state view", "bleu": 0.14991106946711685, "rouge": 0.22676579925650556}, {"predict": "h base table connection callback function", "true": "h base table connection callback function", "bleu": 1.0, "rouge": 1.0}, {"predict": "add primitive type abbreviation to maps of abbreviations", "true": "add primitive type abbreviation to maps of abbreviations", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize entity map based upon content type", "true": "initialize the tree map , which associates angles with images / animations", "bleu": 0.10063351655856649, "rouge": 0.20098846787479407}, {"predict": "find and return the replica tor conf as", "true": "find and return the replica tor home directory", "bleu": 0.7259795291154771, "rouge": 0.75}, {"predict": "construct a new string data object", "true": "creates a transferable capable of transferring the specified string", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "writes the chunk into the given object", "true": "this routine simply tests for robustness of the to string function", "bleu": 0.10489671869455933, "rouge": 0.10683012259194395}, {"predict": "appends the string representation of the float argument to this string buffer", "true": "appends the string representation of the float argument to this string buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "open the given file or system on this platform , if it ' s available", "true": "opens a file with the default system action", "bleu": 0.09782375748961449, "rouge": 0.18401206636500753}, {"predict": "tests the sync destination", "true": "used to determine if a car can be set out at a destination ( location )", "bleu": 0.017888698387160718, "rouge": 0.09023668639053255}, {"predict": "close the stream , flushing it first", "true": "close the stream , flushing it first", "bleu": 1.0, "rouge": 1.0}, {"predict": "normalizes a path to a given string", "true": "process a path into an array of folders", "bleu": 0.21191828141393895, "rouge": 0.2634989200863931}, {"predict": "returns a random number", "true": "returns a random to be used by the current thread if available , otherwise returns null", "bleu": 0.03329461928420731, "rouge": 0.27071005917159763}, {"predict": "records the deployment logic server for deployment", "true": "record the fact that something was deployed , resulting in the given deployment id", "bleu": 0.07562380261607851, "rouge": 0.17967599410898377}, {"predict": "this is invoked before the bundle thread is closed", "true": "this method is called before ignite initial is es", "bleu": 0.17747405280050263, "rouge": 0.4444444444444444}, {"predict": "invoked if the computation completes successfully", "true": "invoked if the computation completes successfully", "bleu": 1.0, "rouge": 1.0}, {"predict": "handler for the api thread - related information", "true": "shuts down a cleanup thread com", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "write a new data in the buffer on the current data position", "true": "expands the current speech data by appending a new buffer of audio data", "bleu": 0.17792307784923767, "rouge": 0.31770833333333337}, {"predict": "get the identity template", "true": "parse the control template and merge it with the control context", "bleu": 0.06909866532427987, "rouge": 0.24596774193548387}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "on create the contents of the xml tag", "true": "before this in f later tries to create an item from the tag , this method will be called", "bleu": 0.048218604638712956, "rouge": 0.20701357466063344}, {"predict": "writes basic ex if data to the tiny planet image , and returns the file if tags", "true": "writes the jpeg data to a file", "bleu": 0.11306082351602978, "rouge": 0.3604135893648449}, {"predict": "checks to see if there is any image ssl for the given image", "true": "check if there are image servers in the system", "bleu": 0.14283632578659286, "rouge": 0.37596302003081655}, {"predict": "returns current nanosecond time", "true": "returns current nanosecond time", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method removes an extension from the recognizer", "true": "this method removes an extension to the recognizer", "bleu": 0.6606328636027614, "rouge": 0.875}, {"predict": "retrieve list of namespace declaration locations active at this node", "true": "retrieve list of namespace declaration locations active at this node", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the specified observer to the list of observers", "true": "adds the specified observer to the list of observers", "bleu": 1.0, "rouge": 1.0}, {"predict": "close a byte array output stream passed in", "true": "close a byte array output stream passed in", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the distance between the given data point , index i", "true": "computes the distance between one data point and a specified mean", "bleu": 0.2521193618434983, "rouge": 0.45454545454545453}, {"predict": "format the pattern and return internal state", "true": "formats the parsed string by inserting table ' s values", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "adds a key - value mapping", "true": "adds a key - value mapping", "bleu": 1.0, "rouge": 1.0}, {"predict": "release an instance injected as a field of an object", "true": "release an instance injected as a field of an object", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts an list of collections to a list", "true": "converts list of alert entity objects to list of alert d to objects", "bleu": 0.13434323860909256, "rouge": 0.45658682634730546}, {"predict": "creates a force executor object to be used in common pool", "true": "null - checks user executor argument , and translates uses of common pool to a sync pool in case parallelism disabled", "bleu": 0.07464740820301685, "rouge": 0.17749757516973808}, {"predict": "adds a group properties listener", "true": "adds a group properties listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "this function edits a global function comment in the database", "true": "edits a global function comment", "bleu": 0.4617366309441026, "rouge": 0.7093023255813954}, {"predict": "helper method to load the xml element from the given element", "true": "update static data from xml file", "bleu": 0.12605968092174913, "rouge": 0.12423625254582485}, {"predict": "clear any existing session", "true": "clear any existing session", "bleu": 1.0, "rouge": 1.0}, {"predict": "method which returns true if the entry corresponding to in et address ( entry )", "true": "checks if the entry exists in the directory", "bleu": 0.16188613565728213, "rouge": 0.36802413273001505}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "this is called for poly java utf url safe java source string", "true": "class name to wrapper hash , derived from wrapper", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "process notification of the start of an xml element being reached", "true": "process notification of the start of an xml element being reached", "bleu": 1.0, "rouge": 1.0}, {"predict": "check type of section element defined by key", "true": "check type of section element defined by key", "bleu": 1.0, "rouge": 1.0}, {"predict": "this function create as multiple regions on nodes specified in the vm list", "true": "this function creates a partition region with total buckets num property set to 11", "bleu": 0.11640435130573178, "rouge": 0.1471652593486128}, {"predict": "generates a new householder transformation filter representing the java zm at a zm at ( altered ) of a zm at c tl", "true": "constructs a z dia <unk> at and initializes it to the diagonal of a zm at", "bleu": 0.16564565321939206, "rouge": 0.317984361424848}, {"predict": "report product version information from ant", "true": "report product version information from ant", "bleu": 1.0, "rouge": 1.0}, {"predict": "fills and returns the neurons in the neuron neuron", "true": "create the cascading network", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "check for equality of the two characters sequences starting at the specified index", "true": "check for equality of the two characters sequences starting at the specified index", "bleu": 1.0, "rouge": 1.0}, {"predict": "divide zero by a negative number", "true": "divide zero by a negative number", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an enumeration of all productions contained in this non terminal", "true": "access to productions with this non terminal on the lhs", "bleu": 0.22416933501922287, "rouge": 0.384251968503937}, {"predict": "add the given node to the set of \" tight \" nodes", "true": "add the given node to the set of \" tight \" nodes", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the specified event is disabled and shouldn ' t be processed by at end time", "true": "end of i n s e t s c o d e", "bleu": 0.07535838128770536, "rouge": 0.06916099773242629}, {"predict": "creates new d jar info dialog where the parent is a frame", "true": "creates new d jar info dialog where the parent is a frame", "bleu": 1.0, "rouge": 1.0}, {"predict": "transforms a point array with all matrices very touch - touch - to value - touch - offset", "true": "transform an array of points with all matrixes except the touch matrix - - > use this if the transformed values are not effected by touch gestures", "bleu": 0.06945987576301767, "rouge": 0.30028129395218006}, {"predict": "this method converts the escaped function into the database", "true": "this method converts escaped function to a server function call", "bleu": 0.2795424278922846, "rouge": 0.5213675213675214}, {"predict": "return a string representation of this object", "true": "return a string representation of this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new ims listener", "true": "add a listener for receiving events", "bleu": 0.31610981104846864, "rouge": 0.5366568914956013}, {"predict": "check using des many times and optimistically", "true": "check that a number of <unk> are available", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "converts the given stamp to the given ( in t ) , i", "true": "returns a path representing the history part for the specified time stamp", "bleu": 0.1135935489027116, "rouge": 0.16116248348745044}, {"predict": "adds a ping event with a testing", "true": "adds a ping time sample to the averaging window", "bleu": 0.2598013194025897, "rouge": 0.3667334669338677}, {"predict": "prints the user ' s message in a human - readable message", "true": "output a regular message from a user", "bleu": 0.1235622127262679, "rouge": 0.22101449275362317}, {"predict": "connects to the socket", "true": "creates the new server socket", "bleu": 0.3096787331587729, "rouge": 0.43571428571428567}, {"predict": "check if access or not a given access modifier is modifier or \" to \" _ \" , \" = \" \" \" \" , \"", "true": "returns true if str is an access modifier , false otherwise", "bleu": 0.07305891545072536, "rouge": 0.23326959847036327}, {"predict": "handles append request failure request", "true": "handles an append failure", "bleu": 0.32466791547509893, "rouge": 0.6802973977695167}, {"predict": "selects the most suitable preview and picture size , given the desired width and height", "true": "selects the most suitable preview and picture size , given the desired width and height", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads all available rows from the given cursor and returns a list of new image to objects", "true": "reads all available rows from the given cursor and returns a list of new image to objects", "bleu": 1.0, "rouge": 1.0}, {"predict": "decode the base 64 encoded string from the given utf - 8 string", "true": "converts the provided byte array to a string using the utf - 8 encoding", "bleu": 0.18934058951353838, "rouge": 0.4414957780458384}, {"predict": "converts the attributes to lower case", "true": "returns a copy of the set of attributes for this node with lowercase names", "bleu": 0.06443935473636557, "rouge": 0.18654434250764526}, {"predict": "makes the given visitor visit the annotations of this instruction", "true": "makes the given visitor visit the annotations of this instruction", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a list from passed obj x parameters", "true": "create a list from passed obj x parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the next part of the file on the download", "true": "reads the next part of the related file", "bleu": 0.5900468726392808, "rouge": 0.7936802973977695}, {"predict": "computes sum from the estimator", "true": "compute the parameters of the distribution", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "translates the database specific sql command to specific data type", "true": "translate data type from source to target database", "bleu": 0.18850319022747347, "rouge": 0.22676579925650556}, {"predict": "get the rectangle of a entity", "true": "creates a list of shape record to draw a rectangle from the given origin ( start x , start y ) for the specified width and height ( in pixels ) and radius x and radius y for rounded corners", "bleu": 0.0009608832335593526, "rouge": 0.07672955974842767}, {"predict": "find the minimum of all elements in the array , ignoring elements that are nan", "true": "find the minimum of all elements in the array , ignoring elements that are nan", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the cache and deletes all of its stored values", "true": "closes the cache and deletes all of its stored values", "bleu": 1.0, "rouge": 1.0}, {"predict": "moves the selected item down in the model ( and table )", "true": "moves the selected item down in the model ( and table )", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new file with the given path", "true": "creates a new jar", "bleu": 0.21105340631872638, "rouge": 0.3546511627906977}, {"predict": "shuts down the executor", "true": "shut down the scanner , interrupting running tasks and cancelling waiting ones", "bleu": 0.06399610426154731, "rouge": 0.22932330827067668}, {"predict": "convert collection of path paths to relative path", "true": "covert list of files to relative paths", "bleu": 0.239802967618271, "rouge": 0.4048672566371681}, {"predict": "handles the unlock or install on a root certificate", "true": "based on the current state of the key store and key guard , try to make progress on <unk> or installing to the key store", "bleu": 0.028367971685519765, "rouge": 0.10844444444444444}, {"predict": "called from on touch event to end a drag operation", "true": "called from on touch event to end a drag operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the start time stamps , which is only the specified range entries", "true": "if the recurrence rule is such that the event start date doesn ' t actually fall in one of the <unk> , then push the start date up to the first actual instance of the event", "bleu": 0.025483954524564655, "rouge": 0.15052436767427513}, {"predict": "rounds the x , y , and z values of this vector 3 up to the nearest integer value", "true": "rounds the x , y , and z values of this vector 3 up to the nearest integer value", "bleu": 1.0, "rouge": 1.0}, {"predict": "implements the abstract method simulate method", "true": "implements the abstract method simulate method", "bleu": 1.0, "rouge": 1.0}, {"predict": "pops nodes of already explored states from the head of the frontier and checks whether there are not yet explored", "true": "helper method which removes nodes of already explored states from the head of the frontier", "bleu": 0.5362721716524186, "rouge": 0.6451923076923077}, {"predict": "adds wheel changing listener", "true": "adds wheel changing listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse the attributes passed to the view from the xml", "true": "parse the attributes passed to the view from the xml", "bleu": 1.0, "rouge": 1.0}, {"predict": "concatenates two byte arrays", "true": "concatenates two byte arrays", "bleu": 1.0, "rouge": 1.0}, {"predict": "assert either complete successfully or error signal has been received", "true": "assert either complete successfully or error signal has been received", "bleu": 1.0, "rouge": 1.0}, {"predict": "asserts the argument is valid , as determined by the caller passing the result of an evaluated expression to this assertion", "true": "asserts the argument is valid , as determined by the caller passing the result of an evaluated expression to this assertion", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests whether the calendar instance is before given calendar", "true": "allows to know if a given calendar instance is set before today", "bleu": 0.2238400777155271, "rouge": 0.3713850837138508}, {"predict": "builds the login popup and returns the popup element", "true": "build a standard login ui with username and password fields", "bleu": 0.1397712139461423, "rouge": 0.20854700854700853}, {"predict": "explicitly un register a volume from the scsi initiator", "true": "un map the volume from scsi initiator", "bleu": 0.25406637407730737, "rouge": 0.639412997903564}, {"predict": "returns the collection of elements of this collection", "true": "returns the underlying collection", "bleu": 0.22679164443904004, "rouge": 0.5319767441860466}, {"predict": "bounds is calculated by starting and ending arc at the time and solve ( grid and solve the solve ( ) and solve ( iff they isn ' t )", "true": "add a quarter circular path to a given path object , starting from ( x 1 , y 1 ) to ( x 2 , y 2 )", "bleu": 0.053091875602826286, "rouge": 0.17349260523321955}, {"predict": "parses the given string as a template , starting at the current position", "true": "parse content in block into inline children , using reference map to resolve references", "bleu": 0.08844818008721958, "rouge": 0.0735826296743064}, {"predict": "fill given array with random bytes", "true": "fill given array with random bytes at the specified position", "bleu": 0.513417119032592, "rouge": 0.7176470588235294}, {"predict": "removes all scanning scanning callback s", "true": "removes all scanning callback s", "bleu": 0.5721248424548514, "rouge": 0.9242424242424241}, {"predict": "reads to the underlying output stream if not null", "true": "reads from the underlying input stream if not null", "bleu": 0.4671379777282001, "rouge": 0.7777777777777778}, {"predict": "handles context creation without performing service creation", "true": "assumption is always cache and member mbe an has been will be created first", "bleu": 0.057461663912368725, "rouge": 0.0}, {"predict": "checks to see if some shape shape is set", "true": "check whether fast transition is valid", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "returns true if the selected file is part of a file , false if it is connected to the filesystem", "true": "returns true if the given file is visible", "bleu": 0.19554016376461797, "rouge": 0.4644670050761421}, {"predict": "return a new copy of random - based representation of buffer", "true": "append strings to an array creating a new array for the result", "bleu": 0.13688390490906435, "rouge": 0.17256011315417258}, {"predict": "deletes any existing entry in this plugin", "true": "removes and destroys the object", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "construct a new string by converting the specified sub array of bytes using the specified character encoding", "true": "construct a new string by converting the specified sub array of bytes using the specified character encoding", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize - next - larger element parsing and range parsing + for less than equal operators ' format ' , and the following character", "true": "initialize the scratch item set", "bleu": 0.05606668411195419, "rouge": 0.15641025641025638}, {"predict": "creates a copy of the area representing the area", "true": "returns the bounds of the editor", "bleu": 0.19960198807747329, "rouge": 0.27664399092970515}, {"predict": "reads a byte array", "true": "reads the next chunk from the stream", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "construct a cuboid in the given world name and xyz co - ordinates", "true": "construct a cuboid in the given world and xyz co - ordinates", "bleu": 0.7825422900366437, "rouge": 0.9669749009247028}, {"predict": "calculates the log marginal likelihood of a model using the arithmetic mean estimator", "true": "calculates the log marginal likelihood of a model using newton and rafter y ' s <unk> estimator", "bleu": 0.5095248904108802, "rouge": 0.6510138740661686}, {"predict": "return true if message is a new message with \" cancel \" and false otherwise", "true": "returns true if the message starts with & quo t ; new ( & quo t ; or if it equals & quo t ; new & quo t ;", "bleu": 0.04736201512792776, "rouge": 0.1676975945017182}, {"predict": "installs the properties to install on this operating system", "true": "installs any system properties", "bleu": 0.16784459625186196, "rouge": 0.3306233062330623}, {"predict": "writes doubles from the given double array , starting from the specified offset , to the current position and increases the position by the number of doubles written", "true": "writes doubles from the given double array , starting from the specified offset , to the current position and increases the position by the number of doubles written", "bleu": 1.0, "rouge": 1.0}, {"predict": "con v in ien ce method that allows to load the relevant attributes from the entity list and places it to match the address", "true": "for a given address type , extract the recipients from the headers", "bleu": 0.07575731225158963, "rouge": 0.17732558139534885}, {"predict": "checks whether the extension of the filename is that specified", "true": "checks whether the extension of the filename is that specified", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the name of the given name", "true": "s can the disk looking for the location of where the source resides", "bleu": 0.09374222649442905, "rouge": 0.2846034214618974}, {"predict": "need to override this method to do invoked immediately so the org", "true": "used to automatically update the timestamp of locks", "bleu": 0.11498759556447223, "rouge": 0.2074829931972789}, {"predict": "adds a pad pad stacks to the p ob , which means such as p pad stacks", "true": "appends a new pad stack with the input shapes to this pad stacks", "bleu": 0.11750296943620289, "rouge": 0.34154535274356107}, {"predict": "calculate the bounds for a view ' s title", "true": "calculate the bounds for a view ' s title", "bleu": 1.0, "rouge": 1.0}, {"predict": "the start of a content model", "true": "the start of a content model", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an om range rings in the form a lat / lon pair", "true": "create an om range rings with a lat / lon center and a physical distance radius", "bleu": 0.35356951990009544, "rouge": 0.541620421753607}, {"predict": "creates an input source from a string", "true": "create an input source form a string", "bleu": 0.4111336169005197, "rouge": 0.7142857142857143}, {"predict": "writes a char sequence to a file creating the file if it does not exist using the default encoding for the vm", "true": "writes a char sequence to a file creating the file if it does not exist using the default encoding for the vm", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the root node of the user preference hierarchy", "true": "returns the root node of the user preference hierarchy", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a socket identifier as a human - readable string", "true": "generates a vaguely human - readable format for a given socket identifier", "bleu": 0.2454736055990765, "rouge": 0.3577712609970674}, {"predict": "handles the album / artwork picture", "true": "called by the providers when the details of an album have been updated", "bleu": 0.07612610271614867, "rouge": 0.19741100323624597}, {"predict": "tell if the table contains the given string", "true": "tell if the table contains the given string", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses file from standard java io format", "true": "read contents of a file", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "converts a tile to the tile at the given tile", "true": "converts a pixel ' s x coordinate into a horizontal tile index relative to a given tile grid layout specified by its x offset and tile width", "bleu": 0.042861848391138616, "rouge": 0.2995090016366612}, {"predict": "check if we ' ve crossed a reasonable touch slop for the given child view", "true": "check if we ' ve crossed a reasonable touch slop for the given child view", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs an input object with the given name , type , and alignment", "true": "creates a new input that can be added to a block", "bleu": 0.09552040806823771, "rouge": 0.08460471567267684}, {"predict": "create and e the class manager", "true": "create a new instance of the class manager", "bleu": 0.31149111610852515, "rouge": 0.5570776255707762}, {"predict": "display the current render surface", "true": "display the current render surface", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the last login time", "true": "returns the last login time", "bleu": 1.0, "rouge": 1.0}, {"predict": "splits the words in a string to leave into a single stream", "true": "creates and returns a stream of the words in the given text", "bleu": 0.21401603033752975, "rouge": 0.25}, {"predict": "add the supplied application info objects to the list , and en queue it into the list to broadcast when notify ( ) is called", "true": "add the supplied application info objects to the list , and en queue it into the list to broadcast when notify ( ) is called", "bleu": 1.0, "rouge": 1.0}, {"predict": "called when a new query not related to this query", "true": "filter the matching objects for the one ( s ) who os e named field is equal to value", "bleu": 0.05125204157936403, "rouge": 0.06531049250535333}, {"predict": "removes a playlists from playlists database", "true": "removes some markup that appears on the plot for youtube videos", "bleu": 0.09600096733558854, "rouge": 0.1117216117216117}, {"predict": "construct new dash array string from string list", "true": "creates the dash array string", "bleu": 0.2984745896009823, "rouge": 0.48157894736842105}, {"predict": "cas head field", "true": "cas head field", "bleu": 1.0, "rouge": 1.0}, {"predict": "positions the given pattern into the position at the given position", "true": "finds the position of the given pattern in this blob", "bleu": 0.2521193618434983, "rouge": 0.384251968503937}, {"predict": "flush underlying stream", "true": "loads the most recent generation file", "bleu": 0.16620830006469264, "rouge": 0.0}, {"predict": "reads a line of text that contains no newlines", "true": "read a line from the given stream", "bleu": 0.18575057999133596, "rouge": 0.2557651991614256}, {"predict": "replaces unprintable characters by their escaped ( or unicode escaped ) equivalents in the given string", "true": "replaces unprintable characters by their e spaced ( or unicode escaped ) equivalents in the given string", "bleu": 0.7780667585391489, "rouge": 0.9041501976284585}, {"predict": "check whether the given table exists in the currently connected database", "true": "check if the table exists by issuing a select", "bleu": 0.17033186037639278, "rouge": 0.4073455759599332}, {"predict": "process the http : / / www", "true": "we found a \" : \" and is now trying to read either scheme , username / password", "bleu": 0.04270613179243733, "rouge": 0.14823815309842042}, {"predict": "tests if the given script contains a string and signature associated with the script", "true": "does the provided sql script contain the specified delimiter ?", "bleu": 0.10511846841633776, "rouge": 0.2577464788732394}, {"predict": "writes a byte array with the specified offset", "true": "writes the bytes on the output stream", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "establish an invariant that the specified service is not in the quorum state", "true": "establish an invariant that the specified service is a not joined with the met quorum", "bleu": 0.5487875691327668, "rouge": 0.7757225433526012}, {"predict": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "true": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "bleu": 1.0, "rouge": 1.0}, {"predict": "do the appropriate processing for cfb mode encryption", "true": "do the appropriate processing for cfb mode encryption", "bleu": 1.0, "rouge": 1.0}, {"predict": "print the document as a string", "true": "prints a string without adding a / n at the end", "bleu": 0.13576587000692578, "rouge": 0.2234432234432234}, {"predict": "adds each of the groups of the current groups to their respective parents", "true": "adds each of the provided connection groups to the current tree as children of their respective parents", "bleu": 0.3171322657848148, "rouge": 0.6510138740661686}, {"predict": "load the java", "true": "loads a map input into this cartesian plot", "bleu": 0.08533418657851909, "rouge": 0.0}, {"predict": "adds a decoration at the end of the list", "true": "add another line decoration into the composite line decoration", "bleu": 0.15619699684601276, "rouge": 0.2222222222222222}, {"predict": "the link title of a link", "true": "attempt to parse link title ( <unk> quotes ) , returning the string or null if no match", "bleu": 0.042277929617726875, "rouge": 0.15288220551378442}, {"predict": "record s rdf related event and audit", "true": "record block volume related event and audit", "bleu": 0.5410822690539396, "rouge": 0.7142857142857143}, {"predict": "add the data of a given ordering", "true": "add a single value with weight 1", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "returns the number of items in the list", "true": "returns the number of recent items currently stored", "bleu": 0.46713797772820004, "rouge": 0.625}, {"predict": "create a warning diagnostic", "true": "create a warning diagnostic", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new evaluation on the expressions", "true": "generate the code for the specified pattern", "bleu": 0.18575057999133598, "rouge": 0.14285714285714285}, {"predict": "handles add request validation button", "true": "called on request from the ui to delete an event handler", "bleu": 0.08222966016687185, "rouge": 0.11708253358925146}, {"predict": "remove a graph listener", "true": "remove a graph listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if this connection is ready to host new streams", "true": "returns true if this connection is ready to host new streams", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the given column to this table at the given position in the column list", "true": "adds the given column to this table at the given position in the column list", "bleu": 1.0, "rouge": 1.0}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes new panel to run the panel", "true": "initializes all components used in dialog", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "constructs a new batched image request object", "true": "constructs a new batched image request object", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the norm of a vector", "true": "computes the norm of a vector", "bleu": 0.8091067115702212, "rouge": 0.8333333333333334}, {"predict": "gets a string representation of the value", "true": "gets a string representation of the value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a hash code for the same expression as the same time", "true": "probably should recheck this later", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "de serialize archive for archive archive", "true": "de serializes exam p <unk> stored in <unk> in get archive directory ( )", "bleu": 0.06443935473636557, "rouge": 0.18654434250764526}, {"predict": "converts a ring of nodes into minimal edge rings", "true": "convert the maximal edge rings found by the initial graph travers al into the minimal edge rings required by jt s polygon topology rules", "bleu": 0.05246244695020633, "rouge": 0.22405876951331496}, {"predict": "generate basic mac to receive loop vector", "true": "generate the mac ( message authentication code ) from a security - encrypted message to do : public for testing - look to remove", "bleu": 0.019474777613022468, "rouge": 0.17613089509143406}, {"predict": "removes a listener on image sharing events", "true": "removes a listener on image sharing events", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the wave file size", "true": "updates the overall and the chunk 2 sizes", "bleu": 0.1971902775417715, "rouge": 0.2953995157384988}, {"predict": "write the new journal to the output file", "true": "write the new journal to the output file", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the matches this string matches the given array", "true": "returns true if the char segment matches the string", "bleu": 0.21834177214239062, "rouge": 0.42508710801393734}, {"predict": "called when the mouse button has been released", "true": "mouse released , this will be called when the spinner button is released", "bleu": 0.18375231731070077, "rouge": 0.45658682634730546}, {"predict": "evaluates the maximum class value per series", "true": "gets the max value for a given class in a transposed chart when using <unk>", "bleu": 0.0704451546128839, "rouge": 0.17062937062937064}, {"predict": "adds the channel to the channel handler at the given position and updates the channel list", "true": "adds the channel to the model and broadcasts a channel add event", "bleu": 0.30277029197532096, "rouge": 0.5132211538461539}, {"predict": "joins an array of objects into one string with separator", "true": "joins an array of objects into one string without separators", "bleu": 0.7860753021519787, "rouge": 0.8}, {"predict": "test traits , traits , returns false if a trait", "true": "returns true if the store can handle the provided trait and false if it cannot", "bleu": 0.11433296432660552, "rouge": 0.23164556962025318}, {"predict": "create document , ensuring that they can be skipped while using the current product", "true": "create supply based in out bound line", "bleu": 0.08839374326825923, "rouge": 0.10132890365448505}, {"predict": "return the number of name - value pairs in this list", "true": "returns the number of parameters in this parameter file", "bleu": 0.2521193618434983, "rouge": 0.5091819699499166}, {"predict": "returns the largest ( \" top \" ) n values in the column", "true": "returns the largest ( \" top \" ) n values in the column", "bleu": 1.0, "rouge": 1.0}, {"predict": "load the values for this step from an xml node", "true": "load the values for this step from an xml node", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one", "true": "adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one", "bleu": 1.0, "rouge": 1.0}, {"predict": "read data - - input the mod bus message from d in", "true": "read data - - read the reference word", "bleu": 0.3026643726685863, "rouge": 0.5187074829931972}, {"predict": "compute the dot product ( or \" scalar product \" ) of a vector", "true": "return the dot product to a dense feature vector", "bleu": 0.18207052811092136, "rouge": 0.45252225519287836}, {"predict": "creates the new instructions , in lining each instantiation of each subroutine until the code is fully elaborated", "true": "creates the new instructions , in lining each instantiation of each subroutine until the code is fully elaborated", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the standard deviation ( square root of the specified list of doubles", "true": "gets the standard deviation from a list of numbers", "bleu": 0.21142141714303078, "rouge": 0.4699537750385208}, {"predict": "called when there is new data to the client", "true": "trims the capacity of this instance to be the list ' s current size", "bleu": 0.08961856124931385, "rouge": 0.1673525377229081}, {"predict": "set bit ( in t n ) outside zero", "true": "set bit ( in t n ) outside zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "compares a date and a string", "true": "compares a date with a boolean", "bleu": 0.4347208719449915, "rouge": 0.6666666666666666}, {"predict": "decodes the next chunk from the stream", "true": "read ahead and decode the next chunk of solutions", "bleu": 0.2598013194025897, "rouge": 0.3667334669338677}, {"predict": "creates a udp client socket that will send given a udp socket", "true": "create a new udp client socket with the specified logger", "bleu": 0.2044800736021839, "rouge": 0.3696969696969697}, {"predict": "multiply by values by type by given value", "true": "will multiply all values by a given double", "bleu": 0.239802967618271, "rouge": 0.5}, {"predict": "test whether the given level is a level whose level", "true": "is logging level logged", "bleu": 0.13950796967929133, "rouge": 0.3096446700507614}, {"predict": "compute the folder children of the given folder in the package fragment for this package", "true": "starting at this folder , create package fragments and add the fragments that are not ex cl used to the collection of children", "bleu": 0.06824614360168661, "rouge": 0.1521197007481297}, {"predict": "quote the given file or characters", "true": "quotes the absolute path of the given file iff it contains whitespace", "bleu": 0.15124760523215705, "rouge": 0.31443298969072164}, {"predict": "tries to read from net buffer and passes it to remote peer", "true": "read data from net buffer", "bleu": 0.2044800736021839, "rouge": 0.5083333333333333}, {"predict": "this method clears and its associated top - level , and clear cache top - level map", "true": "called when this index is closed", "bleu": 0.07223943354597204, "rouge": 0.09516380655226209}, {"predict": "removes an image consumer from the list of consumers interested in data for this image", "true": "remove an image consumer from the list of consumers interested in data for this image", "bleu": 0.9306048591020997, "rouge": 0.9333333333333336}, {"predict": "should a navigation bar appear at the bottom of the screen in the current device configuration ? a navigation bar may appear on the right side of the screen in certain configurations", "true": "should a navigation bar appear at the bottom of the screen in the current device configuration ? a navigation bar may appear on the right side of the screen in certain configurations", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new value to the aperture - asynchronously adding / removing reactive sockets to match target aperture - periodically add a new connection", "true": "update the aperture value and ensure its value stays in the right range", "bleu": 0.07164684238257436, "rouge": 0.11423220973782772}, {"predict": "builds the invocation object , and invocation cache , if it is invocation , invocation and invocation", "true": "builds the invocation , saving its value keyed by the protocol key", "bleu": 0.1527678022374703, "rouge": 0.2847141190198366}, {"predict": "this method compute the mark of the audit", "true": "this method compute the mark of the audit", "bleu": 1.0, "rouge": 1.0}, {"predict": "gcd : the first number is zero", "true": "gcd : the first number is zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "test for a position , return a position", "true": "test that if king capture is possible , only a king capture move is returned in the move list", "bleu": 0.048218604638712956, "rouge": 0.20701357466063344}, {"predict": "implements go lay ( 23 , 12 , 12 , and set the message", "true": "performs error detection and returns a corrected copy of the 24 - bit message that starts at the start index", "bleu": 0.0684782759942471, "rouge": 0.17102803738317757}, {"predict": "validate the view parameter expressions and return a list of expressions", "true": "validate the view parameter expressions and evaluate the expressions returning the result object", "bleu": 0.444529989246911, "rouge": 0.5746971736204576}, {"predict": "parse the given relative directory and return the index", "true": "parses relative directory from <unk> definition ( in format starting from svn 1", "bleu": 0.11909962902993415, "rouge": 0.17604617604617603}, {"predict": "picks an encoding for an external entity", "true": "picks an encoding for an external entity", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates a url for a particular item within a series", "true": "generates a url for a particular item within a series", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the thread should expire instead of going to the idle state", "true": "returns true if the thread should expire instead of going to the idle state", "bleu": 1.0, "rouge": 1.0}, {"predict": "displays a profile of entity", "true": "sets the values to ui model", "bleu": 0.18796001821050234, "rouge": 0.0}, {"predict": "construct an empty string and writes it to out in file", "true": "char * in file ; input file long * a ; address of output tiled image operation nx ny in t * nx , * ny ; size of output tiled image operation in t * scale ; scale factor for <unk>", "bleu": 0.008951851925015925, "rouge": 0.06827084499160604}, {"predict": "create a script from the data set", "true": "create a script from a new database", "bleu": 0.5169731539571706, "rouge": 0.5714285714285714}, {"predict": "return a random real number from the cauchy distribution", "true": "returns a random real number from the cauchy distribution", "bleu": 0.8801117367933934, "rouge": 0.8888888888888888}, {"predict": "add the given group to the list of job groups that will never be deleted by this processor , even if a pre - processing - command to delete the group is encountered", "true": "add the given group to the list of job groups that will never be deleted by this processor , even if a pre - processing - command to delete the group is encountered", "bleu": 1.0, "rouge": 1.0}, {"predict": "print the entire layout", "true": "print the entire layout", "bleu": 1.0, "rouge": 1.0}, {"predict": "wake a connection from the select / poll close", "true": "wake a connection from a select / poll keep alive", "bleu": 0.47013245105188434, "rouge": 0.7299145299145299}, {"predict": "add a field to the multi - query", "true": "adds a field to run the multi match against", "bleu": 0.313240603771157, "rouge": 0.5820610687022901}, {"predict": "encode a message", "true": "writes the basis to an output stream", "bleu": 0.11909345107359583, "rouge": 0.0}, {"predict": "request to be a cke d graph block es any pending requests", "true": "signal that currenlty there are no more pending a ck s", "bleu": 0.11498759556447223, "rouge": 0.08764367816091953}, {"predict": "converts an array of integers to a comma - separated string", "true": "converts an array into a string", "bleu": 0.23462350320527994, "rouge": 0.6211812627291243}, {"predict": "copies the source bytes , if necessary", "true": "copy the contents of the source array to the target array", "bleu": 0.1380518455178974, "rouge": 0.2136602451838879}, {"predict": "computes the location on the great circle distance", "true": "computes the angular distance of the great circle path between this location and a specified location", "bleu": 0.1403153115483935, "rouge": 0.3930412371134021}, {"predict": "parses manifest from rows", "true": "an example manifest file looks like { \" name \" : \" dynamo db - export \" , \" version \" : 3 , \" entries \" : { \" url \" : \" s 3 : / / path / to / object / <unk> dd <unk>", "bleu": 6.0009897707123595e-06, "rouge": 0.033369803063457326}, {"predict": "read bytes until the count is satisfied", "true": "read bytes until the count is satisfied", "bleu": 1.0, "rouge": 1.0}, {"predict": "fire when the operator is moved over all operator", "true": "fire when an operator has been moved", "bleu": 0.21105340631872635, "rouge": 0.5115303983228512}, {"predict": "removes a single individual", "true": "removes a single individual", "bleu": 1.0, "rouge": 1.0}, {"predict": "modifies the variable label", "true": "replaces occurrences of the old variable identifier <unk> with the new identifier new id", "bleu": 0.032639898338235177, "rouge": 0.20198675496688742}, {"predict": "repeats the specified substring a number of times", "true": "repeats the specified substring a number of times", "bleu": 1.0, "rouge": 1.0}, {"predict": "wait for a maximum amount of time for a state change event to occur", "true": "wait for a maximum amount of time for a state change event to occur", "bleu": 1.0, "rouge": 1.0}, {"predict": "pick the leaf that minimize cost", "true": "pick the leaf that minimize cost", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new add user fields", "true": "constructs a new add user fields", "bleu": 0.8091067115702212, "rouge": 0.8333333333333334}, {"predict": "parse a string as an integer , or null if the rgb set", "true": "we accept 0 x and # prefixes", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "get bounds of w f node icon", "true": "get bounds of w f node icon", "bleu": 1.0, "rouge": 1.0}, {"predict": "removed worker threads from a collection , worker threads", "true": "signals the given workers to end", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "returns a clone of this map", "true": "return a copy of the current frame", "bleu": 0.20693220168471366, "rouge": 0.3034825870646766}, {"predict": "override hash code", "true": "compute a combined hash code from the supplied objects using the supplied seed", "bleu": 0.02522532260784596, "rouge": 0.2246777163904236}, {"predict": "calculates the state transition percentage for the give name and high ( weight )", "true": "calculate state transition percentage", "bleu": 0.16451929399933107, "rouge": 0.37044534412955465}, {"predict": "get a method for a class name containing the given method name", "true": "creates a unique mangled method name based on the method name and the method parameters", "bleu": 0.13162217636752485, "rouge": 0.43571428571428567}, {"predict": "save a cached state , if required , or a string", "true": "saves the existing attribute states", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "pulls a string off the queue , up to but exclusive of the match sequence , or to the queue running out", "true": "pulls a string off the queue , up to but exclusive of the match sequence , or to the queue running out", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints out if you have an ip address ( except the colon ) then make a copy of ip addresses", "true": "prints out the given list of defined ip addresses", "bleu": 0.10996031481933312, "rouge": 0.44417475728155337}, {"predict": "close the given input stream", "true": "dispose the encoder , decoder , and the callback for the decoded messages", "bleu": 0.05512018958855254, "rouge": 0.10286677908937607}, {"predict": "calculates the number of transposition between two strings", "true": "calculates the number of transposition between two strings", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the given string ( not implemented )", "true": "uses the parser format instance", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "returns a non - parallel stream of this it er able", "true": "stream the ts data contents", "bleu": 0.11390778025531027, "rouge": 0.13406593406593406}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a modifier for two methods for two methods for two methods", "true": "constructs and registers a mod", "bleu": 0.10390302174233558, "rouge": 0.12708333333333333}, {"predict": "arranges the blocks with no constraint on the width or height", "true": "arranges the blocks without any constraints", "bleu": 0.21200626759025185, "rouge": 0.3727087576374745}, {"predict": "check if content type is shown", "true": "check whether the content - type field of the properties section ( if present ) in the given message matches the provided string ( where null matches if there is no content type present", "bleu": 0.003251007023732498, "rouge": 0.17758369723435224}, {"predict": "generates a new certificate that can be used with the https protocol", "true": "create a x", "bleu": 0.10390302174233558, "rouge": 0.14950980392156862}, {"predict": "handles next button request", "true": "handles next button request", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks all dependencies that match the same as input map", "true": "check that all dependencies are satisfied", "bleu": 0.17827531042796255, "rouge": 0.26180257510729615}, {"predict": "bean context membership listener method", "true": "bean context membership interface method", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "check for valid directory object", "true": "find the first parent directory that exists and check if this directory is write able", "bleu": 0.040889869516541145, "rouge": 0.18345864661654135}, {"predict": "returns a string representation of the netscape care", "true": "returns the textual description of the time value", "bleu": 0.22679164443904004, "rouge": 0.375}, {"predict": "write object is called to save the state of the delegation permission to a stream", "true": "write object is called to save the state of the url to an object output stream", "bleu": 0.6364955025585871, "rouge": 0.7697160883280757}, {"predict": "report the beginning of an entity", "true": "report the beginning of an entity", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines whether the given name is a java keyword", "true": "determines whether the given name is a java keyword", "bleu": 1.0, "rouge": 1.0}, {"predict": "extract the import href from the model", "true": "override this method to provide a custom way of extracting the imported resource url", "bleu": 0.06833381956448398, "rouge": 0.08983799705449189}, {"predict": "this will do not be two layout equals will only those of the same differences are future as well as well as those iv s text will be numerical one", "true": "compares the equality of two <unk> tors", "bleu": 0.047973925170118475, "rouge": 0.06087824351297405}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "renames an object type , e", "true": "renames an object type , e", "bleu": 1.0, "rouge": 1.0}, {"predict": "write a list of files in an xml document with the given tag name", "true": "write a list of strings to document as elements with given tag name", "bleu": 0.3479159475128446, "rouge": 0.6711491442542787}, {"predict": "creates a new d policy constraints dialog", "true": "creates a new d policy constraints dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "invalidate some underlying entity caches for the contents of a vm", "true": "invalidates all caches for all tenants", "bleu": 0.14991106946711685, "rouge": 0.2484725050916497}, {"predict": "flatten a byte into an xml serialize r", "true": "flatten a byte into an xml serialize r", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the strings to the file , one per line", "true": "write the strings to the file , one per line", "bleu": 1.0, "rouge": 1.0}, {"predict": "allows you to cancel all requests currently in queue or running , by set tag , if passed tag is null , will not attempt to cancel any requests , if tag is null on request handle , it cannot be canceled by this call", "true": "allows you to cancel all requests currently in queue or running , by set tag , if passed tag is null , will not attempt to cancel any requests , if tag is null on request handle , it cannot be canceled by this call", "bleu": 1.0, "rouge": 1.0}, {"predict": "utility function to draw a horizontal margin margin of the screen", "true": "draw a snap horizontal margin indicator", "bleu": 0.18850319022747347, "rouge": 0.4969450101832994}, {"predict": "records a subset record from a subset of the record to the subset of the old schema record", "true": "the subset of the original record that contains the values for the given subset schema", "bleu": 0.21951524426618454, "rouge": 0.43131313131313137}, {"predict": "queue the operation running", "true": "queues the operation for execution", "bleu": 0.36827215283744186, "rouge": 0.43571428571428567}, {"predict": "create a string that is a cell", "true": "interpret string of digits into cells", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "transforms the shape by specified shape into a shape object", "true": "return the supplied shape , translated to the coordinates that result from calling transform on its center", "bleu": 0.06927760750451363, "rouge": 0.14153132250580047}, {"predict": "prints out a list , starting at the specified indentation , to the specified print writer", "true": "prints out a list , starting at the specified indentation , to the specified print writer", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes all components used in dialog", "true": "initializes all components used in dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "obtains the revocation status of a certificate using o csp", "true": "obtains the revocation status of a certificate using o csp using the most common defaults", "bleu": 0.6065306597126334, "rouge": 0.7721518987341772}, {"predict": "for the given composite channel , all the composite composite composite and source the composite channel handler for the source", "true": "return a composite type object for the specified alpha composite rule", "bleu": 0.09134423666564473, "rouge": 0.20424107142857142}, {"predict": "removes the specified tracking icon", "true": "removes the specified tracking icon", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the variables that are in the relation set and starts new state machine", "true": "returns a list of all the <unk> used by the lts rules", "bleu": 0.09782375748961449, "rouge": 0.15601023017902813}, {"predict": "get the parent of the parent file with the given parent and a file path", "true": "convert a file into a relative path from a given parent", "bleu": 0.14247788801610148, "rouge": 0.2373540856031128}, {"predict": "returns if separation in pixels are equal to b", "true": "check whether two floating point values match with a given precision", "bleu": 0.09503475972243516, "rouge": 0.0}, {"predict": "ends the current element context and gets back to the parent context", "true": "ends the current element context and gets back to the parent context", "bleu": 1.0, "rouge": 1.0}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "enters a new scope by appending any necessary whitespace and the given bracket", "true": "enters a new scope by appending any necessary whitespace and the given bracket", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the logarithm of a given value", "true": "calculates the log of a given value", "bleu": 0.5946035575013605, "rouge": 0.8571428571428571}, {"predict": "uploads a file to the destination", "true": "uploads a file from source to the drop box", "bleu": 0.29654680334613515, "rouge": 0.6434599156118143}, {"predict": "creates a file zip file , storing the file or returns the zip file in the default directory of the file", "true": "create a file object to which we can safely zip a file", "bleu": 0.08687475782716618, "rouge": 0.2549634273772205}, {"predict": "remove a custom data handler for a given column name", "true": "remove a custom data handler for a given column name", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if tag is empty ( non - empty ) and false if it tag is present in this tag", "true": "determines whether the tag has no fields specified", "bleu": 0.05809665204409193, "rouge": 0.07503075030750307}, {"predict": "restore saved badge", "true": "restore available badges from save instance", "bleu": 0.19765609300943976, "rouge": 0.20962199312714777}, {"predict": "touch the current tree meaning that the current time has been constructed", "true": "touch the worker if you have a http connection that needs to wait", "bleu": 0.13519230385081712, "rouge": 0.23828125000000006}, {"predict": "construct a catalog entry of the specified name", "true": "construct a catalog entry of the specified type", "bleu": 0.8633400213704505, "rouge": 0.875}, {"predict": "adds a new message to the list of characters", "true": "adds a message waiting", "bleu": 0.19960198807747329, "rouge": 0.4959349593495934}, {"predict": "pushes the new stack on to the top of this stack", "true": "push a new scope on top of the scope stack", "bleu": 0.18527972555830952, "rouge": 0.4803149606299213}, {"predict": "logs diagnostic messages about the given class loader and it ' s hierarchy", "true": "logs diagnostic messages about the given class loader and it ' s hierarchy", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a member to the startup queue , gossiping parameters", "true": "add a gossip member to the list of members to start with", "bleu": 0.2284389301518129, "rouge": 0.44721407624633425}, {"predict": "gets files for all registered file append ers", "true": "gets files for all registered file append ers", "bleu": 1.0, "rouge": 1.0}, {"predict": "is the auto - reduction case sensitive ?", "true": "returns the case sensitive search switch", "bleu": 0.22679164443904004, "rouge": 0.43990384615384615}, {"predict": "test whether the given node is a namespace dec l node", "true": "test whether the given node is a namespace dec l node", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the hash code value for this object", "true": "returns the hash code value for this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new sub model i mpl", "true": "creates a simple model using default resource bundle", "bleu": 0.22772101321113858, "rouge": 0.3952483801295896}, {"predict": "return true if the two vectors", "true": "tests this function for equality with an arbitrary object", "bleu": 0.1126634218241493, "rouge": 0.0}, {"predict": "for custom purposes", "true": "<unk> a string color ( # ff <unk> ) to an in t color", "bleu": 0.01154872631036983, "rouge": 0.0}, {"predict": "triggers the default action", "true": "perform the default action", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "start the travers al at the given node", "true": "start the travers al at the given node", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new element to the end of an element", "true": "xml parser : closing xml tag", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "this method removes all endpoint from the list", "true": "cancel all observer relations that this server has established with this ' real tion ' s endpoint", "bleu": 0.06191391391332487, "rouge": 0.1502463054187192}, {"predict": "returns the value at index from the array", "true": "returns an instance ' s attribute value in internal format", "bleu": 0.13821693129588736, "rouge": 0.21785714285714283}, {"predict": "initialize the layout with starting values", "true": "initialize the layout with starting values", "bleu": 1.0, "rouge": 1.0}, {"predict": "decodes lz w image data into pixel array", "true": "decodes lz w image data into pixel array", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the value that corresponds to this key", "true": "find the value that corresponds to this key", "bleu": 1.0, "rouge": 1.0}, {"predict": "decodes the given base 58 string into the original data bytes", "true": "decodes the given base 58 string into the original data bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a match pattern from a pattern and template", "true": "construct a match pattern from a pattern and template", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes all files and sub directories in the given input stream", "true": "closes the b tree and then deletes its data files", "bleu": 0.14323145079400493, "rouge": 0.1921259842519685}, {"predict": "check if an annotation type has no prefix prefix , and that indicates that it can be used in the check binary type", "true": "checks to see if an annotated type has no prefix", "bleu": 0.169398499987232, "rouge": 0.39144385026737966}, {"predict": "asserts that the following format is alphabetically", "true": "throws an exception if the format is not syntactically valid", "bleu": 0.17112717058426782, "rouge": 0.34205607476635513}, {"predict": "log given logging , logging both grid and logging status to execution for it", "true": "initializes logger into / from log reference passed in", "bleu": 0.08839374326825923, "rouge": 0.09050445103857567}, {"predict": "receive one byte from the port and convert it into string", "true": "receive one byte from the port and convert it into string", "bleu": 1.0, "rouge": 1.0}, {"predict": "check whether a given resource can be used in the given monitor", "true": "checks all spin : constraints for a given resource", "bleu": 0.19338531381761725, "rouge": 0.2932692307692307}, {"predict": "check if the given person id is a valid imdb id", "true": "checks if is valid imdb id", "bleu": 0.23462350320527994, "rouge": 0.6211812627291243}, {"predict": "starts the video video", "true": "move to the activity where we show the recorded video", "bleu": 0.08872444253557525, "rouge": 0.26521739130434785}, {"predict": "writes all the bytes from the line to the given buffer", "true": "takes a list of coordinates and converts it to km l", "bleu": 0.11390778025531027, "rouge": 0.09090909090909091}, {"predict": "checks if the exception is one of the intended server side exception that has been thrown over the a idl layer", "true": "checks if the exception is one of the intended server side exception that has been thrown over the a idl layer", "bleu": 1.0, "rouge": 1.0}, {"predict": "swap the matrices so that the coordinate buffer can be drawn on a buffer", "true": "swap the matrices so that the largest value is on the pivot", "bleu": 0.41374412020518814, "rouge": 0.5460358056265985}, {"predict": "returns true if the popup should possibly run a task bar", "true": "returns whether popup is allowed to be shown above the task bar", "bleu": 0.16278331364721524, "rouge": 0.34512022630834516}, {"predict": "creates a new job for the specified act i viti xml", "true": "creates a job based on the specified act i viti xml class path resource location and defines a e mr cluster definition", "bleu": 0.2155427486881712, "rouge": 0.514526710402999}, {"predict": "finds the main class which matches the given root directory", "true": "find all classes below a certain directory which contain main ( ) classes", "bleu": 0.11105685174312292, "rouge": 0.084958217270195}, {"predict": "validate valid xml string", "true": "validates whether the given string only contains valid xml characters", "bleu": 0.11337974147240094, "rouge": 0.26521739130434785}, {"predict": "write the original font into a file", "true": "just for debugging convenience", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "see if a stack access definition is compatible with the current indent '", "true": "defines when a method access flags are compatible with instant run technology", "bleu": 0.14283632578659286, "rouge": 0.3223249669749009}, {"predict": "create a sequence containing a vector of objects", "true": "create a sequence containing a vector of objects", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a single thread manager object", "true": "configures with specified thread pool", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "checks the state of the object", "true": "after reading an object from the input stream , do a simple verification to maintain class in variants", "bleu": 0.03308426786106403, "rouge": 0.07644110275689221}, {"predict": "computes the location based on the provided segment , returning in pt", "true": "compute an offset segment for an input segment on a given side and at a given distance", "bleu": 0.07580449496515644, "rouge": 0.06688596491228069}, {"predict": "returns the object at the specified location in this vector", "true": "returns the element at the specified location in this vector", "bleu": 0.7419446627365011, "rouge": 0.9}, {"predict": "tidy up tokens in the qo s rules for qo s", "true": "creates the qo s rule objects from the given json object and returns them in a list", "bleu": 0.1299236773467765, "rouge": 0.20631341600901915}, {"predict": "crafts the octet string with specific characters to the corresponding hex - wire octets in the - wire octets", "true": "custom implementation of to octets to ensure a string value too long will be truncated properly in view of the space needed by the type , length , and identifier", "bleu": 0.04937016819824528, "rouge": 0.1569131832797428}, {"predict": "formats number of decimals to valid representation of pretty decimal", "true": "this function returns decimals value for a double", "bleu": 0.12605968092174913, "rouge": 0.11338289962825278}, {"predict": "flushes this output stream and forces any buffered output bytes to be written out to the stream", "true": "flush all buffered data to the underlying output stream", "bleu": 0.12512236921161915, "rouge": 0.3257676902536716}, {"predict": "move or copy a list of files from a given file to the destination - destination files", "true": "does the copying", "bleu": 0.07223943354597204, "rouge": 0.11444652908067542}, {"predict": "validate the c - octet string", "true": "validate the c - octet string", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a proper formatting object for the components of the bar", "true": "create a bounding rectangle given the four coordinates , where the upper left corner of the rectangle is the minimum x , y values and the width and height are the difference between xs and ys", "bleu": 0.017549428429716785, "rouge": 0.15531508593252702}, {"predict": "add button for clearing graph data", "true": "add button for clearing graph data", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the levenshtein distance for a given string", "true": "from https : / / en", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "create a file object which contains the contents of the given file in the file format", "true": "this private method just creates a number of files with a specific extension", "bleu": 0.08513012360883544, "rouge": 0.14055299539170507}, {"predict": "indicates whether all entities in all entities in this map", "true": "determine if the expression is an <unk>", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "parses the given string and replaces all occurrences of ' \\ n ' , ' \\ r ' and ' \\ r \\ n ' with the given line separator", "true": "parses the given string and replaces all occurrences of ' \\ n ' , ' \\ r ' and ' \\ r \\ n ' with the given line separator", "bleu": 1.0, "rouge": 1.0}, {"predict": "adjusts the name to avoid name conflicts in the new session and , if the name is adjusted , adjusts the position so the user can see the two nodes", "true": "adjusts the name to avoid name conflicts in the new session and , if the name is adjusted , adjusts the position so the user can see the two nodes", "bleu": 1.0, "rouge": 1.0}, {"predict": "implementation of user group", "true": "adds a ping notification to the current list", "bleu": 0.11115018927487523, "rouge": 0.0}, {"predict": "method to create an nfs data store for the slope", "true": "creates an nfs data store for the hosts in the cluster", "bleu": 0.5163677114298966, "rouge": 0.56656346749226}, {"predict": "check the size of the array and increase if needed", "true": "check the size of the array and increase if needed", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new album", "true": "used for open an image from an unknown content storage", "bleu": 0.06741599762807414, "rouge": 0.0}, {"predict": "checks that the given substring is a valid internal class name", "true": "checks that the given substring is a valid internal class name", "bleu": 1.0, "rouge": 1.0}, {"predict": "captures task when a task has finished execution", "true": "for a given set of starting tasks , initialize the associated sessions with a proper blocking semaphore and value of number of tasks to be run", "bleu": 0.0169024425284635, "rouge": 0.05369718309859155}, {"predict": "creates calibration charts for the simulation and benchmark / survey data set param color scheme ( red scheme , autumn , muted rainbow , lollapalooza , french girl , m 8 colors ) param map of number of trips per distances class , split by mode param map", "true": "creates calibration charts for the simulation and benchmark / survey data set param color scheme ( red scheme , autumn , muted rainbow , lollapalooza , french girl , m 8 colors ) param map of number of trips per distances class , split by mode param map", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes dollar ( $ ) prefix from the given name if it exists", "true": "return the unquoted version of name ( stripping the start and end ' ` ' characters if present )", "bleu": 0.07923788515260259, "rouge": 0.18136769078295345}, {"predict": "compares this name with the given name on this list of uris", "true": "is the specified player the leader of this group ?", "bleu": 0.1235622127262679, "rouge": 0.18484848484848485}, {"predict": "re - do the last undone operation for a specific rich text editor", "true": "re - do the last undone operation for a specific rich text editor", "bleu": 1.0, "rouge": 1.0}, {"predict": "reports result using future", "true": "decodes outcome to return result or throw unchecked exception", "bleu": 0.10294235160901445, "rouge": 0.14386792452830188}, {"predict": "writes out protein view to an index", "true": "writes out protein view to an zipped and compressed html file", "bleu": 0.47486944442513457, "rouge": 0.6409807355516637}, {"predict": "create a new layout unique", "true": "test bf <unk> convert sql casts", "bleu": 0.18796001821050234, "rouge": 0.0}, {"predict": "save macro : = current regular expression : = = 1", "true": "writes all bytes to n ce cs memory as long as there are no user input errors", "bleu": 0.055514699153494364, "rouge": 0.0}, {"predict": "writes the ellipse to plain text file", "true": "write contour into a lf 0 file in <unk> k format", "bleu": 0.10489671869455933, "rouge": 0.10683012259194395}, {"predict": "start monitoring the current thread", "true": "start monitoring the current thread", "bleu": 1.0, "rouge": 1.0}, {"predict": "locate a list of nodes with a specified name and returns the list of elements with the given name", "true": "find an element by its \" id \" attribute ; null if no element is found", "bleu": 0.05415315253510895, "rouge": 0.0}, {"predict": "transfers node , if necessary , to sync queue after a cancelled wait", "true": "transfers node , if necessary , to sync queue after a cancelled wait", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a star regular expression with the given expression", "true": "construct a regular expression matching the <unk> closure of the language matched by the argument regular expression", "bleu": 0.09081302407530907, "rouge": 0.3643966547192354}, {"predict": "remove the specified element from the selection", "true": "remove the specified element from the selection", "bleu": 1.0, "rouge": 1.0}, {"predict": "pass mouse event straight through to delegate", "true": "pass mouse event straight through to delegate", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints a formatted string to standard output , using the locale and the specified format string and arguments ; then flushes standard output", "true": "prints a formatted string to this output stream , using the specified locale , format string , and arguments , and then flushes this output stream", "bleu": 0.296030265940939, "rouge": 0.6863004632693581}, {"predict": "process the source tree to the output result", "true": "process the source tree to the output result", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests comparison of attributes to different values", "true": "tests comparison sorts attributes before elements", "bleu": 0.2626909894424158, "rouge": 0.4680306905370844}, {"predict": "adds an instruction to the output", "true": "adds an instruction to the output suffix", "bleu": 0.846481724890614, "rouge": 0.9104477611940297}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes all open selector ( and hides the channel manager )", "true": "close selector if needed", "bleu": 0.11390778025531027, "rouge": 0.14558472553699284}, {"predict": "returns the sub value of two numbers", "true": "returns the value of subtracting the first from the second number", "bleu": 0.17359100558362855, "rouge": 0.4273204903677758}, {"predict": "adds the provided optional attributes", "true": "adds the provided required attributes", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "displays a dialog with the user buttons and alignment information", "true": "shows up history dialog", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "returns the number of elements in this queue", "true": "returns the number of elements in this queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads all bytes from an input stream", "true": "read a stream into a byte", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "construct a revere sed sequence from an publisher", "true": "construct a lazy future stream from an publisher", "bleu": 0.3549481056010052, "rouge": 0.625}, {"predict": "creates a new proto bu f handler", "true": "creates a new proto bu f handler", "bleu": 1.0, "rouge": 1.0}, {"predict": "the real guts of parse network response", "true": "the real guts of parse network response", "bleu": 1.0, "rouge": 1.0}, {"predict": "notification that this notification is registered as a notification emitter it is registered in the notification type", "true": "get a notification by its id", "bleu": 0.09507244120026236, "rouge": 0.19032761310452417}, {"predict": "create a new simple gradient using the maximum count of max count", "true": "setup the green gradient", "bleu": 0.11498759556447223, "rouge": 0.13738738738738737}, {"predict": "write a plain text pseudo random number generator", "true": "writes a histogram as a tab - separated file with two columns : the first column indicates the bin key ( e", "bleu": 0.027867416523464233, "rouge": 0.06149193548387097}, {"predict": "this takes a stage of a stage of a value and returns a plain stage of a value", "true": "this takes a stage of a stage of a value and returns a plain stage of a value", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a character and a number", "true": "add a character and a number", "bleu": 1.0, "rouge": 1.0}, {"predict": "clips the passed in string to the space provided", "true": "clips the passed in string to the space provided", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the specified element from this instant run n able", "true": "removes an element from this instant run n able", "bleu": 0.6989307622784944, "rouge": 0.8501742160278747}, {"predict": "check whether the specified object is a c glib - generated class", "true": "check whether the given object is a c glib proxy", "bleu": 0.48442732379638637, "rouge": 0.7393939393939394}, {"predict": "resets the references for streaming", "true": "resets the references for streaming", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new slide", "true": "add a slide to the intro", "bleu": 0.3081980909598119, "rouge": 0.5791139240506329}, {"predict": "splits the given string into lines using on any embedded newlines , and wrapping the text as needed to conform to the given maximum line width", "true": "splits the given string into lines using on any embedded newlines , and wrapping the text as needed to conform to the given maximum line width", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes wheel changing listener", "true": "removes wheel changing listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "allocates a direct shape array , and populates it with the float array data", "true": "allocates a direct float buffer , and populates it with the vertex data", "bleu": 0.5149732203257935, "rouge": 0.7457212713936432}, {"predict": "publish / send a message to an m qt t server once subscribed this method waits to arrive from the server that match the server", "true": "publish / send a message to an m qt t server", "bleu": 0.4265706803128101, "rouge": 0.6571988246816846}, {"predict": "cleans a directory without deleting it", "true": "cleans a directory without deleting it", "bleu": 1.0, "rouge": 1.0}, {"predict": "inverse of n ' n ' normally distributed values of a ' d ' co eff i cents greater than threshold value of a sub band", "true": "extracts the watermark data from sub band", "bleu": 0.06143498010483918, "rouge": 0.1352549889135255}, {"predict": "moves a file or directory to the destination directory", "true": "moves a file or directory to the destination directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the security properties from the properties file in the directory provided as a tungsten properties file and attributes", "true": "loads security related properties from a file", "bleu": 0.10475041522097171, "rouge": 0.5034387895460798}, {"predict": "closes an input stream", "true": "closes an input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove all files and sub directories", "true": "limp i a la list a de fiche ros del esc a neo", "bleu": 0.0578433294533084, "rouge": 0.0}, {"predict": "return true if the edge ab intersects the given edge of constant latitude", "true": "return true if the edge ab intersects the given edge of constant latitude", "bleu": 1.0, "rouge": 1.0}, {"predict": "starts the process described by ' builder ' , and asserts that it sees ' expected out ' on std out and ' expected err ' on std err", "true": "starts the process described by ' builder ' , and asserts that it sees ' expected out ' on std out and ' expected err ' on std err", "bleu": 1.0, "rouge": 1.0}, {"predict": "below method will be used to start file based merge", "true": "below method will be used to start file based merge", "bleu": 1.0, "rouge": 1.0}, {"predict": "callback for when text is inserted into the document", "true": "callback for when text is inserted into the document", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses a message and error time out", "true": "constructs a new exception with the specified message", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "check if the spring between \" of \" process \" , a spring component that is responsible for anything", "true": "returns true if the two components have a common parallel group ancestor along the particular axis", "bleu": 0.09107438368292149, "rouge": 0.1741198858230257}, {"predict": "reads the object from the object", "true": "reads an object from the input stream", "bleu": 0.36798327352994814, "rouge": 0.6069651741293532}, {"predict": "subtract zero from a number", "true": "subtract zero from a number", "bleu": 1.0, "rouge": 1.0}, {"predict": ", l sl # operation : if shift i mm = = 0 then / / register operand shifter operand = c flag else / / l sr # 32 shifter operand = 0 shifter carry out = rm logical shift i mm if rm shifter carry", "true": ", l sr # operation : if shift i mm = = 0 then shifter operand = 0 shifter carry out = rm 31 else / / shift i mm > 0 shifter operand = rm logical shift right shift i mm shifter carry out = rm shift", "bleu": 0.5367661755183327, "rouge": 0.6093696176369273}, {"predict": "creates a new plaintext component with the given integer", "true": "creates a new plaintext component with the given in t", "bleu": 0.7875585852725084, "rouge": 0.8341880341880341}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if a calendar is considered equivalent to this date", "true": "allows to know if a given calendar instance is set today", "bleu": 0.17851905035930718, "rouge": 0.37770897832817335}, {"predict": "creates an initial port and starts to listen", "true": "creates an initial port and starts to listen", "bleu": 1.0, "rouge": 1.0}, {"predict": "pretty printing accumulator function for doubles", "true": "pretty printing accumulator function for doubles", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts an android image to a bitmap", "true": "note : this conversion procedure is <unk> and may result in jpeg compression artifacts", "bleu": 0.057461663912368725, "rouge": 0.0}, {"predict": "this method is used to convert the string value given to an appropriate representation", "true": "this method is used to convert the string value given to an appropriate representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "test if the dom implementation implements a specific feature", "true": "test if the dom implementation implements a specific feature", "bleu": 1.0, "rouge": 1.0}, {"predict": "assigns a port based on the matching ports to match port", "true": "doing the best possible assignment", "bleu": 0.11390778025531027, "rouge": 0.13406593406593406}, {"predict": "get next event on last created event", "true": "returns the next event in the queue or external event with time of double", "bleu": 0.09663861439684919, "rouge": 0.2695139911634757}, {"predict": "appends a sequence of doubles to the buffer", "true": "append the polygon to the buffer", "bleu": 0.2984745896009823, "rouge": 0.43990384615384615}, {"predict": "updates the combo box with the given templates list", "true": "updates a j combo box with all of the track locations for this location", "bleu": 0.1667989371287012, "rouge": 0.41838134430727025}, {"predict": "creates a new refactoring session session i fier", "true": "creates a new refactoring session transformer", "bleu": 0.5873949094699213, "rouge": 0.7331730769230769}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "opens a comparator based on the specified data comparator s", "true": "opens this compare operation , showing the compare ui , returning the result details of the comparison", "bleu": 0.06927760750451363, "rouge": 0.14153132250580047}, {"predict": "should never be called", "true": "should never be called", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a resource string to the resource ' s list of resources to be the resource used by this resource", "true": "import a resources into view", "bleu": 0.06760229884571738, "rouge": 0.17941176470588235}, {"predict": "checks if numeric string is a number", "true": "checks whether a string contains only number or not using a regex", "bleu": 0.11434175042957104, "rouge": 0.30148270181219106}, {"predict": "open a single key store for a given password", "true": "open the supplied key store file from disk", "bleu": 0.19960198807747329, "rouge": 0.35672514619883033}, {"predict": "encode string as a byte array in base 64 annotation", "true": "encode string as a byte array in base 64 annotation", "bleu": 1.0, "rouge": 1.0}, {"predict": "atomic ally adds the given value to the current value of the field of the given value managed by this updater", "true": "atomic ally adds the given value to the current value", "bleu": 0.4608662469973654, "rouge": 0.6892655367231638}, {"predict": "returns the \" current time \" notion of this scheduler", "true": "returns the \" current time \" notion of this scheduler", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends a list of name / value pair to the list", "true": "appends a name value pair of k / v to l if v is non - null", "bleu": 0.1265461484851118, "rouge": 0.4126268320180383}, {"predict": "creates a properties object from a file location", "true": "reads the file at the given location and creates a properties file from the contents", "bleu": 0.143106448612759, "rouge": 0.32972972972972975}, {"predict": "calculate the weight of one search for x", "true": "calculates the weight of a single plan", "bleu": 0.2984745896009823, "rouge": 0.4048672566371681}, {"predict": "checks whether the extension of the filename is one of those specified", "true": "checks whether the extension of the filename is one of those specified", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the value at the supplied label", "true": "suspect underlying variables have changed value ; check", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "inserts the string representation of the char argument into this string buffer", "true": "inserts the string into this string buffer", "bleu": 0.38677062763523445, "rouge": 0.7735507246376813}, {"predict": "builds the keys and values in the specified key", "true": "creates the z node if it does not exist", "bleu": 0.14113991930789777, "rouge": 0.1111111111111111}, {"predict": "calculates the logarithm of a given value", "true": "calculates the log of the given value , using the current base", "bleu": 0.15749996500436228, "rouge": 0.5024711696869852}, {"predict": "returns a new x , y , and z values of the given vector 3", "true": "raises the x , y , and z values of a vector 3 to the given power", "bleu": 0.5301121316223074, "rouge": 0.6180344478216818}, {"predict": "used to receive s sdp packet", "true": "used to receive s sdp response packet", "bleu": 0.7118034480382984, "rouge": 0.9104477611940297}, {"predict": "tear down after testing", "true": "tear down after testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "flushes this writer", "true": "flushes page and it ' s content stream", "bleu": 0.10148002183214462, "rouge": 0.1680440771349862}, {"predict": "if a series have the j color , otherwise make it a rgb value , otherwise do not change it and return it", "true": "convert a color temperature value ( in <unk> ) to a rgb units as floats", "bleu": 0.08282282660969602, "rouge": 0.21883408071748878}, {"predict": "register a block that is used to handle a properties map to handle properties that are used in a given type", "true": "sets the state mapper to set the name to the value returned by the specified mapper", "bleu": 0.06429451441231726, "rouge": 0.11080835603996367}, {"predict": "test all loco net message to process and process the structure", "true": "listen to the loco net", "bleu": 0.17033186037639278, "rouge": 0.2681318681318681}, {"predict": "gets a copy of the contents of this writer as a string", "true": "returns the signature that was built by this signature writer", "bleu": 0.1235622127262679, "rouge": 0.2772727272727273}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates a quantitative , linearly scaled layout", "true": "calculates a quantitative , linearly scaled layout", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the objects in the specified collection to the end of this vector", "true": "adds the objects in the specified collection to the end of this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "handles the un handled exception from the server - side does not contain un handled exception", "true": "send if possible the catch server exception to the client", "bleu": 0.09672649511413092, "rouge": 0.24078947368421053}, {"predict": "format nothing", "true": "format nothing", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the ' name ' of the given table name , migrating each element name into the resource type", "true": "get the name of a relation between an object and a resource", "bleu": 0.10079037376973918, "rouge": 0.33627342888643885}, {"predict": "updates the combo box selected with an current user", "true": "update locations if load changes", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "removes the tip text for this property", "true": "returns the tip text for this property", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "this helper method is used to append a string value into a single string , separated by the given separator", "true": "joins multiple named values into a single string", "bleu": 0.17001078098404226, "rouge": 0.3096446700507614}, {"predict": "returns a 0 - based depth within the object graph of the current object being serialized", "true": "returns a 0 - based depth within the object graph of the current object being serialized", "bleu": 1.0, "rouge": 1.0}, {"predict": "change a given number of steps to a single variable reference", "true": "change a given number of steps to a single variable reference", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the source of an attribute list as a null safe string", "true": "returns the value as string out of the given distribution", "bleu": 0.13065113298388567, "rouge": 0.2772727272727273}, {"predict": "description of the method", "true": "description of the method", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the new protocol group data", "true": "send request to read group data", "bleu": 0.2907153684841096, "rouge": 0.3333333333333333}, {"predict": "computes the full url of the provided url , if present , or null if successful", "true": "computes the full url based on a base url and a possibly relative link found in the href param of an html anchor", "bleu": 0.155462061247489, "rouge": 0.248371335504886}, {"predict": "serializes cookie object into string", "true": "serializes cookie object into string", "bleu": 1.0, "rouge": 1.0}, {"predict": "skips the given number of bytes", "true": "skips the given number of bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "resumes the ken burns effect animation", "true": "resumes the ken burns effect animation", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the center text in a center of the chart", "true": "draws the description text in the center of the pie chart makes most sense when center - hole is enabled", "bleu": 0.1290682834615265, "rouge": 0.5030927835051546}, {"predict": "subtract two numbers of different scales ; the first is negative", "true": "subtract two numbers of different scales ; the first is negative", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a list of all panel components", "true": "construct a new all to all panel", "bleu": 0.3073940764756322, "rouge": 0.5714285714285714}, {"predict": "add a property change listener", "true": "add a property change listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "is the extension function available ?", "true": "is the extension function available ?", "bleu": 1.0, "rouge": 1.0}, {"predict": "allocate a list of sections that are notified of info section count", "true": "allocates and initializes p section count sections", "bleu": 0.14694106251955755, "rouge": 0.22101449275362317}, {"predict": "true if a refresh is needed from the original data source", "true": "true if a refresh is needed from the original data source", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate an array of random bytes", "true": "generate an array of random bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "called when event occurs to process attribute colour attribute name column to attribute weights", "true": "initializes the counting arrays with the start distribution", "bleu": 0.07432998184513635, "rouge": 0.0}, {"predict": "remove the last extension from a file name", "true": "removes the extensions of the given file name", "bleu": 0.22679164443904004, "rouge": 0.375}, {"predict": "delete the attribute value", "true": "delete the attribute value", "bleu": 1.0, "rouge": 1.0}, {"predict": "scale based on min , max", "true": "scale based on min , max", "bleu": 1.0, "rouge": 1.0}, {"predict": "internal utility method to determine if the given scheme should use semicolons ( ; ) for query separator instead of ampersand ( & )", "true": "internal utility method to determine if the given scheme should use semicolons ( ; ) for query separator instead of ampersand ( & )", "bleu": 1.0, "rouge": 1.0}, {"predict": "add the leaf , if the given spatial index , to the parents it is not null !", "true": "adds a leaf to a spatial , including all non existing parents", "bleu": 0.08961672320242714, "rouge": 0.27664399092970515}, {"predict": "adjust listeners to all blocks in the range of blocks", "true": "do ven n diagram between the two sets", "bleu": 0.12605968092174913, "rouge": 0.11338289962825278}, {"predict": "converts a database name to a java variable name", "true": "converts a database name to a java variable name", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a byte array to hex digit and returns hex string that is a ' and hex number with leading '", "true": "the byte returned by message digest does not have a nice textual representation , so some form of encoding is usually performed", "bleu": 0.06587610531476461, "rouge": 0.0926347760060744}, {"predict": "clamp the original dimensions to be ions", "true": "given a size , compute a value such that it will <unk> the original size to fit within the max size bounding box and to be less than the provided area", "bleu": 0.009969786131967374, "rouge": 0.1890007745933385}, {"predict": "create a new tcp channel with the specified transport", "true": "create channel for endpoint", "bleu": 0.15619699684601276, "rouge": 0.3306233062330623}, {"predict": "makes a string representation of this fields in which the underlying class , so it will not be moved to back", "true": "prints the fields of a document for human consumption", "bleu": 0.07305267243289862, "rouge": 0.071849234393404}, {"predict": "encode the input data producing a url safe base 64 encoded byte array", "true": "encode the input data producing a base 64 encoded byte array", "bleu": 0.6997522298221912, "rouge": 0.9306518723994452}, {"predict": "draws a face of the provided cell into the provided directory", "true": "creates a face of the model in a specified direction", "bleu": 0.317023313852343, "rouge": 0.384251968503937}, {"predict": "add a file system observer to this monitor", "true": "add a file system observer to this monitor", "bleu": 1.0, "rouge": 1.0}, {"predict": "create empty message by message position ( by filling and end ( )", "true": "create message from buffer ( for parsing )", "bleu": 0.12011055432195765, "rouge": 0.39804241435562804}, {"predict": "compute a xp a base xp base interface", "true": "computes log ( 1 + x )", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "returns a random number as a variable length string", "true": "adds the given number as a push data chunk", "bleu": 0.2626909894424158, "rouge": 0.3333333333333333}, {"predict": "gets the callback s object", "true": "gets the callback s object", "bleu": 1.0, "rouge": 1.0}, {"predict": "changes for p trace shapes in p poly line for this clearance matrix", "true": "changes the tree entries from p keep at start count + 1 to new shape count - 1 - keep at end count to p changed entries", "bleu": 0.03869473870131793, "rouge": 0.14109483423284502}, {"predict": "create an instance of a class using the specified class loader", "true": "create an instance of a class using the specified class loader", "bleu": 1.0, "rouge": 1.0}, {"predict": "paints the background of the component", "true": "paint the progress indicator", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "adds a new action to the list for this phase", "true": "adds the specified action to the actions list for this phase", "bleu": 0.4372805827465167, "rouge": 0.7554179566563467}, {"predict": "to create a polygon we need atleast 3 separate points", "true": "to create a polygon we need atleast 3 separate points", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the json value from the json array for specified index", "true": "reads the json object value from the json array for specified index", "bleu": 0.7619389834488071, "rouge": 0.949080622347949}, {"predict": "waits for the specified element to lock in the queue ' s compare or by the element", "true": "will wait until no element identified by the by is present", "bleu": 0.10216198665886358, "rouge": 0.22289890377588306}, {"predict": "assert that the test subscriber has been received", "true": "assert that the test subscriber terminated ( i", "bleu": 0.5873949094699213, "rouge": 0.625}, {"predict": "is the video url valid , this will be used for the u id and is still some other than one", "true": "check if a <unk> <unk> url has a valid identifier", "bleu": 0.06429451441231726, "rouge": 0.13785310734463277}, {"predict": "check whether this work is canceled", "true": "check whether this work is canceled", "bleu": 1.0, "rouge": 1.0}, {"predict": "push a tree walker on the stack", "true": "push a tree walker on the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks that the given string is a valid type descriptor", "true": "checks that the given string is a valid type descriptor", "bleu": 1.0, "rouge": 1.0}, {"predict": "update all the listed files in the new cache", "true": "rename the local own cloud folder of one account to match the a rename of the account itself", "bleu": 0.05746166391236872, "rouge": 0.13974799541809851}, {"predict": "will dump the entries of the current catalog for the supplied module", "true": "dump all the configuration options listed as get methods in the configuration interface", "bleu": 0.11368272367804307, "rouge": 0.23828125000000006}, {"predict": "parse a single tree resource from the input resource", "true": "parses the given language resource , returning the resulting json node", "bleu": 0.12507277759788113, "rouge": 0.19645732689210954}, {"predict": "starts the transition state for the start state", "true": "make a collection of states that can be the start of a line", "bleu": 0.11296874775996037, "rouge": 0.18263473053892215}, {"predict": "det at che s the bitmap container from the request and cancels the request if no one is left listening", "true": "det at che s the bitmap container from the request and cancels the request if no one is left listening", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new density function using the given points", "true": "creates a new kernel density function with the given points", "bleu": 0.3788926469061435, "rouge": 0.8341880341880341}, {"predict": "a serial iz able object to be used by this object", "true": "this methods provide cloning for serial iz able objects", "bleu": 0.22416933501922287, "rouge": 0.3055091819699499}, {"predict": "determine if there are more than 2 points currently in the partial hull", "true": "determine if there are more than 2 points currently in the partial hull", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new zip entry with the specified name", "true": "creates a new zip entry with the specified name", "bleu": 1.0, "rouge": 1.0}, {"predict": "test that the bug # 30550 - tables are subscribed from the table", "true": "test if single statement can be safely used in multiple transactions", "bleu": 0.09552040806823771, "rouge": 0.08460471567267684}, {"predict": "read the given dictionary file from the input stream", "true": "read the given dictionary file from the input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "matches the token if the token matches to one", "true": "matches individual request and target tokens", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "add a vertex , if the value is parameter , else starts with the value , the first vertex that is a callback", "true": "add a vertex to this congruence class", "bleu": 0.09849349468888721, "rouge": 0.2212817412333736}, {"predict": "resets the view to model array to be of size row count", "true": "resets the view to model array to be of size row count", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an immutable set of the set of configured hosts", "true": "return all files referenced by this segment info", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "do we run on mac", "true": "do we run on apple", "bleu": 0.7598356856515925, "rouge": 0.8}, {"predict": "determines if the given exception should be assignable from the provided exception", "true": "tests if concrete throw able", "bleu": 0.10390302174233558, "rouge": 0.12708333333333333}, {"predict": "combines and returns queued messages combined into a single string", "true": "combines and returns queued messages combined into a single string", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints a double to the stream , encoded as utf - 8", "true": "prints an integer to the stream", "bleu": 0.2044800736021839, "rouge": 0.4728682170542636}, {"predict": "returns the number of discovered item sets and their number of times , where the number of times the video is the number", "true": "returns a map of associations and their confidence , where confidence is support for the item set ( that is , the number of times it appears in the input data ) divided by the total number of sets ( i", "bleu": 0.10813662764167621, "rouge": 0.38664066309117506}, {"predict": "checks if all characters in the given string is either an alpha value or alpha", "true": "returns true if all characters in the string are letters", "bleu": 0.31314224813827346, "rouge": 0.4979591836734694}, {"predict": "finds memory allocated for a given item and outputs it in the length restrictions", "true": "extract item sets ending in the given item", "bleu": 0.1462806365365753, "rouge": 0.28683385579937304}, {"predict": "updates a particle position", "true": "updates a particle position", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a hexadecimal character to an integer", "true": "converts a hexadecimal character to an integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method to load the library using the given library path , as the parent directory and the parent", "true": "this method must be provided by the vm vendor , as it is called by java", "bleu": 0.09629943614188137, "rouge": 0.23215984776403426}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a positive number from a sign and an array of bytes", "true": "create a positive number from a sign and an array of bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "save the key store password by a key store", "true": "saves the ca key and the certificate chain to the specified key store", "bleu": 0.135323305042906, "rouge": 0.35209235209235207}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a filter to the list of filters to \" and \"", "true": "adds a filter to the list of filters to \" or \"", "bleu": 0.842362674378975, "rouge": 0.9166666666666665}, {"predict": "send a debug log message", "true": "send a debug log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate an array of random bytes", "true": "generate an array of random bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "update the statistics entry", "true": "update the statistics entry", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize and initialize the configuration on which data was the small way : this method runs the byte value and the big data set", "true": "test create and shutdown of a named store", "bleu": 0.050661968099322066, "rouge": 0.06869369369369369}, {"predict": "convert this object into a string", "true": "returns a string representation of the node", "bleu": 0.24608524656663955, "rouge": 0.3034825870646766}, {"predict": "since trace of at point 1 , we should be part of the traces", "true": "splits the traces containing this", "bleu": 0.11633270842295028, "rouge": 0.23018867924528305}, {"predict": "flip all bits in the byte array on to expand", "true": "this flips the bits in the range index , index + length ) and returns the same byte", "bleu": 0.11147139414104819, "rouge": 0.2717149220489978}, {"predict": "constructs a new index request with the raw data source", "true": "sets the settings and mappings as a single source", "bleu": 0.14991106946711685, "rouge": 0.21254355400696867}, {"predict": "add users to the server configuration", "true": "add users to the configuration", "bleu": 0.6434588841607617, "rouge": 0.9242424242424241}, {"predict": "performs try to acquire the specified thread", "true": "attempts to acquire the eviction lock and apply the pending operations , up to the amortized threshold , to the page replacement policy", "bleu": 0.035160285146595166, "rouge": 0.18245264207377865}, {"predict": "removes a single individual", "true": "removes a single individual", "bleu": 1.0, "rouge": 1.0}, {"predict": "copy a file to the destination", "true": "copy source file to destination file", "bleu": 0.3303164318013807, "rouge": 0.6666666666666666}, {"predict": "decode properties into string ( url encoded )", "true": "decode properties into string ( url encoded )", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the residual sum of for in an xml document", "true": "generates xml in the rss format", "bleu": 0.15851165692617156, "rouge": 0.26180257510729615}, {"predict": "tests comparison of a different name", "true": "tests comparison of different elements", "bleu": 0.4347208719449915, "rouge": 0.7393939393939394}, {"predict": "deletes a directory recursively", "true": "deletes directory with files", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "change the given component into a given destination", "true": "morph is similar to the replace functionality where a component might be replaced with a component that isn ' t within the container", "bleu": 0.029246062081941217, "rouge": 0.17801556420233464}, {"predict": "localized string to timestamp conversion", "true": "localized string to timestamp conversion", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the string starts with a new character", "true": "true if the string is the beginning of a new camel case hunk", "bleu": 0.298940794016102, "rouge": 0.5097493036211699}, {"predict": "clears the set of values", "true": "removes all placeholder - value mappings", "bleu": 0.18796001821050234, "rouge": 0.0}, {"predict": "adds fill components to empty cells in the first row and first column of the grid", "true": "adds fill components to empty cells in the first row and first column of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a binary matching to its body string values", "true": "get the character definitions of the font", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "converts string to byte array", "true": "converts a string to a byte array", "bleu": 0.3169747794424142, "rouge": 0.8090185676392573}, {"predict": "play a file provided by a user name", "true": "joins the channel of the user provided and then plays a file", "bleu": 0.14544785215055717, "rouge": 0.1930379746835443}, {"predict": "sets the flag that indicates whether all objects are finalized when the vm is about to exit", "true": "ensure that , when the virtual machine is about to exit , all objects are finalized", "bleu": 0.37420316460821246, "rouge": 0.4265734265734266}, {"predict": "returns the interval for the given confidence value", "true": "returns the interval for the given confidence value", "bleu": 1.0, "rouge": 1.0}, {"predict": "searches the specified collection for the minimum element using the specified comparator", "true": "searches the specified collection for the minimum element using the specified comparator", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the given file is a sha hash of the given file", "true": "checks if given hash is the same for given file - helps to detect file changes", "bleu": 0.1327211341271203, "rouge": 0.3952483801295896}, {"predict": "add a key in the cache", "true": "add the key that should be treated as one of the value fields", "bleu": 0.08180282100568384, "rouge": 0.29611650485436897}, {"predict": "update the given border with the given border", "true": "add a new border to the existing borders", "bleu": 0.17747405280050269, "rouge": 0.25}, {"predict": "create a name from a character", "true": "returns the name of an html character reference based on its character value", "bleu": 0.07612610271614867, "rouge": 0.19741100323624597}, {"predict": "splits the string into lines using the provided content", "true": "split the supplied content into lines , returning each line as an element in the returned list", "bleu": 0.09081302407530907, "rouge": 0.29151732377538825}, {"predict": "draws the draw able", "true": "draws the wafer map view", "bleu": 0.36827215283744186, "rouge": 0.43571428571428567}, {"predict": "adds a hole to the polygon formed by this ring", "true": "adds a hole to the polygon formed by this ring", "bleu": 1.0, "rouge": 1.0}, {"predict": "puts this component instance to default component instance", "true": "create mappings from gui components to their gui wrappers", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "adds another image container to the list of those interested in the results of the request", "true": "adds another image container to the list of those interested in the results of the request", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the generic activity fields", "true": "initialize the generic activity fields", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is called from native code in order to fill native input stream", "true": "this method is called from the native code in order to skip requested number of bytes in the input stream", "bleu": 0.39768633593547226, "rouge": 0.6841121495327103}, {"predict": "generates a hash id from the same public key and returns the corresponding hash table", "true": "generate 64 bit hash key identifier", "bleu": 0.09103526405546068, "rouge": 0.2064297800338409}, {"predict": "creates a new create - xxx sub - command for an optional relation", "true": "creates a new create - xxx sub - command for an optional relation", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d subject information access dialog", "true": "creates a new d subject information access dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "verify signer ( string ) creates instance", "true": "verify signer ( string , identity scope ) creates instance", "bleu": 0.45043204423208616, "rouge": 0.7981308411214955}, {"predict": "reads an attribute from the attribute", "true": "reads an svg \" line \" element", "bleu": 0.24608524656663955, "rouge": 0.3034825870646766}, {"predict": "create a list model with the provided items", "true": "create a list model with the provided items", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if field call is set ( has been assigned a value ) and false otherwise", "true": "returns true if field call type is set ( has been assigned a value ) and false otherwise", "bleu": 0.849465100725033, "rouge": 0.9664492078285183}, {"predict": "map a source , possibly empty parent , obj ref and use it to free a type", "true": "loads the buffer via source mapper , and maps it in source mapper", "bleu": 0.09083627868206415, "rouge": 0.2732362821948488}, {"predict": "creates a new file data store choose r", "true": "create a dialog that filters for files with the specified extensions", "bleu": 0.11021777041988566, "rouge": 0.10234899328859062}, {"predict": "compute static load metrics", "true": "compute static load metrics", "bleu": 1.0, "rouge": 1.0}, {"predict": "see the general contract of the read short method of data input", "true": "see the general contract of the read short method of data input", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a replication job to copy a partition", "true": "create a replication job to copy a partition", "bleu": 1.0, "rouge": 1.0}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "main entry point", "true": "this method is called when executing this application from the command line", "bleu": 0.022493847365531092, "rouge": 0.0}, {"predict": "get rid of unnecessary parameters based on the given context", "true": "scipio : stock find orders service", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "indicates if this file represents a file on the underlying file system", "true": "indicates if this file represents a file on the underlying file system", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds the stage by applying a stage to path given a graph and a set of stage", "true": "start with ordinal selection of input stages then ordinal selection of each output ring there after", "bleu": 0.07223943354597204, "rouge": 0.06093906093906093}, {"predict": "the standard statistics matrix of the t ( )", "true": "returns an array of the t - statistic of each coefficient in a multiple linear regression model", "bleu": 0.10799549436527096, "rouge": 0.2186379928315412}, {"predict": "runs all the bootstrap s , and list that are in the bootstrap algorithm", "true": "this method basically goes through the list of <unk> <unk> registered by modules and runs them", "bleu": 0.09635282645727884, "rouge": 0.13174946004319654}, {"predict": "check index id embedded in for files", "true": "expert : just reads and verifies the object id of an index header", "bleu": 0.08723697147876523, "rouge": 0.0948678071539658}, {"predict": "returns the stack map table written out", "true": "returns the stack map table written out", "bleu": 1.0, "rouge": 1.0}, {"predict": "save the current data set", "true": "save the currently selected cluster er output to a file", "bleu": 0.13218059591958078, "rouge": 0.2515463917525773}, {"predict": "runs the virtual pool", "true": "get recommendations for resource placement based on the passed parameters", "bleu": 0.08017158404431235, "rouge": 0.13260869565217392}, {"predict": "provide a list of relative paths on the current system which match the given directory", "true": "collect a list of relative paths", "bleu": 0.30130404892785684, "rouge": 0.5160744500846023}, {"predict": "returns true if the transform node is a transform node", "true": "returns true if the given module specifier is specifying a file", "bleu": 0.34531590082160607, "rouge": 0.56656346749226}, {"predict": "returns an as there is no longer required", "true": "in v nx , 4 default policies are present , and this method creates expected settings per pool capability", "bleu": 0.03409570231938704, "rouge": 0.0}, {"predict": "this method is called after a failure to modify a stream", "true": "transfers the contents of an input stream to an output stream , using a large buffer", "bleu": 0.08598135896069606, "rouge": 0.14336075205640422}, {"predict": "returns the position of the path corresponding to this node", "true": "returns the position within an org unit path at which the org unit u id will be found for a given org unit level", "bleu": 0.06402978670767466, "rouge": 0.2190305206463196}, {"predict": "attempts to read more data", "true": "attempts to read more data", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a numeric numeric train class to the data set", "true": "adds a numeric ( non - missing ) training class value and weight to the buffer of stored values", "bleu": 0.08877114000709116, "rouge": 0.3265524625267666}, {"predict": "main logic for parsing the group of groups and returns the corresponding group type name to the array list of groups passed", "true": "main logic for parsing the groups from the json file", "bleu": 0.21800193956058223, "rouge": 0.4692307692307692}, {"predict": "after rotating , the matrix needs to be translated", "true": "after rotating , the matrix needs to be translated", "bleu": 1.0, "rouge": 1.0}, {"predict": "- - serialize r from integer", "true": "creates new instance of double ff t 1 d", "bleu": 0.1126634218241493, "rouge": 0.0}, {"predict": "drag a key from the drag", "true": "drag gesture recognized", "bleu": 0.22089591134157885, "rouge": 0.2364341085271318}, {"predict": "checks whether a character is a valid identifier , essentially must use ' or ' character is a valid sql identifier", "true": "checks if specified character can be part of xml identifier ( tag name of attribute name ) and is not standard identifier character", "bleu": 0.07224482405559035, "rouge": 0.22542498152254245}, {"predict": "adds given line to the header", "true": "add a header line to this result", "bleu": 0.2644358066258934, "rouge": 0.3034825870646766}, {"predict": "loads a sql address from the result set", "true": "loads an address value from the database", "bleu": 0.239802967618271, "rouge": 0.5398230088495575}, {"predict": "encodes characters in the given string as ' - escaped octets using the utf - 8 scheme", "true": "formats the input string for inclusion in a url", "bleu": 0.0859076483566362, "rouge": 0.1628838451268358}, {"predict": "returns get url with appended parameters", "true": "returns get url with appended parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is used when a prefix / uri namespace mapping is indicated after the element was started with a start element ( ) and before and end element ( )", "true": "this method is used when a prefix / uri namespace mapping is indicated after the element was started with a start element ( ) and before and end element ( )", "bleu": 1.0, "rouge": 1.0}, {"predict": "guesses the type of a file , based on file name suffix returns \" application \" and suffix \" if no corresponding mime map type", "true": "guesses the type of a file , based on file name suffix", "bleu": 0.4676449106256526, "rouge": 0.6925260170293284}, {"predict": "check all terms with giant bq of all terms with varying min should match", "true": "test advance with giant bq of all terms with varying min should match", "bleu": 0.7760114635728618, "rouge": 0.8202933985330073}, {"predict": "returns true for a public class", "true": "returns true for a public class", "bleu": 1.0, "rouge": 1.0}, {"predict": "release details for which have been used as well as part of the cluster and avoiding duplicates", "true": "this api will be called for releasing the budget that was already allocated to some estimate or purchase order", "bleu": 0.07107284137592886, "rouge": 0.11000901713255183}, {"predict": "create a transferable to use as the source for a data transfer", "true": "the clipboard must be opened", "bleu": 0.10390302174233558, "rouge": 0.12708333333333333}, {"predict": "put the encoding of the length in the specified stream", "true": "put the encoding of the length in the stream", "bleu": 0.8070557274927982, "rouge": 0.9564459930313588}, {"predict": "generic for generic font family : / generic font family", "true": "adds a generic font family", "bleu": 0.23462350320528, "rouge": 0.42558139534883715}, {"predict": "write an object at current position", "true": "this is used to write the xml element attributes representing the serialized object instance", "bleu": 0.06443935473636557, "rouge": 0.18654434250764526}, {"predict": "parses a data object from the current parsing position", "true": "parses a data object from the current parsing position", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true is the population contains no individuals", "true": "returns true is the population contains no individuals", "bleu": 1.0, "rouge": 1.0}, {"predict": "formats this year - month using the specified formatter", "true": "formats this date - time using the specified formatter", "bleu": 0.4671379777282001, "rouge": 0.7777777777777778}, {"predict": "convert class name to dotted format", "true": "get the name of the class in dotted format", "bleu": 0.20034704329441452, "rouge": 0.3860759493670886}, {"predict": "creates a new d add extensions dialog", "true": "creates a new d add extensions dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "plays next video in playlist", "true": "plays next video in playlist", "bleu": 1.0, "rouge": 1.0}, {"predict": "invokes accessible method of an object", "true": "invokes a method by reflection", "bleu": 0.24446151121745047, "rouge": 0.3696969696969697}, {"predict": "copy nodelist members into this nodelist , adding in document order", "true": "copy nodelist members into this nodelist , adding in document order", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the rotate stream corresponding to this path , in order to know how the given path has already been written", "true": "returns the rotate stream corresponding to this path", "bleu": 0.36227557436010244, "rouge": 0.6002460024600246}, {"predict": "removes the history in the history list , if any", "true": "removes old tracks and cleans up the history preparing for new tracks to be added to the mapping", "bleu": 0.08469994319770224, "rouge": 0.2717149220489978}, {"predict": "this method extracts all needed values from the styled attributes", "true": "this method extracts all needed values from the styled attributes", "bleu": 1.0, "rouge": 1.0}, {"predict": "used with a log message with a specified code", "true": "construct a log message that does not involve any tem plating", "bleu": 0.2103465006557667, "rouge": 0.2946859903381642}, {"predict": "perform the option by splitting on a label and then apply the input string", "true": "translate all the label names within an action string to appropriate code", "bleu": 0.10511846841633776, "rouge": 0.2340153452685422}, {"predict": "cast result object to a boolean", "true": "cast result object to a boolean", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the xml for the current request", "true": "generates the xml for the current request", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove boolean and boolean", "true": "we need this strict function because boolean", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "formats this year - month using the specified formatter", "true": "formats this time using the specified formatter", "bleu": 0.4518010018049224, "rouge": 0.7672955974842767}, {"predict": "initializes source code map to the n", "true": "initial is ation of a local map that handles each source code line , keyed by the line number", "bleu": 0.05002278341013454, "rouge": 0.21303841676367868}, {"predict": "version 1 : - - - - - - - - - - - - - - - - - | key | - - - - - - - - - - - - - - - - version 2 : - - - - - -", "true": "version 1 : - - - - - - - - - - - - - - - - | key | value | - - - - - - - - - - - - - - - version 2 : - - - - - -", "bleu": 0.94149097734812, "rouge": 0.9583333333333334}, {"predict": "returns the matrix to be used at the current node", "true": "return the left singular vectors", "bleu": 0.12605968092174913, "rouge": 0.1418604651162791}, {"predict": "override this if the should not contain same error codes for different instances that are not wrappers test is failing and you * really * want to allow one or more of your error codes to have duplicate api errors that are not wrappers", "true": "override this if the should not contain same error codes for different instances that are not wrappers test is failing and you * really * want to allow one or more of your error codes to have duplicate api errors that are not wrappers", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines if the object is visited by a target object", "true": "indicates whether the field of a target object is visited", "bleu": 0.33932513407933634, "rouge": 0.4}, {"predict": "remove a download from the completed list", "true": "removes a download from the completed list", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "modifies the main query by adding a new optional query consisting of shingled phrase queries across the specified clauses using the specified field = & gt ; boost mappings", "true": "modifies the main query by adding a new optional query consisting of shingled phrase queries across the specified clauses using the specified field = & gt ; boost mappings", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a message to a xml string", "true": "return an id conform ant to xml id", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "update the apps with the expected values", "true": "update fields from connection", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "create snapshot properties for this feature", "true": "creates a new snapshot , which is assumed not to exist already", "bleu": 0.0812630644213965, "rouge": 0.10481099656357389}, {"predict": "builds a valid cell log file", "true": "persists log file in database", "bleu": 0.2907153684841096, "rouge": 0.3696969696969697}, {"predict": "merges the elements of this namespace into a new map", "true": "merges two <unk> of the properties from current and new configurations", "bleu": 0.1434272783816789, "rouge": 0.28328173374613}, {"predict": "we only want the current page that is being shown to be focus able", "true": "we only want the current page that is being shown to be focus able", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes the preferred language language of a existing user", "true": "delete the preferred language of a existing user", "bleu": 0.6389431042462724, "rouge": 0.8323586744639376}, {"predict": "invoked to set a media player to be deleted", "true": "called when media player is done preparing", "bleu": 0.18575057999133596, "rouge": 0.2557651991614256}, {"predict": "parses the value of an attribute", "true": "if the token is a known parameter name , parses and initializes the token value", "bleu": 0.05861428254383573, "rouge": 0.26521739130434785}, {"predict": "takes a shard list and an list of urls into an list of strings", "true": "creates a randomized list of urls for the given shard", "bleu": 0.18207052811092136, "rouge": 0.34366197183098596}, {"predict": "skip characters", "true": "skip a set amount of bytes", "bleu": 0.10283257773094409, "rouge": 0.22932330827067668}, {"predict": "adds another image container to the list of those interested in the results of the request", "true": "adds another image container to the list of those interested in the results of the request", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a world entity from a coordinate space to a radius of the world", "true": "sends this packet to all the players in the world within the radius", "bleu": 0.13217947626377288, "rouge": 0.2237163814180929}, {"predict": "called by the client", "true": "creates an ephemeral ec dh key pair for a supported group ( named curve )", "bleu": 0.01931500670555844, "rouge": 0.0}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "add the given message to the header", "true": "adds a value to a header", "bleu": 0.20556680845025982, "rouge": 0.31202046035805625}, {"predict": "starts the data of the b i two algorithm", "true": "algorithm as r <unk> a ppl", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "get a string representation of this ref", "true": "get the c + + code", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "recreates work space table and migrates data to the new table", "true": "recreates work space table and migrates data to the new table", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes a query with named parameters as a list of named request", "true": "executes a n 1 ql statement with named parameters", "bleu": 0.22997519112894443, "rouge": 0.48878205128205127}, {"predict": "closes all the stack of the stack", "true": "closes all open tags", "bleu": 0.24446151121745047, "rouge": 0.3824451410658307}, {"predict": "receive not ivica tion of a entity reference", "true": "receive not ivica tion of a entity reference", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a thrift table to hive table", "true": "creates a table that is partitioned on ds and hr", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "links node as last element , or returns false if full", "true": "links node as last element , or returns false if full", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a divider for the given child in the given bounds", "true": "draws a divider for the given child in the given bounds", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new form spec object", "true": "constructs a form spec from the specified encoded description", "bleu": 0.1894765350842885, "rouge": 0.3860759493670886}, {"predict": "parses the given input stream into a list of coded data bytes , and returns the result as a list", "true": "decode custom proto bu f variable length array", "bleu": 0.051366639095059514, "rouge": 0.0}, {"predict": "draws the visual representation of a single data item ( with it y ) and it creates the new value for it", "true": "draws the visual representation of a single data item", "bleu": 0.39242591746953154, "rouge": 0.6281464530892449}, {"predict": "writes a little - endian in t", "true": "writes a little - endian in t", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes an double field value", "true": "writes an double field value", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks what kind of checks are used for errors", "true": "calculates which type of creature should be spawned next", "bleu": 0.14113991930789777, "rouge": 0.1111111111111111}, {"predict": "show up the property info before adding previous properties , if not empty", "true": "check if backup related configurations <unk> to rules , if not fail the property update", "bleu": 0.1812735516528891, "rouge": 0.2115606936416185}, {"predict": "deletes a given trait from an existing entity", "true": "deletes a given trait from an existing entity represented by a gui d", "bleu": 0.5352614285189903, "rouge": 0.7305389221556886}, {"predict": "add all tables to the table", "true": "adds the given tables", "bleu": 0.24446151121745047, "rouge": 0.2074829931972789}, {"predict": "write the template to the file", "true": "replace placeholder in template", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "returns all the text at the given url", "true": "returns all the text at the given url", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new method to be components", "true": "will clear the current classes and reload in another thread", "bleu": 0.10175282441454783, "rouge": 0.0}, {"predict": "add an item to the toolbar", "true": "searches the receiver ' s list starting at the first item ( index 0 ) until an item is found that is equal to the argument , and returns the index of that item", "bleu": 0.00343752140413818, "rouge": 0.17758369723435224}, {"predict": "adds an attribute to the attribute", "true": "adds an attribute to the fetch request", "bleu": 0.6848940448305334, "rouge": 0.7587064676616916}, {"predict": "either execute a command for the execution with the caller ' s thread", "true": "outer callable submits tasks for execution", "bleu": 0.10571070857151538, "rouge": 0.22550831792975967}, {"predict": "runs a full copy of the given data configuration", "true": "runs a full - import using the given data config and the provided request parameters", "bleu": 0.19505632433269743, "rouge": 0.47843137254901963}, {"predict": "volume is used to determine the volume id when used to box object", "true": "generate a random user id in the range provided", "bleu": 0.10571070857151538, "rouge": 0.09399075500770414}, {"predict": "start the thread", "true": "starts the underlying system consumer", "bleu": 0.2758512992979459, "rouge": 0.23921568627450981}, {"predict": "generates code that generates code generation during a binary operation only", "true": "sets the flags according to the result of a binary and / or / xor operation", "bleu": 0.10224964383366271, "rouge": 0.21504112808460632}, {"predict": "returns true if the window is an area of the label in the text area", "true": "returns true if the label is <unk>", "bleu": 0.26332019392396333, "rouge": 0.4864433811802232}, {"predict": "write type list into access format", "true": "write type list item into current section", "bleu": 0.36798327352994814, "rouge": 0.6069651741293532}, {"predict": "load configuration properties from a resource", "true": "load configuration from resource in current class loader", "bleu": 0.236682065782701, "rouge": 0.5570776255707762}, {"predict": "close input stream and ignores any resulting exception", "true": "close streams without pain", "bleu": 0.16036590969929357, "rouge": 0.17732558139534885}, {"predict": "create a transaction in the transaction manager", "true": "create new transaction using the local transaction manager", "bleu": 0.25201472805660513, "rouge": 0.6587473002159828}, {"predict": "skip over any character characters", "true": "skips char any contiguous characters in skip", "bleu": 0.21763141204756337, "rouge": 0.32360742705570295}, {"predict": "converts a package name to a path by replacing all '", "true": "converts a package name to a path by replacing all '", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if this map contains the given key", "true": "returns whether this map contains the specified key", "bleu": 0.42728700639623407, "rouge": 0.7134502923976607}, {"predict": "returns true if the given fragment is null or fragments are allowed", "true": "returns true if the given fragment is null or fragments are allowed", "bleu": 1.0, "rouge": 1.0}, {"predict": "increases the capacity of and internally reorganizes the hash table , in order to accommodate and access its entries more efficiently", "true": "increases the capacity of and internally reorganizes the hash table , in order to accommodate and access its entries more efficiently", "bleu": 1.0, "rouge": 1.0}, {"predict": "save all background of the poi contained in the assets", "true": "load po is from assets and save them in the database", "bleu": 0.1705647399369684, "rouge": 0.28328173374613}, {"predict": "create the xml element for a parent element", "true": "creates the xml element for a colour value", "bleu": 0.5873949094699213, "rouge": 0.625}, {"predict": "determines whether a tag control has been done or not", "true": "checks if a tag has been marked done within a given scope a specific number of times", "bleu": 0.10842531524968377, "rouge": 0.3538283062645011}, {"predict": "responds to responds to an operator operator on conditional window", "true": "responds to the operator column in the edit conditional window", "bleu": 0.21834177214239062, "rouge": 0.5}, {"predict": "adds a new header for the header", "true": "add a header with the name and value given", "bleu": 0.16599826150636804, "rouge": 0.3667334669338677}, {"predict": "check if the request is duplicate", "true": "this method checks if an entry for the provided information ( uri and buffer ) is stored in the red is database", "bleu": 0.018252676551591566, "rouge": 0.19426751592356686}, {"predict": "determines whether or not the view is hidden by this view", "true": "returns whether a view is visible to layout manager or not", "bleu": 0.1972940627795883, "rouge": 0.2727272727272727}, {"predict": "writes the tags from this ex if interface object into a jpeg stream , removing prior ex if tags", "true": "writes the tags from this ex if interface object into a jpeg stream , removing prior ex if tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete file or directory", "true": "deletes a file or directory and all its content recursively", "bleu": 0.14921613134709885, "rouge": 0.3978260869565217}, {"predict": "see if the d menu bar does not have a ui bar and if the button is light", "true": "returns true if the passed in j menu bar is above a horizontal j toolbar", "bleu": 0.12257617673006654, "rouge": 0.30808080808080807}, {"predict": "construct a node in the result tree", "true": "construct a node in the result tree", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a priority queue from a word - > t f map", "true": "create a priority queue from a word - > t f map", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new journal that omits redundant information", "true": "creates a new journal that omits redundant information", "bleu": 1.0, "rouge": 1.0}, {"predict": "traverse from the closure", "true": "iterates through the given object stream object by object", "bleu": 0.10294235160901445, "rouge": 0.14386792452830188}, {"predict": "exit with a status has been created", "true": "if run in the system mode , exits the program , in tool mode returns the status", "bleu": 0.04451531901458464, "rouge": 0.0775095298602287}, {"predict": "returns the distance between two latitude and longitude intervals of a latitude / longitude", "true": "computes the distance between two coordinates in meters", "bleu": 0.24601372576927535, "rouge": 0.3824451410658307}, {"predict": "processes the given challenge and collects its challenge", "true": "processes the ntl m challenge", "bleu": 0.22679164443904004, "rouge": 0.48157894736842105}, {"predict": "takes care of the big integer and returns the power of the power up to the same x", "true": "calculate a as done in round 2", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "add order cost detail for time zone", "true": "push to queue record", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "add an undo event to the list", "true": "adds the undo event", "bleu": 0.2626909894424158, "rouge": 0.3824451410658307}, {"predict": "establish a progress cache for this cache , using the specified stream if no more", "true": "establish the local copy of the package meta data if needed", "bleu": 0.09782375748961449, "rouge": 0.2373540856031128}, {"predict": "add the image span to the start of the text", "true": "add the image span to the start of the text", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates a password using a hash", "true": "validates a password using a hash", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the list of snapshots in the current repository", "true": "returns a list of currently running snapshots from repository sorted by snapshot creation date", "bleu": 0.12673978475914355, "rouge": 0.41838134430727025}, {"predict": "add a certificate to the certificate set to be included with the generated signed data message", "true": "add a certificate to the certificate set to be included with the generated signed data message", "bleu": 1.0, "rouge": 1.0}, {"predict": "multiply a number by zero", "true": "multiply a number by zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "method clean hook so no non - static methods are no static version", "true": "finds the begining of the z km <unk> , the end , then removed everything in between !", "bleu": 0.0546767045409157, "rouge": 0.0}, {"predict": "paints the background of a tab", "true": "give selected tab blue color with a gradient ! !", "bleu": 0.1255107248036171, "rouge": 0.11960784313725491}, {"predict": "generates the instruction to push the given value on the stack", "true": "generates the instruction to push the given value on the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an automaton that accepts the concatenation of the terms of byte ids", "true": "build an automaton to represent the frontier query", "bleu": 0.1350862565735141, "rouge": 0.2985318107667211}, {"predict": "returns a range of values the render er requires to display all the items from the specified data set", "true": "returns the range of values the render er requires to display all the items from the specified data set", "bleu": 0.9036020036098448, "rouge": 0.9473684210526315}, {"predict": "shut down the server", "true": "stop the application and the server", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "number of threads in this process ( since linux 2", "true": "number of threads in this process ( since linux 2", "bleu": 1.0, "rouge": 1.0}, {"predict": "assigns the specified role to this role", "true": "assigns a role to the user", "bleu": 0.2777619034011791, "rouge": 0.4680306905370844}, {"predict": "creates a default thread pool , with default values : - a default thread factory - all events are accepted", "true": "creates a default thread pool , with default values : - keep alive set to 30 seconds - a default thread factory - all events are accepted", "bleu": 0.6750540182789583, "rouge": 0.8288043478260869}, {"predict": "writes the initial content to the output stream", "true": "description of the method", "bleu": 0.16036590969929357, "rouge": 0.17732558139534885}, {"predict": "encodes the given collection of strings into canonical form", "true": "construct a x - www - form - urlencode d document containing the given sequence of name / value pairs", "bleu": 0.06217102093060214, "rouge": 0.19365079365079363}, {"predict": "test where each operation locks only a single resource and there is only one resource to be locked so that all operations must be serialized", "true": "test where each operation locks only a single resource and there is only one resource to be locked so that all operations must be serialized", "bleu": 1.0, "rouge": 1.0}, {"predict": "run the next command to run n able on the ui thread", "true": "runs the next command scheduled to be executed immediately", "bleu": 0.2044800736021839, "rouge": 0.39102564102564097}, {"predict": "closes all connected clients sockets , then closes the underlying server socket channel , effectively killing the server socket selector thread , freeing the port the server was bound to and stops all internal worker threads", "true": "closes all connected clients sockets , then closes the underlying server socket channel , effectively killing the server socket selector thread , freeing the port the server was bound to and stops all internal worker threads", "bleu": 1.0, "rouge": 1.0}, {"predict": "load a xml document from a file", "true": "load xml document from xml file", "bleu": 0.38260294162784475, "rouge": 0.7800511508951408}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove an string at index", "true": "remove an string at index", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new string resulting from replacing all occurrences of old char in this string with new char", "true": "copies this string replacing occurrences of the specified character with another character", "bleu": 0.12257617673006654, "rouge": 0.34580498866213155}, {"predict": "implements the same behaviour as the \" touch \" utility on unix", "true": "implements the same behaviour as the \" touch \" utility on unix", "bleu": 1.0, "rouge": 1.0}, {"predict": "wraps callback ( ) is an easy mock argument predicate", "true": "wraps callback ( ) is an easy mock argument predicate", "bleu": 1.0, "rouge": 1.0}, {"predict": "the editing cell should be selected or not", "true": "the editing cell should be selected or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "prepare the unicode case of the form : the following unicode case : the first - char sequence", "true": "prepares an attribute or assertion value as per string prep algorithm defined in rfc <unk>", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "add zero from zero", "true": "add zero to zero", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "add class node that is a dotted class node", "true": "add a class annotation for the class node", "bleu": 0.2208959113415788, "rouge": 0.4756335282651072}, {"predict": "formats a string using the format used in the format used by eclipse", "true": "throws an exception if the format is not syntactically valid", "bleu": 0.12571192676522522, "rouge": 0.1781021897810219}, {"predict": "parse the upper part mapping attribute for a unicode character", "true": "parse the uppercase mapping attribute for a unicode character", "bleu": 0.6315552371794037, "rouge": 0.8501742160278747}, {"predict": "block on the queue until an entry is been cleaned by the gc", "true": "block on the queue until an entry is been cleaned by the gc", "bleu": 1.0, "rouge": 1.0}, {"predict": "compresses the given number of files , each of the given size , into a", "true": "compresses the given number of files , each of the given size , into a", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the given playlist is a valid playlist name", "true": "ensures that a string for a playlist is valid , checking if it is empty , or another playlist has the same name", "bleu": 0.05777844824082, "rouge": 0.2829313543599258}, {"predict": "import the given xml file", "true": "uses pack in handler to update ad", "bleu": 0.15388864725803575, "rouge": 0.0}, {"predict": "add an entry or remove a specific row", "true": "a record is added to a table , or removed from a table", "bleu": 0.09499501502705178, "rouge": 0.18263473053892215}, {"predict": "a method to construct a default digest method type with the 2016 schema for imf composition playlist documents", "true": "a method to construct a default digest method type with a default hash algorithm", "bleu": 0.5401725898595141, "rouge": 0.639412997903564}, {"predict": "creates a subset of vertices sampled in a specific collection", "true": "creates a subset of sampled vertices", "bleu": 0.3816330911371337, "rouge": 0.6545064377682404}, {"predict": "called just prior to just load manager", "true": "instantiate s a new <unk> transaction manager with the given <unk> graph factory", "bleu": 0.07882750221706718, "rouge": 0.0948678071539658}, {"predict": "shifts - relative beans a form \" pipeline \" to build itself on the target", "true": "move coord s of all inputs and outputs of this meta bean to the coord s of the supplied bean instance", "bleu": 0.06102276239252299, "rouge": 0.10786914235190095}, {"predict": "background task", "true": "queries reference database for all w if is in specified range around map centre", "bleu": 0.0015837816104164078, "rouge": 0.0}, {"predict": "html - make the iterator will use", "true": "returns true if the underlying dependencies have changed", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "a method to be called when some text was received in a text node , so that live objects can be notified", "true": "a method to be called when some text was deleted from a text node , so that live objects can be notified", "bleu": 0.8318180062062374, "rouge": 0.9090909090909091}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new instance", "true": "do not construct directly", "bleu": 0.35930411196308426, "rouge": 0.25}, {"predict": "creates a producer that will return real values", "true": "creates a new producer object", "bleu": 0.22679164443904004, "rouge": 0.48157894736842105}, {"predict": "animate opening a tab in the foreground", "true": "animate opening a tab in the foreground", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if all fields of the given class is assignable from the class", "true": "returns true if the function to check is allowed", "bleu": 0.18207052811092136, "rouge": 0.45252225519287836}, {"predict": "load org access add user to list", "true": "load org access user", "bleu": 0.3655552228545123, "rouge": 0.7648902821316614}, {"predict": "closes the disk cache associated with this image cache object", "true": "closes the disk cache associated with this image cache object", "bleu": 1.0, "rouge": 1.0}, {"predict": "using the export mask object , create a volume uri to h lu map", "true": "using the export mask object , create a volume uri to h lu map", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the underlying socket", "true": "closes the underlying socket", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the vertices that the vertices", "true": "calculates maximum of each coordinate", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "gets the output and error streams from a process and reads them to keep the process from blocking due to a full output stream", "true": "gets the output and error streams from a process and reads them to keep the process from blocking due to a full output buffer", "bleu": 0.9573479717381596, "rouge": 0.9583333333333334}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds list of arguments in command line", "true": "adds list of arguments in command line", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns matching node or null if none", "true": "returns matching node or null if none", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a band between two axis axis", "true": "draws the axis on a java 2 d graphics device ( such as the screen or a printer )", "bleu": 0.03978165541753403, "rouge": 0.14202561117578577}, {"predict": "read the generator obeys the property setting", "true": "read contents of fetch list", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "sets up this animator set to play all of the supplied animations at the same time", "true": "sets up this animator set to play all of the supplied animations at the same time", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a random color", "true": "creates a random colour", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "parse a category string that is a concatenation of the category", "true": "given a category string that may be prep ended with \" <unk> - \" , return the category e num that corresponds with the category and whether or not it is a is <unk> error", "bleu": 0.04585435041680027, "rouge": 0.23843648208469054}, {"predict": "parses out a field from a method", "true": "this only exists as the tests need to call this through the deprecated method too", "bleu": 0.059237077985967744, "rouge": 0.08531468531468532}, {"predict": "create a that will be used to initialize the ellipse", "true": "read a <unk> k lf 0 file with external settings", "bleu": 0.12605968092174913, "rouge": 0.1}, {"predict": "stop the flushing thread and interrupts all threads that have completed their completion of the sync request future", "true": "aborts the call", "bleu": 0.06809398432036522, "rouge": 0.10931899641577059}, {"predict": "adds a csp listener to the solution strategy", "true": "adds a csp state listener to the solution strategy", "bleu": 0.6598203338556885, "rouge": 0.931297709923664}, {"predict": "print text on a stream", "true": "prints the provided string on the provided stream", "bleu": 0.1658165975077607, "rouge": 0.2953995157384988}, {"predict": "remove a range of mappings as a batch", "true": "remove a range of mappings as a batch", "bleu": 1.0, "rouge": 1.0}, {"predict": "check the null ability of the column definitions for the result set matches the expected values", "true": "check the null ability of the column definitions for the result set matches the expected values", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the bounding boxes", "true": "compute the bounding boxes of all <unk> ( if they haven ' t already been computed )", "bleu": 0.025929875570604947, "rouge": 0.2570224719101124}, {"predict": "adds user home to the group", "true": "adds the specified timeline", "bleu": 0.24446151121745047, "rouge": 0.4149659863945578}, {"predict": "load data from database", "true": "load data into local m data", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "paints the text area", "true": "paints the text area", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an array list containing the elements in the specified array , in the order to hold", "true": "produces an array list for an array of elements where the list is pre - sized with extra capacity", "bleu": 0.1374787855653662, "rouge": 0.2750225428313796}, {"predict": "send an event to all listeners", "true": "sends a cluster event to all registered listeners", "bleu": 0.31149111610852515, "rouge": 0.5570776255707762}, {"predict": "check / initialize / backup ( s ) / channel of a given password", "true": "update data for a key or set of keys", "bleu": 0.09782375748961449, "rouge": 0.09050445103857567}, {"predict": "action method that creates new immutable x 509 ext s and compares ignore extensions of this x 509 extensions", "true": "load the extensions table model with x", "bleu": 0.0712695567709093, "rouge": 0.16781292984869325}, {"predict": "deletes the addresses of a existing user", "true": "deletes all existing addresses of the a existing user", "bleu": 0.331996523012736, "rouge": 0.7334669338677354}, {"predict": "writes a char sequence to a file creating the file if it does not exist", "true": "writes a char sequence to a file creating the file if it does not exist", "bleu": 1.0, "rouge": 1.0}, {"predict": "set the limit and limit of this statement", "true": "set the limit of this statement", "bleu": 0.5773502691896258, "rouge": 0.8798076923076923}, {"predict": "returns whether the file exists", "true": "test if a file exists or not", "bleu": 0.24084874887188915, "rouge": 0.32360742705570295}, {"predict": "write the bytes to byte array", "true": "write the bytes to byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "skips characters", "true": "skips characters", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the payment", "true": "implement all methods along with their respective name & class", "bleu": 0.043812032228132944, "rouge": 0.0}, {"predict": "convert the file name into an xml string representation", "true": "cleans up the filename from illegal characters and truncates it to the length of bytes specified", "bleu": 0.06484332373239513, "rouge": 0.07615480649188515}, {"predict": "copy content from a file to a file", "true": "copy a url to a file", "bleu": 0.3303164318013807, "rouge": 0.7331730769230769}, {"predict": "here we bound the deltas such that the frame cannot be stretched beyond the extents of the cell layout , and such that the frame ' s borders can ' t cross", "true": "here we bound the deltas such that the frame cannot be stretched beyond the extents of the cell layout , and such that the frame ' s borders can ' t cross", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new authentication configuration object", "true": "creates a new named authentication configuration object", "bleu": 0.5033210449798471, "rouge": 0.9104477611940297}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove trailing or leading whitespace from the annotation", "true": "remove trailing or leading whitespace from the annotation", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the tip text for this property", "true": "returns the tip text for this property", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a writable sub raster given a region of the raster", "true": "creates a writable sub raster given a region of the raster", "bleu": 1.0, "rouge": 1.0}, {"predict": "send the remaining bytes to the buffer", "true": "send all local - buffered data to server", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "ensure the internal array ' s capacity", "true": "ensure the internal array ' s capacity", "bleu": 1.0, "rouge": 1.0}, {"predict": "calls the event", "true": "calls an event with the given details", "bleu": 0.16842357369809585, "rouge": 0.3730886850152905}, {"predict": "finds the best file in the given directory", "true": "returns the best configuration of a particular resource given a set of multiple configurations of the same resource", "bleu": 0.06870470052394348, "rouge": 0.21580188679245282}, {"predict": "creates true if the string to string , to prevent potential null characters", "true": "compares the two strings", "bleu": 0.09552040806823771, "rouge": 0.1300639658848614}, {"predict": "execute shell commands , default return result msg", "true": "execute shell commands , default return result msg", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method for * set the content of the database using procedure", "true": "populates a ( segmented ) blob using the fill binary blob stored procedure", "bleu": 0.11368272367804307, "rouge": 0.15885416666666669}, {"predict": "un registers a local file from being observed for changes", "true": "un registers a local file from being observed for changes", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes the object immutable", "true": "makes the object immutable", "bleu": 1.0, "rouge": 1.0}, {"predict": "appending the is null operator clause", "true": "appending the is null operator clause", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove all elements from the queue", "true": "remove all mappings from this cache", "bleu": 0.31239399369202553, "rouge": 0.5}, {"predict": "update favorite from favorite channel list , make it as searched station", "true": "update the favorite ui state", "bleu": 0.11498759556447223, "rouge": 0.25416666666666665}, {"predict": "appends all of the elements in the specified collection that are not already in this list , to last element in the specified collection ' s iterator", "true": "appends all of the elements in the specified collection that are not already contained in this list , to the end of this list , in the order that they are returned by the specified collection ' s iterator", "bleu": 0.5000519602933902, "rouge": 0.7335257335257335}, {"predict": "saves the analysis of all data recorded in this analyzer to the specified file", "true": "saves the analysis of all data recorded in this analyzer to the specified file", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an iterator over all stored dependencies", "true": "returns an iterator over the stored dependencies", "bleu": 0.5946035575013605, "rouge": 0.8571428571428571}, {"predict": "notify the ticket form this tickets", "true": "posts notification about new sms ticket", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "parses a string as an integer , 32 - bit integer", "true": "helper method to ( more ) efficiently parse integer numbers from string values", "bleu": 0.10510262682013449, "rouge": 0.08209959623149395}, {"predict": "creates a new header from a buffer", "true": "creates a new header from a buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "true": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes a date string in the given from a date", "true": "makes a date string in the given from a date", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the run n able back into a client , and then execute the message with back command", "true": "execute a bq request with exponential back off and return the result", "bleu": 0.0931377532902409, "rouge": 0.2074829931972789}, {"predict": "checks if the server response message is available", "true": "confirms that the omaha server sent back an \" ok \" code", "bleu": 0.10764345432696364, "rouge": 0.1930379746835443}, {"predict": "adds a new resource source before the others", "true": "adds a new resource source", "bleu": 0.5873949094699213, "rouge": 0.8026315789473684}, {"predict": "commits changes in the internal state : clean up any changes in the internal panel", "true": "commit all changes made in the dialog to the model", "bleu": 0.12300686288463772, "rouge": 0.3319727891156462}, {"predict": "connects to this net point , determine if the nearest integer is either a left - or equal to determine if the nearest point", "true": "if p from point is already on a target item , a connection to the target is made and true returned", "bleu": 0.07164684238257436, "rouge": 0.2249262536873156}, {"predict": "notify the user with an activity", "true": "handles generic motion events", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "add a class to this class", "true": "add \" on class c \" information , and tell c to point back here", "bleu": 0.05861428254383573, "rouge": 0.26521739130434785}, {"predict": "edit an element", "true": "initiates cell editing on the specified element", "bleu": 0.14162677936694862, "rouge": 0.18654434250764526}, {"predict": "create a point which encodes with point compression", "true": "create a point which encodes with point compression", "bleu": 1.0, "rouge": 1.0}, {"predict": "serializes a xml document into a string - encoded in utf 8 format , with platform line separators", "true": "serializes a xml document into a string - encoded in utf 8 format , with platform line separators", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds fill components to empty cells in the first row and first column of the grid", "true": "adds fill components to empty cells in the first row and first column of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "the input composition window", "true": "there are two reasons why we don ' t use buffer per window when vista ' s <unk> ( aka aero ) is enabled : - since with <unk> all windows are already double - buffered , the application doesn ' t get expose events so we don", "bleu": 6.6411868795539456e-06, "rouge": 0.033369803063457326}, {"predict": "return the area of triangle abc", "true": "return the area of triangle abc", "bleu": 1.0, "rouge": 1.0}, {"predict": "non symmetric reduction from hesse nberg to real s chur form", "true": "non symmetric reduction from hesse nberg to real s chur form", "bleu": 1.0, "rouge": 1.0}, {"predict": "two transactions read a value and replace it", "true": "two transactions read a value and replace it", "bleu": 1.0, "rouge": 1.0}, {"predict": "casts a list to array object remove empty elements", "true": "casts a list to array object remove empty elements", "bleu": 1.0, "rouge": 1.0}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "searches the specified collection for the minimum element", "true": "searches the specified collection for the minimum element", "bleu": 1.0, "rouge": 1.0}, {"predict": "implements a heartbeat call", "true": "create an external / configured server", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "to string contains to strings of elements", "true": "to string contains to strings of elements", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate an anchor and prepare a seed using out w / left keyboard", "true": "the entity spends the rest of its turn finding a club", "bleu": 0.09552040806823771, "rouge": 0.08460471567267684}, {"predict": "sends allocation contexts to the random work flow analysis", "true": "from a rw store , creates multiple allocation contexts to <unk> updates , re - allocate storage and protect against by concurrent contexts", "bleu": 0.05544673558551795, "rouge": 0.17378917378917377}, {"predict": "creates new pdf from a given byte array", "true": "create a new pdf x ref , given a sequence of bytes representing the fixed - width cross reference table line", "bleu": 0.04722000407265085, "rouge": 0.1914225941422594}, {"predict": "converts an addresses from a collection of addresses to an array of ip addresses", "true": "create a string array of host addresses from a collection of in et addresses", "bleu": 0.375022891676693, "rouge": 0.42857142857142855}, {"predict": "display the authenticated pilot ' s profile", "true": "display the authenticated pilot ' s profile", "bleu": 1.0, "rouge": 1.0}, {"predict": "instantiate s a new content moves between changing the current content and the running content", "true": "creates a new instance of smooth animation", "bleu": 0.1082597837309053, "rouge": 0.1945773524720893}, {"predict": "update product by product list", "true": "updates product price", "bleu": 0.2730120862709067, "rouge": 0.26180257510729615}, {"predict": "checks that all dependencies that contain the given module descriptor", "true": "check that the dependencies are satisfied", "bleu": 0.14991106946711685, "rouge": 0.26180257510729615}, {"predict": "clear bit ( in t n ) inside a positive number", "true": "clear bit ( in t n ) inside a positive number", "bleu": 1.0, "rouge": 1.0}, {"predict": "funnel actions , time stamps , funnel steps", "true": "de serialize funnel steps", "bleu": 0.21105340631872638, "rouge": 0.3546511627906977}, {"predict": "appends a given descriptor string to the given descriptor", "true": "appends a parameter type to the parameter list represented by the given descriptor", "bleu": 0.22011371623427067, "rouge": 0.5281385281385281}, {"predict": "add a catch clause", "true": "add a catch - clause to the end of the list , and sets its parent to this node", "bleu": 0.016629557573005865, "rouge": 0.3112244897959183}, {"predict": "stream an array of bytes to the browser this method will close the ser v let output stream when finished", "true": "stream an array of bytes to the browser this method will close the ser v let output stream when finished", "bleu": 1.0, "rouge": 1.0}, {"predict": "unlocks the given key", "true": "unlocks the given lock on the key", "bleu": 0.3340135926488844, "rouge": 0.693181818181818}, {"predict": "returns a list of 45 ( not starting with the specified index )", "true": "returns a slice of orders", "bleu": 0.1350862565735141, "rouge": 0.36237623762376237}, {"predict": "ensures that the schema change has been deleted", "true": "try to reach a schema agreement among all the reachable nodes", "bleu": 0.12197601375336842, "rouge": 0.10234899328859062}, {"predict": "removes all elements from the stack", "true": "removes all of the elements from enclosed list", "bleu": 0.2741469871939866, "rouge": 0.5570776255707762}, {"predict": "create a new tile store", "true": "create a tile store with a specific sprite store", "bleu": 0.2030072761281288, "rouge": 0.5434298440979956}, {"predict": "returns a comparable value for a qualifier", "true": "returns a comparable value for a qualifier", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if this objects chain work is higher than the others", "true": "returns true if this objects chain work is higher than the others", "bleu": 1.0, "rouge": 1.0}, {"predict": "evaluate function arguments according to expression operations", "true": "evaluate js script ( function or statement )", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "throws an illegal token syntax from a character", "true": "parses the next token from the stream , and generates a syntax error if the token does not equal the specified character", "bleu": 0.03667558269465418, "rouge": 0.24596774193548387}, {"predict": "use the url to send a jar file", "true": "determine whether the given url points to a resource in a jar file , that is , has protocol \" jar \" , \" zip \" , \" vf s zip \" or \" ws jar \"", "bleu": 0.009148489184701286, "rouge": 0.23890339425587465}, {"predict": "indicates whether some other object is \" equal to \" this one", "true": "indicates whether some other object is \" equal to \" this one", "bleu": 1.0, "rouge": 1.0}, {"predict": "apply set timestamp adds to the batch the query used to change the server timestamp , if needed and if possible ( if the database support such a feature )", "true": "apply set timestamp adds to the batch the query used to change the server timestamp , if needed and if possible ( if the database support such a feature )", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a forward reference to this label", "true": "adds a forward reference to this label", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new access or object", "true": "creates an access or for the given class", "bleu": 0.2238400777155271, "rouge": 0.4178082191780822}, {"predict": "turns the given list of logged m qt t drawn into a list of m qt t drawn in the given list", "true": "parses the given list of xml messages into a list of m qt t message objects", "bleu": 0.4057473284975201, "rouge": 0.5959147424511545}, {"predict": "stops the entity at the beginning of the current time", "true": "ends the bandwidth measurement", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "below method will be used to add new row files", "true": "this method will be used to add new row", "bleu": 0.7860753021519787, "rouge": 0.8501742160278747}, {"predict": "decode the base 64 encoded string data - whitespace will be ignored", "true": "decode the base 64 encoded string data - whitespace will be ignored", "bleu": 1.0, "rouge": 1.0}, {"predict": "build one or more complex number from a stream of bytes", "true": "skip over all frames below cur rfp with saved code pointers outside of heap ( c frames ) , stopping at the native frame immediately preceding the glue frame which contains the method id of the native method ( this is necessary to allow retrieving the return address", "bleu": 0.003942254675326148, "rouge": 0.030454318522216674}, {"predict": "scheme walk is called by path for a scheme lookup like file : / t mp / foo", "true": "scheme walk is called by path for a scheme lookup like file : / t mp / foo", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the mime type is a mime type mime type", "true": "checks whether the mime type represents an image media item", "bleu": 0.19338531381761725, "rouge": 0.2772727272727273}, {"predict": "create a new dialog object", "true": "message dialog with custom center node", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "measure item size in kilobytes rather than units which is more practical for a bitmap cache", "true": "measure item size in kilobytes rather than units which is more practical for a bitmap cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates and returns the matrix of the input matrix", "true": "returns a new matrix object , where each value is set to the absolute value", "bleu": 0.08617428905281956, "rouge": 0.23921568627450981}, {"predict": "removes the attribute value from the attribute", "true": "remove the attribute from the entry", "bleu": 0.3073940764756322, "rouge": 0.6240409207161125}, {"predict": "opens the camera ' s camera and vehicles en queued hexes on the number of departures , in the direction of the camera", "true": "wraps encode camera to mpeg ( )", "bleu": 0.05291907393644996, "rouge": 0.07376058041112453}, {"predict": "builds a debugger exception based on the given node", "true": "parses an exception debugger option", "bleu": 0.15619699684601276, "rouge": 0.1506172839506173}, {"predict": "takes an image using the \" http : / max color space to the picture", "true": "rotates the given image by 180 degrees", "bleu": 0.09103526405546068, "rouge": 0.09728867623604465}, {"predict": "update - e", "true": "update <unk> mode related fields", "bleu": 0.2758512992979459, "rouge": 0.23921568627450981}, {"predict": "sets name and attributes", "true": "sets name and attributes", "bleu": 1.0, "rouge": 1.0}, {"predict": "recreate the calendar object", "true": "display calendar for selected resource , time ( day / week / month ) and date", "bleu": 0.017888698387160718, "rouge": 0.09023668639053255}, {"predict": "creates a string string representing a coordinates in it", "true": "creates a line string using the given coordinate sequence", "bleu": 0.19960198807747329, "rouge": 0.3333333333333333}, {"predict": "trims an array to be exactly the target a size", "true": "trims an array to be exactly the target a size", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes any opened files and release any resources used by this b - tree", "true": "closes this strategy and releases any zookeeper resources ; but keeps the zookeeper instance open", "bleu": 0.10831305487476968, "rouge": 0.2741573033707865}, {"predict": "returns true if , at this time , the object will accept a connection according to the supplied event name", "true": "returns true if , at this time , the object will accept a connection via the named event", "bleu": 0.713027926413322, "rouge": 0.8501742160278747}, {"predict": "subtract the specified number of specified number of specified number", "true": "subtract the specified number of droid flakes", "bleu": 0.4617366309441026, "rouge": 0.6075697211155379}, {"predict": "process an array of bytes , producing output if necessary", "true": "process an array of bytes , producing output if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if service type does not require resource name", "true": "returns true if service type requires resource name", "bleu": 0.5193071778680676, "rouge": 0.7936802973977695}, {"predict": "power of the entire command line", "true": "strip the properties filenames supplied , replacing their contents", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "macro : round : parses s , rounds with u , f mts", "true": "macro : add : parses s , adds v u , f mts", "bleu": 0.4841524713034601, "rouge": 0.7692307692307693}, {"predict": "create an authority key identifier using the passed in certificate ' s public key , issuer and serial number", "true": "create an authority key identifier using the passed in certificate ' s public key , issuer and serial number", "bleu": 1.0, "rouge": 1.0}, {"predict": "opens a jar file", "true": "opens the specified jar file and returns a valid handle", "bleu": 0.11988448048923712, "rouge": 0.3978260869565217}, {"predict": "removes all emails of the given set", "true": "removes all email ' s from this user", "bleu": 0.21191828141393895, "rouge": 0.2634989200863931}, {"predict": "initializes the disk based cache by scanning for all files currently in the specified root directory", "true": "initializes the disk based cache by scanning for all files currently in the specified root directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "the graphical representation of a path", "true": "the graphical representation of a path", "bleu": 1.0, "rouge": 1.0}, {"predict": "java x", "true": "java x", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a password reset admin user", "true": "constructs a logger object", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "determines if a character is an english letter ( a", "true": "determines if a character is a letter", "bleu": 0.49616830003403634, "rouge": 0.7290836653386453}, {"predict": "call the visitors for the function arguments", "true": "call the visitors for the function arguments", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method creates a new link for a given uri and label", "true": "creates a link with the given uri and label text", "bleu": 0.3438931217657843, "rouge": 0.646969696969697}, {"predict": "checks if this token is an expression", "true": "checks if the token is a runtime expression", "bleu": 0.2789001430384383, "rouge": 0.6587473002159828}, {"predict": "destroys the tree node", "true": "destroys a tree hash instance after the top node was taken for authentication path", "bleu": 0.03708608461143315, "rouge": 0.3029801324503311}, {"predict": "creates a uri from a file part", "true": "creates a uri from a file", "bleu": 0.8408964152537145, "rouge": 0.9360613810741688}, {"predict": "reads a fixed type object from a reader", "true": "reads fixed type from the given reader with flags validation", "bleu": 0.19546825878823415, "rouge": 0.5446428571428571}, {"predict": "processes a request to play a media file", "true": "processes a request to play a media file", "bleu": 1.0, "rouge": 1.0}, {"predict": "performs a binary search for the specified element in the specified sorted list using the specified comparator", "true": "performs a binary search for the specified element in the specified sorted list using the specified comparator", "bleu": 1.0, "rouge": 1.0}, {"predict": "finish the xml document", "true": "finish the xml document", "bleu": 1.0, "rouge": 1.0}, {"predict": "check which elements are valid", "true": "check which elements are valid to appear at this point", "bleu": 0.36787944117144233, "rouge": 0.6288659793814433}, {"predict": "removes the first occurrence of the specified value from this one", "true": "we do not use any locks here as every remove is for a region entry which is locked before coming here", "bleu": 0.03859070605344198, "rouge": 0.0}, {"predict": "creates a new hash cache cache", "true": "creates cache hashing with provided algorithm", "bleu": 0.24446151121745047, "rouge": 0.3333333333333333}, {"predict": "marshall a e num value", "true": "marshall an e num value", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "c hole sky algorithm for symmetric and positive definite matrix", "true": "c hole sky algorithm for symmetric and positive definite matrix", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the credits from credits", "true": "initializes key and action event of game", "bleu": 0.15388864725803575, "rouge": 0.0}, {"predict": "indicates whether a midi file of the file type specified can be written from the sequence indicated", "true": "indicates whether a midi file of the file type specified can be written from the sequence indicated", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the window naf ( non - adjacent form ) of an integer", "true": "computes the window naf ( non - adjacent form ) of an integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a collection of bean to a collection name", "true": "given a collection name and a flag ( reverse of forward mapping ) , return the new collection name based on the mapping", "bleu": 0.06377280131207277, "rouge": 0.2896486229819563}, {"predict": "locks to prevent both puts and takes", "true": "locks to prevent both puts and takes", "bleu": 1.0, "rouge": 1.0}, {"predict": "fills vector with random integer values in the range min , max )", "true": "fills vector with random integer values in the range min , max )", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will be used to get the has code , this will be used to the index for inserting array wrapper object as a key in map", "true": "this method will be used to get the has code , this will be used to the index for inserting array wrapper object as a key in map", "bleu": 1.0, "rouge": 1.0}, {"predict": "this will examine the animation to signal that it will normally", "true": "returns this image animator thread back to service as an image f etcher if possible", "bleu": 0.08762962180865386, "rouge": 0.14969325153374236}, {"predict": "utility method to test that a string is equal to the local name", "true": "compare the given name with the package name in case in di <unk> way", "bleu": 0.0978840017329239, "rouge": 0.1471652593486128}, {"predict": "draws the range markers ( if any ) for an axis and layer", "true": "draws the range markers ( if any ) for a render er and layer", "bleu": 0.6734009436331136, "rouge": 0.8094089264173704}, {"predict": "decrypt key ( does not use salting , so the encryption result is the same for the same input )", "true": "decrypt key ( does not use salting , so the encryption result is the same for the same input )", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a vp f layer", "true": "construct a vp f layer", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the new instructions , in lining each instantiation of each subroutine until the code is fully elaborated", "true": "creates the new instructions , in lining each instantiation of each subroutine until the code is fully elaborated", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests if the given connection is currently closing", "true": "determines if a connection should be closed upon return to the pool", "bleu": 0.11567041937737582, "rouge": 0.1930379746835443}, {"predict": "set the saturation of the vector", "true": "get ter for hs l components", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "this function will examine the executor to start a job , waiting for all tasks", "true": "shutdown all attached resources synchronously", "bleu": 0.08225964699966554, "rouge": 0.10990990990990988}, {"predict": "indicates whether this pool is unused", "true": "indicates whether this pool is unused", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method performs a ftp directory on the current server , leaving the connection open", "true": "this method changes the current working directory", "bleu": 0.14247788801610148, "rouge": 0.3891547049441786}, {"predict": "remove all the given column from the database", "true": "remove quotes from the given column name", "bleu": 0.3549481056010052, "rouge": 0.5398230088495575}, {"predict": "returns whether the time out occurred", "true": "if enabled , checks whether the time that has passed since the scroll position was last changed is greater than the defined time out", "bleu": 0.023257430434379604, "rouge": 0.24063116370808674}, {"predict": "refills the input buffer", "true": "refills the input buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "search for the search documents in the given query", "true": "searches through the index for the specified query and returns the list of documents that finds a match for the query", "bleu": 0.05822753005110547, "rouge": 0.3109072375127421}, {"predict": "writes the tail of the list to the stream", "true": "writes the tail of the list to the stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a list of element objects that have the given name and are immediate children of the given element ; if name is null , all child elements will be included", "true": "return a list of element objects that have the given name and are immediate children of the given element ; if name is null , all child elements will be included", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a required number of random bytes", "true": "returns a required number of random bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the tip text for all the specified tables", "true": "returns the tip text for this property", "bleu": 0.5169731539571706, "rouge": 0.639412997903564}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method gets all job tasks from job request , returning a list of job jobs", "true": "get all cube jobs", "bleu": 0.08513012360883544, "rouge": 0.22426470588235295}, {"predict": "converts a q - array into a binary array", "true": "encodes a polynomial whose coefficients are between 0 and q , to binary", "bleu": 0.10761866342063775, "rouge": 0.26406926406926406}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "it opens a file input stream", "true": "it opens a file input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new caret listener that will be called when the caret position of the specified caret position", "true": "adds a new status change listener to the list of listeners", "bleu": 0.1457684614972261, "rouge": 0.43262411347517726}, {"predict": "static function to acquire the serial sensor manager based on the current sensor time", "true": "static function returning the serial sensor manager instance to use", "bleu": 0.29256127307315066, "rouge": 0.5154929577464789}, {"predict": "tests fail : always returns false", "true": "tests fail : always returns false", "bleu": 1.0, "rouge": 1.0}, {"predict": "a ' stream less ' version of encode that simply takes a buffer of bytes and returns a string containing the encoded buffer", "true": "a ' stream less ' version of encode that simply takes a buffer of bytes and returns a string containing the encoded buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks a stack frame value", "true": "checks a stack frame value", "bleu": 1.0, "rouge": 1.0}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the user ' s in the given switch to a switch", "true": "used to find and push in - bound and out - bound routes using static flow entry <unk>", "bleu": 0.07195858996018069, "rouge": 0.06269270298047276}, {"predict": "parse id for same document", "true": "returns the id from a same - document uri ( ex : \" # id \" )", "bleu": 0.029453208790640954, "rouge": 0.24830393487109909}, {"predict": "mark the start of the blocks", "true": "mark the space as in use", "bleu": 0.2907153684841096, "rouge": 0.3333333333333333}, {"predict": "c hole sky algorithm for symmetric and positive definite matrix", "true": "c hole sky algorithm for symmetric and positive definite matrix", "bleu": 1.0, "rouge": 1.0}, {"predict": "read a string off the memory i", "true": "read a string from memory", "bleu": 0.3655552228545123, "rouge": 0.6873239436619719}, {"predict": "shifts right an array of integers", "true": "shifts right an array of integers", "bleu": 1.0, "rouge": 1.0}, {"predict": "distinct aggregate function which update the distinct set", "true": "distinct aggregate function which update the distinct set", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will remove a new legion member from the player", "true": "this method will remove a legion member", "bleu": 0.46924700641055994, "rouge": 0.8102466793168881}, {"predict": "prints the builder ' s internal representation", "true": "prints the characters from the buffer and resets it to do : make sure that print buffer ( ) is called at the end of the stream in case we have some characters there ! ( flush ( ) ? )", "bleu": 0.0019001161598123603, "rouge": 0.0738946093276802}, {"predict": "parse a string value to a calendar", "true": "parse a string value to a calendar", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if a method is a target list to a target request", "true": "returns true if some method in this class has an active ba f body", "bleu": 0.09733489823443878, "rouge": 0.1517412935323383}, {"predict": "retains only the characters in the given string that are contained in the specified container", "true": "removes all characters from ' str ' that are not in ' retain chars '", "bleu": 0.12300686288463772, "rouge": 0.2666666666666666}, {"predict": "deletes an old , non - empty connection", "true": "close and delete an old , unused connection to make room for a new one", "bleu": 0.13156100890487687, "rouge": 0.32972972972972975}, {"predict": "find the index of the element that is larger than x", "true": "find the index of the element that is larger than x", "bleu": 1.0, "rouge": 1.0}, {"predict": "cleans up any reason for any reason that had been installed", "true": "removes all routes without any departure from the schedule", "bleu": 0.11390778025531027, "rouge": 0.1018363939899833}, {"predict": "test whether two relation agree", "true": "test whether two relation agree", "bleu": 1.0, "rouge": 1.0}, {"predict": "prepare the suffix to start the stop method that advance tokens", "true": "standard suffix removal", "bleu": 0.11390778025531027, "rouge": 0.15926892950391647}, {"predict": "returns the text matched by the current regular expression", "true": "returns the text matched by the current regular expression", "bleu": 1.0, "rouge": 1.0}, {"predict": "take a list of patches and return a textual representation", "true": "take a list of patches and return a textual representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "enter a new precedence level", "true": "leave precedence level", "bleu": 0.35930411196308426, "rouge": 0.5236051502145923}, {"predict": "this method validates the sort size", "true": "this method validates the sort size", "bleu": 1.0, "rouge": 1.0}, {"predict": "finish an ' th - of a region of the raster , and renders the rendered image", "true": "called to indicate that painting is finished", "bleu": 0.06074588070876682, "rouge": 0.0}, {"predict": "delete the panel list", "true": "invoked by delete panel menu item validate user intent before deleting", "bleu": 0.06909866532427987, "rouge": 0.24596774193548387}, {"predict": "perform an asynchronous average operation", "true": "perform an asynchronous average operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next pattern in the pattern", "true": "returns the next token", "bleu": 0.345720784641941, "rouge": 0.5736677115987461}, {"predict": "creates a implementation of dom test document builder factory using org", "true": "creates a implementation of dom test document builder factory using org", "bleu": 1.0, "rouge": 1.0}, {"predict": "obtains a description of this route", "true": "obtains a description of this route", "bleu": 1.0, "rouge": 1.0}, {"predict": "pushes a new type on to the output frame stack", "true": "pushes a new type on to the output frame stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "instantiate s a new macro", "true": "loads a macro from a file on disk", "bleu": 0.1658165975077607, "rouge": 0.2953995157384988}, {"predict": "method to delete all input objects", "true": "delete the elastic search indices that was used for functional testing", "bleu": 0.09600096733558854, "rouge": 0.1117216117216117}, {"predict": "add a part to the body", "true": "adds partition to partition set", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "terminate the f sync service and wait for all the tasks to complete", "true": "terminate the f sync service and wait for all the tasks to complete", "bleu": 1.0, "rouge": 1.0}, {"predict": "find depth of depth first or more grid location up", "true": "search s for the farthest empty location where the current tile could go", "bleu": 0.0933873085201553, "rouge": 0.084958217270195}, {"predict": "computes minimal sample size for down scaling image so result image size won ' t exceed max acceptable opengl texture size", "true": "computes minimal sample size for down scaling image so result image size won ' t exceed max acceptable opengl texture size", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the main split pane window", "true": "creates the main split pane", "bleu": 0.8091067115702212, "rouge": 0.9242424242424241}, {"predict": "constructs a chain of chain chain chain based on the time chain", "true": "to do currently returns exactly the same chain", "bleu": 0.11498759556447223, "rouge": 0.2074829931972789}, {"predict": "check if we have to make sure it matches the m a private transaction and optionally make sure it matches the internal transaction", "true": "reference able mechanism requires later setup of tx m gr , otherwise binding into j ndi already requires that tm is running", "bleu": 0.05291907393644996, "rouge": 0.04462326261887345}, {"predict": "move all moves from square sq 0 in direction delta , return true", "true": "return true if making a move delivers check to the <unk>", "bleu": 0.1350862565735141, "rouge": 0.16920943134535368}, {"predict": "for null use , return directory in a directory for the given class path", "true": "creates a new specific fs directory instance", "bleu": 0.09782375748961449, "rouge": 0.2026578073089701}, {"predict": "java", "true": "add element to xml document", "bleu": 0.015401555084618098, "rouge": 0.0}, {"predict": "writes content from input stream to output", "true": "read a string of up to max length bytes from an input stream", "bleu": 0.11787460936700446, "rouge": 0.2846034214618974}, {"predict": "splits the result of a remote branch name to the result in the given branch", "true": "returns the remote and the \" local \" name of a remote branch", "bleu": 0.25748661016289676, "rouge": 0.36180308422301305}, {"predict": "see iso 16022 : 2006 , 5", "true": "see iso 16022 : 2006 , 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "encrypts the given char stream using the specified password", "true": "encrypts data received from the given output stream using the aes algorithm", "bleu": 0.23263472697663287, "rouge": 0.5570776255707762}, {"predict": "pads the string with the given character until it has the given length", "true": "pads the string with the given character until it has the given length", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether we should select a view for swiping", "true": "checks whether we should select a view for swiping", "bleu": 1.0, "rouge": 1.0}, {"predict": "reload the view to view as view", "true": "reset the state of front view when the it ' s recycled by list view", "bleu": 0.0704451546128839, "rouge": 0.2559440559440559}, {"predict": "push a pair of nodes into the stack", "true": "push a pair of nodes into the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "resets the iv to its original value", "true": "resets the iv to its original value", "bleu": 1.0, "rouge": 1.0}, {"predict": "multiply this matrix by one counter", "true": "multiplies this matrix by a matrix that flips and shifts the y - axis", "bleu": 0.10837364479814457, "rouge": 0.2798165137614679}, {"predict": "called when the connection factory is closed", "true": "shuts down the data source", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "string if ies an ipv 4 or v 6 address with subnet mask", "true": "string if ies an ipv 4 or v 6 address with subnet mask", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new action object", "true": "creates a new action object", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert hex string to byte", "true": "convert hex string to byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a string to the buffer", "true": "puts a string into the buffer by first writing the size of the string as an in t , followed by the bytes of the string , padded if necessary to a multiple of 4", "bleu": 0.0030454979317075556, "rouge": 0.1730496453900709}, {"predict": "returns a collection of all permissions", "true": "create permission for our trusted code", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "produces a map that produces a region of the desired network , and add a definition to the desired points", "true": "update one network with information from another", "bleu": 0.06108557268562171, "rouge": 0.08111702127659574}, {"predict": "prints the specified message followed by ' \\ n '", "true": "temporary utility method to keep current print ln behavior", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "blocks until a chunk of the given size can be made from the stream , or e of is reached", "true": "blocks until a chunk of the given size can be made from the stream , or e of is reached", "bleu": 1.0, "rouge": 1.0}, {"predict": "user runs a query and counts facets", "true": "user runs a query and aggregates facets by summing their association values", "bleu": 0.3461582271460378, "rouge": 0.6029654036243821}, {"predict": "constructs a new geo hash instance with a subset of the given input stream", "true": "parse the raw text geo names file", "bleu": 0.09782375748961449, "rouge": 0.10132890365448505}, {"predict": "if at runtime , when the q name of the attribute is known , another prefix is specified for the attribute , then we can patch or hack the name with this method", "true": "if at runtime , when the q name of the attribute is known , another prefix is specified for the attribute , then we can patch or hack the name with this method", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a string from a list of tag names", "true": "creates a mojang son string from the given list tag", "bleu": 0.19766634639198594, "rouge": 0.5213675213675214}, {"predict": "creates a different element", "true": "creates a new similar xml element", "bleu": 0.3081980909598119, "rouge": 0.5791139240506329}, {"predict": "will account for several things , checking several things : 1", "true": "remove per partition counters and associated sens is ion metrics", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "returns a vector of another vector with another angle", "true": "return a new instance of vector rotated from the given number of radians", "bleu": 0.10761866342063775, "rouge": 0.26406926406926406}, {"predict": "invoked when a client panel is being made on the m qt t client panel", "true": "the method is part of the m qt t simple callback interface in the event of the m qt t connection being broken the led is set to colour <unk> and made to flash", "bleu": 0.07255181909707009, "rouge": 0.19074421513445902}, {"predict": "calculate the bounds for a view ' s title", "true": "calculate the bounds for a view ' s title", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the header , or null if the header has both the same header", "true": "returns the value of an already set output header", "bleu": 0.1250076305588977, "rouge": 0.271513353115727}, {"predict": "parse the sparse fields for each module , including key - value pairs", "true": "parses query params and produces sparse fields map", "bleu": 0.12571192676522522, "rouge": 0.19902120717781402}, {"predict": "sign all the signatures of the bucket distribution", "true": "sign part of the xml document referer ed by the supplied a list of id attributes of nodes", "bleu": 0.06870470052394348, "rouge": 0.21580188679245282}, {"predict": "invoked when the target of the listener has changed its state", "true": "invoked when the target of the listener has changed its state", "bleu": 1.0, "rouge": 1.0}, {"predict": "if the url is https : 1 will be interpreted as a active request for the url to get a remote url", "true": "adds the url to the url class loader", "bleu": 0.12259149958656422, "rouge": 0.2911694510739857}, {"predict": "add a new interval based on interval start and end time", "true": "add points to the interval", "bleu": 0.12605968092174913, "rouge": 0.2681318681318681}, {"predict": "resets the instance of default initial values to their initial values", "true": "resets som network to initial values", "bleu": 0.17033186037639278, "rouge": 0.4969450101832994}, {"predict": "reloads the current xml document", "true": "reloads the current page and jumps to the same position", "bleu": 0.18693159143202892, "rouge": 0.37731958762886597}, {"predict": "draws a hexagon shape of the given parameters", "true": "draws a hexagon shape for the given parameters", "bleu": 0.5969491792019646, "rouge": 0.875}, {"predict": "this is used to determine if a static field is a static field", "true": "this is used to determine if a field is static", "bleu": 0.5757575636202255, "rouge": 0.8905109489051095}, {"predict": "attempt that outstanding requests", "true": "get the current number of outstanding ( batch ) requests to google pub / sub", "bleu": 0.025419978385188596, "rouge": 0.190625}, {"predict": "encode a byte array into a string", "true": "formats a key as a series of comma delimited unsigned bytes", "bleu": 0.1160873020151595, "rouge": 0.2136602451838879}, {"predict": "create and initializes a component", "true": "initializes the logging for the component", "bleu": 0.24736929544091937, "rouge": 0.3577712609970674}, {"predict": "fills the left most recently used within the buffer", "true": "fills the list from pos to the left of the list view", "bleu": 0.1673594937001884, "rouge": 0.3713850837138508}, {"predict": "removes a default value from the set of default values", "true": "removes the given value from the set of default values", "bleu": 0.6989307622784944, "rouge": 0.8}, {"predict": "turns a key binding description into the key binding", "true": "returns the key code for the specified key binding description", "bleu": 0.2795424278922846, "rouge": 0.41709401709401706}, {"predict": "test cache entry ( ) - cache entry only if cache folder cache is mostly for cache entries", "true": "replacing the value for a key doesn ' t cause an eviction but it does bring the replaced entry to the front of the queue", "bleu": 0.0510786326197934, "rouge": 0.04518518518518518}, {"predict": "merges a list of api signatures using null and return the timestamp", "true": "generates a merged signature of this and another one , where the other signature must be a 1 - signature", "bleu": 0.06707852829493063, "rouge": 0.23921568627450981}, {"predict": "returns a hash code for this instance", "true": "returns a hash code for this object", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "creates new grid exception with given throw able as a cause and source of error message", "true": "creates new exception with given throw able as a nested cause and source of error message", "bleu": 0.7346682658304726, "rouge": 0.9375000000000001}, {"predict": "define that external commit is aborted", "true": "the given objects enters the transaction", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "add an option to the required options for an option", "true": "adds an option instance", "bleu": 0.16590387014219712, "rouge": 0.3096446700507614}, {"predict": "pause for all channel causes those starting at first time to join the client", "true": "the joined event fires when the first client handshake is processed", "bleu": 0.10511846841633776, "rouge": 0.16353887399463804}, {"predict": "property change listener method , to listen for the source map ' s background changes", "true": "property change listener method , to listen for the source map ' s background changes", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a single frame to the animation", "true": "add a frame to the transition animation", "bleu": 0.38260294162784475, "rouge": 0.7142857142857143}, {"predict": "makes a common resource implementation for calling the resources of the class hierarchy", "true": "scans the class path for concrete classes under the specified package implementing this interface", "bleu": 0.1322608782946588, "rouge": 0.1471652593486128}, {"predict": "get the text in the c data block", "true": "get the text in the c data block", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the sky shading code has the passed position", "true": "determines if the block at the given position requires a skylight update", "bleu": 0.12273680279953825, "rouge": 0.2683284457478006}, {"predict": "expand a rectangle by the given amount", "true": "expand a rectangle by the given amount", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a given string into a datagram packet", "true": "converts a given string into a datagram packet", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of this object", "true": "constructs and returns a string representation of this constraints object", "bleu": 0.5663883102178479, "rouge": 0.7981308411214955}, {"predict": "assigns the set of ids to the set", "true": "assigns the objects to the clusters", "bleu": 0.2653856085536222, "rouge": 0.5865384615384615}, {"predict": "change the slide and return the number of its children", "true": "do a pro bab list ic subtree slide move", "bleu": 0.12605968092174913, "rouge": 0.10627177700348434}, {"predict": "un registers a previously registered vm shutdown hook", "true": "un registers a previously registered vm shutdown hook", "bleu": 1.0, "rouge": 1.0}, {"predict": "counts the number of black / white transitions between two points , using something like bres en ham ' s algorithm", "true": "counts the number of black / white transitions between two points , using something like bres en ham ' s algorithm", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the string representation of the current value", "true": "returns the string representation of the current value", "bleu": 1.0, "rouge": 1.0}, {"predict": "camera camera size of the camera button", "true": "check if good camera sizes are available for encoder", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "construct a new instance with the specified detail string and exception", "true": "construct a new instance with the specified detail string and exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a string , separate by space if not empty", "true": "append string separated by space", "bleu": 0.17827531042796255, "rouge": 0.42558139534883715}, {"predict": "encodes this plain string into its url encoded bytes and returns the corresponding byte array", "true": "encode string to base 64", "bleu": 0.08225964699966554, "rouge": 0.10990990990990988}, {"predict": "lookup table as new table in this g sub table", "true": "return information about the lookup tables in this g sub table", "bleu": 0.4342117574941646, "rouge": 0.56656346749226}, {"predict": "get the sum of the number", "true": "get aggregate summation of time - deltas , in nanoseconds", "bleu": 0.1255107248036171, "rouge": 0.23921568627450981}, {"predict": "re - measure the loading views height , and adjust internal padding as necessary", "true": "re - measure the loading views height , and adjust internal padding as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the given character sequence is a word boundary", "true": "takes a character sequence with a single character and checks if the character occurs in a list of word separators or is empty", "bleu": 0.07121523337509393, "rouge": 0.27651858567543064}, {"predict": "execute the supplied operation using the primary , blocking until a primary is available", "true": "execute the supplied operation using the primary , blocking until a primary is available", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a portion of an array of characters", "true": "write an array of characters", "bleu": 0.44632361378533286, "rouge": 0.6421052631578947}, {"predict": "initializes the table viewer with a specified span", "true": "creates the table for the repositories", "bleu": 0.21105340631872638, "rouge": 0.2932692307692307}, {"predict": "message processing as message", "true": "human readable text description of type and subtype", "bleu": 0.11115018927487523, "rouge": 0.0}, {"predict": "create a straight line from the current path point to the new one specified by x and y", "true": "create a straight line from the current path point to the new one specified by x and y", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method determines which menu items get to be ' action items ' that will appear in an action bar and which items should be ' overflow items ' in a secondary menu", "true": "this method determines which menu items get to be ' action items ' that will appear in an action bar and which items should be ' overflow items ' in a secondary menu", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks basic missing value handling of the scheme", "true": "checks basic missing value handling of the scheme", "bleu": 1.0, "rouge": 1.0}, {"predict": "disables the enabled / disable the service buttons , and disables the current speech settings , in the given detect preferences , and preferences", "true": "disables all buttons in the interface", "bleu": 0.07575731225158963, "rouge": 0.29901960784313725}, {"predict": "load artifact at path with a custom artifact", "true": "load artifact at path , using path name as artifact id", "bleu": 0.32105892380868783, "rouge": 0.511744966442953}, {"predict": "fair version of try acquire", "true": "fair version of try acquire", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the input string is an end of the header", "true": "check if the current string builder trailing characters is an http header end ( empty cr lf )", "bleu": 0.11219654529039101, "rouge": 0.3965330444203684}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "a run n able to run a manual action with the specified time out ? this will continue to do work with a manual throttle , this thread will continue to wait until auto operation is resumed", "true": "a run n able that implements delayed execution of a transit section action", "bleu": 0.09868209342887882, "rouge": 0.2627422828427854}, {"predict": "creates a new d add extensions dialog", "true": "creates new d add extensions dialog", "bleu": 0.7071067811865475, "rouge": 0.9360613810741688}, {"predict": "adds the specified point to this partial hull", "true": "add point to the result set", "bleu": 0.22679164443904004, "rouge": 0.2932692307692307}, {"predict": "check whether the specified class is a c glib - generated class", "true": "check whether the specified class is a c glib - generated class", "bleu": 1.0, "rouge": 1.0}, {"predict": "verifies the authentication status message in a authentication response", "true": "verifies the di co very information matches the data received in a authentication response from an open id provider", "bleu": 0.14872972167876733, "rouge": 0.4026402640264026}, {"predict": "bugs in jd bc add problem", "true": "generate report using description and target date", "bleu": 0.15723447135049806, "rouge": 0.0}, {"predict": "update text views based on recharge", "true": "update the text views based on the recharge data being passed in", "bleu": 0.24601580968354606, "rouge": 0.6288659793814433}, {"predict": "obtains map node map for the transaction , either a node or null if none", "true": "gets transaction id map depending on transaction type", "bleu": 0.09103526405546068, "rouge": 0.18401206636500753}, {"predict": "stops the listener thread and unbinds the address", "true": "stops the listener thread and unbinds the address", "bleu": 1.0, "rouge": 1.0}, {"predict": "decode data from input data", "true": "decode data with private key", "bleu": 0.35930411196308426, "rouge": 0.4}, {"predict": "derives the a rgb value for a color based on an offset between two other colors", "true": "derives the a rgb value for a color based on an offset between two other colors", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends array , if holds at least one position , and vertically", "true": "adds a landing pad to the station", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "creates a strategy that represents a generic attack", "true": "create a new strategy", "bleu": 0.17747405280050269, "rouge": 0.3546511627906977}, {"predict": "creates a default thread pool , with default values : - minimum pool size is 0 - maximum pool size is 16 - keep alive set to 30 seconds - a default thread factory - all events are accepted", "true": "creates a default thread pool , with default values : - minimum pool size is 0 - maximum pool size is 16 - keep alive set to 30 seconds - a default thread factory - all events are accepted", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a property change listener", "true": "add a property change listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the data service to the underlying locator ' s data and writes it to the underlying locator ' s data service", "true": "write a chunk on to the data service", "bleu": 0.1171291646655074, "rouge": 0.2911694510739857}, {"predict": "converts the supplied event to an event queue , and return the event", "true": "disabled for hosted mode", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "load the null values from the preferences which can be ' t required to find out the preferences", "true": "initialize the values in the table to the preference values", "bleu": 0.08961672320242714, "rouge": 0.3765432098765432}, {"predict": "this method will read all the properties from file and load it into memory", "true": "this method will read all the properties from file and load it into memory", "bleu": 1.0, "rouge": 1.0}, {"predict": "records through the notebook repository", "true": "copies new / updated notes from source to destination storage", "bleu": 0.08445588027797912, "rouge": 0.0}, {"predict": "prints this property list out to the specified output stream", "true": "prints this property list out to the specified output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert date in string format to date format", "true": "convert date in string format to date format", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns directory or null if not found", "true": "calculates md 5 checksum for the given file o directory", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "initial is e the parameters generator", "true": "initial is e the parameters generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "to do there is another record in the iteration", "true": "method to check more result is present or not", "bleu": 0.15619699684601276, "rouge": 0.2222222222222222}, {"predict": "increases number of components of this list", "true": "trims the capacity of this list to be the list ' s current size", "bleu": 0.12718356905542982, "rouge": 0.2695139911634757}, {"predict": "enters a new scope by appending any necessary whitespace and the given bracket", "true": "enters a new scope by appending any necessary whitespace and the given bracket", "bleu": 1.0, "rouge": 1.0}, {"predict": "create an ascii representation of a position", "true": "create an ascii representation of a position", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears the s bg data structures", "true": "clears the caches and sections data set", "bleu": 0.2644358066258934, "rouge": 0.45522388059701485}, {"predict": "converts the nodes of this node to a set of nodes that are ordered by their names", "true": "converts an iterator to a set of nodes , according to the x path data model", "bleu": 0.28433291815307693, "rouge": 0.36563436563436563}, {"predict": "en queues the number of threads in the given task", "true": "runs a task concurrently", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "creates the vm list", "true": "create the virtual machines and add them to the list", "bleu": 0.08872444253557525, "rouge": 0.26521739130434785}, {"predict": "adds a port use , when the port returned by the key ( the port )", "true": "adds a use count to a port , which indicates one initiator is using the port this is public static because the storage ports as signer test uses it", "bleu": 0.0703095484798916, "rouge": 0.29570637119113574}, {"predict": "pop the current executing attribute set", "true": "pop the current executing attribute set", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates one buffer for the camera preview callback", "true": "creates one buffer for the camera preview callback", "bleu": 1.0, "rouge": 1.0}, {"predict": "associates the specified value with the specified key in this cache", "true": "put element , key and value both not allowed to be null", "bleu": 0.11510518494396255, "rouge": 0.08628005657708629}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove model change listener", "true": "remove model change listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "fire a change event to listeners", "true": "fire a change event to listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the name and prepares the connection type", "true": "constructs a name for the connection using the connection type , host , and port", "bleu": 0.143106448612759, "rouge": 0.32972972972972975}, {"predict": "execute multiple commit based on this path", "true": "executes a query on the queries inside the cl d fusion en vi <unk> nt", "bleu": 0.059237077985967744, "rouge": 0.08531468531468532}, {"predict": "discovers the id and returns the sam l 2 entity", "true": "discovers ( refreshes ) a host", "bleu": 0.12605968092174913, "rouge": 0.13090128755364808}, {"predict": "read from the specified byte array into the buffer", "true": "the read fully method from data input stream is very useful for all types of streams", "bleu": 0.07711214194298908, "rouge": 0.1523096129837703}, {"predict": "setup circles on a screen", "true": "draw lines between the connectors", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "adds a new a star node to the queue unless it is already among the closed nodes , in which case it only updates the closed node with the new distance", "true": "adds a new a star node to the queue unless it is already among the closed nodes , in which case it only updates the closed node with the new distance", "bleu": 1.0, "rouge": 1.0}, {"predict": "java nio replacement of java file", "true": "gets the file from a java file object", "bleu": 0.20830666398386113, "rouge": 0.2785388127853881}, {"predict": "signals a waiting take", "true": "signals a waiting take", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a raster with b layout but using a different width and height", "true": "creates a writable raster with the specified width and height , that has a data layout ( sample model ) compatible with this color model", "bleu": 0.092957531028187, "rouge": 0.29877551020408166}, {"predict": "build a random left - regular bipartite graph of given left and right sizes", "true": "build a random left - regular bipartite graph of given left and right sizes", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes and returns a string", "true": "execute a command in the environment", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "updates the progress bar", "true": "update progress , safe to use for <unk>", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "creates a context handler for the given directory resource , including in case of the given resource directory", "true": "creates a context handler for the directory", "bleu": 0.3187271473320672, "rouge": 0.6082621082621082}, {"predict": "tests if this string starts with the specified prefix", "true": "indicates if this text starts with the specified prefix", "bleu": 0.5814307369682193, "rouge": 0.7777777777777778}, {"predict": "the gen initialize r method which enables the initialize r method to initialize the j re - initialize r method and initialize the initialize the program", "true": "ensure the jsp engine is initialized correctly", "bleu": 0.04668049023095243, "rouge": 0.06762749445676275}, {"predict": "creates a new temporary directory in the default temporary directory", "true": "creates a new temporary directory in the default temporary file location", "bleu": 0.8081591428066641, "rouge": 0.8498452012383902}, {"predict": "convert an in - format of partition ' s partition key array , with specific partition", "true": "to string - a string representation for the super - class partition ' partition '", "bleu": 0.11502783619900048, "rouge": 0.25957446808510637}, {"predict": "scipio : returns true only if the category id is a child", "true": "scipio : returns true only if the category id is child of the given parent category id", "bleu": 0.5553197003149268, "rouge": 0.7357456140350876}, {"predict": "input an instance for filtering", "true": "input an instance for filtering", "bleu": 1.0, "rouge": 1.0}, {"predict": "get a list of all tables in the database", "true": "get a list of all of the columns on a table", "bleu": 0.4302241682304373, "rouge": 0.5893719806763285}, {"predict": "adds a resource to the local cache", "true": "add a resource created within the analyzed method", "bleu": 0.22772101321113858, "rouge": 0.3952483801295896}, {"predict": "blocks the current event until the event arrives or the time out expires", "true": "signals the semaphore when the event arrives", "bleu": 0.18798317647335086, "rouge": 0.42287694974003465}, {"predict": "tests if this object is equal to another", "true": "tests this object for equality with an arbitrary object", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "check if cassandra db for cassandra cluster ( meaning that all dbs vc instances are being used in the cluster finished token number but it might as well be used elsewhere", "true": "check if node count / 2 + 1 dbs vc instances are active on other nodes in the cluster so that if the current node is powered off , a quorum will still be maintained", "bleu": 0.14682384374394222, "rouge": 0.2997542997542998}, {"predict": "schedule an alarm for the given context", "true": "schedules the nearest upcoming alarm , to refresh notifications", "bleu": 0.15447878876032708, "rouge": 0.12224448897795591}, {"predict": "stop the stop request", "true": "allows scheduling a request to stop the workload", "bleu": 0.18693159143202892, "rouge": 0.31443298969072164}, {"predict": "java x", "true": "java x", "bleu": 1.0, "rouge": 1.0}, {"predict": "joins arrays using a specific array of integers", "true": "joins arrays together , if only one array contains elements it will be returned without coping anything", "bleu": 0.07362846694339191, "rouge": 0.22536945812807882}, {"predict": "split an url into two strings", "true": "returns a list of sub parts of path of a resource name", "bleu": 0.06833381956448398, "rouge": 0.0}, {"predict": "initialize pos following the forward stage", "true": "initial is e best selling items report", "bleu": 0.15723447135049806, "rouge": 0.0}, {"predict": "notify all listeners that are no longer in this transaction", "true": "notification of transaction beginning", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "this is the method to add the jobs to the job", "true": "add the given job to run", "bleu": 0.17033186037639278, "rouge": 0.3727087576374745}, {"predict": "reset the parser with a new latex expression", "true": "reset the parser with a new latex expression", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a constant - constant", "true": "adds a new constant", "bleu": 0.3860973950960897, "rouge": 0.6802973977695167}, {"predict": "add full chart data", "true": "add full chart data", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a rule to the data output stream , with month and with day with day with day information", "true": "writes the state of the transition rule to the stream", "bleu": 0.1326475916741222, "rouge": 0.3652694610778443}, {"predict": "removes the given property from being animated as a part of this property bundle", "true": "removes the given property from being animated as a part of this property bundle", "bleu": 1.0, "rouge": 1.0}, {"predict": "de serialize the byte array using a default encoding", "true": "de serializes a serialized type serialize r", "bleu": 0.16784459625186196, "rouge": 0.2557651991614256}, {"predict": "divide the number of multi digits by the number of one digit", "true": "divide the number of multi digits by the number of one digit", "bleu": 1.0, "rouge": 1.0}, {"predict": "show the selected neuron info dialog", "true": "creates and displays the neuron properties dialog", "bleu": 0.22236312185643822, "rouge": 0.45522388059701485}, {"predict": "encrypt the input array", "true": "perform pseudo \" in - place \" encryption", "bleu": 0.11115018927487523, "rouge": 0.0}, {"predict": "determine if a dynamic change has part of a given class", "true": "check if one of the children is changed", "bleu": 0.12605968092174913, "rouge": 0.216696269982238}, {"predict": "removes special char if defined , inputs and replaces temp characters", "true": "for some save sc near ios and analysis we should remove special characters , i", "bleu": 0.09956647337521526, "rouge": 0.14969325153374236}, {"predict": "construct a network script action", "true": "create a new script action for the work space", "bleu": 0.17348474258688365, "rouge": 0.40757238307349664}, {"predict": "get the web image in the provided url", "true": "load the web view with an image with a url", "bleu": 0.1867587389639562, "rouge": 0.43571428571428567}, {"predict": "this method consolidates the preferred string for exists and their receipt is required", "true": "constructs a list of receipts for each installment", "bleu": 0.09552040806823771, "rouge": 0.09951060358890701}, {"predict": "check if word contains an email address", "true": "checks if the input parameter is a valid email", "bleu": 0.15447878876032708, "rouge": 0.24448897795591182}, {"predict": "adds an edge to the directed edges for this planar graph", "true": "adds a directed edge which is known to form part of this line", "bleu": 0.12498879161997976, "rouge": 0.3283983849259758}, {"predict": "parses an xml file as xml", "true": "parses a deployment descriptor stored in a regular file", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "open a new connection entry", "true": "called by the conn m gr thread when a new connection is created", "bleu": 0.10259023253147191, "rouge": 0.3086003372681282}, {"predict": "checks whether the extension of the filename is that specified", "true": "checks whether the extension of the filename is that specified", "bleu": 1.0, "rouge": 1.0}, {"predict": "report a report collisions", "true": "generate and return the collision report", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "adds the given topic to the subscription store - used for topic to subscription matching", "true": "adds the given topic to the subscription store - used for topic to subscription matching", "bleu": 1.0, "rouge": 1.0}, {"predict": "zips the given location to an zip file in \" dir \" database \"", "true": "store the contents of the to be zipped name directory into a zip file with the provided name", "bleu": 0.09932987502280906, "rouge": 0.24448897795591182}, {"predict": "generates a hash map for storing expanded state when activity is rotated or on resume ( ) is called", "true": "generates a hash map used to store expanded state for items in the list on configuration change or whenever on resume is called", "bleu": 0.21207598249631363, "rouge": 0.5149654643131236}, {"predict": "adds audio packet listener to the audio packet", "true": "adds the listener to receive audio packets from all modules", "bleu": 0.19546825878823415, "rouge": 0.43571428571428567}, {"predict": "convenience method for decoding data to a file", "true": "convenience method for decoding data to a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a delta indicator with the specified critical it y and critical it y", "true": "creates the extension from the passed der encoded value of the same", "bleu": 0.08839374326825923, "rouge": 0.07800511508951406}, {"predict": "creates a new java environment that includes the source path", "true": "creates a java environment with the given ' java ' path", "bleu": 0.20532606309031395, "rouge": 0.56656346749226}, {"predict": "format method for the o conversion character and long argument", "true": "format method for the o conversion character and long argument", "bleu": 1.0, "rouge": 1.0}, {"predict": "register a callback for javascript object that has been used in javascript", "true": "adds a js function to handle calls to the specified javascript object", "bleu": 0.14694106251955755, "rouge": 0.25}, {"predict": "remove all blocks from the section entries", "true": "remove all blocks , block listeners , and entry points", "bleu": 0.22521602211604308, "rouge": 0.34205607476635513}, {"predict": "write string to file", "true": "java nio replacement of commons - io", "bleu": 0.142719668098593, "rouge": 0.0}, {"predict": "selection tree nodes must be constructed with at least two things to select between", "true": "determines whether a given node is a variable access node that can be simplified", "bleu": 0.08839374326825923, "rouge": 0.07142857142857142}, {"predict": "get the picker for the select slider", "true": "called by the picker for updating the header display", "bleu": 0.27470644934024185, "rouge": 0.48897795591182364}, {"predict": "allows you to fold sets of nodes less than one vertex s , and the leaf will be a intersection of the same as near enough to the r", "true": "where is a segment , represented by endpoints ' s 1 ' and ' s 2 ' , within g a range ' near ' of region ' r ' ?", "bleu": 0.05512021350763832, "rouge": 0.1656708310700706}, {"predict": "add an action to the list", "true": "add an action to the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "method which loads an index from a byte input stream", "true": "method which loads an index from a data input ( random access file or data input stream )", "bleu": 0.33337722673969344, "rouge": 0.611358574610245}, {"predict": "obtains the url of the specified class file", "true": "obtains the url of the specified class file", "bleu": 1.0, "rouge": 1.0}, {"predict": "con v 23 ce of condition ids to s so that list includes the newly generated from the client", "true": "the sign off function lets the server know that a client is checking out", "bleu": 0.08097785064266201, "rouge": 0.18692543411644533}, {"predict": "this method creates steps to create s rdf pairs in an empty group", "true": "this method creates steps to create s rdf pairs in an empty s rdf group", "bleu": 0.8029705666325384, "rouge": 0.9167630057803468}, {"predict": "convert a timestamp to the op log", "true": "creating timestamp for down sampling in order to be consistent with ts db down sampling fun c on hour / minute level", "bleu": 0.024116926544041066, "rouge": 0.1261633919338159}, {"predict": "should a navigation bar appear at the bottom of the screen in the current device configuration ? a navigation bar may appear on the right side of the screen in certain configurations", "true": "should a navigation bar appear at the bottom of the screen in the current device configuration ? a navigation bar may appear on the right side of the screen in certain configurations", "bleu": 1.0, "rouge": 1.0}, {"predict": "for printing indices in a given point", "true": "returns a string represent ion of the node", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "receive notification of a recoverable xslt processing error", "true": "receive notification of a recoverable xslt processing error", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the head of the as so cation list that is keyed by target", "true": "get the head of the as so cation list that is keyed by target", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a union path iterator object , including creation of location path iterators from the opcode list , and call back into the compiler to create predicate expressions", "true": "create a union path iterator object , including creation of location path iterators from the opcode list , and call back into the compiler to create predicate expressions", "bleu": 1.0, "rouge": 1.0}, {"predict": "serialize to the file", "true": "executes the unzip run n able using the provided monitor to update the user and provide cancel capabilities", "bleu": 0.012007547560562644, "rouge": 0.16310160427807485}, {"predict": "read a record in the database", "true": "read a record from the database", "bleu": 0.488923022434901, "rouge": 0.8333333333333334}, {"predict": "print error message into the specified error message", "true": "throws error message with line number and last token read", "bleu": 0.1643685581109115, "rouge": 0.21785714285714283}, {"predict": "constant - time spooky hash 4 - word - state hashing reusing pre computed state partially", "true": "constant - time spooky hash 4 - word - state hashing reusing pre computed state partially", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the iterator has at the end of the underlying cursor at the end", "true": "if the deal has more deals , this returns true ; false otherwise", "bleu": 0.1332358437599213, "rouge": 0.21082949308755758}, {"predict": "adds an issuer to the criterion for the issuer distinguished names", "true": "adds an issuer to the criterion for the issuer distinguished names", "bleu": 1.0, "rouge": 1.0}, {"predict": "build the string required for an sql select statement : where key in ( ? , ? ,", "true": "build the string required for an sql select statement : where key in ( ? , ? ,", "bleu": 1.0, "rouge": 1.0}, {"predict": "filter a map of nodes to replace with the specified name", "true": "creates a copy of nodes map without the given node", "bleu": 0.17827531042796255, "rouge": 0.384251968503937}, {"predict": "write the given device to storage if we are master", "true": "write the given device to storage if we are master", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "assumes that array lower + 1 through to array upper is already in heap form and then puts array lower to array upper in heap form", "true": "helps sort an array of doubles", "bleu": 0.04668049023095243, "rouge": 0.07043879907621246}, {"predict": "removes processor from the internal buffer", "true": "removes the processor from the internal processor queue at the provided index", "bleu": 0.23671529472186087, "rouge": 0.5240549828178694}, {"predict": "creates the list of prefix nodes contained in the given trie", "true": "inserts a chain of children into the given node", "bleu": 0.16108992769687397, "rouge": 0.3055091819699499}, {"predict": "ensure that the given locator is by by adding / or operator to the locator s model", "true": "converts a locator string with a known prefix to a by object", "bleu": 0.0859076483566362, "rouge": 0.1423570595099183}, {"predict": "notify listeners that a task has been started", "true": "notify listeners that a task was started", "bleu": 0.6104735835807844, "rouge": 0.8097345132743362}, {"predict": "non - dom : check for valid xml characters as per the xml version", "true": "non - dom : check if value of the comment is well - formed", "bleu": 0.33649324423301513, "rouge": 0.42857142857142855}, {"predict": "invoke a method , that sends exception if all listeners are received", "true": "throw an exception if the record has been destroyed", "bleu": 0.1367440667823257, "rouge": 0.19551282051282048}, {"predict": "uploads the version of the artifact", "true": "uploads artifact into the repository", "bleu": 0.2626909894424158, "rouge": 0.3696969696969697}, {"predict": "escapes bytes in the format used in protocol buffer text format , which is the same as the format used for c string literals", "true": "escapes bytes in the format used in protocol buffer text format , which is the same as the format used for c string literals", "bleu": 1.0, "rouge": 1.0}, {"predict": "load a set of integers and its type name to a set of strings", "true": "read the header of a daa file and all reference names", "bleu": 0.10511846841633776, "rouge": 0.16353887399463804}, {"predict": "get an array of types for an array of objects", "true": "get an array of types for an array of objects", "bleu": 1.0, "rouge": 1.0}, {"predict": "fill all the mappings according to the given bucket , in order to their ordinal index", "true": "does all the \" real work \" of <unk> up the counts", "bleu": 0.10878661088699644, "rouge": 0.21995192307692307}, {"predict": "get parent and get the value , e", "true": "adds th binary security token to the header element", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "skips spaces in the given string", "true": "skips spaces in the given string", "bleu": 1.0, "rouge": 1.0}, {"predict": "mouse button was released", "true": "update the <unk> scrolling", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "samples the samples from the density function for one selected samples", "true": "samples from the distribution", "bleu": 0.21200626759025185, "rouge": 0.43675417661097854}, {"predict": "given an input stream it loads a certificate from it", "true": "reads x 509 certificate object from given input stream", "bleu": 0.1972940627795883, "rouge": 0.31881533101045295}, {"predict": "create a new guacamole tunnel which synchronizes access to the time out request", "true": "creates a new guacamole http tunnel map which automatically closes and removes http tunnels which are no longer in use", "bleu": 0.11483212999347099, "rouge": 0.29186602870813394}, {"predict": "associate the given value with the specified key", "true": "associate the given class name value with the specified key", "bleu": 0.5822894008899787, "rouge": 0.8714285714285713}, {"predict": "renames all table definitions", "true": "if rename definitions object is prepared , does the lookup and renaming of schema , table and columns", "bleu": 0.012007547560562644, "rouge": 0.08155080213903743}, {"predict": "handle the result of reading last add confirmed", "true": "handle the result of reading last add confirmed", "bleu": 1.0, "rouge": 1.0}, {"predict": "puts a row into the list", "true": "tests if the specified fingerprint is in this set", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "return true if there are no extension present in this generator", "true": "return true if there are no extension present in this generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "override this method to perform all the steps necessary to apply the layout and have those layouts reflected", "true": "apply this group ' s layout to its neurons", "bleu": 0.08562365224473284, "rouge": 0.15762273901808785}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "the nice value ( see set priority ( 2 ) , a value in the range 19 ( low priority ) to - 20 ( high priority )", "true": "the nice value ( see set priority ( 2 ) ) , a value in the range 19 ( low priority ) to - 20 ( high priority )", "bleu": 0.9369175027639742, "rouge": 0.9793577981651377}, {"predict": "set the set of layer - the attribute names = 0", "true": "gets the <unk> size of a layer of the tree", "bleu": 0.14323145079400493, "rouge": 0.384251968503937}, {"predict": "finds public non - static method that is accessible from public class", "true": "finds public static method that is accessible from public class", "bleu": 0.7016035864257111, "rouge": 0.9242424242424241}, {"predict": "helper http function to get list of my service cards based on keyword", "true": "helper http function to get list of my service cards based on keyword and category", "bleu": 0.8574039191604413, "rouge": 0.9167630057803468}, {"predict": "adds the candidate for this candidate input for this text", "true": "add a phone number address to the list", "bleu": 0.12605968092174913, "rouge": 0.11338289962825278}, {"predict": "convenience method to return only the digits and plus signs in the matching string", "true": "convenience method to return only the digits and plus signs in the matching string", "bleu": 1.0, "rouge": 1.0}, {"predict": "compares two methods , returning true if both are equal and return true", "true": "package private helper method for descriptor", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "returns the index of the first marker segment , or null if none", "true": "returns the first marker segment object in the list with the given tag , or null if none is found", "bleu": 0.33450032543673547, "rouge": 0.5837320574162679}, {"predict": "returns an input reader", "true": "open the input using the \" from \" parameter , exiting on failure", "bleu": 0.037870374782798366, "rouge": 0.1073943661971831}, {"predict": "returns a new instance which has the additional source to be merged together with the current array of sources", "true": "returns a new instance which has the additional first source to be concatenated together with the current array of sources", "bleu": 0.724386543179998, "rouge": 0.9188284518828452}, {"predict": "publish to a pipe", "true": "this method publishes the supplied items", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "check if the uri is valid", "true": "verify the valid class use for construction", "bleu": 0.20693220168471366, "rouge": 0.3034825870646766}, {"predict": "create the extension from its der encoded value and critical it y", "true": "create the extension from the passed der encoded value", "bleu": 0.38677062763523445, "rouge": 0.6842948717948718}, {"predict": "generates monthly periods for the whole year in which the given period ' s start date exists", "true": "generates <unk> periods for the whole year in which the start date of the given period exists", "bleu": 0.573057404379869, "rouge": 0.7058823529411764}, {"predict": "create a 128 bit key using the key generator of the algorithm provided", "true": "generates a random aes key for encrypting / decrypting the <unk> value attention : in a real cash box this key would be generated during the in it process and stored in a secure area", "bleu": 0.023142836670430857, "rouge": 0.19242902208201892}, {"predict": "the value of the listener", "true": "veto able change listener", "bleu": 0.2730120862709067, "rouge": 0.22676579925650556}, {"predict": "parse a server response into a json object", "true": "parse a server response into a json object", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads version information from the url", "true": "loads version information from the url", "bleu": 1.0, "rouge": 1.0}, {"predict": "find a page of user using query by example", "true": "find a page of user using query by example", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a static view to appear at the end of the list", "true": "add a static view to appear at the end of the recycle r view", "bleu": 0.7721334650597669, "rouge": 0.8345771144278606}, {"predict": "add a string to the start of the queue", "true": "add a string to the start of the queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if we can read from the database", "true": "tests to see if the connection is in read only mode", "bleu": 0.13107175678306446, "rouge": 0.20469798657718125}, {"predict": "queue a publisher with a publisher and try to consume it to the next number of bytes", "true": "consume returns a comp let able future that is done when publisher completes", "bleu": 0.0859076483566362, "rouge": 0.1366181410974244}, {"predict": "set the parent node", "true": "set the parent node", "bleu": 1.0, "rouge": 1.0}, {"predict": "cleans a directory without deleting it", "true": "cleans a directory without deleting it", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if this char set is known to be registered in the iana char set registry", "true": "returns true if this char set is known to be registered in the iana char set registry", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a constant to the high quality of a particular type", "true": "create and add constant instance", "bleu": 0.11390778025531027, "rouge": 0.13406593406593406}, {"predict": "given a change message , parade through them to change their case", "true": "called if something is messed up", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "asserts that the objects of actual data object is equal with the given epsilon", "true": "<unk> like the jun it asserts for doubles , which allows an \" epsilon \" but this is for integers , and with a specific description in the assert just for time stamps", "bleu": 0.03111994943941336, "rouge": 0.15864759427828348}, {"predict": "instantiate s a new spider drag store", "true": "instantiate s a new site map", "bleu": 0.5169731539571706, "rouge": 0.6240409207161125}, {"predict": "flushes the output buffer", "true": "flush all cached resources", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "add new hop field to the input entities", "true": "add an entity where the info packet traverses", "bleu": 0.17747405280050269, "rouge": 0.25}, {"predict": "checks whether the scheme alters the training data set during training", "true": "checks whether the scheme alters the training data set during building", "bleu": 0.9036020036098448, "rouge": 0.9090909090909091}, {"predict": "returns true if the current queue is empty", "true": "determines if the event queue is empty", "bleu": 0.3549481056010052, "rouge": 0.6747787610619468}, {"predict": "read a delta from the store", "true": "reads index entries from the segment", "bleu": 0.2907153684841096, "rouge": 0.3333333333333333}, {"predict": "return the number of hosts where a network environment", "true": "returns number of hosts in the net 2 initiators map", "bleu": 0.24855227187657006, "rouge": 0.31282051282051276}, {"predict": "add the certificates in cert store to the certificate set to be included with the generated signed data message", "true": "add the certificates in cert store to the certificate set to be included with the generated signed data message", "bleu": 1.0, "rouge": 1.0}, {"predict": "process lob data as a metadata instance of a mapping class", "true": "internal : process a lob specification", "bleu": 0.1354599427337814, "rouge": 0.2484725050916497}, {"predict": "fires a sax parser for the given element", "true": "fires a sax start prefix mapping event for all the namespace stack which have just come into scope", "bleu": 0.09463724219283741, "rouge": 0.35966981132075476}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints this exception ' s stack trace to a print writer", "true": "prints this exception ' s stack trace to a print writer", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will convert a list of data that has changed on list of data points", "true": "convert data flavor list to array", "bleu": 0.09147827112247602, "rouge": 0.2970779220779221}, {"predict": "test for correct error handling for a choice that has no icon element", "true": "test for correct error handling for a choice that has an empty icon element", "bleu": 0.7492013233822993, "rouge": 0.8829915560916768}, {"predict": "translates any attribute attributes and returns \" boolean \" as boolean , from 0 to \" flags \"", "true": "sets attributes of a file on windows system", "bleu": 0.06809398432036522, "rouge": 0.08265582655826557}, {"predict": "returns the next index that will be used for the next l dap message", "true": "gets next id for indexed message id", "bleu": 0.10511846841633776, "rouge": 0.30398671096345514}, {"predict": "fill the tokens to ensure that the current sensor and unique identifiers", "true": "set the current values of all fields", "bleu": 0.1367440667823257, "rouge": 0.22101449275362317}, {"predict": "if user account info s can the security token have security info", "true": "return true if any of the security info s is valid for the given endpoint and client identity", "bleu": 0.11729412196853403, "rouge": 0.2573839662447257}, {"predict": "retains ( keeps ) only the elements in the receiver that are contained in the specified other list", "true": "retains ( keeps ) only the elements in the receiver that are contained in the specified other list", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts byte array to string list of byte arrays", "true": "converts an array list to an array list", "bleu": 0.17747405280050263, "rouge": 0.4756335282651072}, {"predict": "add an index to the table", "true": "defines an index with the specified column names", "bleu": 0.2238400777155271, "rouge": 0.4178082191780822}, {"predict": "sets the ssl key store key", "true": "sets the ssl key store key password", "bleu": 0.846481724890614, "rouge": 0.9104477611940297}, {"predict": "zookeeper - time hashing for running expanded state", "true": "instantiate s a new zookeeper state machine ensemble", "bleu": 0.17747405280050269, "rouge": 0.25}, {"predict": "creates a shortcut set which does not contain the input", "true": "creates shortcut for mnemonic replacing standard alt + letter to ctrl + alt + letter on mac with j dk version newer than 6", "bleu": 0.034402241768570936, "rouge": 0.1095152603231598}, {"predict": "indicate to the virtual machine that it would be a good time to collect available memory", "true": "runs the garbage collector", "bleu": 0.07692375026049747, "rouge": 0.11213235294117647}, {"predict": "deletes a new leaf that contains the smallest one", "true": "removes the smallest key and associated value from the given subtree", "bleu": 0.14873743701255318, "rouge": 0.19645732689210954}, {"predict": "resets the counters to empty", "true": "reset error and warning counters", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "write configuration from an input stream or detected", "true": "reads config from the given source file , updating it using the given configuration and writing in to the given output", "bleu": 0.03494671304222457, "rouge": 0.06380753138075314}, {"predict": "return the mapping to portion of the type", "true": "separate the input annotations into a map of target class ( targeted , valid , invalid ) to the annotations that fall into each of those categories", "bleu": 0.018756321134324627, "rouge": 0.1561433447098976}, {"predict": "updates the dom and direction of the internal line", "true": "cause auto scroll to occur", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "compares the given string to the specified value , returning - 1 if the string is greater than the same value", "true": "compares the string value to another value", "bleu": 0.10457995018881573, "rouge": 0.3925353925353925}, {"predict": "binds integer to given value ( condition )", "true": "bind achievement condition to given property", "bleu": 0.22679164443904004, "rouge": 0.2932692307692307}, {"predict": "remove a column from this table", "true": "remove a column from this table", "bleu": 1.0, "rouge": 1.0}, {"predict": "write data to the plot", "true": "append text to the log , repaint the window and notify the auto scroll thread to scroll to the end of the text area", "bleu": 0.00803791031570834, "rouge": 0.12335692618806875}, {"predict": "closes a connection to the data source", "true": "closes the connection to the database", "bleu": 0.3655552228545123, "rouge": 0.6240409207161125}, {"predict": "creates a new struct editor from a bayes im wrapper", "true": "constructs a new bayes im editor from a bayes estimator wrapper", "bleu": 0.4069354350949062, "rouge": 0.6609907120743034}, {"predict": "remove projection listener handle communication listener", "true": "removes the listener for events that shift the projection stack", "bleu": 0.1255107248036171, "rouge": 0.11960784313725491}, {"predict": "send a fatal error log message", "true": "send a fatal error log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the argument is an literal", "true": "returns true if the character at index is a literal , that is not editable", "bleu": 0.08858009236942327, "rouge": 0.3412587412587413}, {"predict": "generate a granularity instance based on a path element", "true": "generate a granularity instance based on a path element", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new word iterator for the default locale", "true": "constructs a word iterator using the default locale", "bleu": 0.3549481056010053, "rouge": 0.8323586744639376}, {"predict": "closes this tree ' s internal leaf , and releases any acquired child readers", "true": "closes the index by closing its open leaf page , if necessary", "bleu": 0.10511846841633776, "rouge": 0.2340153452685422}, {"predict": "push a local file", "true": "push a single file", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "map item - and returns the text of the session stopped", "true": "performs some processing on the given item", "bleu": 0.12605968092174913, "rouge": 0.1157495256166983}, {"predict": "resize the array to the exact provided size", "true": "resize s the array to contain a smaller number of elements", "bleu": 0.21690743377623947, "rouge": 0.4093959731543625}, {"predict": "split u in t 8 to 2 bytes of high byte and low byte", "true": "split u in t 8 to 2 bytes of high byte and low byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "pretty printing accumulator function for shorts", "true": "pretty printing accumulator function for shorts", "bleu": 1.0, "rouge": 1.0}, {"predict": "in it method to pass all the files in a given directory , and path all", "true": "fills the class cache with classes in the specified directory", "bleu": 0.09147827112247602, "rouge": 0.24078947368421053}, {"predict": "removes all bandwidth object from the specified arguments", "true": "removes the specified bandwidth type", "bleu": 0.239802967618271, "rouge": 0.48157894736842105}, {"predict": "exit with a process success code", "true": "exit with a process success code", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns current nanosecond time", "true": "get the current time", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "remove / collapse multiple newline characters", "true": "remove / collapse multiple newline characters", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the list of prefix nodes contained in the given trie", "true": "inserts a chain of children into the given node", "bleu": 0.16108992769687397, "rouge": 0.3055091819699499}, {"predict": "generates the java doc in the given source code", "true": "generates and returns the java doc for the specified start / end tag pair", "bleu": 0.1667989371287012, "rouge": 0.41838134430727025}, {"predict": "extract properties from the provided source properties ( in the properties set )", "true": "extract all properties in this namespace that can be found in the provided property source", "bleu": 0.14742765518715117, "rouge": 0.35260115606936415}, {"predict": "removes the last element from this set ' s size", "true": "remove the last row", "bleu": 0.16590387014219712, "rouge": 0.3096446700507614}, {"predict": "ensures that the given component is visible", "true": "scrolls to show the component in case it is invisible currently", "bleu": 0.1247439242120089, "rouge": 0.32049036777583184}, {"predict": "returns the next available character , or the null character ' \\ 0 ' if all input has been exhausted", "true": "returns the next available character , or the null character ' \\ 0 ' if all input has been exhausted", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the representation for the next representation ( the highest and resets the representation for the sent ( requested ) for the resets and resets the value - 1 - ( see - > ) ; resets ( ) for the next value ( quoted - > style", "true": "should be invoked after processing each child representation element , in order to apply consistency checks", "bleu": 0.025042878540631138, "rouge": 0.03434684684684684}, {"predict": "creates a new instance for the specified number formatter", "true": "creates a new section label generator using the specified label format string , and platform default number and percentage formatters", "bleu": 0.0956389954588777, "rouge": 0.38730158730158726}, {"predict": "implements the overlap by les k ( 1986 ) les k ( overlap by t )", "true": "splits a char sequence according to the delimiter character", "bleu": 0.07692375026049747, "rouge": 0.08425414364640883}, {"predict": "creates a new timer with the specified parameters", "true": "initializes a timer with a target , a selector and an interval in seconds", "bleu": 0.10712878727413526, "rouge": 0.25994318181818177}, {"predict": "reads invocation from stream fields", "true": "reads a tuple from the stream", "bleu": 0.2658156069371863, "rouge": 0.5366568914956013}, {"predict": "adds a string and a double", "true": "adds a string and a double", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the property change listener", "true": "remove the specified property change listener", "bleu": 0.43989172475842214, "rouge": 0.7155425219941348}, {"predict": "load the values for this step from an xml node", "true": "load the values for this step from an xml node", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates a hash code representing the object", "true": "hash a signature", "bleu": 0.20556680845025982, "rouge": 0.21554770318021202}, {"predict": "called to notify that a consumption has finished", "true": "called to notify that a consumption has finished", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the instructions to cast a numerical value from one type to another", "true": "generates the instructions to cast a numerical value from one type to another", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a set of trigger group name to the project ' s list", "true": "adds a trigger group name to the list of trigger group names", "bleu": 0.42850897735977866, "rouge": 0.5640686922060767}, {"predict": "reads a utf - 8 encoded string", "true": "reads a utf - 8 encoded string", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears the temporary files", "true": "limp i a la list a de fiche ros temporal es del esc a neo", "bleu": 0.01931500670555844, "rouge": 0.0}, {"predict": "read the g zipped file", "true": "read and extract a thumbnail - sized image from a file", "bleu": 0.0910020781697788, "rouge": 0.2341650671785029}, {"predict": "completed submit ( run n able ) throws null pointer exception", "true": "completed submit ( run n able ) returns successfully", "bleu": 0.6132297420585351, "rouge": 0.7128547579298832}, {"predict": "shrinks a rectangle by the amount of space represented by this object", "true": "shrinks an area by the space attributes", "bleu": 0.15537125692760353, "rouge": 0.44202898550724634}, {"predict": "asserts if the json request and returns a string based on the json set", "true": "validates a query matches some json test expressions using the default double delta tolerance", "bleu": 0.10511846841633776, "rouge": 0.14285714285714285}, {"predict": "builds the absolute stats value for the counter", "true": "builds the absolute stats", "bleu": 0.44632361378533286, "rouge": 0.7093023255813954}, {"predict": "helper method to construct the gui in a string that helper for example", "true": "used to execute this plugin tool", "bleu": 0.09552040806823771, "rouge": 0.11275415896487984}, {"predict": "serializes the class i fier to a file", "true": "serialize a model to file", "bleu": 0.19070828081828378, "rouge": 0.32105263157894737}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if the specified field is a partition tag field", "true": "check if the specified field is a partition tag field", "bleu": 1.0, "rouge": 1.0}, {"predict": "arranges the blocks in the container with a fixed width and no height constraint", "true": "arranges the blocks in the container with a fixed width and no height constraint", "bleu": 1.0, "rouge": 1.0}, {"predict": "takes a query and returns a result set key that can be run once in the database", "true": "mainly exists to provide statement", "bleu": 0.06074588070876682, "rouge": 0.0}, {"predict": "find the index of the first occurrence of the specified string", "true": "similar to string", "bleu": 0.11390778025531027, "rouge": 0.15926892950391647}, {"predict": "returns the largest element in the given k , i", "true": "adds delta to the count for k and returns the count prior to addition", "bleu": 0.1263574671511449, "rouge": 0.16180371352785147}, {"predict": "send a tcp packet to the client", "true": "send to tcp client", "bleu": 0.23356898886410002, "rouge": 0.5736677115987461}, {"predict": "handle a key typed event", "true": "handle a key typed event", "bleu": 1.0, "rouge": 1.0}, {"predict": "fills the data table with the given mapping mode", "true": "given a map of already renamed classes , fill in the gaps for classes that were not reached , but have parents that can be pulled from", "bleu": 0.021138964808863438, "rouge": 0.050960735171261484}, {"predict": "reads the state of an object", "true": "verifies that the method name , parameter types , and constraints are valid", "bleu": 0.06878769894132081, "rouge": 0.09870550161812298}, {"predict": "create a program that satisfies an op check multi sig program", "true": "create a program that satisfies an op check multi sig program , using pre - encoded signatures", "bleu": 0.5795782787848095, "rouge": 0.7564825253664037}, {"predict": "deletes the instances at the given positions", "true": "deletes the instances at the given positions", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the listener as a listener of the specified type", "true": "adds the listener as a listener of the specified type", "bleu": 1.0, "rouge": 1.0}, {"predict": "merges two classes of a 2 d test matrix to connect to the convex hull", "true": "gc 2 gc : generalized ce <unk> ral transformation", "bleu": 0.08225964699966554, "rouge": 0.08726752503576538}, {"predict": "indicates if the base date is between start and end date", "true": "tests if the given base date is between the given start date and end date , including the dates themselves", "bleu": 0.21055192629846398, "rouge": 0.6130653266331658}, {"predict": "add a listener for event dispatch events", "true": "registers a time out event listener for time out notification", "bleu": 0.18094495256969623, "rouge": 0.34205607476635513}, {"predict": "converts the provided string list to a string array", "true": "converts the provided string list to a string array", "bleu": 1.0, "rouge": 1.0}, {"predict": "replaces the tool tip text for a given line with html character and html escape characters", "true": "this method transforms the given tool tip text into html", "bleu": 0.16467029855845897, "rouge": 0.4013157894736842}, {"predict": "writes a byte array to the output", "true": "writes a chunk of bytes to the stream", "bleu": 0.2664731314108428, "rouge": 0.5269978401727862}, {"predict": "creates a new client http request", "true": "creates a new multi part post http request on a freshly opened url connection", "bleu": 0.12887870947273114, "rouge": 0.4663608562691131}, {"predict": "receive notification of character data", "true": "receive notification of character data", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends a new tag to the xml", "true": "helper method for printing a tag in top level", "bleu": 0.15447878876032708, "rouge": 0.24448897795591182}, {"predict": "this method allow to allow the available token validation", "true": "returns the object managing the validation extra info", "bleu": 0.15619699684601276, "rouge": 0.2378167641325536}, {"predict": "add the top level element to the top of the stack", "true": "add top level contents to the document", "bleu": 0.1972940627795883, "rouge": 0.5787476280834916}, {"predict": "executes a closure on a statement", "true": "invokes a closure passing it a new sql instance created from the given map of arguments", "bleu": 0.05900360388141482, "rouge": 0.25206611570247933}, {"predict": "write a byte array", "true": "writes a buffer to the underlying stream", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "adds a resource index entry", "true": "adds a new index entry or updates an existing index entry", "bleu": 0.136079846679777, "rouge": 0.4683301343570058}, {"predict": "computes correctness of this nodes during this query", "true": "the demand - driven mode for precisely computing points - to information for given pointers", "bleu": 0.05621430965343312, "rouge": 0.0}, {"predict": "removes start with a character array", "true": "adjust indices in starts to reflect a deletion after delete at", "bleu": 0.09600096733558854, "rouge": 0.1117216117216117}, {"predict": "if using the provided type is already configured in the dynamic proxy", "true": "factory for a bean type", "bleu": 0.10390302174233558, "rouge": 0.12708333333333333}, {"predict": "reverse document arg s", "true": "reverse allocation", "bleu": 0.35930411196308426, "rouge": 0.3546511627906977}, {"predict": "use the request using subject sets to au th a key", "true": "determines if the application doesn ' t mind if the mechanism obtains the required credentials from outside of the current subject", "bleu": 0.05078822537842343, "rouge": 0.11833171677982542}, {"predict": "read an entity declaration", "true": "read an entity declaration", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a field with the specified value", "true": "add a field with the specified value", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes the storage if it is already recorded", "true": "deletes a storage information and files from disk", "bleu": 0.17747405280050269, "rouge": 0.25}, {"predict": "performs a synchronous client request that uses the incoming request to have the handling of the request", "true": "sends an advanced synchronous request that has to be configured by the developer", "bleu": 0.11306082351602978, "rouge": 0.34154535274356107}, {"predict": "visit an error node", "true": "summary", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests whether an example is in the ok package of the parameters", "true": "returns true if the example does not contain missing values within regarded attributes", "bleu": 0.10579369505074822, "rouge": 0.07942708333333334}, {"predict": "load a binary file from an input stream", "true": "loads a binary file from the input stream", "bleu": 0.5133450480401704, "rouge": 0.75}, {"predict": "delete lun s from the lun group", "true": "delete lun s from lun group", "bleu": 0.5946035575013605, "rouge": 0.9360613810741688}, {"predict": "removes locator s from a set of locator s", "true": "deletes a set of locator s from the managed set of locator s , and discards any already - discovered lookup service that corresponds to a deleted locator", "bleu": 0.0796904743217465, "rouge": 0.3463098134630982}, {"predict": "determines if the specified item is selected", "true": "looks , if the input item type is selected", "bleu": 0.24177237023718662, "rouge": 0.6112224448897796}, {"predict": "add operation to a panel", "true": "updates the dialog with a new operation", "bleu": 0.20252884954471367, "rouge": 0.16180371352785147}, {"predict": "creates a new key store for a given key", "true": "specifies the security provider to use for the key store", "bleu": 0.17861170664603615, "rouge": 0.20854700854700853}, {"predict": "attempts to cas - dec re ment the worker count field of c tl", "true": "attempts to cas - dec re ment the worker count field of c tl", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert the provided requests to the http url connection", "true": "serializes one or more requests but does not execute them", "bleu": 0.1262975489687145, "rouge": 0.10427350427350426}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct composite transactions for the specified game map", "true": "this class can find composite routes between two territories", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "create a new endpoint with given host and port", "true": "create an endpoint for a specified host and port", "bleu": 0.30213753973567675, "rouge": 0.5555555555555556}, {"predict": "test for bug # 575 , and post data with copying each properties as the same as the bug : 1 )", "true": "tests fix for bug # <unk> - db md", "bleu": 0.10308675254291907, "rouge": 0.20938215102974828}, {"predict": "amount of time that this process has been scheduled in kernel mode , measured in clock ticks ( divide by s ys conf ( sc c lk t ck ) )", "true": "amount of time that this process has been scheduled in kernel mode , measured in clock ticks ( divide by s ys conf ( sc c lk t ck ) )", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the program re writer for a given rewrite which is passed from outside", "true": "construct a program re writer for the given rewrite sets which are passed from outside", "bleu": 0.35948091391464765, "rouge": 0.6853932584269663}, {"predict": "creates a new settings menu", "true": "creates the settings menu", "bleu": 0.3860973950960897, "rouge": 0.6802973977695167}, {"predict": "writes a string to the given output stream", "true": "write string to data output stream motivation : data input stream", "bleu": 0.18239668350432228, "rouge": 0.4093959731543625}, {"predict": "check if the given string is a valid java name", "true": "check whether the given string can be a valid java name", "bleu": 0.4372805827465167, "rouge": 0.7554179566563467}, {"predict": "create a list of node arguments", "true": "create process commands to start tern with node", "bleu": 0.17516432701748888, "rouge": 0.2785388127853881}, {"predict": "parses the sensor context", "true": "count the metrics for packages", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "gets the error stream from a process and reads it to keep the process from blocking due to a full text buffer", "true": "gets the error stream from a process and reads it to keep the process from blocking due to a full buffer", "bleu": 0.9173176373893104, "rouge": 0.9808575803981624}, {"predict": "deletes the string wherever it occurs in the builder", "true": "deletes the string wherever it occurs in the builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes log likelihood of an entire clustering", "true": "computes log likelihood of an entire clustering", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a list of class names for the given arguments", "true": "turn an array of strings ( class names ) into an array of class objects", "bleu": 0.11966489805508941, "rouge": 0.23164556962025318}, {"predict": "announce multi cast announcement to the current announcement", "true": "announce membership in the specified groups , and return false if interrupted , otherwise return true", "bleu": 0.06528905536667998, "rouge": 0.15721649484536082}, {"predict": "encodes a byte array into base 64 format and breaks the output into lines", "true": "encodes a byte array into base 64 format and breaks the output into lines", "bleu": 1.0, "rouge": 1.0}, {"predict": "trim the given list of instructions from the list of the gazetteer", "true": "trim off excess size dead space", "bleu": 0.10390302174233558, "rouge": 0.1182170542635659}, {"predict": "determines if the prompt contains ' select account '", "true": "determines if the prompt contains ' select account '", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the sorted items of the master", "true": "sorts the instances according to the given attribute / dimension", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "flip the image x for the given image", "true": "flips the given image on the horizontal axis", "bleu": 0.3155984539112945, "rouge": 0.375}, {"predict": "whether audit is enable ? defaults to true", "true": "whether audit is enable ? defaults to true", "bleu": 1.0, "rouge": 1.0}, {"predict": "is sip request request a terms ?", "true": "is a terms & conditions request", "bleu": 0.2777619034011791, "rouge": 0.4680306905370844}, {"predict": "reads all segments in the segment order in order to the segments", "true": "reads the segment metadata , the sequence and table key", "bleu": 0.15537125692760353, "rouge": 0.3696969696969697}, {"predict": "starts the time in it ' s time", "true": "if time is > 60 * 60 * 24 seconds , it will be projected into next day , e", "bleu": 0.03959981382356705, "rouge": 0.13260869565217392}, {"predict": "below method will be used to update the min or max value by removing the length from it", "true": "below method will be used to update the min or max value by removing the length from it", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a node in the result tree", "true": "construct a node in the result tree", "bleu": 1.0, "rouge": 1.0}, {"predict": "run the meta class where meta times can run the meta class times", "true": "check that the map either contains the specified type or is the specified type", "bleu": 0.0978840017329239, "rouge": 0.1471652593486128}, {"predict": "de serialize a struct object to a struct", "true": "desi rial ize a struct object", "bleu": 0.2984745896009823, "rouge": 0.43990384615384615}, {"predict": "starts and parse the arguments", "true": "create and parse allowable options", "bleu": 0.35930411196308426, "rouge": 0.4}, {"predict": "this method concatenates two byte arrays", "true": "this method concatenates two byte arrays", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes an input stream from a file", "true": "initializes an input stream from a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an instance of extended d is max configuration", "true": "creates an instance of extended d is max configuration", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a single properties object into the database", "true": "writes all properties of a given resource to the properties table and links them to the main table record", "bleu": 0.05098496690817698, "rouge": 0.2760180995475113}, {"predict": "the maximum y axis of the input value", "true": "compute the maximum value on a log scale", "bleu": 0.22679164443904004, "rouge": 0.375}, {"predict": "adds cached focus listener", "true": "register a listener to be notified when focus is cleared", "bleu": 0.08872444253557525, "rouge": 0.13260869565217392}, {"predict": "add a listener for mode changes", "true": "add a listener for mode changes", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration of all the available options", "bleu": 0.43343894987509085, "rouge": 0.7904967602591793}, {"predict": "creates a mosaic levy", "true": "creates a x em mosaic levy", "bleu": 0.36064528799877893, "rouge": 0.7721518987341772}, {"predict": "re calculates the ( possibly non - zero ) of the given value", "true": "returns the ordinal rank of value among the sampled values in this buffer", "bleu": 0.12011055432195765, "rouge": 0.23076923076923084}, {"predict": "measure item size in kilobytes rather than units which is more practical for a bitmap cache", "true": "measure item size in kilobytes rather than units which is more practical for a bitmap cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new predicate returning true when a predicate doc in a predicate", "true": "negate the given predicate", "bleu": 0.09552040806823771, "rouge": 0.1300639658848614}, {"predict": "add margin top to simulate set fits system window false", "true": "add margin top to simulate set fits system window true", "bleu": 0.8931539818068694, "rouge": 0.9}, {"predict": "decode hex string to a byte array", "true": "converts a hexadecimal string into an byte array", "bleu": 0.240785655451027, "rouge": 0.3952483801295896}, {"predict": "sends data to the device on this connection", "true": "sends data to the device on this connection", "bleu": 1.0, "rouge": 1.0}, {"predict": "blocks for schema", "true": "requests and blocks for the schema from the server", "bleu": 0.10283257773094409, "rouge": 0.45864661654135336}, {"predict": "appends a string representation of a double array to the given string builder", "true": "append a text representation of an array to a buffer", "bleu": 0.17194656088289215, "rouge": 0.44525547445255476}, {"predict": "returns the written by this instance", "true": "returns an array that holds the real values from the mat lab array", "bleu": 0.07612610271614867, "rouge": 0.19741100323624597}, {"predict": "read partitions using the specified job configuration from the file system", "true": "read the cut points from the given sequence file", "bleu": 0.17827531042796255, "rouge": 0.5091819699499166}, {"predict": "check if the current seq no data is available for a single channel", "true": "returns true if the indicated sequence number is available", "bleu": 0.15807437922444714, "rouge": 0.37596302003081655}, {"predict": "add a new slide", "true": "add a slide to the intro", "bleu": 0.3081980909598119, "rouge": 0.5791139240506329}, {"predict": "draw a line on to the array , using the classic bres en ham algorithm", "true": "draw a line on to the array , using the classic bres en ham algorithm", "bleu": 1.0, "rouge": 1.0}, {"predict": "performs some processing on the given item", "true": "performs some processing on the given item", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "pushes the specified value on to the top of the stack", "true": "push to the top of the stack", "bleu": 0.5156626918239822, "rouge": 0.6944971537001898}, {"predict": "compute the cardinality ( number of set bits ) in this tail er ,", "true": "return the cardinality of a particular tail , which is the range count if not optional and infinite if optional", "bleu": 0.0901224794878171, "rouge": 0.28504672897196265}, {"predict": "create standard response header with optional cookie and print document", "true": "create standard response header with optional cookie and print document", "bleu": 1.0, "rouge": 1.0}, {"predict": "cast a object to a long object ( reference type )", "true": "cast a object to a long object ( reference type )", "bleu": 1.0, "rouge": 1.0}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "finish timing and add icon to the list of visible reports", "true": "complete the current grid row , adding the icon at the end", "bleu": 0.11510518494396255, "rouge": 0.17256011315417258}, {"predict": "tests that internal state of the object can not be changed by modifying initial array value", "true": "tests that internal state of the object can not be changed by modifying initial array value", "bleu": 1.0, "rouge": 1.0}, {"predict": "shuts down the bridge", "true": "shutdown the android debug bridge and clean up all connected devices", "bleu": 0.06909866532427987, "rouge": 0.24596774193548387}, {"predict": "handle a web socket and received event into our web socket", "true": "marks that ping back was received", "bleu": 0.11390778025531027, "rouge": 0.12423625254582485}, {"predict": "finds an object literal for the specified object", "true": "find a slot in the j to c with this object literal in else return 0", "bleu": 0.0834319834185865, "rouge": 0.15721649484536082}, {"predict": "reset the layout manager and clear all running tasks if they are running", "true": "not part of api turns off the viewable area , scaling the page back to original scaling", "bleu": 0.07022101421400616, "rouge": 0.06510138740661686}, {"predict": "build a knowledge base for le", "true": "builds an expanded version of the ' wu mpu s lexicon ' found on page <unk> of aim a v 3", "bleu": 0.01813224057849837, "rouge": 0.0673289183222958}, {"predict": "test of clear rate of a single rate", "true": "compare transfer rate calculated to expected value", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the to the poly line", "true": "add an x 509 trust manager to the ones being governed by this composite", "bleu": 0.07663173913867023, "rouge": 0.18654434250764526}, {"predict": "non - dom : copy all nodes of this node", "true": "return an iterator of all children of this node", "bleu": 0.24808415001701817, "rouge": 0.42508710801393734}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new folder in the current directory with the name create directory name", "true": "creates a new folder in the current directory with the name create directory name", "bleu": 1.0, "rouge": 1.0}, {"predict": "i - empirical prior", "true": "i - mutual information", "bleu": 0.47287080450158786, "rouge": 0.5}, {"predict": "setup and run a test", "true": "setup and run a test", "bleu": 1.0, "rouge": 1.0}, {"predict": "always returns 0 , exception tests fail no positive test case for black - box test possible : no default value indicated", "true": "always returns 0 , exception tests fail no positive test case for black - box test possible : no default value indicated", "bleu": 1.0, "rouge": 1.0}, {"predict": "make a pretty printed json text of this map value", "true": "make a pretty printed json text of an object value", "bleu": 0.6989307622784944, "rouge": 0.8}, {"predict": "determine whether a particular annotation type is at a specific retention period", "true": "returns true if the given annotation is retained at runtime", "bleu": 0.1235622127262679, "rouge": 0.2772727272727273}, {"predict": "message processing test , start activity", "true": "message processing test , send invalid sms data", "bleu": 0.4405149609594086, "rouge": 0.5570776255707762}, {"predict": "add the given class path into the path", "true": "adds the class path for the loader as paths in the merge path", "bleu": 0.13434323860909256, "rouge": 0.45658682634730546}, {"predict": "load the directories where the first configuration in the given properties are valid", "true": "load directories map used to populate select on basic metadata page", "bleu": 0.10571070857151538, "rouge": 0.16920943134535368}, {"predict": "get the null in divi du um", "true": "create a \" null \" in divi du um ( full space )", "bleu": 0.22962062226376143, "rouge": 0.474339035769829}, {"predict": "locates all classes in the class loader", "true": "executes find all strings assuming the strings are the names of a classes that should be loaded and returned", "bleu": 0.03978165541753403, "rouge": 0.14202561117578577}, {"predict": "determines whether or not a value is of slav o - germanic org in", "true": "determines whether or not a value is of slav o - germanic org in", "bleu": 1.0, "rouge": 1.0}, {"predict": "inverse method , do not consider them in a full way , so they can produce a do not do some processing , etc", "true": "shuffles all items in the inventory", "bleu": 0.050661968099322066, "rouge": 0.07475490196078431}, {"predict": "responsible for generating the animations that moves the tabs back in from discard attempt or commit the current discard ( if any )", "true": "responsible for generating the animations that moves the tabs back in from discard attempt or commit the current discard ( if any )", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the formatted string", "true": "returns the formatted value", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "a locale independent version of to lowercase", "true": "a locale independent version of to lowercase", "bleu": 1.0, "rouge": 1.0}, {"predict": "run the specified step against the specified directory and execution up to the case where the same offset are identical", "true": "assert a step - list with get a list of sample steps ( size )", "bleu": 0.06108557268562171, "rouge": 0.058653846153846154}, {"predict": "invoked when a processing exception occurs", "true": "invoked when a processing exception occurs", "bleu": 1.0, "rouge": 1.0}, {"predict": "registers the given transform from the given transform", "true": "this method allows to register a transformation", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "terminate this entire set of co routines", "true": "terminate this entire set of co routines", "bleu": 1.0, "rouge": 1.0}, {"predict": "shrinks the capacity of the buffer to the current length if necessary", "true": "shrinks the capacity of the buffer to the current length if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new logical and condition with the provided sub - conditions", "true": "creates a new logical and condition with the provided sub - conditions", "bleu": 1.0, "rouge": 1.0}, {"predict": "discard any allocations that hold data prior to the specified absolute position , returning them to the al locator", "true": "discard any allocations that hold data prior to the specified absolute position , returning them to the al locator", "bleu": 1.0, "rouge": 1.0}, {"predict": "create new hop given host , port and transport", "true": "create new hop given host , port and transport", "bleu": 1.0, "rouge": 1.0}, {"predict": "update up preferences and restore the sound view", "true": "sets the state of the ui controls to match our internal state", "bleu": 0.09726684100532913, "rouge": 0.09651898734177215}, {"predict": "writes a single character", "true": "write a ascii code to the output stream", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "initialize incoming message , starting from the form of a double array , starting at position ( inclusive )", "true": "process the incoming message , see if it is a panel response , and if so parse the loco net id", "bleu": 0.12408544948021205, "rouge": 0.247766043866775}, {"predict": "executes random reads and validates against ground truth", "true": "executes a random batch operation with keys presented in sorted order", "bleu": 0.12197601375336842, "rouge": 0.20469798657718125}, {"predict": "check for whether a user has been added", "true": "a method that determines if it is possible to add a range of lights in numerical order eg 11 thru 18 , primarily used to show / not show the add range box in the add light window", "bleu": 0.003771444708275692, "rouge": 0.03890306122448979}, {"predict": "method to compare all the object classes in the set with the spec fie d object class", "true": "method to compare all the object classes in the set with the spec fie d object class", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes an in t field value", "true": "writes an in t field value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns natural logarithm of the argument", "true": "get the log of the factorial of a number", "bleu": 0.17632778423526832, "rouge": 0.2573839662447257}, {"predict": "timed wait for a response to the client", "true": "waits for a response to some pending operation", "bleu": 0.44632361378533286, "rouge": 0.5}, {"predict": "atomic ally adds the given value to the current value of the field of the given object managed by this updater", "true": "atomic ally adds the given value to the current value of the field of the given object managed by this updater", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes ' close able ' , ignoring any checked exceptions", "true": "closes a specified close able , suppressing any checked exceptions", "bleu": 0.2998221389342337, "rouge": 0.7000000000000001}, {"predict": "call to append a byte array", "true": "append some data to the file", "bleu": 0.24446151121745047, "rouge": 0.16666666666666666}, {"predict": "gets all listeners from the list", "true": "notify all registered listeners that a change occurred in the lists", "bleu": 0.1141650334026257, "rouge": 0.33516483516483514}, {"predict": "convert a ipv 4 address from an integer to an in et address", "true": "convert a ipv 4 address from an integer to an in et address", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a file on the server", "true": "opens a ftp connection", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "plus ( math context ) for a positive big decimal", "true": "plus ( math context ) for a positive big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "if the map is already present , then adds it to the cache", "true": "adds the key - value mapping to the cache iff there is no entry for that key", "bleu": 0.15032178405940608, "rouge": 0.26040554962646745}, {"predict": "determine the common suffix of two strings", "true": "determine the common suffix of two strings", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all elements from the current element", "true": "closes parser and frees all resources", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "start the publishing monitor engine work", "true": "starts the publishing monitor once and only once", "bleu": 0.2945901093386716, "rouge": 0.4178082191780822}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a s frame when video capture", "true": "polls the status of video frame read completion", "bleu": 0.17820132316770915, "rouge": 0.13174946004319654}, {"predict": "adds a square shape on the specified number in the specified random time", "true": "reduce this bean visual ' s icon size by the given factor", "bleu": 0.09552040806823771, "rouge": 0.08058124174372522}, {"predict": "verifies the syntax of the target name and recreates any transient state", "true": "reconstitutes contained permissions based on the information in the target name", "bleu": 0.2044800736021839, "rouge": 0.3505747126436781}, {"predict": "converts a camel case to lower - camel strings", "true": "returns the identifier in lower - camel format", "bleu": 0.2626909894424158, "rouge": 0.35672514619883033}, {"predict": "decodes base 64 data into oct ect s", "true": "decodes base 64 data into oct ect s", "bleu": 1.0, "rouge": 1.0}, {"predict": "sorts the passed list of new super nodes as a list of source objects", "true": "sorts the passed list of full copy source objects based on the natural sort order of their labels", "bleu": 0.28182118747846746, "rouge": 0.42785571142284573}, {"predict": "gets and removes the head of the queue", "true": "gets and removes the head of the queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "instantiate s a new movie set action", "true": "instantiate s a new adds the movie set action", "bleu": 0.5196026388051794, "rouge": 0.8557114228456915}, {"predict": "creates an instance in the rmi registry", "true": "starts the rmi registry", "bleu": 0.345720784641941, "rouge": 0.5736677115987461}, {"predict": "return success for this monitored file , using the size for the given file", "true": "read from monitored file , report any changed values for monitored socket statistics", "bleu": 0.17395797375642236, "rouge": 0.2982885085574572}, {"predict": "does a given url point to google book search , regardless of domain", "true": "does a given url point to google book search , regardless of domain", "bleu": 1.0, "rouge": 1.0}, {"predict": "resets internal state to the initial state", "true": "resets internal state to the initial state", "bleu": 1.0, "rouge": 1.0}, {"predict": "fix me if the white space character is not empty", "true": "ensure the output string has a character of whitespace before adding another word", "bleu": 0.10335004586873166, "rouge": 0.16991643454039}, {"predict": "handles edit request handler request", "true": "handles duplicate request handler request", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "determines if the current time has expired so far", "true": "test if the response is expired against current time , given the expire duration in milliseconds", "bleu": 0.11231193123614513, "rouge": 0.3046192259675406}, {"predict": "makes the given visitor visit this stack map frame", "true": "makes the given visitor visit this stack map frame", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an array of \" key = value \" strings containing information not otherwise easily available , such as # defined library versions", "true": "returns an array of \" key = value \" strings containing information not otherwise easily available , such as # defined library versions", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes the completion of the query", "true": "handle a recently halted query by throwing an appropriate exception", "bleu": 0.11341174240707227, "rouge": 0.11960784313725491}, {"predict": "write the given device to storage if we are master", "true": "write the given device to storage if we are master", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a list of cell changes to a list of bounds", "true": "if network hardware on a node was replaced , the identity will change", "bleu": 0.09497094417933137, "rouge": 0.08209959623149395}, {"predict": "change the rates of a subtree and return the hastings ratio", "true": "change the parameter and return the hastings ratio", "bleu": 0.46924700641055994, "rouge": 0.7584369449378331}, {"predict": "tear down after testing", "true": "tear down after testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "task interface for when the chart has been set", "true": "receives notification of a chart progress event", "bleu": 0.14113991930789777, "rouge": 0.1278825995807128}, {"predict": "initialize ( or re - initialize ) this iterator", "true": "initialize ( or re - initialize ) this iterator", "bleu": 1.0, "rouge": 1.0}, {"predict": "obtains a local date in japanese calendar day with the given epoch", "true": "obtains a local date in the japanese calendar system from the epoch - day", "bleu": 0.39234629954296446, "rouge": 0.6828358208955225}, {"predict": "the function convert transverse mercator to geodetic converts transverse mercator projection ( east ing and north ing ) coordinates to geodetic ( latitude and longitude ) coordinates , according to the current ellipsoid and transverse mercator projection parameters", "true": "the function convert transverse mercator to geodetic converts transverse mercator projection ( east ing and north ing ) coordinates to geodetic ( latitude and longitude ) coordinates , according to the current ellipsoid and transverse mercator projection parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if handles with optimistic lock and handles fail", "true": "checks size is zero", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "virtual i zed support for map", "true": "virtual i zed support for map", "bleu": 1.0, "rouge": 1.0}, {"predict": "puts the entry with the specified key into the cache", "true": "puts the entry with the specified key into the cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "processor for processor after touch sequence number of nodes", "true": "this is an important usability feature to have in our cpp transformation", "bleu": 0.08504083946364166, "rouge": 0.0}, {"predict": "add language from language and list", "true": "add language to supported languages", "bleu": 0.2907153684841096, "rouge": 0.3696969696969697}, {"predict": "returns the index of the smallest value in an array that is greater than ( or optionally equal to ) a specified key", "true": "returns the index of the smallest value in an array that is greater than ( or optionally equal to ) a specified key", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a user to the underlying repository", "true": "adds a user to the underlying repository", "bleu": 1.0, "rouge": 1.0}, {"predict": "takes the given entries as high & high water marks for a given entries", "true": "block mix ( 128 - bit block ) of input key to internal hash state", "bleu": 0.06920587951208221, "rouge": 0.0}, {"predict": "registers an event to the queue view", "true": "register a host that is connected to the switch", "bleu": 0.18370727471078332, "rouge": 0.24448897795591182}, {"predict": "add to - be - reconciled flow to the queue", "true": "add to - be - reconciled flow to the queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct this object from one of the strings in the format of this object", "true": "construct this object from one of the strings in the \" fm t list \" parameter", "bleu": 0.607859562670247, "rouge": 0.6587473002159828}, {"predict": "puts the entry with the specified key into the cache", "true": "puts the entry with the specified key into the cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a jar file ( all folders )", "true": "writes the jar file", "bleu": 0.21105340631872638, "rouge": 0.3546511627906977}, {"predict": "appends a new cell to the current row containing the provided integer value", "true": "appends a new cell to the current row containing the provided integer value", "bleu": 1.0, "rouge": 1.0}, {"predict": "expect a server proxy failure with the given arguments", "true": "expect a server proxy failure", "bleu": 0.5169731539571706, "rouge": 0.7530864197530864}, {"predict": "re - measure the loading views height , and adjust internal padding as necessary", "true": "re - measure the loading views height , and adjust internal padding as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove a key / value pair from the list", "true": "remove a key from the parameter set", "bleu": 0.31239399369202553, "rouge": 0.639412997903564}, {"predict": "re calculates the attribute statistics on all the attributes of this attribute", "true": "re calculate the attribute statistics of the given attribute", "bleu": 0.22997519112894443, "rouge": 0.5865384615384615}, {"predict": "returns true if this element has no children", "true": "returns whether this group has any child layers", "bleu": 0.19070828081828378, "rouge": 0.375}, {"predict": "inserts the column at the given column index in the column list ( 0 ) and adds the column to the specified column col in the table", "true": "inserts the specified column at the specified position", "bleu": 0.1265417535065352, "rouge": 0.38006230529595014}, {"predict": "returns the index of string s in the reply", "true": "returns the index of string s in the reply", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate an auxiliary size ( not an auxiliary action", "true": "to do relevant for ll - parser ? ? ?", "bleu": 0.10620315618312248, "rouge": 0.0}, {"predict": "load the writable method of the class from the input stream and resolve the trailing temporary file of", "true": "load a command script from the input stream and find the b sh method in the target namespace", "bleu": 0.28339296176052864, "rouge": 0.3888888888888889}, {"predict": "invoke the correct source for the command class", "true": "a command may be implemented as a compiled java class containing one or more static invoke ( ) methods of the correct signature", "bleu": 0.038489982287238114, "rouge": 0.17801556420233464}, {"predict": "compute the responses for the current instance on the current one", "true": "computes probabilities for the multi no mi al logistic model type", "bleu": 0.14991106946711685, "rouge": 0.18181818181818182}, {"predict": "add client in external to external storage", "true": "wrapper methods for add / modify / remove apis in am client cap data", "bleu": 0.0812630644213965, "rouge": 0.17967599410898377}, {"predict": "deletes the given resource or if it exists", "true": "deletes a single file or recursively a folder with its content", "bleu": 0.12197601375336842, "rouge": 0.20469798657718125}, {"predict": "a method that adds the export snapshot step for a rp volume", "true": "add the export remove volume step to the work flow", "bleu": 0.15537125692760353, "rouge": 0.2772727272727273}, {"predict": "inference by gibbs sampling", "true": "inference by gibbs sampling", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the dedicated token from the table", "true": "r removes a debug token", "bleu": 0.20556680845025982, "rouge": 0.34366197183098596}, {"predict": "report version info from sax interfaces", "true": "report version info from sax interfaces", "bleu": 1.0, "rouge": 1.0}, {"predict": "test if the checksum s in cl version saved in cl", "true": "loop thru the saved signature and file checksums in the persisted data and compare them with the signature and file checksums in the s wc context", "bleu": 0.038336631856500256, "rouge": 0.15111478117258464}, {"predict": "adjust min / pref size for columns ( or rows ) that has components that spans multiple columns ( or rows )", "true": "adjust min / pref size for columns ( or rows ) that has components that spans multiple columns ( or rows )", "bleu": 1.0, "rouge": 1.0}, {"predict": "dumps the specified byte buffer as a hex string", "true": "dumps the given bytes to std out as a hex dump ( up to length bytes )", "bleu": 0.1284290102874165, "rouge": 0.3643966547192354}, {"predict": "this method parses the chat events and sends a chat event to the chat send", "true": "parses the chat logger and invokes the listener on each chat event encountered", "bleu": 0.195647514979229, "rouge": 0.43416370106761565}, {"predict": "parses the given byte sequence , assuming it ' s escape sequence", "true": "test for unknown , but valid , escape sequences", "bleu": 0.11498759556447223, "rouge": 0.19551282051282048}, {"predict": "returns the network parameters for the given id or null if not recognized", "true": "returns the network parameters for the given string id or null if not recognized", "bleu": 0.8008131934180451, "rouge": 0.9565741857659832}, {"predict": "add the certificates in cert store to the c rl set to be included with the generated signed data message", "true": "add the certificates and cr ls contained in the given cert store to the pool that will be included in the encoded signature block", "bleu": 0.21412361790973145, "rouge": 0.49193548387096775}, {"predict": "stores the body of the parameter handler in a web socket", "true": "writes the body of this attribute in an attribute - type dependent way ; see jvm s 7 4", "bleu": 0.10832424511493315, "rouge": 0.2544316996871741}, {"predict": "find the angle between the origin of a given point", "true": "uses trig to find angle of the arrow", "bleu": 0.15851165692617156, "rouge": 0.34014869888475835}, {"predict": "helper method used to append whitespace characters to the end of each rendered element", "true": "helper method used to append whitespace characters to the end of each rendered element", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears the entire resource index", "true": "clears resource index of the given resource type name from the local cache", "bleu": 0.08242390832192466, "rouge": 0.3086003372681282}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "special handling to check if we have a valid byte array for both header and transactions", "true": "special handling to check if we have a valid byte array for both header and transactions", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the last 6 bi - months where the last one is the bi - month which the given date is inside", "true": "generates the last 52 weeks where the last one is the week which the given date is inside", "bleu": 0.5116116106757558, "rouge": 0.763772954924875}, {"predict": "returns a set of labels required to avoid the details of matching the vertex in a cypher match pattern", "true": "gets the set of labels required at the time of matching the vertex in a cypher match pattern", "bleu": 0.5932180640699449, "rouge": 0.7604630454140694}, {"predict": "resets a list of all of its saved states", "true": "reset the count of the unread messages of the section whose index is given in a section", "bleu": 0.06900297641435706, "rouge": 0.14575866188769412}, {"predict": "adds a new category to the list of this preprocessor", "true": "adds a category to the list of registered categories to appear in the lexicon", "bleu": 0.348102011375161, "rouge": 0.5663129973474801}, {"predict": "call non virtual object method v : invoke a virtual method that returns an object", "true": "call non virtual object method v : invoke a virtual method that returns an object", "bleu": 1.0, "rouge": 1.0}, {"predict": "tries to send all other messages to all connected hosts ordered by their delivery probability", "true": "tries to send all other messages to all connected hosts ordered by their delivery probability", "bleu": 1.0, "rouge": 1.0}, {"predict": "make a dark color to ripple effect", "true": "make a dark color to ripple effect", "bleu": 1.0, "rouge": 1.0}, {"predict": "test for documents and list", "true": "creating a stream from a set of seed values", "bleu": 0.1031546451143688, "rouge": 0.0}, {"predict": "cache a client id", "true": "cache a user ' s client item id keyed by internal user id", "bleu": 0.05662941877584837, "rouge": 0.4295774647887324}, {"predict": "process an entity", "true": "processes an entity element", "bleu": 0.5066641486392105, "rouge": 0.5570776255707762}, {"predict": "returns matching node or null if none", "true": "returns matching node or null if none", "bleu": 1.0, "rouge": 1.0}, {"predict": "utility method to query the modifier flags of this member", "true": "utility method to query the modifier flags of this member", "bleu": 1.0, "rouge": 1.0}, {"predict": "receives a task from the queue , blocking until a image has been completed", "true": "implements that top - level image single task submission that is defined by the image consumer interface", "bleu": 0.0848429813968517, "rouge": 0.19022869022869024}, {"predict": "consolidate m sql statement to the database", "true": "generate invoices from shipments", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "locate the best instance of ' pattern ' in ' text ' near ' loc ' using the bit ap algorithm", "true": "locate the best instance of ' pattern ' in ' text ' near ' loc ' using the bit ap algorithm", "bleu": 1.0, "rouge": 1.0}, {"predict": "given ( i", "true": "return a leaf cell given its cube face ( range 0", "bleu": 0.04131510728455004, "rouge": 0.2590233545647558}, {"predict": "checks if a response message contains a body", "true": "checks if a response message contains a body", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the actions on the work space", "true": "updates the actions that depend on the state of a single project", "bleu": 0.201267033117133, "rouge": 0.5024711696869852}, {"predict": "closes this audio input stream and releases any system resources associated with the stream", "true": "closes the file item", "bleu": 0.09782375748961449, "rouge": 0.2469635627530364}, {"predict": "helper method to check if we have a phone number same as the national number , and thus allows to national number to national number", "true": "attempts to extract a valid number from a phone number that is too long to be valid , and resets the phone number object passed in to that valid version", "bleu": 0.10471184293923648, "rouge": 0.28621700879765394}, {"predict": "determines whether the specified time is within this time base 64 format", "true": "compares a time value with current time", "bleu": 0.11498759556447223, "rouge": 0.22101449275362317}, {"predict": "get histogram from histogram", "true": "histogram get ter , returns the histogram value contained in this metric value", "bleu": 0.045035719139523436, "rouge": 0.2147887323943662}, {"predict": "create new label and add new panel", "true": "create week day label", "bleu": 0.20556680845025982, "rouge": 0.3824451410658307}, {"predict": "appends the given path to the path of this one", "true": "create a new path consisting of this path with one or more additional segments given by the relative path", "bleu": 0.08619531607704309, "rouge": 0.2612419700214133}, {"predict": "returns the index of a substring in the set", "true": "returns the index within a string of the first occurrence of a specified substring", "bleu": 0.19260282250359823, "rouge": 0.5020576131687242}, {"predict": "completed submit ( null string ) returns result", "true": "submit ( null callable ) throws null pointer exception", "bleu": 0.2785146580372046, "rouge": 0.465648854961832}, {"predict": "read a value", "true": "read a 32 bit signed number", "bleu": 0.2601300475114444, "rouge": 0.41924398625429554}, {"predict": "true iff there is a granted group", "true": "true iff there is a granted group", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a preprocessor directive like # define , # extension , # version etc", "true": "add a preprocessor directive like # define , # extension , # version etc", "bleu": 1.0, "rouge": 1.0}, {"predict": "format a long into the specified buffer", "true": "format to string buffer", "bleu": 0.20556680845025982, "rouge": 0.3824451410658307}, {"predict": "clear current profiling session", "true": "clears saved results for average computations", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "filter out elements that have a property with provided key", "true": "filter out elements that do not have a property value equal to provided value", "bleu": 0.3239454232489392, "rouge": 0.6472148541114059}, {"predict": "adds an attribute - value pair to the object", "true": "adds value for an attribute and saves the change in the database", "bleu": 0.158278836853973, "rouge": 0.3713850837138508}, {"predict": "copies stream without progress listener", "true": "copy stream , from input to output , it don ' t close", "bleu": 0.05512018958855254, "rouge": 0.10286677908937607}, {"predict": "prints elements of given type members into a list of members", "true": "helper method that outputs the public or protected inner members of a class", "bleu": 0.11294012253658708, "rouge": 0.1641991924629879}, {"predict": "initialize internal get ter function , so get basic info", "true": "initializes the basic variable / row mapping", "bleu": 0.12605968092174913, "rouge": 0.12151394422310759}, {"predict": "invoked when the mouse is released", "true": "if the mouse is dragging a rectangle , pick the vertices contained in that rectangle clean up settings from mouse pressed", "bleu": 0.033747902377517694, "rouge": 0.20198675496688742}, {"predict": "find free space on the windows platform using the ' dir ' command", "true": "find free space on the windows platform using the ' dir ' command", "bleu": 1.0, "rouge": 1.0}, {"predict": "this does not attach the sip message to the sip message", "true": "attach a header and die if you get a duplicate header exception", "bleu": 0.10400927574124633, "rouge": 0.08628005657708629}, {"predict": "performs a regular expression that does not start with the given position", "true": "phone <unk> the word text", "bleu": 0.10390302174233558, "rouge": 0.12708333333333333}, {"predict": "stop the program", "true": "allows to exit program", "bleu": 0.38498150077635496, "rouge": 0.2785388127853881}, {"predict": "set the integration span", "true": "create a state at a time", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "returns a hash code for the specified object", "true": "returns a hash code for the specified object", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies all of the mappings from the specified map to this one", "true": "copies all of the mappings from the specified map to this one", "bleu": 1.0, "rouge": 1.0}, {"predict": "asserts that the actual pivot field matches the expected criteria", "true": "asserts that the actual pivot field matches the expected criteria", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the string representation of this object", "true": "returns the string representation of this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "flatten a string into an xml serialize r", "true": "flatten a string into an xml serialize r", "bleu": 1.0, "rouge": 1.0}, {"predict": "iterates over the file tree of a directory", "true": "iterates over the file tree of a directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "highlights all the internal text in the passed text", "true": "highlights all the hash tag in the passed text", "bleu": 0.5253819788848316, "rouge": 0.7777777777777778}, {"predict": "reads next variable length block from input", "true": "reads next variable length block from input", "bleu": 1.0, "rouge": 1.0}, {"predict": "process one block of input from the array in and write it to the out array", "true": "process one block of input from the array in and write it to the out array", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the m qt t topic for a command", "true": "get the m qt t topic for a command", "bleu": 1.0, "rouge": 1.0}, {"predict": "perform an argument exception for null filter", "true": "checks that object arg is neither null nor empty ( ie length = = 0 ) and that it does not contain any null element", "bleu": 0.014196227135119473, "rouge": 0.05674418604651163}, {"predict": "execute a download on the given url", "true": "fetches url content by executing get request with provided cookie string", "bleu": 0.10489671869455933, "rouge": 0.10683012259194395}, {"predict": "test against the \" void set seed ( byte ) \" method ; it checks out that \" set seed ( byte ) \" method supplements its argument to current seed rather than replaces current seed", "true": "test against the \" void set seed ( byte ) \" method ; it checks out that \" set seed ( byte ) \" method supplements its argument to current seed rather than replaces current seed", "bleu": 1.0, "rouge": 1.0}, {"predict": "flip the image from the specified", "true": "flips the given image on the vertical axis", "bleu": 0.18822631894109965, "rouge": 0.4178082191780822}, {"predict": "creates a filter factory with a given dictionary", "true": "creates a new <unk> fo logi k filter factory", "bleu": 0.23420197753909952, "rouge": 0.465648854961832}, {"predict": "execute the callable wrapping checked exceptions", "true": "execute the callable wrapping checked exceptions inside a runtime exception", "bleu": 0.513417119032592, "rouge": 0.7176470588235294}, {"predict": "returns a string with the given number of characters found in the given string", "true": "pads the given string to the left with spaces to ensure that it ' s at least total chars long", "bleu": 0.11860785323676018, "rouge": 0.17102803738317757}, {"predict": "decodes lz w image data into pixel array", "true": "decodes lz w image data into pixel array", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the hash code value for this policy name", "true": "returns the hash code for this policy information", "bleu": 0.5253819788848316, "rouge": 0.8323586744639376}, {"predict": "creates a new unix in et directory with the default encoding", "true": "creates a unix terminal with default settings , using system", "bleu": 0.17827531042796255, "rouge": 0.4803149606299213}, {"predict": "verbose log message with print f formatting", "true": "verbose log message with print f formatting", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if function index value is editable and adds them as parameter", "true": "checks if is cell editable", "bleu": 0.15537125692760353, "rouge": 0.5083333333333333}, {"predict": "checks if all streams have been removed for this channel", "true": "checks all added streams and removes invalid ones", "bleu": 0.14991106946711685, "rouge": 0.34014869888475835}, {"predict": "we only want the current page that is being shown to be focus able", "true": "we only want the current page that is being shown to be focus able", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a priority to the list of packages", "true": "add to the list of packages that take priority over the parent", "bleu": 0.38284027691020917, "rouge": 0.5791139240506329}, {"predict": "action to be performed", "true": "action to be performed", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string ( possibly null ) method testing", "true": "verifies a single certificate", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "expands the barcode", "true": "reads a sequence of bit encoded using lz w compression with 12 - bit code words from standard input ; expands them ; and writes the results to standard output", "bleu": 7.33799085404856e-05, "rouge": 0.10562770562770561}, {"predict": "constructs new audio capabilities based on a set of supported encodings and a maximum channel count", "true": "constructs new audio capabilities based on a set of supported encodings and a maximum channel count", "bleu": 1.0, "rouge": 1.0}, {"predict": "test if the graph labels based on the axis", "true": "let the graph model decide", "bleu": 0.18575057999133596, "rouge": 0.3012345679012346}, {"predict": "creates an extension response object", "true": "creates an extension response code", "bleu": 0.7598356856515925, "rouge": 0.8}, {"predict": "creates the default inverse cumulative probability test expected values", "true": "creates the default inverse cumulative probability density test expected values", "bleu": 0.7030119876929803, "rouge": 0.9384615384615386}, {"predict": "appends the string representation of the boolean argument to this string buffer", "true": "appends the string representation of the boolean argument to the string buffer", "bleu": 0.7910665071754358, "rouge": 0.9166666666666665}, {"predict": "deletes all so lr ' s servers", "true": "deletes a set of servers", "bleu": 0.20556680845025982, "rouge": 0.34366197183098596}, {"predict": "writes a byte array to a given buffer", "true": "copy bu f to m message", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "sorts the specified range of the array using the given work space array slice if possible for merging", "true": "sorts the specified range of the array using the given work space array slice if possible for merging", "bleu": 1.0, "rouge": 1.0}, {"predict": "report a fatal xslt processing error", "true": "report a fatal xslt processing error", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a terminal if it is in the set", "true": "add a single terminal to the set", "bleu": 0.24446151121745052, "rouge": 0.639412997903564}, {"predict": "this method creates a zookeeper path for the supplied path", "true": "create zoo keep r node if not exist", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "stop recording , call send and log recording client", "true": "tells the video recorder to stop recording", "bleu": 0.18575057999133596, "rouge": 0.2557651991614256}, {"predict": "writes a tag to the output stream", "true": "write a tag with a name", "bleu": 0.24446151121745047, "rouge": 0.31202046035805625}, {"predict": "returns the hash code value for this timestamp", "true": "returns the hash code value for this code signer", "bleu": 0.761894894736741, "rouge": 0.8148854961832059}, {"predict": "get type variable for the type variable", "true": "get new type variable", "bleu": 0.2626909894424158, "rouge": 0.5736677115987461}, {"predict": "process the callback of the web socket frame from a gateway", "true": "process certificate based au th request", "bleu": 0.11390778025531027, "rouge": 0.12423625254582485}, {"predict": "iterates from this number down to the given number , inclusive , dec re men ting by one each time", "true": "iterates from this number down to the given number , inclusive , dec re men ting by one each time", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a select expression element", "true": "adds an select expression within the select clause", "bleu": 0.1971902775417715, "rouge": 0.2953995157384988}, {"predict": "remove listener for pv changes", "true": "remove listener for pv changes", "bleu": 1.0, "rouge": 1.0}, {"predict": "test if a gts has normal ' s normal distribution", "true": "determine if a gts ' values are normally distributed", "bleu": 0.24808415001701817, "rouge": 0.42508710801393734}, {"predict": "creates the contents of a properties vector projected from a properties object", "true": "load contents from a properties object", "bleu": 0.3026643726685863, "rouge": 0.5910852713178294}, {"predict": "returns the gamma function of the argument", "true": "returns the gamma function of the argument", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new progress show progress dialog", "true": "create a new instance of this class , and start the timer", "bleu": 0.11967409389919142, "rouge": 0.20098846787479407}, {"predict": "parse a canonical expression expression into a uri expression", "true": "parse a string under the expectation that it is a repository expression , i", "bleu": 0.12109261383365659, "rouge": 0.3347050754458162}, {"predict": "closes this reader", "true": "closes this stream", "bleu": 0.7071067811865475, "rouge": 0.6666666666666666}, {"predict": "add to internal sections list", "true": "add a section to the document", "bleu": 0.24736929544091937, "rouge": 0.3577712609970674}, {"predict": "load a genome relationships file", "true": "load a genome relationships file", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the version of the form \" x", "true": "return the version parts", "bleu": 0.21105340631872638, "rouge": 0.3546511627906977}, {"predict": "executes the algorithm , producing ( at least ) a result workbench", "true": "executes the algorithm , producing ( at least ) a result workbench", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if a double is finite between zero and b", "true": "check if two doubles are equal to within specified tolerance", "bleu": 0.12605968092174913, "rouge": 0.1}, {"predict": "read and return a map model", "true": "read the meta model declaration from a js file , check it ' s the right version and return the model as a map", "bleu": 0.019797099072043068, "rouge": 0.3007889546351085}, {"predict": "split a line that is c , and convert it to a b lo que following in", "true": "check for comments , trim white space", "bleu": 0.07223943354597204, "rouge": 0.09010339734121123}, {"predict": "convenience method that creates the volume data object", "true": "creates the block object volume data", "bleu": 0.2777619034011791, "rouge": 0.5865384615384615}, {"predict": "serialize a map to a linked hash map", "true": "takes a hash map and creates an object", "bleu": 0.22679164443904004, "rouge": 0.375}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes sms from a given command", "true": "\" del sms \" cm d deletes sms , either - all sms - all sent sms - sms from specified contact - # last messages - # last incoming / outgoing messages", "bleu": 0.0038406109997857363, "rouge": 0.1367713004484305}, {"predict": "checks if the instructions is a start block in the ir", "true": "' finally ' instructions can start in the middle of the first block", "bleu": 0.15447751184440917, "rouge": 0.3283983849259758}, {"predict": "returns true if the error has the error to succeed", "true": "checks to see if the there has been an error in the print stream", "bleu": 0.1374462580533874, "rouge": 0.32360742705570295}, {"predict": "process the specified size of a document into a list of size characters", "true": "splits the document basing on the given size", "bleu": 0.1135935489027116, "rouge": 0.2985318107667211}, {"predict": "validates that the au th scheme matches at least one au th scheme parameter", "true": "validates the module instance names provided to the set properties ( ) call for the au th scheme key", "bleu": 0.18015630987279496, "rouge": 0.2949709864603482}, {"predict": "c cap words like imf like cassandra u id ( c ) { & lt ; data content prefix are imf and c tl exception if c # 63 ; c + 001 f )", "true": "a helper method to return the u u id without the \" urn : u u id : \" prefix", "bleu": 0.04877324444306591, "rouge": 0.11473354231974922}, {"predict": "reads and returns the next line , excluding the line separator if present", "true": "reads and returns the next line in this input stream", "bleu": 0.4324227075463215, "rouge": 0.5343065693430658}, {"predict": "decodes data from base 64 notation , automatically detecting gzip - compressed data and decompressing it", "true": "decodes data from base 64 notation , automatically detecting gzip - compressed data and decompressing it", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates and setup a gradient paint extension", "true": "creates a red gradient paint", "bleu": 0.2777619034011791, "rouge": 0.6873239436619719}, {"predict": "returns a list of all available numbers in a string and the list of numbers in a matching pattern", "true": "returns a list of all numbers found in a given string", "bleu": 0.28051550320162943, "rouge": 0.6303099885189437}, {"predict": "delete storage server by existing group", "true": "delete a storage server from the tracker server", "bleu": 0.2238400777155271, "rouge": 0.4178082191780822}, {"predict": "creates a node that receives routed objects from the network can connect to", "true": "creates a node that accepts input into the routing network can only connect to one other node", "bleu": 0.2572084451394092, "rouge": 0.5859124866595516}, {"predict": "asserts that the given set is not null", "true": "assert delivery state by delivery group", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "creates a new configuration from the given list of modules and each module that are wildcard s", "true": "it seems that create files compile scope does not work in all environments , at least with android , see https : / / intel lij - support", "bleu": 0.03782337297728825, "rouge": 0.04256803907885555}, {"predict": "write the bitmap to a file", "true": "writes the bitmap to disk and returns the new file", "bleu": 0.2231931376573339, "rouge": 0.47843137254901963}, {"predict": "create and parse sentence", "true": "parse the given text sentence", "bleu": 0.3096787331587729, "rouge": 0.43571428571428567}, {"predict": "replace the old child with a new child", "true": "replace the old child with a new child", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the hash code for the specified multi - key", "true": "gets the hash code for the specified multi - key", "bleu": 1.0, "rouge": 1.0}, {"predict": "flushes all buffers for the current writer and causes any buffered data to be written to the underlying device", "true": "flushes the stream", "bleu": 0.0712695567709093, "rouge": 0.20926243567753}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds entry to the list", "true": "adds the entry to the entry list", "bleu": 0.3769486629893372, "rouge": 0.8090185676392573}, {"predict": "update the panel to draw the new state , but don ' t call", "true": "always use this method to update the position of the sliding view", "bleu": 0.13217947626377288, "rouge": 0.2340153452685422}, {"predict": "flushes the diff based on the previous record and then write the buffer", "true": "writes any remaining <unk> lines", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "construct a video stream from one of the strings obtained from the \" url encoded fm t stream map \" parameter if the video info", "true": "construct a video stream from one of the strings obtained from the \" url encoded fm t stream map \" parameter if the video info", "bleu": 1.0, "rouge": 1.0}, {"predict": "compares two strings for equality", "true": "compares this character array against the specified string", "bleu": 0.14983220973977976, "rouge": 0.1476997578692494}, {"predict": "flushes the underlying stream , but leaves the internal buffer alone", "true": "flushes any buffered output", "bleu": 0.11390778025531027, "rouge": 0.14558472553699284}, {"predict": "start all server after a server configuration", "true": "starts background thread that launches servers", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "append an amount of overrides to the output type of the messenger to be bing generated by the maximum limit to the maximum if there is already set to be sent", "true": "evaluates the pagination variables", "bleu": 0.03901663112717908, "rouge": 0.06637649619151251}, {"predict": "constructs a new wrapper to collect runtime dynamics", "true": "constructs a new wrapper to collect runtime dynamics", "bleu": 1.0, "rouge": 1.0}, {"predict": "identical to provider queue", "true": "if the provider was not previously registered , do nothing", "bleu": 0.08017158404431235, "rouge": 0.13260869565217392}, {"predict": "creates a new compact comparator based on the supplied date / max field time", "true": "construct a comparator that sorts items by newest first", "bleu": 0.09782375748961449, "rouge": 0.18100890207715134}, {"predict": "updates the digest with the specified x and y", "true": "updates an item in the series", "bleu": 0.15619699684601276, "rouge": 0.27664399092970515}, {"predict": "writes an float field value", "true": "writes an float field value", "bleu": 1.0, "rouge": 1.0}, {"predict": "decodes the supplied byte array , generating and appending the supplied number of error correction bytes to be used", "true": "<unk> and decodes the supplied byte array , removing the error correction codes and returning the original data", "bleu": 0.3392375549949802, "rouge": 0.48886910062333044}, {"predict": "convert a string list to an array list of strings", "true": "make array list from \" , \" separated string", "bleu": 0.17827531042796255, "rouge": 0.21254355400696867}, {"predict": "return a path for a scroll bar button", "true": "return a path for a scroll bar button", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all views for this adapter , which will be shown using the params of another views", "true": "remove all the views from the adapter and de - parents them from the view pager after calling this , it is expected that notify data set changed should be called soon afterwards", "bleu": 0.03986039352798856, "rouge": 0.18908865468071914}, {"predict": "returns true if the passed in string is null ; return true ; returns null ; returns null ; returns false ; null", "true": "method to check valid <unk> mobile number", "bleu": 0.04449945957170705, "rouge": 0.0}, {"predict": "converts an error message into a string", "true": "converts an error in the generated file to a compile error based on the source", "bleu": 0.11657795763232932, "rouge": 0.3412587412587413}, {"predict": "returns the hyperbolic sine of the number", "true": "returns the hyperbolic sine of the number", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a notification item to this container", "true": "show notification in container", "bleu": 0.20556680845025982, "rouge": 0.3824451410658307}, {"predict": "it checks if the attribute list is modified and not", "true": "have the attributes of this service schema been modified", "bleu": 0.13950796967929133, "rouge": 0.21254355400696867}, {"predict": "returns ignore descriptor , th d or th d , without preferred readable", "true": "get descriptor for method ( if any )", "bleu": 0.09552040806823771, "rouge": 0.09951060358890701}, {"predict": "runs a full copy of the given data configuration", "true": "runs a full - import using the given data config and the provided request parameters", "bleu": 0.19505632433269743, "rouge": 0.47843137254901963}, {"predict": "sample a d sample of the sample", "true": "produce a random sample of the given d bids", "bleu": 0.28751742289713444, "rouge": 0.48897795591182364}, {"predict": "draws a message size", "true": "generates a ( random ) message size", "bleu": 0.24002491458061356, "rouge": 0.5198863636363635}, {"predict": "grab the method which will validate the signature with the signature and arguments", "true": "grab the arg s string from the method signature", "bleu": 0.16544619993389978, "rouge": 0.37596302003081655}, {"predict": "removes a listener from the set of listeners", "true": "removes a listener from the set of listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "java x", "true": "java x", "bleu": 1.0, "rouge": 1.0}, {"predict": "process the events to a given set of", "true": "indicate an outbound result", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "add a new value to the array map", "true": "add a new value to the array map", "bleu": 1.0, "rouge": 1.0}, {"predict": "reset the candidate parser settings , making each parser equally likely", "true": "reset the candidate parser settings , making each parser equally likely", "bleu": 1.0, "rouge": 1.0}, {"predict": "redefine this extended type object to represent a different extended type", "true": "redefine this extended type object to represent a different extended type", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a long to the specified position", "true": "writes a long to the specified position", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a straight line from the current path point to the new one specified by x and y", "true": "create a straight line from the current path point to the new one specified by x and y", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete the replication set based on the rp volume ids", "true": "delete the replication set", "bleu": 0.35084396956386854, "rouge": 0.6192893401015228}, {"predict": "moves this frame to the next main thread", "true": "called to move to the next frame", "bleu": 0.3155984539112945, "rouge": 0.4048672566371681}, {"predict": "adds wheel changing listener", "true": "adds wheel changing listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "make a new megan id", "true": "m rma - rma defaults", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "see the general contract of the read long method of data input", "true": "see the general contract of the read long method of data input", "bleu": 1.0, "rouge": 1.0}, {"predict": "test method from apache derby project class org", "true": "test for bug <unk> j <unk> <unk> - <unk> data type 0 invalid", "bleu": 0.08583768591139128, "rouge": 0.09131736526946108}, {"predict": "attempts to create a log instance for the given category name", "true": "attempts to create a log instance for the given category name", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a ns data object from a file", "true": "creates a ns data object from a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new via header based on the newly supplied uri and branch values", "true": "creates a new via header based on the newly supplied uri and branch values", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a string representation of the stream of headers and buffer", "true": "adds some debugging information", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "dispose of object , releasing resources", "true": "dispose of object , releasing resources", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds index of the string", "true": "finds index of the string", "bleu": 1.0, "rouge": 1.0}, {"predict": "handles the json event in the csr f token", "true": "part of the json api", "bleu": 0.18575057999133596, "rouge": 0.3012345679012346}, {"predict": "resolves all parameters from the executable from the server using the given executable from the provided executable server configuration , and that resolved the configuration arguments", "true": "resolve the array of parameters for the supplied executable , target , and outer instance", "bleu": 0.07592939129822969, "rouge": 0.25630252100840334}, {"predict": "returns true if the given character is a valid name character", "true": "check whether the given char can be one of a name", "bleu": 0.17033186037639278, "rouge": 0.36363636363636365}, {"predict": "support for connecting to a server socket", "true": "attempt a secure connection with basic functionality to maximize compatibility", "bleu": 0.13391424795650428, "rouge": 0.11401869158878504}, {"predict": "checks to see if a character ' s specification character in the xml file", "true": "determine if a character is ok to start an id", "bleu": 0.17395797375642236, "rouge": 0.2577464788732394}, {"predict": "returns a hash code that matches the criteria", "true": "returns a hash code for this font", "bleu": 0.44632361378533286, "rouge": 0.5398230088495575}, {"predict": "construct a command handler that will break the individual arguments", "true": "e num con tru ctor to set command", "bleu": 0.12605968092174913, "rouge": 0.11338289962825278}, {"predict": "tells whether a given type is a float", "true": "tells whether a given type is a float", "bleu": 1.0, "rouge": 1.0}, {"predict": "add component to component resized events", "true": "invoked when the component ' s size changes", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "create a argument with the parser", "true": "create an arg with a name and help line description , along with a number of expected arguments to follow this option", "bleu": 0.018252676551591566, "rouge": 0.19426751592356686}, {"predict": "a method that removes the specified element from this snapshot", "true": "a version of remove ( object ) using the strong hint that given recent snapshot contains o at the given index", "bleu": 0.05276394701979292, "rouge": 0.18190854870775347}, {"predict": "removes the given model from the container", "true": "removes the given model from the container", "bleu": 1.0, "rouge": 1.0}, {"predict": "read in map file", "true": "read map information from stage 0 x", "bleu": 0.1878296463217631, "rouge": 0.346590909090909}, {"predict": "creates a new generator object", "true": "get <unk> ff <unk> probability number , in ln space", "bleu": 0.08445588027797912, "rouge": 0.0}, {"predict": "after rotating , the matrix needs to be translated", "true": "after rotating , the matrix needs to be translated", "bleu": 1.0, "rouge": 1.0}, {"predict": "follows changes in the file , calling the tail er listener ' s handle method for each new line", "true": "follows changes in the file , calling the tail er listener ' s handle method for each new line", "bleu": 1.0, "rouge": 1.0}, {"predict": "with child view to processing move events", "true": "with child view to processing move events", "bleu": 1.0, "rouge": 1.0}, {"predict": "test verifies that random instances generated by tests", "true": "tests that local instances can be recreated ( = are deterministic ) if the same random seed is used to generate them", "bleu": 0.03504142113550254, "rouge": 0.12298387096774194}, {"predict": "adds a new region to the state of this matching rule", "true": "adds a new applied region to the match without a priority", "bleu": 0.3066148710292675, "rouge": 0.5454545454545454}, {"predict": "reset term vector 0 , when the global path is set , 0 , 0 , ending at ending at day !", "true": "resets the selection the panel by selecting all <unk>", "bleu": 0.05538696232597745, "rouge": 0.06979405034324943}, {"predict": "assert a throw able type and implement more assertions in a consumer", "true": "asserts that the execution of consumer throws an exception of the specific class", "bleu": 0.09559539481714499, "rouge": 0.07942708333333334}, {"predict": "returns true of the current relation is set", "true": "return true if this storage is empty", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "asserts the argument is ignored , as well as the exception if it ' s a boolean", "true": "assertions allow for simpler test code", "bleu": 0.06074588070876682, "rouge": 0.0}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a tag value converter using a key - value pairs", "true": "store feature ids using id key", "bleu": 0.12605968092174913, "rouge": 0.2484725050916497}, {"predict": "build the after parsing is used for the fine - query", "true": "common in its , regardless of applet or application", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "attempts to prepare the request for a retry", "true": "attempts to prepare the request for a retry", "bleu": 1.0, "rouge": 1.0}, {"predict": "sorts the given file using the provided comparator", "true": "this will simply load the file by blocks of x rows , then sort them in - memory , and write the result to temporary files that have to be merged later", "bleu": 0.00949480621541769, "rouge": 0.13535502958579881}, {"predict": "add directory to s can for saves avatars", "true": "add directory to s can for saves avatars", "bleu": 1.0, "rouge": 1.0}, {"predict": "implements the node in the list , higher - width", "true": "returns highest node", "bleu": 0.12605968092174913, "rouge": 0.17039106145251398}, {"predict": "process the properties associated with a properties object", "true": "process a net map event properties object , which means that a properties object , representing an event from the net map server , is evaluated and used to modify the node cache and line cache accordingly", "bleu": 0.009148489184701286, "rouge": 0.19908616187989558}, {"predict": "adds id for sms plugin repository", "true": "adds id repo am sdk plugin to the given organization name", "bleu": 0.13576587000692578, "rouge": 0.33516483516483514}, {"predict": "initializes the disk based cache by scanning for all files currently in the specified root directory", "true": "initializes the disk based cache by scanning for all files currently in the specified root directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "callback invoked by specified key", "true": "getting the value of key pressed and appending it to current pin", "bleu": 0.06732395159376953, "rouge": 0.1095152603231598}, {"predict": "check if string is still eq to restore the content as individual", "true": "whether the given string has a hier achy structure with the sep era tors", "bleu": 0.09733489823443878, "rouge": 0.1517412935323383}, {"predict": "paints a portion of a highlight", "true": "paints a portion of a highlight", "bleu": 1.0, "rouge": 1.0}, {"predict": "receives a char and stores it into the piped reader", "true": "receives a char and stores it into the piped reader", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a buffer to a byte buffer with boundary constraints", "true": "converts a buffer to a byte buffer", "bleu": 0.6786502681586726, "rouge": 0.850597609561753}, {"predict": "implements output stream", "true": "implements output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "process uri to uri", "true": "convert local paths into absolute paths for links based on the local file system", "bleu": 0.0248009595334312, "rouge": 0.0}, {"predict": "generates an utterance for announcing screen on and screen off", "true": "generates an utterance for announcing screen on and screen off", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate matrix for fit center", "true": "calculate matrix for fit center", "bleu": 1.0, "rouge": 1.0}, {"predict": "resets the counter to the beginning of the timer", "true": "resets the rate sampling", "bleu": 0.18575057999133596, "rouge": 0.3306233062330623}, {"predict": "returns the next stored in t", "true": "read the next in t from the input stream", "bleu": 0.22172045047934616, "rouge": 0.5147679324894514}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "add issuer ( x 500 principal issuer ) method testing", "true": "add issuer ( x 500 principal issuer ) method testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds transformation to the tag transformation", "true": "adds specified tag transformation to the collection", "bleu": 0.41386440336942737, "rouge": 0.6069651741293532}, {"predict": "this method will be used to check whether a file has been modified or not", "true": "this method will be used to check whether a file has been modified or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the characters up to the next close quote character", "true": "return the characters up to the next close quote character", "bleu": 1.0, "rouge": 1.0}, {"predict": "read a file", "true": "read <unk> 3 tag to do : not working", "bleu": 0.07271361304044333, "rouge": 0.15288220551378442}, {"predict": "compute the result of the kernel evaluation on the supplied vectors", "true": "compute the result of the kernel evaluation on the supplied vectors", "bleu": 1.0, "rouge": 1.0}, {"predict": "indicates if a database configuration is present", "true": "returns whether the database configuration is present or not ( i", "bleu": 0.2919441086311216, "rouge": 0.4273204903677758}, {"predict": "have all pin in the pin form a specified pin , n must be skipped in same order , multiple pin have been aligned to be numerical", "true": "tests the string to see if it contains a partial numeric run", "bleu": 0.053414136238197775, "rouge": 0.1102077687443541}, {"predict": "generate a log message to the given class , optionally close it to the writer", "true": "me to do que genera un alert con el <unk> je de error y a dem as cie rr a la vent an a que se intent a ab rir", "bleu": 0.03349000206761757, "rouge": 0.04192439862542955}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the best parse for state \" state \" , potentially starting with a u nary rule", "true": "returns the best parse for state \" state \" , potentially starting with a u nary rule", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses attributes of the do cue m nt element for this object", "true": "parses attributes of the do cue m nt element for this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the distance between two given points in the plane", "true": "calculates the distance between two given points in the plane", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the center text in the center of the chart", "true": "draws the description text in the center of the pie chart makes most sense when center - hole is enabled", "bleu": 0.24428927628823094, "rouge": 0.5659793814432991}, {"predict": "description of the method", "true": "description of the method", "bleu": 1.0, "rouge": 1.0}, {"predict": "pads spaces on to the end of the value to make it ' places ' long", "true": "pads spaces on to the end of the value to make it ' places ' long", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates and registers an error result code with the application", "true": "creates and registers a new error result code with the application", "bleu": 0.6349135031073152, "rouge": 0.8498452012383902}, {"predict": "add two exceptions to this set", "true": "add all exceptions in the given set", "bleu": 0.22236312185643822, "rouge": 0.45522388059701485}, {"predict": "( unknown ) one capture", "true": "starts video input from the camera", "bleu": 0.18796001821050234, "rouge": 0.0}, {"predict": "creates the license locator directly from the given char set", "true": "constructs the license locator with the given license file names", "bleu": 0.27901593935858265, "rouge": 0.5}, {"predict": "checks if the exception is one of the intended server side exception that has been thrown over the a idl layer", "true": "checks if the exception is one of the intended server side exception that has been thrown over the a idl layer", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes a new project type registry with the given underlying project type", "true": "initial is es set of project type definitions", "bleu": 0.1367440667823257, "rouge": 0.2074829931972789}, {"predict": "add notification listener from this mbe an", "true": "attach notification listener that can be used to listen notifications emitted by mbe an server", "bleu": 0.09802998667062515, "rouge": 0.3412587412587413}, {"predict": "subtract two negative numbers of different length", "true": "subtract two negative numbers of different length", "bleu": 1.0, "rouge": 1.0}, {"predict": "consumes the receive messages from the list of topics", "true": "handles looping and consuming", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "read a fixed size of bytes from the input", "true": "exactly like read raw bytes , but caller must have already checked the fast path : ( size 0 )", "bleu": 0.05227938863320699, "rouge": 0.19365079365079363}, {"predict": "if check dup s is false , delete the service ( if present ) from service by at tr under all attribute values of the given entry or from service by empty at tr if the entry has no attributes", "true": "if check dup s is false , delete the service ( if present ) from service by at tr under all attribute values of the given entry or from service by empty at tr if the entry has no attributes", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests ds a algorithm parameters provider", "true": "tests ds a algorithm parameters provider", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if class node represents a class instruction", "true": "tells if a class node is candidate for class literal bytecode optimization", "bleu": 0.16847111051295394, "rouge": 0.3860759493670886}, {"predict": "read the log file into properties file", "true": "loads the log file for the given license and returns it", "bleu": 0.1952347922420459, "rouge": 0.32049036777583184}, {"predict": "creates a new html strip char filter factory", "true": "creates a new html strip char filter factory", "bleu": 1.0, "rouge": 1.0}, {"predict": "update the user by query", "true": "update the user by the values , if the values contains \" password \" field , it will auto encrypt the password field", "bleu": 0.020761539380292342, "rouge": 0.25603357817418676}, {"predict": "the likelihood of a tag in given document", "true": "the likelihood of a tag in given document", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a description of the class i fier", "true": "make a string from the cluster features", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "test bulk get / put byte methods with offset and length", "true": "test of the bulk get / put byte methods which accept a slice into the caller ' s array", "bleu": 0.2576399260359546, "rouge": 0.44525547445255476}, {"predict": "insert data for obj", "true": "insert data to footer", "bleu": 0.47287080450158786, "rouge": 0.5}, {"predict": "determine if there are more messages in the form tab", "true": "determines whether or not the current locale language is english", "bleu": 0.12605968092174913, "rouge": 0.1}, {"predict": "call this method from your gui screen to process the keys into the text box", "true": "call this method from your gui screen to process the keys into the text box", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse an image name from the specified name into an image name", "true": "parse a full image name ( my host : <unk> / namespace / repo : tag ) into its components", "bleu": 0.07977026311224286, "rouge": 0.23921568627450981}, {"predict": "registers the channel names for listening", "true": "adds the set of channel names to the set of listened channels", "bleu": 0.11492332782473744, "rouge": 0.31443298969072164}, {"predict": "deletes a directory recursively", "true": "deletes a directory recursively", "bleu": 1.0, "rouge": 1.0}, {"predict": "displays a new property name from value , editor , which is not info , when the text is non - interactive , has been closed", "true": "output property summary table", "bleu": 0.04668049023095243, "rouge": 0.07682619647355164}, {"predict": "deletes any empty folder from the db", "true": "deletes any empty folder from the db", "bleu": 1.0, "rouge": 1.0}, {"predict": "perform an asynchronous sum operation", "true": "perform an asynchronous sum operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "test ( ) method testing", "true": "write ( byte b , in t off , in t len ) method testing", "bleu": 0.07271361304044333, "rouge": 0.3669172932330827}, {"predict": "parses the plain text from the text file", "true": "converts the logging event data in xml string format into an actual xml document class instance", "bleu": 0.0589953212431261, "rouge": 0.07860824742268041}, {"predict": "determines if the full copy of the production list is to be merged into the list of vertices", "true": "checks to see if the volume is a production journal", "bleu": 0.10657284485555579, "rouge": 0.2259259259259259}, {"predict": "test the get form of the get - in it ' s hostname , in the database connection", "true": "test the # in a column name for oracle compatibility", "bleu": 0.09629943614188137, "rouge": 0.2259259259259259}, {"predict": "return the url of the url safe char ( like data ) or null if there are to encode the url", "true": "un escape and decode a given string regarded as an escaped string with the default protocol char set", "bleu": 0.06429451441231726, "rouge": 0.10400682011935208}, {"predict": "blocks until the next task is not greater than the l dap implementation", "true": "wait before sending next poll", "bleu": 0.09552040806823771, "rouge": 0.12079207920792079}, {"predict": "a vector is a vector consisting of is processed mapping and the vector of mapping that are expected to a vector of the mapping vector", "true": "adjusts the objects in line line num of mapping vector so all column numbers starting with start col are <unk> by ` shift '", "bleu": 0.08415986258156724, "rouge": 0.1638683680322364}, {"predict": "compute the bitmap with the specified year and size", "true": "determine the number of lines in the annotation text and the length of the longest line", "bleu": 0.07711214194298908, "rouge": 0.22846441947565538}, {"predict": "writes an image map to an output stream", "true": "writes an image map to the specified writer", "bleu": 0.5873949094699213, "rouge": 0.625}, {"predict": "add a message to the import - type", "true": "adds a message ( if not null ) to the builder", "bleu": 0.18239668350432228, "rouge": 0.4093959731543625}, {"predict": "returns a string representation of the log out response", "true": "returns a string representation of the log out response", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a collection of strings into a list of strings", "true": "returns a list of strings , where the strings are the result of calling string", "bleu": 0.23147217053557725, "rouge": 0.30886075949367087}, {"predict": "returns the minimum of the specified values according to this ordering", "true": "returns the smallest of the specified values according to this ordering", "bleu": 0.7691605673134586, "rouge": 0.9090909090909091}, {"predict": "reads bytes from the byte array", "true": "read a sub array of bytes from connection", "bleu": 0.2238400777155271, "rouge": 0.2785388127853881}, {"predict": "append a string on to the vector", "true": "append a string on to the vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method consolidates the pc axis with the list of all soft stacks", "true": "take a list of item stacks and <unk> where possible", "bleu": 0.1350862565735141, "rouge": 0.2671532846715329}, {"predict": "determines how many days ago time was ( rounded down )", "true": "determines how many days ago time was ( rounded down )", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if a xml character is well - formed", "true": "checks if a xml character is well - formed", "bleu": 1.0, "rouge": 1.0}, {"predict": "xor for zero and zero", "true": "xor for zero and zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "run the specified consumer with the ' rail ' and the value", "true": "call the specified consumer with the current element passing through any ' rail '", "bleu": 0.41005887663130913, "rouge": 0.6069651741293532}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "add missing values to a data set", "true": "add missing values to a data set", "bleu": 1.0, "rouge": 1.0}, {"predict": "insert discovered objects in batches", "true": "insert discovered objects in batches", "bleu": 1.0, "rouge": 1.0}, {"predict": "modifies the configuration object", "true": "modifies the attributes for the given configuration object", "bleu": 0.21874242445215208, "rouge": 0.6288659793814433}, {"predict": "removes a listener from the list of listeners", "true": "removes the given tab listener from this layout", "bleu": 0.239802967618271, "rouge": 0.375}, {"predict": "construct a new socket manager for specified network uri", "true": "creates a new instance with a list of uris", "bleu": 0.18575057999133596, "rouge": 0.2222222222222222}, {"predict": "add volumes to storage group in storage group", "true": "this method is used for v max 3 to add volumes to parking storage group once volumes are un exported", "bleu": 0.07919962764713406, "rouge": 0.3315217391304348}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert the specified string to an input stream , encoded as bytes using the specified character encoding", "true": "convert the specified string to an input stream , encoded as bytes using the specified character encoding", "bleu": 1.0, "rouge": 1.0}, {"predict": "has the user chosen to export format in pkcs 8 private key and certificate combination ?", "true": "has the user chosen to export to pkcs # 8 ?", "bleu": 0.3807134866446316, "rouge": 0.6896984924623116}, {"predict": "generates a public key instance from a string containing the base 64 - encoded public key", "true": "generates a public key instance from a string containing the base 64 - encoded public key", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new number tick", "true": "creates a new tick", "bleu": 0.537284965911771, "rouge": 0.9070631970260222}, {"predict": "can only be created", "true": "determines whether the server can be stopped in - process , such as when a server is embedded in an application and the server launcher api is being used", "bleu": 0.0007676168338845888, "rouge": 0.10664335664335663}, {"predict": "log a message on an incoming stream", "true": "log a new message on the selected print stream with the given method and level", "bleu": 0.102601628763616, "rouge": 0.42657342657342656}, {"predict": "add a member to the startup queue , gossiping parameters", "true": "add a gossip member to the list of members to start with", "bleu": 0.2284389301518129, "rouge": 0.44721407624633425}, {"predict": "returns if modifier is public", "true": "returns if modifier is public", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates a public key instance from a string containing the base 64 - encoded public key", "true": "generates a public key instance from a string containing the base 64 - encoded public key", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a user preference generic value to a user pref map", "true": "convert a user preference generic value to a user pref map", "bleu": 1.0, "rouge": 1.0}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "append a string to the end of the buffer", "true": "append a string in quotes", "bleu": 0.2626909894424158, "rouge": 0.4518518518518518}, {"predict": "deletes the user info from the authentication info tab", "true": "delete a user and password from a file", "bleu": 0.15619699684601276, "rouge": 0.2378167641325536}, {"predict": "add error occurred in response with data directory", "true": "logs error messages to the error logs", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "removes an audio processor from the processor queue", "true": "removes the provided processor from the internal processor queue", "bleu": 0.325547788760636, "rouge": 0.6984732824427481}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the animation type or 0 if cannot be found", "true": "returns the animation type or 0 if cannot be found", "bleu": 1.0, "rouge": 1.0}, {"predict": "append a string on to the vector", "true": "append a string on to the vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if a method is a method with a given method", "true": "returns true it the passed method is contained in the also passed list of methods by also comparing matching parameters", "bleu": 0.06614573606326299, "rouge": 0.12261306532663319}, {"predict": "delete a node from the graph", "true": "delete a node from the graph", "bleu": 1.0, "rouge": 1.0}, {"predict": "callback used to handle update route button", "true": "responds to the update button - update to route table", "bleu": 0.15215596197411094, "rouge": 0.34205607476635513}, {"predict": "returns a string representation of the attribute", "true": "returns a string representation of this object", "bleu": 0.6803749333171202, "rouge": 0.7142857142857143}, {"predict": "checks whether the current stream is present in the stream", "true": "checks whether the x stream is present in the class path", "bleu": 0.5317986230889064, "rouge": 0.7554179566563467}, {"predict": "the real guts of parse network response", "true": "the real guts of parse network response", "bleu": 1.0, "rouge": 1.0}, {"predict": "subtracts the product ( x 1 , y ) and returns the result", "true": "compute the result of the kernel evaluation on the supplied vectors", "bleu": 0.1350862565735141, "rouge": 0.16920943134535368}, {"predict": "returns the batch size of this batch channel", "true": "get local batch size for this sequences", "bleu": 0.22679164443904004, "rouge": 0.4048672566371681}, {"predict": "decodes an array of url safe 7 - bit characters into an array of original bytes", "true": "decodes an array of url safe 7 - bit characters into an array of original bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "reset all views that are currently registered for the scrap heap", "true": "clear scrap views out of this recycle r", "bleu": 0.12605968092174913, "rouge": 0.108348134991119}, {"predict": "adds a data set dynamically", "true": "adds a data set dynamically", "bleu": 1.0, "rouge": 1.0}, {"predict": "pass the call on to the underlying handler", "true": "pass the call on to the underlying handler", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a lib vlc with s options", "true": "create a lib vlc with s options", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a child to the display list at the specified index , bumping children at equal or greater indexes up one , and setting its parent to this container", "true": "adds a child to the display list at the specified index , bumping children at equal or greater indexes up one , and setting its parent to this container", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate notes from a node , starting at the end of the tree", "true": "calculate probability of data at descendants from node , given a color at the node ( ' partials ' ) , by a fels en stein - like pruning algorithm", "bleu": 0.04951719759387861, "rouge": 0.26049822064056943}, {"predict": "returns the minimum of the cells in the string", "true": "dp", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "appends a json encoded key / value pair to the given string builder", "true": "appends a json encoded key / value pair to the given string builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a time object from a given date - if the date is between 1950 and 2049 a utc time object is generated , otherwise a generalized time is used", "true": "creates a time object from a given date - if the date is between 1950 and 2049 a utc time object is generated , otherwise a generalized time is used", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d check update dialog", "true": "creates a new d check update dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a , original br ics implementation of a automaton", "true": "simple , original br ics implementation of br zo zo w ski minimize ( )", "bleu": 0.346131628097006, "rouge": 0.46329113924050636}, {"predict": "indicates whether the given object is \" equal to \" this one", "true": "if this item equals to the given object", "bleu": 0.21401603033752975, "rouge": 0.3112244897959184}, {"predict": "adds a column to the key definition", "true": "adds the given column", "bleu": 0.22089591134157885, "rouge": 0.3824451410658307}, {"predict": "decode the base 64 - encoded data in input and return the data in a new byte array", "true": "decode the base 64 - encoded data in input and return the data in a new byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks for valid double vector obtained from a vector of double vectors", "true": "check for nan values", "bleu": 0.10390302174233558, "rouge": 0.13738738738738737}, {"predict": "gets the visual of a scenario from a break point", "true": "fills a string buffer with spaces until it has at least the given length", "bleu": 0.09351498865776114, "rouge": 0.08090185676392574}, {"predict": "will opens a file will be used by the address when the server changes", "true": "open the file with appending mode", "bleu": 0.09782375748961449, "rouge": 0.10777385159010601}, {"predict": "calculates kernel value of vectors x and y", "true": "calculates kernel value of vectors x and y", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes this writer", "true": "closes this stream", "bleu": 0.7071067811865475, "rouge": 0.6666666666666666}, {"predict": "takes a list of files and writes it as a \" file of file names \" ( i", "true": "takes a list of files and writes it as a \" file of file names \" ( i", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the \" internal \" flag on type ids which are defined in the dex file or within the vm ( e", "true": "sets the \" internal \" flag on type ids which are defined in the dex file or within the vm ( e", "bleu": 1.0, "rouge": 1.0}, {"predict": "obtains the trigonometric cosine of this angle", "true": "obtains the cosine of this angle", "bleu": 0.5946035575013605, "rouge": 0.9360613810741688}, {"predict": "tests if the actual values of the target attribute and return the value of the property values for the given target attribute", "true": "how much of the variance is not explained by the regression", "bleu": 0.07832899330004497, "rouge": 0.19344608879492597}, {"predict": "the number of prefixes that have to be processed", "true": "this returns the number of available namespaces", "bleu": 0.2626909894424158, "rouge": 0.38364779874213834}, {"predict": "append a character sequence to this writer", "true": "append a character sequence to this writer", "bleu": 1.0, "rouge": 1.0}, {"predict": "get timestamp from timestamp", "true": "convert a timestamp to the string representation that <unk> will accept", "bleu": 0.06243769243378541, "rouge": 0.12298387096774194}, {"predict": "consume and remove the xml tag and remove special characters from the required data type", "true": "gets the value of an attribute and remove it from the list", "bleu": 0.14247788801610148, "rouge": 0.3779429987608426}, {"predict": "returns the copy of the specified byte array at the specified index", "true": "copy the contents of this <unk> to a byte array", "bleu": 0.16261701715194898, "rouge": 0.3696969696969697}, {"predict": "import a key into the import list", "true": "imports a key to the key chain", "bleu": 0.2626909894424158, "rouge": 0.42857142857142855}, {"predict": "creates a new connection group tree of relative to their root provided root", "true": "creates a new connection group tree using the given connection group as the tree root", "bleu": 0.3833468886791474, "rouge": 0.49364161849710986}, {"predict": "checks whether the given buffered reader contains the first character", "true": "determines if the given reader contains a single or multiple metrics", "bleu": 0.18876091382663038, "rouge": 0.37770897832817335}, {"predict": "add a button press to list", "true": "adds the button pressed listener", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "gets content from meta tag", "true": "gets content from meta tag", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the given columns", "true": "removes the given columns", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads in the config s and extracts the list of retrieving the formats and update the filters", "true": "read g 11 n settings service config data from sms", "bleu": 0.07223943354597204, "rouge": 0.07770700636942676}, {"predict": "refresh preferences - side keys for a specified context", "true": "read key mapping from default preferences for context", "bleu": 0.16784459625186196, "rouge": 0.35672514619883033}, {"predict": "adds types to pool list 4 types", "true": "add the types that are inherited by this class", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "multiply histogram by scalar", "true": "multiply histogram by scalar", "bleu": 1.0, "rouge": 1.0}, {"predict": "get and set the position of the mouse", "true": "paint it", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "adds new set of participants to given map of new participants", "true": "adds participants to all shared deployments", "bleu": 0.16108992769687397, "rouge": 0.3727087576374745}, {"predict": "convert a map to json text", "true": "convert a map to json text", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints the message and context", "true": "prints the message and context", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the number of method invoked so far", "true": "returns the number of method invoked so far", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method to associate request ids to shared preference keys", "true": "helper method to associate request ids to shared preference keys", "bleu": 1.0, "rouge": 1.0}, {"predict": "saves the post single manage name service", "true": "saves the post manage name id service", "bleu": 0.42728700639623407, "rouge": 0.8571428571428571}, {"predict": "generate true if the cloud page being used for the server that hasn ' t already been opened", "true": "attempts to start the play store activity for the update page of this app , and returns success or failure", "bleu": 0.09111634808754698, "rouge": 0.15641025641025638}, {"predict": "returns a handle denoting the class member identified by its scope", "true": "returns a handle denoting the class member identified by its scope", "bleu": 1.0, "rouge": 1.0}, {"predict": "conversion from java path to relative files", "true": "covert list of files to relative paths", "bleu": 0.2626909894424158, "rouge": 0.2857142857142857}, {"predict": "ensures that the security manager is currently in use to java packages to the configured system security manager", "true": "utility routine that sets a security manager if one isn ' t already present", "bleu": 0.09629943614188137, "rouge": 0.19182389937106917}, {"predict": "create a rate or picture field", "true": "get conversion rate", "bleu": 0.22089591134157885, "rouge": 0.2364341085271318}, {"predict": "performs interaction between client ' s https url connection and servers side ( server socket )", "true": "performs interaction between client ' s https url connection and servers side ( server socket )", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a engine id that is the engine type that is associated to the current engine", "true": "generates a unique engine id", "bleu": 0.10878661088699644, "rouge": 0.31551724137931036}, {"predict": "parses rule", "true": "parses rules xml file", "bleu": 0.27952792741962756, "rouge": 0.31443298969072164}, {"predict": "dispose of object , releasing resources", "true": "dispose of object , releasing resources", "bleu": 1.0, "rouge": 1.0}, {"predict": "find document element", "true": "encrypts the given ws s xml element in a given xml context document", "bleu": 0.02121188335455615, "rouge": 0.1123388581952118}, {"predict": "add an issue during transformation", "true": "add an issue during transformation", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts several nodes at ones", "true": "inserts node at given index", "bleu": 0.3021375397356768, "rouge": 0.4}, {"predict": "creates the ntl m hash of the user ' s password", "true": "creates the ntl m hash of the user ' s password", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if a given param name is one and one", "true": "helper method to check that a value is between 0 and 1 and display a warning if not", "bleu": 0.0745454141140315, "rouge": 0.2717149220489978}, {"predict": "substitutes parameter of property names", "true": "this method operates on the internal string representation of parameter values and replaces macro expressions of the form { macro name }", "bleu": 0.010083317678747487, "rouge": 0.13304252998909488}, {"predict": "x", "true": "x", "bleu": 1.0, "rouge": 1.0}, {"predict": "split the camel case strings of camel case", "true": "converts a name like \" output byte input table coding loop \" to a list of words : { \" output \" , \" byte \" , \" input \" , \" table \" , \" coding \" , \" loop \" }", "bleu": 0.0020187088821320334, "rouge": 0.03489702517162471}, {"predict": "use an x path string to select a nodelist", "true": "use an x path string to select a nodelist namespace prefix is resolved using the the specified context", "bleu": 0.36787944117144233, "rouge": 0.6288659793814433}, {"predict": "constructs a result file entry with the specified non - dominated population and auxiliary properties", "true": "constructs a result file entry with the specified non - dominated population and auxiliary properties", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates discovery declaration of marshalled instances", "true": "generates xml for locator s in the distributed system", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "creates a new type for a basic - typed type", "true": "instantiate s a new type instance", "bleu": 0.23462350320528, "rouge": 0.3927038626609442}, {"predict": "action listener interface - no p", "true": "close window ( or reload page if in debug mode )", "bleu": 0.08072686929338534, "rouge": 0.0}, {"predict": "apply all property values to variables", "true": "applies the properties without saving them", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "rotates the subtree so that its root ' s left child is the new root", "true": "rotates the subtree so that its root ' s right child is the new root", "bleu": 0.8153551038173115, "rouge": 0.9333333333333336}, {"predict": "adds a new node to the end of this node", "true": "add node to the group", "bleu": 0.23462350320528, "rouge": 0.42558139534883715}, {"predict": "check if a set exists and is a backup set", "true": "check to see if the given backup set already exists in the backup store", "bleu": 0.13225016524497193, "rouge": 0.40450928381962864}, {"predict": "extract an array of positional parameters", "true": "returns a value as a string array", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "write a string without compression", "true": "write a string without compression", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses a csv file from the supplied resource", "true": "returns a map of model accession to a threshold record", "bleu": 0.12489309605176803, "rouge": 0.10892857142857142}, {"predict": "shutdown the thread pool", "true": "shutdown all attached resources without waiting on the thread", "bleu": 0.14558246978804804, "rouge": 0.43160377358490565}, {"predict": "drawing a drawing point ( such as in it coordinates )", "true": "converts drawing coordinates to view coordinates", "bleu": 0.12605968092174913, "rouge": 0.2484725050916497}, {"predict": "adds a descriptor to the descriptor", "true": "add a setup descriptor", "bleu": 0.24446151121745047, "rouge": 0.4149659863945578}, {"predict": "tells whether cidr string is alive", "true": "check whether the cidr address contains the ip address", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "compiles a progress success action ( s ) , by { version } for the current s version", "true": "compiles a progress success action", "bleu": 0.24941747177008258, "rouge": 0.4841269841269842}, {"predict": "returns a string with all double values concatenated by a specified separator", "true": "returns a string with all float values concatenated by a specified separator", "bleu": 0.7611606003349892, "rouge": 0.9166666666666665}, {"predict": "put an unsigned byte into the specified byte buffer at the current position", "true": "put an unsigned byte into the specified byte buffer at the current position", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the number of the pra meters included in the given descriptor", "true": "returns the number of the pra meters included in the given descriptor", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a trie with infrequent values occurring in the given trie removed", "true": "optimize ( remove empty rows ) from the given trie and return the resulting trie", "bleu": 0.1666758520167017, "rouge": 0.21785714285714283}, {"predict": "has denied permission boolean", "true": "is all denied boolean", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "returns a key for all the col names", "true": "returns returns a key for all the col names , for better readability if the names got cut off", "bleu": 0.25283959580474646, "rouge": 0.5520361990950226}, {"predict": "creates a formatter by creating the formatter", "true": "completes this builder by creating the formatter", "bleu": 0.5169731539571706, "rouge": 0.5714285714285714}, {"predict": "wait for external \" external \" by inspecting java", "true": "synchronously waits for external store to be mounted ( eg : sd card )", "bleu": 0.10657503067399117, "rouge": 0.1673525377229081}, {"predict": "append a node on to the vector", "true": "append a node on to the vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "uploads local device to remote device", "true": "installs the given a pk on the device", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "reads an input stream into a list of byte values", "true": "reads an input stream into a list of byte values", "bleu": 1.0, "rouge": 1.0}, {"predict": "uninstall package and clear data of app silent by root", "true": "uninstall package and clear data of app silent by root", "bleu": 1.0, "rouge": 1.0}, {"predict": "opens an array object created outside the manager", "true": "opens a list for playback", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "adds the provided user friendly names", "true": "adds the provided user friendly names", "bleu": 1.0, "rouge": 1.0}, {"predict": "schedule a task for repeated fixed - rate execution after a specific time has been reached", "true": "schedule a task for repeated fixed - rate execution after a specific time has been reached", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests stepping through a range by one with a closure", "true": "tests stepping backwards through a reversed range with a closure", "bleu": 0.3264971028628052, "rouge": 0.8}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will check the digits before dot with the max precision allowed", "true": "this method will check the digits before dot with the max precision allowed", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method de serializes a string representation that is used to de serializes the xml node into a string", "true": "this method de serializes the supplied document", "bleu": 0.21314568971111156, "rouge": 0.4195323246217332}, {"predict": "append given name / value pairs as query parameters to the base url the params argument is interpreted as a sequence of name / value pairs so the given number of params must be divisible by 2", "true": "append given name / value pairs as query parameters to the base url the params argument is interpreted as a sequence of name / value pairs so the given number of params must be divisible by 2", "bleu": 1.0, "rouge": 1.0}, {"predict": "send an event to the agent", "true": "sends a message to the test runner agent", "bleu": 0.2238400777155271, "rouge": 0.4178082191780822}, {"predict": "applies the given map of j ms api objects to the given map of filters", "true": "it will create the j ms configurations", "bleu": 0.11633270842295028, "rouge": 0.291866028708134}, {"predict": "returns the next revision id", "true": "returns the next revision", "bleu": 0.7598356856515925, "rouge": 0.9070631970260222}, {"predict": "adds a selection column", "true": "add selection column to first tab", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "indexes the data values for the given field name for each tuple in the provided iterator", "true": "indexes the data values for the given field name for each tuple in the provided iterator", "bleu": 1.0, "rouge": 1.0}, {"predict": "close output stream without a exception", "true": "close output stream without a exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the specified listener to the internal list of listeners", "true": "adds the specified listener to the internal list of listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "methods for starting asynchronous execution", "true": "methods for starting asynchronous execution", "bleu": 1.0, "rouge": 1.0}, {"predict": "renames the file underlying this cache span to update its last access time", "true": "renames the file underlying this cache span to update its last access time", "bleu": 1.0, "rouge": 1.0}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "opens an associated file to the specified file", "true": "launches the associated application to open the file", "bleu": 0.20164945583740668, "rouge": 0.5}, {"predict": "converts a iso - time in iso : s s iso 8601 string to iso : s s iso / iso : s iso : mm : / iso : s iso : s iso / sec iso 8601 base time", "true": "converting iso 8601 formatted duration to normal readable time", "bleu": 0.04392487796991639, "rouge": 0.18087472201630836}, {"predict": "toggle the selection status of the item at a given position", "true": "toggle the selection status of the item at a given position", "bleu": 1.0, "rouge": 1.0}, {"predict": "map a char value to a byte array , replacing the value of the source codes with the same value and the same as the current is returned by the range", "true": "cannot map from a byte", "bleu": 0.055177848898164926, "rouge": 0.19162303664921465}, {"predict": "after rotating , the matrix needs to be translated", "true": "after rotating , the matrix needs to be translated", "bleu": 1.0, "rouge": 1.0}, {"predict": "invokes the wrapped producer method", "true": "invokes the wrapped producer method", "bleu": 1.0, "rouge": 1.0}, {"predict": "given a name - in - keyword it can be used to find bugs in the format used in the formatting of the given name", "true": "return a non - conflicting safe name if name is a ruby built - in", "bleu": 0.07903489857957884, "rouge": 0.2094420600858369}, {"predict": "adds the issue match er to the issue match er", "true": "creates a new issue match er and adds it to this match er", "bleu": 0.22211370348624584, "rouge": 0.5097493036211699}, {"predict": "builds key from annotation element", "true": "finds the scope for a bean producing declaration , either a method or a type", "bleu": 0.031069582040305195, "rouge": 0.0}, {"predict": "to do : use key actual implementation for lookup encryption / non - public key discovery implementation here", "true": "java wrapper for windows registry api reg open key ( )", "bleu": 0.07535838128770536, "rouge": 0.14420803782505912}, {"predict": "removes a property change listener from the listener list", "true": "remove the provided listener from the receiver", "bleu": 0.2626909894424158, "rouge": 0.38364779874213834}, {"predict": "the iterator indicates that the iterator was read", "true": "advances the iterator backwards , to the last boundary preceding this one", "bleu": 0.13755608571892394, "rouge": 0.28955696202531644}, {"predict": "creates a deferred image replaced by a specific image resource", "true": "creates a new image replaced element and scales it to the size specified if either width or height has a valid value ( values are > - 1 ) , otherwise original size is preserved", "bleu": 0.01792258406584776, "rouge": 0.20198675496688742}, {"predict": "determines whether a new compound name is a creature name", "true": "determines whether a compound name is a prefix of this compound name", "bleu": 0.395667833449618, "rouge": 0.7155425219941348}, {"predict": "creates a generic method binding based on the given method , which will sort the given method", "true": "create method of parameterized type , substituting original parameters with type arguments", "bleu": 0.07994607499472013, "rouge": 0.1423570595099183}, {"predict": "queue contains any ( empty ) returns result of null pointer , in c", "true": "invoke all ( c ) returns results of all completed tasks in c", "bleu": 0.15911783110981517, "rouge": 0.4474327628361858}, {"predict": "creates a new listener internal state listener", "true": "creates a new listener object", "bleu": 0.5169731539571706, "rouge": 0.6873239436619719}, {"predict": "output this text using the standard bitcoin messaging signing format ( e", "true": "sign a digest with this key", "bleu": 0.10390302174233558, "rouge": 0.1182170542635659}, {"predict": "creates time interval start time , start time + end time , start time , start time range )", "true": "creates time interval start time , end time ) if times are not null", "bleu": 0.33124989794664067, "rouge": 0.5607763023493361}, {"predict": "creates the process in the edit menu", "true": "create and return a new edit menu for this network panel", "bleu": 0.1380518455178974, "rouge": 0.2136602451838879}, {"predict": "removes the given listener from the list of listeners", "true": "removes the given listener from the list of listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "invoked by jun it comparison method to log ing the current model instance", "true": "called to update the current model keep every states", "bleu": 0.18798317647335086, "rouge": 0.37596302003081655}, {"predict": "parse a text representation of a json data structure", "true": "parse a text representation of a json data structure", "bleu": 1.0, "rouge": 1.0}, {"predict": "the number of parts in this multi part body", "true": "the number of parts in this multi part body", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate a simple database from a file definition", "true": "generate a simple double vector database from a file", "bleu": 0.5268058016461503, "rouge": 0.8148854961832059}, {"predict": "adds a filter to use from a file choose r", "true": "add filter ( s ) for possible types to the input file choose r", "bleu": 0.17405100568758053, "rouge": 0.40450928381962864}, {"predict": "request that the service is stopped", "true": "unbinds the in - app billing service", "bleu": 0.20693220168471366, "rouge": 0.3034825870646766}, {"predict": "returns null if there is nothing left", "true": "returns null if there is nothing left", "bleu": 1.0, "rouge": 1.0}, {"predict": "en coda un arch ivo a en una consult a en c big endian", "true": "me to do en car ga do de bor <unk> todos los usu a rios a soci a dos a un de <unk> do organo , <unk> y cuando <unk> organo se en cu <unk> en <unk> vi <unk> e", "bleu": 0.01887520346371118, "rouge": 0.1363128491620112}, {"predict": "add all the entries associated with the specified layers to the neuron", "true": "helper method for get in <unk> ate layers", "bleu": 0.10390302174233558, "rouge": 0.10374149659863945}, {"predict": "shift right ( in t n ) , n < 0", "true": "shift right ( in t n ) , n < 0", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate the mg rs mg rs coordinate from two double values by 2 + 1 , y 1 and interprets them to represent digits", "true": "<unk> norm : inverse gain normalization", "bleu": 0.042601467364417965, "rouge": 0.0}, {"predict": "below method calls proc find the parameters below the parameters below the u ac character", "true": "finds the first non - whitespace character starting at index", "bleu": 0.09103526405546068, "rouge": 0.1659863945578231}, {"predict": "reads the next encoded content from the encoded input stream", "true": "reads the next encoded content from the encoded input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new primitive object", "true": "creates an object that represents a primitive value of the type associated with the specified primitive wrapper object", "bleu": 0.025497712677716746, "rouge": 0.3156532988357051}, {"predict": "convenience method that creates a pair of related debits and credits for accrual based accounting", "true": "convenience method that creates a pair of related debits and credits for cash based accounting", "bleu": 0.8371170098777919, "rouge": 0.9333333333333336}, {"predict": "reads a sequence of bytes from this file into the given buffer", "true": "reads a sequence of bytes from this file into the given buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears all the time zone instances for message", "true": "clears the time portion of this calendar instance ; useful utility where it makes sense to compare month / day / year only <unk> of a calendar", "bleu": 0.02109490896474372, "rouge": 0.1561433447098976}, {"predict": "returns the probability distribution function", "true": "returns the probability distribution function", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts an integer to a string , and appends it to the given string buffer", "true": "converts an integer to a string , and appends it to the given buffer", "bleu": 0.8761560783209453, "rouge": 0.9715585893060297}, {"predict": "draw the 12 text values at the positions specified by the text grid parameters", "true": "draw the 12 text values at the positions specified by the text grid parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "test de bus queda active directory con atri but os", "true": "test de bus queda active directory con limit e", "bleu": 0.6786502681586726, "rouge": 0.7439024390243903}, {"predict": "handle key events from pressed state and add it to the input buffer", "true": "handle the input virtual key code and transition state , create event and add it to the input buffer", "bleu": 0.35099267907313186, "rouge": 0.6045589692765114}, {"predict": "gets a hash code value for this object", "true": "returns the hash code for the object", "bleu": 0.239802967618271, "rouge": 0.5398230088495575}, {"predict": "strips leading period , if string s", "true": "strips leading period from a string ( example : input - > \"", "bleu": 0.15513171017484098, "rouge": 0.3794712286158632}, {"predict": "check if the passed in directory is required to be present in the configuration data set", "true": "check if the passed in directory is required to be present in the configuration data set", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the instance of tls v 1 connection state", "true": "creates the instance of ssl v 3 connection state", "bleu": 0.4671379777282001, "rouge": 0.7777777777777778}, {"predict": "calculate matrix for fit center", "true": "calculate matrix for fit center", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method to clean up the labels no label are done in every label", "true": "removes empty labels and assigns ids to non - empty labels", "bleu": 0.09782375748961449, "rouge": 0.16353887399463804}, {"predict": "rotate theta degrees about the z axis", "true": "rotate theta degrees about the z axis", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert nanoseconds from timestamp - to an absolute date / time - endian date in the default timezone", "true": "convert a time in milliseconds in utc to the nanoseconds since midnight ( in the default timezone )", "bleu": 0.21951524426618454, "rouge": 0.3333333333333333}, {"predict": "perform an asynchronous max operation", "true": "perform an asynchronous max operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a default client / ip client object from username and password", "true": "create the https client , returns a balanced web resource that can be used the same way a web resource is", "bleu": 0.05431629412476774, "rouge": 0.05776515151515151}, {"predict": "creates a new array signature from the given type and the result count", "true": "creates a new type signature with the given amount of array nesting added to the given type signature", "bleu": 0.1913485368675879, "rouge": 0.43884892086330934}, {"predict": "prints the current line separator string on to the print stream", "true": "writes the new line text to the underlying writer", "bleu": 0.17033186037639278, "rouge": 0.4073455759599332}, {"predict": "increases the size of the buffer to make it exactly new size", "true": "increase the underlying buffer array in size , so that the new size is at least min size", "bleu": 0.10250745402459091, "rouge": 0.32172995780590713}, {"predict": "prints the split value with the current instances", "true": "creates split on enumerated attribute", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "determine whether it is loaded more", "true": "determine whether it is loaded more", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new worker only if there are no idle worker", "true": "add a new worker only if there are no idle worker", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the node at the head of the frontier , adds the corresponding state to the explored set , and returns the node", "true": "removes the node at the head of the frontier , adds the corresponding state to the explored set , and returns the node", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes a byte array into a string", "true": "base 64 encode the given data", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "creates a new bitmap based on the specified name and height", "true": "creates a bitmap font with the given arguments and places said font in the cache", "bleu": 0.12392699962742346, "rouge": 0.37423312883435583}, {"predict": "sometimes we have more memory used by platform mbe an exception if the memory pool is still as the platform dependent control", "true": "determines if the name of the memory pool mx bean provided matches a list of known <unk> pool names", "bleu": 0.12259149958656422, "rouge": 0.19773095623987033}, {"predict": "returns a simple string representation of the data set with the type and the number of entries", "true": "returns a simple string representation of the data set with the type and the number of entries", "bleu": 1.0, "rouge": 1.0}, {"predict": "execute the callable without trapping checked exceptions", "true": "directive for the compiler that the given callable should only be executed in the interpreter", "bleu": 0.06555660318294844, "rouge": 0.17062937062937064}, {"predict": "token ize s the given string into string tokens", "true": "token ize s the given string into string tokens", "bleu": 1.0, "rouge": 1.0}, {"predict": "a proxy selector should call this to add the protocol dispatch selector", "true": "creates a selector for a given protocol", "bleu": 0.1235622127262679, "rouge": 0.3315217391304348}, {"predict": "adds given line to the header", "true": "adds given line to the header", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to read the contents of the file and removes them from the input stream", "true": "reads an external skeleton file from a buffered reader", "bleu": 0.09103526405546068, "rouge": 0.17453505007153075}, {"predict": "detects the presence of genetic non - monogamy within an set of families", "true": "detects the presence of genetic non - monogamy within an set of families", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a va o for the scene", "true": "creates a va o for the scene", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method taking a file and return true if it has the given file content", "true": "returns boolean indicating whether this file contains the content value", "bleu": 0.09782375748961449, "rouge": 0.2489795918367347}, {"predict": "load up a char - based image from the given file", "true": "load up an image from the given file , where only the off character is known", "bleu": 0.2978481644474863, "rouge": 0.5017626321974148}, {"predict": "update the receipt status based on how to indicate that the receipt is still connected or receipt", "true": "when receipt is cancelled the status of the receipt in eg dm collected receipts is updated as cancelled", "bleu": 0.12260972614269759, "rouge": 0.2842497670083877}, {"predict": "adds an animation to the animation set", "true": "add animations to the target view", "bleu": 0.24446151121745047, "rouge": 0.31202046035805625}, {"predict": "if discovery fails , then mark the system as unreachable", "true": "if discovery fails , then mark the system as unreachable", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes the application data into ssl / tls record", "true": "encodes the application data into ssl / tls record", "bleu": 1.0, "rouge": 1.0}, {"predict": "if words are no longer in this words , the word set is words to determine the word of words", "true": "performs inti aliz ation of the scheme", "bleu": 0.06760229884571738, "rouge": 0.08111702127659574}, {"predict": "checks if a string exist in the data set", "true": "checks if string has a length in a certain range", "bleu": 0.19766634639198594, "rouge": 0.41709401709401706}, {"predict": "writes a file to the cf g directory and increments the resulting string", "true": "recursively listen for file system events in the specified path name", "bleu": 0.10571070857151538, "rouge": 0.16920943134535368}, {"predict": "this method was generated by the bat is generator", "true": "this method adds a new property criteria", "bleu": 0.18575057999133596, "rouge": 0.2557651991614256}, {"predict": "remove the column represented by the column", "true": "remove the column represented by its name", "bleu": 0.6803749333171202, "rouge": 0.7142857142857143}, {"predict": "check un managed protection set exists in db", "true": "check un managed protection set exists in db", "bleu": 1.0, "rouge": 1.0}, {"predict": "put string to byte", "true": "put string to byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks query to this query", "true": "runs query check result", "bleu": 0.2730120862709067, "rouge": 0.22676579925650556}, {"predict": "atomic ally updates the current value with the results of applying the given function , returning the updated value", "true": "atomic ally updates the current value with the results of applying the given function , returning the updated value", "bleu": 1.0, "rouge": 1.0}, {"predict": "as the activity with the delegate", "true": "close the window immediately and cleanup", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "checks if the utilized service is enabled", "true": "figure out if this data service is considered to be highly utilized , in which case the ds should shed some index partitions", "bleu": 0.0295661577390703, "rouge": 0.18245264207377865}, {"predict": "generates a public key instance from a string containing the base 64 - encoded public key", "true": "generates a public key instance from a string containing the base 64 - encoded public key", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method converts the arguments passed in message format to a command line", "true": "converts all throw able arguments to its message if the message is not null", "bleu": 0.11640435130573178, "rouge": 0.2207478890229192}, {"predict": "\" wrap content layout , split the text view into its bounds ( e", "true": "utility method computing the size of the widget if dimensions are set to wrap content , using the default font", "bleu": 0.08610687344222073, "rouge": 0.22803738317757008}, {"predict": "creates a new directory , including the named location", "true": "create a new <unk> directory for the named location", "bleu": 0.32466791547509893, "rouge": 0.6666666666666666}, {"predict": "adds a \" minutes \" pair \" minutes \" or \" values \" to \" list \" list \"", "true": "if \" minutes \" is not currently present in \" values \" , we add an appropriate new entry to values and labels", "bleu": 0.14520736296348924, "rouge": 0.32770529547198773}, {"predict": "re compose the top level variable and parameter declarations", "true": "re compose the top level variable and parameter declarations", "bleu": 1.0, "rouge": 1.0}, {"predict": "invoked when a property is made", "true": "this method gets called when a bound property is changed", "bleu": 0.1876823093652809, "rouge": 0.47843137254901963}, {"predict": "sorts the array of values , in ascending order", "true": "clone and sort the array , if not already sorted", "bleu": 0.17861170664603615, "rouge": 0.31282051282051276}, {"predict": "execute update based on the sql statement given", "true": "execute update based on the sql statement given", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse the normal text and return the hastings ratio", "true": "add some text to the page", "bleu": 0.15619699684601276, "rouge": 0.27664399092970515}, {"predict": "initializes java", "true": "initialize , download the regex info into cache", "bleu": 0.031811104014284386, "rouge": 0.0}, {"predict": "adds the given indices ( index , index ) to the end of the list", "true": "adds the given indices", "bleu": 0.22894156860669912, "rouge": 0.4701348747591522}, {"predict": "loads the models contents of the given input stream", "true": "load object definitions from json stream", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "for the reduction of location path parts , create a list of all the multi step paths with more than one step , sorted by the number of steps , with the most steps occur ing earlier in the list", "true": "for the reduction of location path parts , create a list of all the multi step paths with more than one step , sorted by the number of steps , with the most steps occur ing earlier in the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "decode word suffix for each quantization boundary", "true": "add weighting coefficients to the decoded word - length information", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "update functionality test 2 # test update 3 ( )", "true": "update functionality test 2 # test update 3 ( )", "bleu": 1.0, "rouge": 1.0}, {"predict": "java x", "true": "prune away exceptional out edges that are not reachable given this block ' s instructions", "bleu": 0.0009606121050066008, "rouge": 0.0}, {"predict": "transforms two - d query rows and returns the corresponding ordering", "true": "run a single iteration of the <unk> - <unk> modeling step", "bleu": 0.12605968092174913, "rouge": 0.09090909090909091}, {"predict": "returns the text matched by the current regular expression", "true": "returns the text matched by the current regular expression", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method that will cleans up mini and try to upload all mini dump jobs and try to file", "true": "mark file we just uploaded for cleanup later", "bleu": 0.06439931429457924, "rouge": 0.0799475753604194}, {"predict": "convert everything in original space to a string representation", "true": "return a spaced fingerprint representation of this hex digest", "bleu": 0.15619699684601276, "rouge": 0.2222222222222222}, {"predict": "parse content type value to b", "true": "parse the content type in the provided bytes", "bleu": 0.2238400777155271, "rouge": 0.4178082191780822}, {"predict": "the akka actor callback method", "true": "no cache for de serialized strings , each string is an own instance", "bleu": 0.04635036983311895, "rouge": 0.0}, {"predict": "decode the base 64 encoded string data writing it to the given output stream , whitespace characters will be ignored", "true": "decode the base 64 encoded string data writing it to the given output stream , whitespace characters will be ignored", "bleu": 1.0, "rouge": 1.0}, {"predict": "set the beginning of the next contour relative to the last point ( x , y )", "true": "same as line to , but the coordinates are considered relative to the last point on this contour", "bleu": 0.27610135543351616, "rouge": 0.34109972041006525}, {"predict": "parses standard functions and returns them", "true": "outputs the conflicts found in the work space in the following format : t fs test 01 / add fold / tes there 2 : the item content has changed t fs test 01 / test add", "bleu": 0.001059437534388879, "rouge": 0.0}, {"predict": "write the start data to the output stream", "true": "write the start to the specified output stream", "bleu": 0.4032989116748133, "rouge": 0.875}, {"predict": "add q ty to actual q ty", "true": "add to actual q ty", "bleu": 0.5410822690539396, "rouge": 0.8591549295774649}, {"predict": "determines if a character is a vowel", "true": "is the character a vowel ?", "bleu": 0.2777619034011791, "rouge": 0.4680306905370844}, {"predict": "creates one buffer for the camera preview callback", "true": "creates one buffer for the camera preview callback", "bleu": 1.0, "rouge": 1.0}, {"predict": "submits task to execution pool", "true": "submits task to execution pool", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints the stack trace to the specified print writer", "true": "print the stack trace for a sql exception to a specified print writer", "bleu": 0.25186505044536794, "rouge": 0.6161616161616162}, {"predict": "initializes entity with annotations and prepares them with prepares attributes", "true": "creates game objects and adds them to the world", "bleu": 0.13950796967929133, "rouge": 0.21254355400696867}, {"predict": "read data - - input the mod bus message from d in", "true": "read data - - input the mod bus message from d in", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the element at the specified position in this list", "true": "removes the element at the specified position in this list", "bleu": 1.0, "rouge": 1.0}, {"predict": "create edges for this demo graph", "true": "create edges for this demo graph", "bleu": 1.0, "rouge": 1.0}, {"predict": "uses the request to let the request if necessary and makes the attributes for the request if there is bing generated for the request", "true": "uses the pagination parameters form the request and makes sure to order the result and set all pagination attributes for the response to render", "bleu": 0.14757581190431865, "rouge": 0.4166666666666667}, {"predict": "builds a single row of components in the panel", "true": "builds a single row of components in the panel", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds additional target elements", "true": "adds additional target elements", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a curve to the shape", "true": "adds a cubic curve to the be zi er path", "bleu": 0.2231931376573339, "rouge": 0.47843137254901963}, {"predict": "divide : rounding mode is round up , result is negative", "true": "divide : rounding mode is round up , result is negative", "bleu": 1.0, "rouge": 1.0}, {"predict": "write metadata to in et address", "true": "write meta bits must be called after all allocations have been made , the last one being the allocation for the meta bits themselves ( allowing for an extension ! )", "bleu": 0.0034247378700595797, "rouge": 0.04818325434439179}, {"predict": "it opens the counter binary file for writing", "true": "create a stream to read from the counter file", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "create a new composite predicate", "true": "create a new composite predicate", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next word in the stream", "true": "read the next word from the parsed sentence", "bleu": 0.31689174383082924, "rouge": 0.5269978401727862}, {"predict": "append a string to the output stream", "true": "provides a java string literal representing the parameter string", "bleu": 0.16599826150636804, "rouge": 0.3667334669338677}, {"predict": "determine if a file or directory exists", "true": "determine if a file or directory exists", "bleu": 1.0, "rouge": 1.0}, {"predict": "for use in subclasses to build the 1 data structure for use in the database", "true": "method that generates all large item sets with a minimum support , and from these all association rules with a minimum metric ( i", "bleu": 0.0379623119344524, "rouge": 0.0}, {"predict": "float value of a negative big decimal", "true": "float value of a negative big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "replaces the very first occurrence of a substring with supplied string", "true": "replaces the very first occurrence of a substring with supplied string", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an object to method ize", "true": "add the name of the class to method ize", "bleu": 0.26367153725164694, "rouge": 0.5147679324894514}, {"predict": "return the first child element returns the first element", "true": "return the first child element returns the first element", "bleu": 1.0, "rouge": 1.0}, {"predict": "main entry point for the application", "true": "the main program for the html test class", "bleu": 0.2238400777155271, "rouge": 0.4178082191780822}, {"predict": "returns the hash code for the object", "true": "returns the hash code for the raw string", "bleu": 0.7289545183625967, "rouge": 0.7904967602591793}, {"predict": "tests the functionality of the method , which allows to add all helper text colors , which are contained by a collection", "true": "tests the functionality of the method , which allows to add all helper text colors , which are contained by an array", "bleu": 0.9067110266941047, "rouge": 0.9090909090909091}, {"predict": "applies max norm to the histogram", "true": "applies max norm to the histogram", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a graphic to the overlay", "true": "adds a graphic to the overlay", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes to a file", "true": "writes the given message to the specified file", "bleu": 0.1571901051328651, "rouge": 0.47164948453608246}, {"predict": "gets the hash code for the message specified", "true": "returns the hash code for this image type specifier", "bleu": 0.3938792067159195, "rouge": 0.465648854961832}, {"predict": "returns a random number between start ( inclusive ) and end ( exclusive )", "true": "returns a random number between start ( inclusive ) and end ( inclusive )", "bleu": 0.8666415730847504, "rouge": 0.9285714285714285}, {"predict": "writes a input stream ' s contents", "true": "writes the given bytes", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "returns a configuration that returns whether this config has been changed to be used to use cases and level", "true": "handles updating the system locale", "bleu": 0.05415315253510895, "rouge": 0.0}, {"predict": "find the edge in the directed edges of a set of edges", "true": "look for a convex polygon at the specified edge", "bleu": 0.1235622127262679, "rouge": 0.19551282051282048}, {"predict": "retrieve an key map instance by its key", "true": "retrieve an key map instance by its key", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if name is fully qualified from admin", "true": "tells if a offset or time zone is gmt", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "transforms a string that represents a uri into something more proper , by adding or canonical i zing the protocol", "true": "transforms a string that represents a uri into something more proper , by adding or canonical i zing the protocol", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the mapping from the specified key , if there was any", "true": "removes the mapping from the specified key , if there was any", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the contents of the argument to the given string builder", "true": "called while highlighting a single result , to append the whole matched token to the provided fragments list", "bleu": 0.08525093891846419, "rouge": 0.1982665222101842}, {"predict": "starts this thread , should be called immediately after the standard time has been started", "true": "start the timer to make sure processing doesn ' t take too long", "bleu": 0.08225964699966554, "rouge": 0.07236061684460261}, {"predict": "create a single row from a table", "true": "extract a single row from a table", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "creates a space string from a source string", "true": "removes all characters contained in provided string", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "adds all the columns in the database", "true": "adds all available table columns to the query as generated keys", "bleu": 0.15685718045401453, "rouge": 0.4273204903677758}, {"predict": "loads the token frequencies from the database", "true": "loads the token frequencies from the database", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies all bytes from the specified input stream to the target output stream", "true": "copy the input stream to the output stream", "bleu": 0.3161487584488943, "rouge": 0.696574225122349}, {"predict": "test for boolean typed ( s ) method testing", "true": "test for verifying jackson - 72", "bleu": 0.18575057999133596, "rouge": 0.27664399092970515}, {"predict": "copies new form component to empty form", "true": "creates a copy of the given component and its hierarchy", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "compute the zeta constant needed for the distribution", "true": "compute the zeta constant needed for the distribution", "bleu": 1.0, "rouge": 1.0}, {"predict": "values in the next operation order , apply the next call to the next payment bar", "true": "the method return big decimal", "bleu": 0.07692375026049747, "rouge": 0.10517241379310344}, {"predict": "this loads the profile of the user", "true": "loads the user profile", "bleu": 0.3073940764756322, "rouge": 0.5736677115987461}, {"predict": "called by the listener", "true": "scroll the selected item", "bleu": 0.35930411196308426, "rouge": 0.25}, {"predict": "generates a device - and invocation - specific seed to be mixed into the linux prng", "true": "generates a device - and invocation - specific seed to be mixed into the linux prng", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines whether the text of a symbol represents a single - character , an ipv 6 identifier or a quotes that are within a single character", "true": "determines whether the text of a symbol requires ( single ) quotes", "bleu": 0.2657251941599823, "rouge": 0.5073937153419593}, {"predict": "parses a long counter from the exported filename and extension", "true": "parse out the commit counter from the file name", "bleu": 0.23462350320528, "rouge": 0.31881533101045295}, {"predict": "loads a xml document from a file and returns the corresponding dom document", "true": "loads a xml document from a file and returns the corresponding dom document", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new value of the node", "true": "returns a new comment attached to an empty node", "bleu": 0.27470644934024185, "rouge": 0.48897795591182364}, {"predict": "refer the same api in assignment service", "true": "returns true if the given employee is an hod", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "build a single m unger that only contains some languages", "true": "build a m unger that will load only a single label per entity", "bleu": 0.23485664728271463, "rouge": 0.5097493036211699}, {"predict": "\" / jar file or a url that represents an \" archive \"", "true": "returns an array of stat values that match the specified spec", "bleu": 0.10571070857151538, "rouge": 0.08460471567267684}, {"predict": "assigns a cluster and its children to this node", "true": "recursively assigns numbers to the nodes in the tree", "bleu": 0.15619699684601276, "rouge": 0.2222222222222222}, {"predict": "closes the current path , called by the path of the path ( if any ) and path back to the end line", "true": "close the current sub path by appending a straight line from the current point to the sub path ' s starting point", "bleu": 0.10414419091986518, "rouge": 0.3123628383321141}, {"predict": "instantiate s a new tv show episode scrape task", "true": "instantiate s a new tv show episode scrape task", "bleu": 1.0, "rouge": 1.0}, {"predict": "save selection & return selection query or \" \"", "true": "save selection & return se lec ion query or \" \"", "bleu": 0.5269148435889403, "rouge": 0.7858293075684382}, {"predict": "creates a model mbe an notification info object", "true": "constructs a model mbe an notification info object with a default descriptor", "bleu": 0.5236421927181384, "rouge": 0.6756329113924051}, {"predict": "release a task that was completed", "true": "clean - up all resources and files allocated for the given build task", "bleu": 0.06878769894132081, "rouge": 0.09870550161812298}, {"predict": "create a temporary directory that is a child of the given directory", "true": "create a temporary directory that is a child of the given directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the host uri , as a string", "true": "return the host uri , as a string", "bleu": 1.0, "rouge": 1.0}, {"predict": "move this center to the center and create the crop variables", "true": "performs a translation so the center of this bounding box will be at ( lon center | lat center )", "bleu": 0.07515606632432709, "rouge": 0.18391959798994972}, {"predict": "call send event to be tracked by the server that should be tracked", "true": "call send event to track an occurrence of a named event", "bleu": 0.26584835766658776, "rouge": 0.33841886269070737}, {"predict": "handles a column pressed event of the get ter table", "true": "tell the table something is pressed", "bleu": 0.14991106946711685, "rouge": 0.26180257510729615}, {"predict": "creates a fixed records for a fixed amount of records", "true": "create a list of count 16 - byte records", "bleu": 0.14991106946711685, "rouge": 0.31881533101045295}, {"predict": "adds the attributes not already present in the list of attributes not exist in the map", "true": "add the given attributes to this params if they are not already present", "bleu": 0.15844501337268932, "rouge": 0.35138248847926273}, {"predict": "re compose the attribute - set declarations", "true": "re compose the attribute - set declarations", "bleu": 1.0, "rouge": 1.0}, {"predict": "splits the given string using the given regex as delimiters", "true": "splits the given string using the given regex as delimiters", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the directory contents , word , ,", "true": "deletes the backed - up db directory", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "specialized version of find to get last valid node", "true": "specialized version of find to get last valid node", "bleu": 1.0, "rouge": 1.0}, {"predict": "invoked to pass stream data", "true": "invoked to pass stream data", "bleu": 1.0, "rouge": 1.0}, {"predict": "counts the size of a directory recursively ( sum of the length of all files )", "true": "counts the size of a directory recursively ( sum of the length of all files )", "bleu": 1.0, "rouge": 1.0}, {"predict": "pans the view provided by this display in absolute ( i", "true": "pans the view provided by this display in absolute ( i", "bleu": 1.0, "rouge": 1.0}, {"predict": "after serialization spec s can de serialization", "true": "verifies that serialization preserves equals and hash code", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "returns the url of the product wiki page", "true": "returns the url of the product wiki page", "bleu": 1.0, "rouge": 1.0}, {"predict": "called to notify that a consumption has finished", "true": "called to notify that a consumption has finished", "bleu": 1.0, "rouge": 1.0}, {"predict": "build the mean of all elements in a list", "true": "gets the average from a list of numbers", "bleu": 0.21105340631872635, "rouge": 0.35672514619883033}, {"predict": "convert a byte array to a hexadecimal string", "true": "convert a byte array to hexadecimal", "bleu": 0.6104735835807844, "rouge": 0.8798076923076923}, {"predict": "initializes an input stream from a url", "true": "initializes an input stream from a url", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds all pending events in a batch to be added to in view after testing", "true": "removes the enable full screen run n able from the ui queue and runs it immediately", "bleu": 0.06471074162236759, "rouge": 0.0}, {"predict": "converts a string from a html entity", "true": "find the html entity and convert it back to a regular character if the entity exists , otherwise return the same string", "bleu": 0.032586794879778176, "rouge": 0.1261633919338159}, {"predict": "writes vector of opaque values", "true": "writes vector of opaque values", "bleu": 1.0, "rouge": 1.0}, {"predict": "unlock user interface", "true": "unlock user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "build a map of uri to cached storage system for the underlying arrays", "true": "build a map of uri to cached storage system for the underlying arrays", "bleu": 1.0, "rouge": 1.0}, {"predict": "password based encryption using aes - cbc 256 bits", "true": "password based encryption using aes - cbc 256 bits", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns strongest measurement for each wi fi within bounding box from t bl w if is", "true": "gets w if is by bs sid", "bleu": 0.1431712315455507, "rouge": 0.28067484662576686}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "called when the kit is being removed from the j editor pane", "true": "de installs the editor for the kit", "bleu": 0.15537125692760353, "rouge": 0.22101449275362317}, {"predict": "actions a pull event", "true": "actions a pull event", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true in case work flow a secure cipher", "true": "check if sip transport uses tls", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "the sample function need to initialize the sample data and updates the total number of move statements to the sample buffer", "true": "keep a record as a sample , with certain probability", "bleu": 0.05809665204409193, "rouge": 0.06892655367231638}, {"predict": "prepares a cop rhd create open domain for given open stack", "true": "prepares tenant create param class filled with information from given tenant", "bleu": 0.1354599427337814, "rouge": 0.2727272727272727}, {"predict": "draws a special highlighted layer as defined in user for the current page", "true": "call this function to draw the node highlighted", "bleu": 0.10571070857151538, "rouge": 0.09951060358890701}, {"predict": "return a new image encoded as a string", "true": "used to retrieve an image encoder for a specific image format", "bleu": 0.12197601375336842, "rouge": 0.20469798657718125}, {"predict": "use for apply pinch zoom functionality to your image view", "true": "use for apply pinch zoom functionality to your image view", "bleu": 1.0, "rouge": 1.0}, {"predict": "empirical unconditional hilbert - schmidt dependence measure for x and y using incomplete c hole sky decomposition to approximate gram matrices", "true": "empirical unconditional hilbert - schmidt dependence measure for x and y given z using incomplete c hole sky decomposition to approximate gram matrices", "bleu": 0.8379990355241307, "rouge": 0.9467849223946784}, {"predict": "parses a string option , uses default if option is missing", "true": "parses a file option , uses default if option is missing", "bleu": 0.7691605673134586, "rouge": 0.9090909090909091}, {"predict": "are the lines ; return true for the current lines", "true": "are the lines accounting balanced", "bleu": 0.23462350320528, "rouge": 0.42558139534883715}, {"predict": "increases the capacity to ensure that it can hold at least the number of elements specified by this vector ' s capacity to allocate additional capacity argument", "true": "ensures that the receiver can hold at least the specified number of elements without needing to allocate new internal memory", "bleu": 0.24180681260144146, "rouge": 0.48100358422939066}, {"predict": "get base matching base name", "true": "get the name of the message bundle to use when getting the message for the specified method", "bleu": 0.027409299216719144, "rouge": 0.1655359565807327}, {"predict": "closes all buffers for the current writer and releases any resources associated with this stream", "true": "do all required cleanup now that we ' re finished with the currently - open", "bleu": 0.09782375748961449, "rouge": 0.1333333333333333}, {"predict": "attempt to acquire the specified lock", "true": "locks the queue for read / write access", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "creates a statement interceptor to monitor query response times", "true": "creates a statement interceptor to monitor query response times", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a so lr response from the server", "true": "deletes a so lr document with the given id", "bleu": 0.2785146580372046, "rouge": 0.465648854961832}, {"predict": "prepare for the open file", "true": "lets the user select a props file for changing the database connection parameters", "bleu": 0.06554932163900559, "rouge": 0.20573355817875214}, {"predict": "this method is used to load the oauth client from the request client", "true": "load client object client details entity", "bleu": 0.1135935489027116, "rouge": 0.3382624768946396}, {"predict": "adds the named field property backed by the named access or message", "true": "adds the named event property backed by the named access or field", "bleu": 0.6850836912969523, "rouge": 0.8333333333333334}, {"predict": "parses wildcard pattern into segments", "true": "this method parses the given pattern into segments seperated by wildcard ' * ' characters", "bleu": 0.07610462252028802, "rouge": 0.3669172932330827}, {"predict": "returns a map of the environment variables used by the context ' s current", "true": "encodes the baggage to strings to set as environment variables , which will then be picked up in a child process", "bleu": 0.08017090493873653, "rouge": 0.1654611211573237}, {"predict": "the graphical representation of a series", "true": "the graphical representation of a series", "bleu": 1.0, "rouge": 1.0}, {"predict": "listen for the username , j dk 1", "true": "start receiving the mod log for the given channel ( username )", "bleu": 0.13755608571892394, "rouge": 0.28955696202531644}, {"predict": "returns true if the given class name is a valid class name", "true": "return whether or not the given class name is valid", "bleu": 0.39553325358771796, "rouge": 0.5545454545454546}, {"predict": "access time for fast", "true": "corrects the loco net fast clock", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "determine if a data collection is needed for a data collection schedule", "true": "if the job is in progress , don ' t schedule the job", "bleu": 0.11368272367804307, "rouge": 0.23828125000000006}, {"predict": "remove a break point from the set of breakpoints", "true": "remove the given set of breakpoints", "bleu": 0.2907153684841096, "rouge": 0.6916099773242631}, {"predict": "replaces the rd n values of a l dap name", "true": "replaces an existing template", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "read resolve resolve service un serialized forms the listener queue can be read from a stream , logging for this errors and the read from the connection changes them as a registered as a reflective invocation", "true": "un marshals the event listener", "bleu": 0.03985677924984255, "rouge": 0.16944444444444443}, {"predict": "adds the specified item to this list model", "true": "adds the specified item to this list model", "bleu": 1.0, "rouge": 1.0}, {"predict": "using some super basic byte array & lt ; - & gt ; hex conversions so we don ' t have to rely on any large base 64 libraries", "true": "using some super basic byte array & lt ; - & gt ; hex conversions so we don ' t have to rely on any large base 64 libraries", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new cluster from the volume", "true": "creates a new cluster server definition", "bleu": 0.5169731539571706, "rouge": 0.6240409207161125}, {"predict": "create a positive number from a sign and an array of bytes", "true": "create a positive number from a sign and an array of bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "minimal stage", "true": "minimal completion stage returns a comp let able future that is completed normally , with the same value , when source is", "bleu": 3.817663819004394e-05, "rouge": 0.14489311163895488}, {"predict": "write directory post resource", "true": "write directory post resource", "bleu": 1.0, "rouge": 1.0}, {"predict": "trim the array to the required size", "true": "trim the array to the required size", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a potion id string id to the potion name", "true": "converts a vanilla potion id to an equivalent buk kit potion type", "bleu": 0.1996408066914521, "rouge": 0.5366568914956013}, {"predict": "removes curl mesh to this render er", "true": "removes curl mesh from this render er", "bleu": 0.5, "rouge": 0.8571428571428571}, {"predict": "return a list of the pattern into a list of strings", "true": "select pro samples from a single instance", "bleu": 0.11390778025531027, "rouge": 0.1157495256166983}, {"predict": "helper method to send run n able into local handler loop", "true": "helper method to send run n able into local handler loop", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether this periodic run n able is closed", "true": "check whether this map is closed", "bleu": 0.23356898886410005, "rouge": 0.5532879818594103}, {"predict": "inserts a plain time into the script", "true": "does something to insert think time into the script", "bleu": 0.38849358632832764, "rouge": 0.48897795591182364}, {"predict": "copies stream , fires progress events by listener , can be interrupted by listener", "true": "copies stream , fires progress events by listener , can be interrupted by listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a instruction to the instruction list", "true": "add new node and set prev instruction pointing to this instruction", "bleu": 0.1247439242120089, "rouge": 0.32049036777583184}, {"predict": "ensures that the capacity of the buffer is at least equal to the specified minimum", "true": "ensure the buffer can hold at least ' minimum capacity ' bytes", "bleu": 0.14807582680058126, "rouge": 0.3779429987608426}, {"predict": "removes the provided user friendly name", "true": "removes the provided user friendly name", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts input stream to byte array", "true": "reads json api spec document and converts it into collection of target type objects", "bleu": 0.05822753005110548, "rouge": 0.09327217125382263}, {"predict": "add given timer to the given head of the list", "true": "add a targeting by a swarm <unk> from a specified entity", "bleu": 0.11406351620367239, "rouge": 0.09442724458204334}, {"predict": "checks if a checkpoint exists", "true": "checks specified checkpoint existing", "bleu": 0.3021375397356768, "rouge": 0.4535315985130111}, {"predict": "constructs an om raster , using an image icon", "true": "create an om raster , lat / lon placement with an image icon", "bleu": 0.33686462129547456, "rouge": 0.6161616161616162}, {"predict": "locate the vertices and the code words area of a black blob using the start and stop patterns as locator s", "true": "locate the vertices and the code words area of a black blob using the start and stop patterns as locator s", "bleu": 1.0, "rouge": 1.0}, {"predict": "copy all content from the z k to the target stream", "true": "copy from one stream to another", "bleu": 0.14323145079400493, "rouge": 0.3727087576374745}, {"predict": "writes the header to the log file", "true": "writes the catalog , doc info , preferences , and ( as we use only single page output the page tree", "bleu": 0.03555135945989538, "rouge": 0.19656283566058}, {"predict": "parses a \" \" \" \" xml \" character \"", "true": "parses a \" normal string \"", "bleu": 0.24808415001701817, "rouge": 0.5236051502145923}, {"predict": "code to do appropriate code that we want to do so we write the primitive type", "true": "generate code for <unk> a return value of the given type from the invocation handler ' s \" invoke \" method ( as type object ) to its correct type", "bleu": 0.04032160210969999, "rouge": 0.12364864864864866}, {"predict": "formats a string for more parts as a single line", "true": "formats a link , given an array of tokens", "bleu": 0.16590387014219712, "rouge": 0.21254355400696867}, {"predict": "constructs a new json exception with the specified cause", "true": "constructs a new json exception with the specified cause", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the jar xml 1 is contained in a sample root", "true": "this will check an array of <unk> , determine if they exist and determine that it has either the permissions <unk> , <unk> , or <unk>", "bleu": 0.03235573594503184, "rouge": 0.04935275080906149}, {"predict": "initializes the patterns by using the correct patterns of the patterns", "true": "performs inti aliz ation of the scheme", "bleu": 0.14991106946711685, "rouge": 0.2314990512333966}, {"predict": "returns directories as array", "true": "list the directories contained within a directory", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "adds the string representation for this text edit and its children to the given string buffer", "true": "adds the string representation for this text edit and its children to the given string buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes an arbitrary number of bytes as a power of takes an integer value", "true": "writes a vl q encoded value to the provide append able", "bleu": 0.09782375748961449, "rouge": 0.16353887399463804}, {"predict": "convenience method to cycle through cell recursively and rules", "true": "removes and returns the given overlay from the given cell", "bleu": 0.1397712139461423, "rouge": 0.10427350427350426}, {"predict": "removes the given foreign key from the list", "true": "removes the indicated foreign key", "bleu": 0.2653856085536222, "rouge": 0.6421052631578947}, {"predict": "inserts the string representation of the second in t argument into this string buffer", "true": "inserts the string representation of the second in t argument into this string buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds extra mouse is moved", "true": "adds a ge fa e hr dung to the list of all ge fa e hr dung en if ge fa e hr dung not already exits", "bleu": 0.0033518621807937647, "rouge": 0.05560619872379216}, {"predict": "mangles the path into a class path", "true": "converts any relative class path references to the full path", "bleu": 0.18094495256969623, "rouge": 0.22803738317757008}, {"predict": "create a sequence containing one object", "true": "create a sequence containing one object", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the value of the first cluster that is correct ( x , y )", "true": "power function", "bleu": 0.06917184228205472, "rouge": 0.0}, {"predict": "append a node on to the vector", "true": "append a node on to the vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a node conversion of this node as list of known characters in list of known characters ( see list i", "true": "convert the input node to string type , if it isn ' t already", "bleu": 0.05809665204409193, "rouge": 0.05928085519922254}, {"predict": "update functionality test 2 # test update 7 ( )", "true": "update functionality test 2 # test update 7 ( )", "bleu": 1.0, "rouge": 1.0}, {"predict": "this service is used to read historical values or events of one or more nodes", "true": "this service is used to read historical values or events of one or more nodes", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures that the uri is valid", "true": "check that the vm identifier includes a unique numerical identifier for the target jvm", "bleu": 0.07663173913867023, "rouge": 0.18654434250764526}, {"predict": "called before the thread after exiting the iterator state", "true": "stream will close after the already written bytes are read", "bleu": 0.1397712139461423, "rouge": 0.20854700854700853}, {"predict": "writes the address to the world for a real memory", "true": "adjusts the offset by the header size , such that writing to a zero offset would not <unk> the header", "bleu": 0.05831317976915938, "rouge": 0.18865979381443299}, {"predict": "an internal entity declaration", "true": "an internal entity declaration", "bleu": 1.0, "rouge": 1.0}, {"predict": "callback never made for authorization", "true": "returns true if a given log record should be published", "bleu": 0.08445588027797912, "rouge": 0.0}, {"predict": "returns the next element in the array", "true": "move to next element in the array", "bleu": 0.6803749333171202, "rouge": 0.7142857142857143}, {"predict": "use it if you need to add a multiple messages", "true": "use it if you need to add a multiple messages", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an instance of this group element", "true": "called for the first denied permission if there is need to show the rational", "bleu": 0.057461663912368725, "rouge": 0.0}, {"predict": "constructs a generic principal with the given parameters and snapshot", "true": "construct a new principal for the specified username and password , with the specified role names ( as strings )", "bleu": 0.0725804295617984, "rouge": 0.2515463917525773}, {"predict": "returns whether the specified object equals to this instance", "true": "returns whether the specified object equals to this instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "adjusted i to roll back together", "true": "simulates rolling a dice with 6 sides", "bleu": 0.15723447135049806, "rouge": 0.0}, {"predict": "rounds the octet - bit unpacked gsm alphabet for the alphabet - bit gsm alphabet", "true": "convert a list of <unk> values into an octet stream , with a number of empty bits at the start", "bleu": 0.06522961706209021, "rouge": 0.11141552511415523}, {"predict": "creates a new instance of circles on a frame", "true": "creates a new panel object", "bleu": 0.2626909894424158, "rouge": 0.4518518518518518}, {"predict": "returns the height at the given index in the list of marker places", "true": "return marker height given index", "bleu": 0.14283632578659286, "rouge": 0.36237623762376237}, {"predict": "consumes the state of a named map , possibly handles and keys", "true": "use the supplied function to asynchronously consume messages from the cluster", "bleu": 0.10390302174233558, "rouge": 0.08764367816091953}, {"predict": "calculates the distance ( or similarity ) between two instances", "true": "calculates the distance ( or similarity ) between two instances", "bleu": 1.0, "rouge": 1.0}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "to do : this chaining can be slow at query execution", "true": "to do : this chaining can be slow at query execution", "bleu": 1.0, "rouge": 1.0}, {"predict": "copy a request to an implementation for a connection", "true": "re - creates the full text index for this database", "bleu": 0.1262975489687145, "rouge": 0.10427350427350426}, {"predict": "debugging : dot representation of this graph", "true": "debugging : dot representation of this graph", "bleu": 1.0, "rouge": 1.0}, {"predict": "resize the tables and rows", "true": "resize tables as the number of objects grow", "bleu": 0.1781815298791261, "rouge": 0.2953995157384988}, {"predict": "returns true if there ' s another socket address to try", "true": "returns true if there ' s another socket address to try", "bleu": 1.0, "rouge": 1.0}, {"predict": "percentile must be in the percentile based on the range of 100 m percentile", "true": "x = 1 / ( 1 - percentage )", "bleu": 0.07432998184513635, "rouge": 0.0}, {"predict": "queue a name from a db name", "true": "extracts the queue name given a pin later queue database name", "bleu": 0.1319006407505858, "rouge": 0.4273204903677758}, {"predict": "check whether the entry in the table table", "true": "routines for returning <unk> d names", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "returns an angle between two entities defined by the same touch point and y", "true": "angle between the current touch coordinates and the down coordinates", "bleu": 0.13834368456410945, "rouge": 0.42957746478873243}, {"predict": "received byte to in t order byte at offset", "true": "parse a little - endian u in t 16 from the data at the given offset", "bleu": 0.0969633851135701, "rouge": 0.3046192259675406}, {"predict": "7 : shifter carry out : if shift i mm = = 0 then shifter operand = rm shifter carry out = rm shifter carry out = rm shifter carry out = 0 shifter carry out = 1 / shifter operand = rm rotate i mm ! =", "true": ", as r operation : if rs 7 : 0 = = 0 then shifter operand = rm shifter carry out = c flag else if rs 7 : 0 = 32 / if rm 31 = = 0 then shifter operand = 0 shifter carry out =", "bleu": 0.40066159847469673, "rouge": 0.4791666666666667}, {"predict": "removes a port from the given option", "true": "removes the surrounding quote characters as needed", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "generates a label for the specified series", "true": "generates a label for the specified series", "bleu": 1.0, "rouge": 1.0}, {"predict": "match string to check for meta match between the given pattern", "true": "tests whether or not a string matches against a pattern", "bleu": 0.12605968092174913, "rouge": 0.1921259842519685}, {"predict": "helper method to adjust dimension of table in table", "true": "asks to adjust new preferred size <unk> if necessary", "bleu": 0.18575057999133596, "rouge": 0.2222222222222222}, {"predict": "find field fields that matches specified field descriptor", "true": "find description of a field of this class", "bleu": 0.17747405280050269, "rouge": 0.25}, {"predict": "constructs a new instance , based on a date / time and the default time zone", "true": "constructs a quarter , based on a date / time and time zone", "bleu": 0.5560336961016132, "rouge": 0.8433179723502303}, {"predict": "if there is no field with the specified key , then associate the given value with the specified key", "true": "if there is no field with the specified key , then associate the given value with the specified key", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the boolean value from the json array for specified index", "true": "reads the boolean value from the json array for specified index", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates an invoke function from the is normal auto - call to call", "true": "append the call of proper auto boxing method for the given prim it if type", "bleu": 0.09739555402052819, "rouge": 0.14104046242774565}, {"predict": "open the pdf file start file for reading", "true": "open pdf file using a byte stream - by default files under <unk> bytes are cached to disk but this can be altered by setting pdf file reader", "bleu": 0.019684226266952622, "rouge": 0.20198675496688742}, {"predict": "main program for the launcher activity class", "true": "generate <unk> report data from directories with <unk> report results", "bleu": 0.10175282441454783, "rouge": 0.0}, {"predict": "waits for ( by spinning ) to have the element transfered to another thread", "true": "waits for ( by spinning ) to have an element transfered from another thread", "bleu": 0.6389431042462724, "rouge": 0.8571428571428571}, {"predict": "constructs for one list of one signatures by adding the specified markers", "true": "construct the 1 - signatures by merging adjacent dense bins", "bleu": 0.14694106251955755, "rouge": 0.18484848484848485}, {"predict": "test bit ( in t n ) of a positive number", "true": "test bit ( in t n ) of a positive number", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds the end of the string after quotes", "true": "finds and returns the end of the given character sequence after trimming new line characters from the right", "bleu": 0.1390957214303005, "rouge": 0.43160377358490565}, {"predict": "asserts if the json request and returns a string based on the json set", "true": "validates a query matches some json test expressions using the default double delta tolerance", "bleu": 0.10511846841633776, "rouge": 0.14285714285714285}, {"predict": "pop the current executing attribute set", "true": "pop the current executing attribute set", "bleu": 1.0, "rouge": 1.0}, {"predict": "add workout the transformation and apply 2 transformations", "true": "calculate the x coord s for text here y coord s are calculated in the method process text array ( final byte stream , in t start command , in t data pointer )", "bleu": 0.006218061111803573, "rouge": 0.042837078651685394}, {"predict": "prints the current entry in a writer to the target file", "true": "prints the roster information", "bleu": 0.14991106946711685, "rouge": 0.2911694510739857}, {"predict": "convert a java date to it ' s julian equivalent", "true": "convert a julian to it ' s java date equivalent", "bleu": 0.47287080450158786, "rouge": 0.7000000000000001}, {"predict": "remove the last element in the list", "true": "remove the last element , if it matches", "bleu": 0.44815260192961937, "rouge": 0.5269978401727862}, {"predict": "write each of the rdf resources into a graph and writes a single entry to the rdf structure of the x mp tree", "true": "serializes a struct property", "bleu": 0.05291907393644996, "rouge": 0.08484005563282336}, {"predict": "computes the utility table for the bayesian network", "true": "computes the utility table for the query variable ( typically an action variable ) , given the provided evidence", "bleu": 0.1835563707040774, "rouge": 0.4140271493212669}, {"predict": "convert a list of string objects to a primitive array", "true": "converts a string list of scores to float", "bleu": 0.1972940627795883, "rouge": 0.4535315985130111}, {"predict": "assigns the open painter to the next image", "true": "assigns the output socket to the next image", "bleu": 0.5133450480401704, "rouge": 0.75}, {"predict": "loading method", "true": "loading method", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the best achieved metric nodes", "true": "find the best insertion position for a relocated activity in a given list of current activities", "bleu": 0.07765310973887286, "rouge": 0.25206611570247933}, {"predict": "parse a string value to a calendar", "true": "parse a string value to a calendar", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a short ( 16 bit ) to the target stream", "true": "writes a short ( 16 bit ) to the target stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "there are enough information about this process", "true": "checks if is initialized", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "starts and activity to open the ' new account ' page in the own cloud web site", "true": "starts and activity to open the ' new account ' page in the own cloud web site", "bleu": 1.0, "rouge": 1.0}, {"predict": "register extra subject at the end of the statements", "true": "register an extra valid subject", "bleu": 0.16784459625186196, "rouge": 0.4518518518518518}, {"predict": "trims a line and removes everything behind colon", "true": "trims a line and removes comments", "bleu": 0.5873949094699213, "rouge": 0.7331730769230769}, {"predict": "calculates the euclidean length of two points", "true": "calculates the square of the euclidean distance between two 1 d points represented by real values", "bleu": 0.09243764735735799, "rouge": 0.40612516644474045}, {"predict": "adds the instructions to the list of of instructions in the of flow mod", "true": "adds the instructions to the list of of instructions in the of flow mod", "bleu": 1.0, "rouge": 1.0}, {"predict": "iterate over simple paths", "true": "non - thread safe iterator", "bleu": 0.23530495254141282, "rouge": 0.0}, {"predict": "verify that the domain is not compatible with the domain", "true": "check if given domains are in use or not , if any of them is in use , throw exception", "bleu": 0.051322113924580214, "rouge": 0.06288659793814433}, {"predict": "filters all the files that match the specified circle", "true": "this method implements the <unk> intersection detection method to determine whether the circles are actually intersecting", "bleu": 0.07176093398791644, "rouge": 0.1523096129837703}, {"predict": "initialize and initialize a test array for creating a test target test array copy", "true": "initializes mats im test utils without requiring the method of a class to be a jun it test", "bleu": 0.08352613583427962, "rouge": 0.18336673346693386}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "shift up the entire number of bits in this process", "true": "the bitmap of ignored signals , displayed as a decimal number", "bleu": 0.13564514503163538, "rouge": 0.18885448916408668}, {"predict": "finds corresponding java type for given by replacing given target type", "true": "method that will try to determine statically defined type of property being serialized , based on annotations ( for overrides ) , and alternatively declared type ( if static typing for serialization is enabled )", "bleu": 0.015284783472266755, "rouge": 0.11921824104234527}, {"predict": "converts the hold between 2 parameters for a hold the supplied output stream and points between them to a output stream", "true": "augment given scene with information from stub file , reading stubs from input stream and writing j a if to output stream", "bleu": 0.09971666404167247, "rouge": 0.231586940015186}, {"predict": "returns map containing the given entries", "true": "returns map containing the given entries", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the characters from an array", "true": "write the characters from an array", "bleu": 1.0, "rouge": 1.0}, {"predict": "bounds the current scroll if necessary , but does not synchronize the stack view with the model", "true": "bounds the current scroll if necessary", "bleu": 0.32702929224554894, "rouge": 0.5709828393135725}, {"predict": "loads the voice from the voice", "true": "add a free tt s voice for a given mary voice", "bleu": 0.10624253482403696, "rouge": 0.2234432234432234}, {"predict": "puts a key / value pair into the array , optimizing for the case where the key is greater than all existing keys in the array", "true": "puts a key / value pair into the array , optimizing for the case where the key is greater than all existing keys in the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an incremental class i fier listener", "true": "add an incremental class i fier listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a float 32 to this byte buffer , starting at the current position", "true": "reads an r 4 from the file and returns it in a float", "bleu": 0.13217947626377288, "rouge": 0.2237163814180929}, {"predict": "returns a ( possibly empty ) collection view of the certificates read from the given input stream in stream", "true": "returns a ( possibly empty ) collection view of the certificates read from the given input stream in stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks for the file and add them to the destination file ( s ) for the given destination file on the destination", "true": "checks to see if filenames exist on a destination directory that don ' t exist in the source directory", "bleu": 0.07289334177359764, "rouge": 0.19773095623987033}, {"predict": "converts the order in place into their order in across the order provided in across view", "true": "converts a query ' s order by clause , if any", "bleu": 0.08513012360883544, "rouge": 0.15326633165829145}, {"predict": "tick on the axis position", "true": "tick a specific block position , finding the valid blocks immediately adjacent to it and then replacing one at random", "bleu": 0.01616426370461062, "rouge": 0.14437869822485208}, {"predict": "adds the given purchase information to the database and returns the total number of times that the given product has been purchased", "true": "adds the given purchase information to the database and returns the total number of times that the given product has been purchased", "bleu": 1.0, "rouge": 1.0}, {"predict": "configures th si method used in order to find the labels contained in the panel", "true": "configures any necessary colors / fonts for the specified label used representing the message", "bleu": 0.10343603005129705, "rouge": 0.2081911262798635}, {"predict": "removes all limit lines from the axis", "true": "removes all limit lines from the axis", "bleu": 1.0, "rouge": 1.0}, {"predict": "links node as first element , or returns false if full", "true": "links node as first element , or returns false if full", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove all the supplied elements in the returned filterable", "true": "remove all elements in the supplied stream from this filterable", "bleu": 0.31762152032055835, "rouge": 0.6256410256410255}, {"predict": "draws the given lines as segments between all points of the given list of mx points", "true": "draws the given lines as segments between all points of the given list of mx points", "bleu": 1.0, "rouge": 1.0}, {"predict": "transforms p 2 d region in the normalized path and height", "true": "compute 3 a regions for a sensor - referenced touch coordinate", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "flushes all buffers for the current writer and causes any buffered data to be written to the underlying device", "true": "flushes the stream", "bleu": 0.0712695567709093, "rouge": 0.20926243567753}, {"predict": "constructs a vector by reading a double array with the components of a given array", "true": "create a vector of given dimension", "bleu": 0.12300686288463772, "rouge": 0.4128595600676818}, {"predict": "handle a bizarre special case", "true": "handle a bizarre special case", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a lat lon into a pixel array", "true": "convert longitude to pixel value", "bleu": 0.17747405280050269, "rouge": 0.32105263157894737}, {"predict": "gets the value at the world value between world and y values", "true": "indicates whether world file values appear to be in latitude and longitude", "bleu": 0.1235622127262679, "rouge": 0.16666666666666666}, {"predict": "helper method to associate the store in a different number", "true": "description of the method", "bleu": 0.13950796967929133, "rouge": 0.1548223350253807}, {"predict": "remove a remote session from remote session", "true": "remove a remote session", "bleu": 0.5169731539571706, "rouge": 0.7648902821316614}, {"predict": "returns the string representation of this vector", "true": "returns the string representation of this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "iterator over child nodes that were created during this node", "true": "iterator visits the direct child nodes in the external key ordering", "bleu": 0.1613101715871968, "rouge": 0.28328173374613}, {"predict": "enables metrics for the server by setting \" opt - out \" to false in the config file and starting the metrics task", "true": "enables metrics for the server by setting \" opt - out \" to false in the config file and starting the metrics task", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new evaluation - md 5 hash of the given key using the specified hashing key", "true": "creates an hm act 64 instance which uses the given secret key material", "bleu": 0.10216198665886358, "rouge": 0.20492721164613661}, {"predict": "returns true if the char segment starts with the string", "true": "returns true if the char segment starts with the string", "bleu": 1.0, "rouge": 1.0}, {"predict": "write part of an encoded byte buffer to the position of the current stream", "true": "write a byte buffer that isn ' t backed by an array", "bleu": 0.13217947626377288, "rouge": 0.2340153452685422}, {"predict": "return true if the class was loaded from the application s rc / directory", "true": "return true if the class was loaded from the application s rc / directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "process the provided lines of ld if lines as a single ld if change record", "true": "reads in the ld if file , and writes the change records on the l dap connection", "bleu": 0.10765232445580915, "rouge": 0.24721377912867276}, {"predict": "helper method for print row rows of a row", "true": "render ( print ) progress bar", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "attempts to send a serial iz able object that is , de serialize it in the pool", "true": "drain currently permitted requests and grant lock to next request or", "bleu": 0.07223943354597204, "rouge": 0.07429963459196103}, {"predict": "loads positions of positions with data from the cursor to display", "true": "loads positions within certain ar re a", "bleu": 0.14991106946711685, "rouge": 0.2314990512333966}, {"predict": "creates and return true if the given text is visible", "true": "shorthand for creating the check box setting the icon / text and making it into a toggle button", "bleu": 0.06735938555336447, "rouge": 0.1358574610244989}, {"predict": "add a completed batch request to the server ' s batch command", "true": "adds this batch to the downloads system", "bleu": 0.14694106251955755, "rouge": 0.3315217391304348}, {"predict": "save the encoded ( output ) buffer into the complete encoded recording", "true": "save the encoded ( output ) buffer into the complete encoded recording", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a job definition that is using fixed delays specify , when and how often the job should be triggered", "true": "create a job definition that is using fixed delays specify , when and how often the job should be triggered", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "stores given long value", "true": "stores given integer value", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "create a flat file based on an input folder", "true": "takes the available cas and creates more cases from them to conform to the minimal requested amount of cas objects to have sufficient for running a cross - validation", "bleu": 0.015295054053094772, "rouge": 0.04806934594168637}, {"predict": "sign part of the xml document referer ed by the supplied a list of xml document nodes", "true": "sign the xml document using enveloped signatures", "bleu": 0.14216645907653844, "rouge": 0.3604135893648449}, {"predict": "click popup for this and popup windows", "true": "display popup", "bleu": 0.18575057999133598, "rouge": 0.2469635627530364}, {"predict": "creates a new instance", "true": "creates a writer for processing sequences from provided data source", "bleu": 0.10551173833795614, "rouge": 0.26521739130434785}, {"predict": "get the best heat map heat and target heat for the given target", "true": "guesses the ' best ' firing plan under a certain heat no <unk> is done", "bleu": 0.09739555402052819, "rouge": 0.2115606936416185}, {"predict": "produces the linked volume group rest of the from volume group", "true": "map an volume group to volume group rest rep", "bleu": 0.2521193618434983, "rouge": 0.4073455759599332}, {"predict": "post all filenames provided in arg s", "true": "post all filenames provided in arg s", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a string representation of this object", "true": "return a string representation of this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "clear all searchable items", "true": "clear all searchable items", "bleu": 1.0, "rouge": 1.0}, {"predict": "register a new listener for event changes", "true": "register a listener to be notified when plotting completes", "bleu": 0.19740631366145517, "rouge": 0.3667334669338677}, {"predict": "adds multiple instances of an ingredient to the list", "true": "adds multiples of the specified ingredient", "bleu": 0.17747405280050263, "rouge": 0.4149659863945578}, {"predict": "constructs a new batched image request object", "true": "constructs a new batched image request object", "bleu": 1.0, "rouge": 1.0}, {"predict": "order by order by clause", "true": "returns the order string produced by this object", "bleu": 0.1658165975077607, "rouge": 0.2953995157384988}, {"predict": "find a clone that corresponds to the key argument", "true": "find a clone that corresponds to the key argument", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert the specified encoding string to a byte array", "true": "convert a string to a byte array using the specified encoding", "bleu": 0.5409782513904869, "rouge": 0.5893719806763285}, {"predict": "description of the method", "true": "description of the method", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is called before writing to the process", "true": "clear log cat buffer prior to test run", "bleu": 0.14113991930789777, "rouge": 0.1189083820662768}, {"predict": "add single character to this hash map", "true": "add a meta character and its replacement", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "find the code that does not find the given max", "true": "the code that does the real work of lookup", "bleu": 0.3672056269893592, "rouge": 0.5313588850174217}, {"predict": "finds all history records for the given job and job", "true": "finds all history records for the given job", "bleu": 0.7860753021519787, "rouge": 0.9070631970260222}, {"predict": "checks if a xml character is well - formed", "true": "checks if a xml character is well - formed", "bleu": 1.0, "rouge": 1.0}, {"predict": "escapes a character if it has an escape sequence or is non - printable ascii", "true": "escapes a character if it has an escape sequence or is non - printable ascii", "bleu": 1.0, "rouge": 1.0}, {"predict": "if a landmark has been added to the set of the active landmarks , this function re - evaluates the estimated remaining travel time based on the new set of active landmarks of the nodes contained in pending nodes", "true": "if a landmark has been added to the set of the active landmarks , this function re - evaluates the estimated remaining travel time based on the new set of active landmarks of the nodes contained in pending nodes", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of the r i , i", "true": "describe the attribute eva lu at or", "bleu": 0.12605968092174913, "rouge": 0.12151394422310759}, {"predict": "draws a boundary of the indicator", "true": "draws indicator in case the expression text overflows on the y axis", "bleu": 0.09663861439684919, "rouge": 0.20962199312714777}, {"predict": "write a line of values to the file with a timestamp", "true": "write a line of values to the file with a timestamp", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method returns true if the input stream contains a p em encoded item", "true": "this method returns true if the input stream contains a p em encoded item", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new close listener", "true": "creates the new close listener", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "controls the shard routing of the shard", "true": "controls the shard routing of the request", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "receive data with a specific buffer size", "true": "receive data with a specific buffer size", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes an attribute at the given position ( 0 to num attributes ( ) - 1 )", "true": "deletes an attribute at the given position ( 0 to num attributes ( ) - 1 )", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the index characters from the given locale to the index", "true": "adds the index characters from the given locale to the index", "bleu": 1.0, "rouge": 1.0}, {"predict": "wrap the key store using a given key", "true": "wrap a key", "bleu": 0.19070828081828378, "rouge": 0.5941558441558442}, {"predict": "creates a new java class loader", "true": "this class was not meant to be constructed explicitly", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "adds a separator to the log ' there is no more items to be re - program", "true": "add separator routines are not used in peers", "bleu": 0.07223943354597204, "rouge": 0.08555399719495091}, {"predict": "determine if sd card exists", "true": "determine if sd card exists", "bleu": 1.0, "rouge": 1.0}, {"predict": "define a class with the given path , and return the parent context resolved by this class loader", "true": "load a class from the rmi class loader corresponding to the given code base url path in the current execution context", "bleu": 0.12189442180286604, "rouge": 0.3540630182421227}, {"predict": "loads the raw modules of a database", "true": "loads the raw modules of a database", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the data for this segment to the stream in valid jpeg format", "true": "writes the data for this segment to the stream in valid jpeg format , directly from the data array", "bleu": 0.6303131865967199, "rouge": 0.7859266600594649}, {"predict": "rounds a double to the next nearest integer value in a probabilistic fashion ( e", "true": "rounds a double to the next nearest integer value in a probabilistic fashion ( e", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the executable element properties to typename properties", "true": "converts the executable element properties to typename properties", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses a register information from the specified node , which is register in the representation of this node", "true": "parses register information from the target information string", "bleu": 0.1983544145418289, "rouge": 0.413279132791328}, {"predict": "creates the factory", "true": "creates a daemon thread with the specified name prefix", "bleu": 0.08047084086794415, "rouge": 0.30576441102756885}, {"predict": "tests whether the metric number is equal to a negative number", "true": "unit test for a cpu num message", "bleu": 0.11390778025531027, "rouge": 0.1157495256166983}, {"predict": "format a vector of numbers into a formatted string", "true": "format a vector of numbers into a formatted string", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new column to an existing table", "true": "this version of add column allows the user to override the default length associated with each column type", "bleu": 0.05463883725539848, "rouge": 0.21580188679245282}, {"predict": "the loop of two block the loop", "true": "layout blocks", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "adds a transaction to the log", "true": "add a new server transaction to the set of existing transactions", "bleu": 0.18892891214792823, "rouge": 0.4468864468864468}, {"predict": "calls super method for starting at the remote thread", "true": "da lays the current thread", "bleu": 0.15619699684601276, "rouge": 0.3012345679012346}, {"predict": "test split and join of properties ( using pipe )", "true": "test split and join of nested properties ( using pipe )", "bleu": 0.7358936681622166, "rouge": 0.9442724458204335}, {"predict": "test against boolean map type", "true": "let ' s also check that it is possible to do type conversions to allow use of non - string map keys", "bleu": 0.010083317678747487, "rouge": 0.06652126499454744}, {"predict": "returns true if", "true": "returns true if", "bleu": 1.0, "rouge": 1.0}, {"predict": "extract base 64 encoded byte array from org", "true": "parses a byte array", "bleu": 0.21105340631872638, "rouge": 0.3546511627906977}, {"predict": "method for reset bandwidth", "true": "resets the bandwidth average for this instance of the bandwidth manager", "bleu": 0.06909866532427987, "rouge": 0.24596774193548387}, {"predict": "tests whether a security role is correctly merged into an empty descriptor", "true": "tests whether a single security role is correctly inserted into an empty descriptor", "bleu": 0.5337692335477128, "rouge": 0.8736979166666665}, {"predict": "decodes a full revision operation", "true": "decodes a full revision operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all dom character data from the given node", "true": "remove children from type character data from a node , this includes text , comment and c data section nodes", "bleu": 0.08182166500549096, "rouge": 0.2582010582010582}, {"predict": "un links interior node p with predecessor trail", "true": "un links interior node p with predecessor trail", "bleu": 1.0, "rouge": 1.0}, {"predict": "load corpus lines from the corpus", "true": "streaming loader , which does not double peak memory like the loader that creates a suffix array from a parallel corpus", "bleu": 0.021562989506891315, "rouge": 0.1346578366445916}, {"predict": "self mix of mix in environment", "true": "friction mixing law", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "serialize a object to a json output array", "true": "serialize the given java object into string according the given content - type ( only json is supported for now )", "bleu": 0.03755268705124013, "rouge": 0.1914225941422594}, {"predict": "returns true if two calls of this stack which is well as well , which is well as a direct section which is well", "true": "compile a sequence sw $ z r , n ( $ reg ) sw $ z r , n + 4 ( $ reg ) sw $ z r , n + 8 ( $ reg )", "bleu": 0.0326183529326445, "rouge": 0.03157349896480331}, {"predict": "verifies the as a native volume as an registry for the passed v plex volume", "true": "determines if the v plex volume can be expanded by natively expanding the backend volumes", "bleu": 0.16943571815930883, "rouge": 0.2666666666666666}, {"predict": "update the gui text into decoder", "true": "file gui from roster contents", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "adjusted rand : second util - bit", "true": "function which will return one if the argument is zero or a positive number , and zero if not", "bleu": 0.028129878312564863, "rouge": 0.0}, {"predict": "return a size of this size with an additional terminal size", "true": "returns itself if it is equal to the supplied size , otherwise the supplied size", "bleu": 0.08762962180865386, "rouge": 0.14969325153374236}, {"predict": "check if can be gzip - ed", "true": "checks if the request supports gzip and is not a include request ( these cannot be g zipped )", "bleu": 0.03978165541753403, "rouge": 0.14202561117578577}, {"predict": "create a processor of the processor", "true": "constructs a replay processor with bounded or unbounded buffering", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "adapter implementation works in list when conversations activity or queued on show list", "true": "by default displays the current conversations in the view , this method can be updated to modify the conversations list before it is shown , can be used to filter the list or augment it", "bleu": 0.023142836670430857, "rouge": 0.11545741324921137}, {"predict": "reads the next encoded byte from the encoded input stream", "true": "reads the next encoded byte from the encoded input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "en queues a job to be executed upon the execution thread", "true": "en queue a job for this thread", "bleu": 0.17033186037639278, "rouge": 0.4629981024667932}, {"predict": "this test doesn ' t pass on ri", "true": "this test doesn ' t pass on ri", "bleu": 1.0, "rouge": 1.0}, {"predict": "test bit ( in t n ) of a positive number", "true": "test bit ( in t n ) of a positive number", "bleu": 1.0, "rouge": 1.0}, {"predict": "receive notification of the start of an element", "true": "receive notification of the start of an element", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the given purchase information to the database and returns the total number of times that the given product has been purchased", "true": "adds the given purchase information to the database and returns the total number of times that the given product has been purchased", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a string into a native text , window", "true": "draw a string using the current font and color in the x , y coordinates", "bleu": 0.10247907767191411, "rouge": 0.23921568627450981}, {"predict": "read the sep c if i ed number of characters into the array", "true": "read the sep c if i ed number of characters into the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "update the cn once value", "true": "update the nonce parameters", "bleu": 0.35930411196308426, "rouge": 0.4535315985130111}, {"predict": "accept and process an instance event", "true": "accept and process an instance event", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines if the v pool has pools registered on the rp storage pool", "true": "re calculate all virtual pools matching storage pools that have rp protection as creation of a protection system creates new relationships and constraints on the matching pools of an rp system", "bleu": 0.0374371828503967, "rouge": 0.16932685634975714}, {"predict": "calculate the fee reverse", "true": "calculates the trading fee a player has to pay when selling for a certain price", "bleu": 0.025419978385188596, "rouge": 0.190625}, {"predict": "locate the vertices and the code words area of a black blob using the start and stop patterns as locator s", "true": "locate the vertices and the code words area of a black blob using the start and stop patterns as locator s", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a search history to the search list", "true": "adds current search pattern in the search history list", "bleu": 0.2547549121331136, "rouge": 0.5820610687022901}, {"predict": "method to trim the source file list and create a list of source files", "true": "walk the file list looking for name collisions", "bleu": 0.1250076305588977, "rouge": 0.28683385579937304}, {"predict": "concatenates the string representation of each items in this array , with the given string as a separator between each item", "true": "concatenates the string representation of each items in this array , with the given string as a separator between each item", "bleu": 1.0, "rouge": 1.0}, {"predict": "write 16 - bit value to output stream , ls b first", "true": "write 16 - bit value to output stream , ls b first", "bleu": 1.0, "rouge": 1.0}, {"predict": "set the order by clause", "true": "the fields of the named entity to order the result set by ; optionally add a \" as c \" for ascending or \" desc \" for descending note : each successive call to any of the order by (", "bleu": 0.000489940470778517, "rouge": 0.15591054313099043}, {"predict": "create a stemmed string from one char ( original ) and one string ( original )", "true": "create a stemmed string from two strings", "bleu": 0.28175950490399515, "rouge": 0.4677914110429448}, {"predict": "creates a log stream based on the properties of all active connections", "true": "merges all logs on each node based on time stamp", "bleu": 0.14694106251955755, "rouge": 0.18484848484848485}, {"predict": "pack cipher suites array of cipher suites : converts a string of cipher names into an array of cipher names", "true": "converts an array of ciphers into a single string", "bleu": 0.1352045976914347, "rouge": 0.2961165048543689}, {"predict": "creates a new file filter for the given extension and desc pri pti on", "true": "creates a new instance", "bleu": 0.16451929399933107, "rouge": 0.37044534412955465}, {"predict": "ensure the tuple array exists", "true": "ensure the tuple array exists", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the argument string is an argument of the argument", "true": "given a string like \" - foo \" or \" - 5 \" or \" - <unk>", "bleu": 0.06849709353314773, "rouge": 0.06688596491228069}, {"predict": "removes all children of the given node from this document", "true": "removes child elements from a specific type", "bleu": 0.13950796967929133, "rouge": 0.24302788844621517}, {"predict": "eventually sets to the given value", "true": "eventually sets to the given value", "bleu": 1.0, "rouge": 1.0}, {"predict": "determine if the name is a save point under a given save point", "true": "checks whether a save point is valid", "bleu": 0.18798317647335086, "rouge": 0.31715771230502604}, {"predict": "for the columns and the column definitions for the given editor", "true": "use the supplied table editor to create columns for the supplied result set", "bleu": 0.1486375602900724, "rouge": 0.3283983849259758}, {"predict": "write lines to file", "true": "write source code to file", "bleu": 0.39573418216703893, "rouge": 0.6535714285714286}, {"predict": "remove all elements from the list", "true": "remove all elements from the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "reset the u id validity , the u id validity", "true": "sets and returns a new u id validity for this folder", "bleu": 0.21229612485081722, "rouge": 0.28328173374613}, {"predict": "moves all moves from a chess position to another location", "true": "generate and return a list of pseudo - legal moves", "bleu": 0.13950796967929133, "rouge": 0.1}, {"predict": "writes an ogg page header to the given byte array", "true": "writes an ogg page header to the given byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts any necessary separators and whitespace before a name", "true": "inserts any necessary separators and whitespace before a name", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates one buffer for the camera preview callback", "true": "creates one buffer for the camera preview callback", "bleu": 1.0, "rouge": 1.0}, {"predict": "produce static site request", "true": "handle a fancy new - f angled static site request", "bleu": 0.14921613134709885, "rouge": 0.3978260869565217}, {"predict": "subscribe to a room", "true": "remove subscription to a room", "bleu": 0.5208154731870476, "rouge": 0.6535714285714286}, {"predict": "discharges an i energized item with the defined amount of energy", "true": "discharges an i energized item with the defined amount of energy", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an array containing all of the elements in this de que , in proper sequence ( from first to last element )", "true": "returns an array containing all of the elements in this de que , in proper sequence ( from first to last element )", "bleu": 1.0, "rouge": 1.0}, {"predict": "add all of the specified elements to the selection", "true": "add all of the specified elements to the selection", "bleu": 1.0, "rouge": 1.0}, {"predict": "test if the dom implementation supports a specific feature", "true": "checks if a particular feature or mode is supported by the system", "bleu": 0.12716571564598603, "rouge": 0.2785388127853881}, {"predict": "copies backup partitions for the specified node id from the specified node", "true": "get backup partitions for specified node id", "bleu": 0.2796842457966537, "rouge": 0.6630434782608696}, {"predict": "inserts the string representation of the string argument into this string buffer", "true": "inserts the string into this string buffer", "bleu": 0.38677062763523445, "rouge": 0.7735507246376813}, {"predict": "load the url ' s url into this new one", "true": "just pass http url and then you have to call view ( image view )", "bleu": 0.07645906143263256, "rouge": 0.07721518987341772}, {"predict": "create a tree for deciding what keys can legally be typed", "true": "create a tree for deciding what keys can legally be typed", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds up the matrix into a sorted array", "true": "build the pivot - transform - reverse matrix ptr", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "transform binary to hex", "true": "transform binary to hex", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new string resulting from replacing all occurrences of old char in this string with new char", "true": "copies this string replacing occurrences of the specified character with another character", "bleu": 0.12257617673006654, "rouge": 0.34580498866213155}, {"predict": "create a bidi bidi", "true": "create a bidi object representing the bidi information on a line of text within the paragraph represented by the current bidi", "bleu": 0.010086336525484466, "rouge": 0.2850467289719626}, {"predict": "returns whether the callers of the current transaction contains a package that matches the give authentication requirements", "true": "returns whether the callers of the current transaction contains a package that matches the give authentication requirements", "bleu": 1.0, "rouge": 1.0}, {"predict": "paints the background of an internal frame title pane", "true": "paints the background of an internal frame title pane", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a graph listener", "true": "add a graph listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "restarts this execution and installs a directory", "true": "find any pending patches under the given sdk root that require studio to be restarted , and if there are any , restart and install them", "bleu": 0.012306395563268903, "rouge": 0.05490549054905491}, {"predict": "align transform labels , identify the natural number", "true": "helper function for missing values in the labels and missing predictions ( i", "bleu": 0.09499501502705178, "rouge": 0.09131736526946108}, {"predict": "check if product category category is a category", "true": "is product in category", "bleu": 0.19070828081828378, "rouge": 0.3546511627906977}, {"predict": "it creates a new instance of this panel", "true": "it creates a new instance of this panel", "bleu": 1.0, "rouge": 1.0}, {"predict": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "true": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method appends data to the remote server to the remote server", "true": "this method uploads a file to the remote server", "bleu": 0.33260249505555045, "rouge": 0.5865384615384615}, {"predict": "provide white list , entry in white list will not be shown in ui list", "true": "provide white list , entry in white list will not be shown in ui list", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper used to determine if this name is a valid name", "true": "used to detect scoped attributes", "bleu": 0.14991106946711685, "rouge": 0.2681318681318681}, {"predict": "construct the input buffer by reading the information", "true": "creates input object for amf 3 from byte buffer", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "loads a properties file into a properties object", "true": "searching the specified configuration file and return a properties", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "we have an of message we didn ' t expect given the current state and we want to treat this as an error", "true": "we have an of message we didn ' t expect given the current state and we want to treat this as an error", "bleu": 1.0, "rouge": 1.0}, {"predict": "pretty printing accumulator function for boolean s", "true": "pretty printing accumulator function for boolean s", "bleu": 1.0, "rouge": 1.0}, {"predict": "renders the clause in textual representation", "true": "renders the views on to the projected stream", "bleu": 0.20830666398386113, "rouge": 0.2785388127853881}, {"predict": "remove all listeners from the list", "true": "removes all database listeners added", "bleu": 0.24446151121745047, "rouge": 0.3696969696969697}, {"predict": "loads and validates audio map", "true": "loads and validates audio map", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a generic attribute to the class file", "true": "add a generic attribute to the field", "bleu": 0.7259795291154771, "rouge": 0.8097345132743362}, {"predict": "adds entire list of stats to internal c", "true": "link <unk> r <unk> events to the corresponding fa <unk> event", "bleu": 0.11021777041988566, "rouge": 0.10234899328859062}, {"predict": "try to construct using new transformer factory no service loader method if available", "true": "try to construct using new transformer factory no service loader method if available", "bleu": 1.0, "rouge": 1.0}, {"predict": "check that the u u id matches the u u id", "true": "check unique id and generated hash code", "bleu": 0.12605968092174913, "rouge": 0.2314990512333966}, {"predict": "prepare the channel for reading", "true": "creates the output stream that elements will be written to", "bleu": 0.10043553373039076, "rouge": 0.12577319587628866}, {"predict": "for a remote server ' s state map", "true": "monitoring logic used by background thread", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "writes this instance to a stream ( i", "true": "writes an instance of this class to a file", "bleu": 0.22149455506955362, "rouge": 0.465648854961832}, {"predict": "convert the supplied value into an internal representation as packed long iv", "true": "convert the supplied value into an internal representation as packed long iv", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds given line to the request", "true": "adds the supplied request header", "bleu": 0.2626909894424158, "rouge": 0.5545454545454546}, {"predict": "adds a child leaf to this container", "true": "adds a child leaf to this container", "bleu": 1.0, "rouge": 1.0}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "cumulative density function of the standard normal distribution", "true": "computes an approximation to normal cd f ( x )", "bleu": 0.12489309605176803, "rouge": 0.10892857142857142}, {"predict": "removes a result from the result list", "true": "removes one of the result buffers from the history", "bleu": 0.23099966849728554, "rouge": 0.48897795591182364}, {"predict": "adds the record to the dialog", "true": "adds a new feature type constraint entry", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "mod when modulus is negative", "true": "mod when modulus is negative", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates real power of n sga algorithm", "true": "calculates the points for drawing the <unk> var i ogram", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "creates a new d export private key dialog", "true": "creates a new d export private key openssl dialog", "bleu": 0.7846630356446556, "rouge": 0.931297709923664}, {"predict": "computes sum of two sql expression", "true": "sum sql expression for items that match query criteria", "bleu": 0.1894765350842885, "rouge": 0.3860759493670886}, {"predict": "allows you to remove a scroll position to end location when the given position has been reached , so this method is needed and when the user has been created", "true": "smoothly snaps to a given position", "bleu": 0.06032401726201456, "rouge": 0.25258799171842644}, {"predict": "calculates the offset of this point to point set with the maximum x - y - value", "true": "calculates the x - offset for drawing the shadow image relative to the source", "bleu": 0.13445273575332958, "rouge": 0.3283100107642627}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the test file", "true": "write a bundle with an xml writer and verify the output is expected", "bleu": 0.037870374782798366, "rouge": 0.1073943661971831}, {"predict": "add days to the output", "true": "get the date x days from now", "bleu": 0.20252884954471367, "rouge": 0.16180371352785147}, {"predict": "creates a new temporary file of the passed cache", "true": "create a temporary file in the cache directory on either internal or external storage , whichever is available and has more free space", "bleu": 0.046624961191382604, "rouge": 0.2896486229819563}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the entry object at the given x index from the data set at the specified index", "true": "removes the entry object at the given x index from the data set at the specified index", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs a read - bit test", "true": "run a single read test , writing and reading back input with the given compression mode", "bleu": 0.04961591899093189, "rouge": 0.25206611570247933}, {"predict": "closes given resource logging possible checked exception", "true": "closes given resource logging possible checked exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "identity - based version for use in it r", "true": "identity - based version for use in it r", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a raster with the same layout but using a different width and height , and with new zeroed data arrays", "true": "creates a raster with the same band layout but using a different width and height , and with new zeroed data arrays", "bleu": 0.8788691261950415, "rouge": 0.9726651480637813}, {"predict": "calculate matrix for fit center", "true": "calculate matrix for fit center", "bleu": 1.0, "rouge": 1.0}, {"predict": "factory method to build a scheduler on a scheduler", "true": "util method to get the arguments to the her on scheduler", "bleu": 0.1689983564524028, "rouge": 0.3929146537842191}, {"predict": "adds a so lr input document to this document", "true": "adds a document to be analyzed", "bleu": 0.23356898886410005, "rouge": 0.5532879818594103}, {"predict": "do the actual key and return the corresponding phase of the specified key", "true": "executes the next phase of this key agreement with the given key that was received from one of the other parties involved in this key agreement", "bleu": 0.06540289896438653, "rouge": 0.2902458366375893}, {"predict": "add a curve to the shape", "true": "add a curve to the shape", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads our preferences from preferences and load id", "true": "restore the auto mix buckets stored in shared preferences", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "returns the next character", "true": "returns the next character", "bleu": 1.0, "rouge": 1.0}, {"predict": "accept app offer remove from offers list", "true": "accept app offer remove from app offers list update corresponding app usage", "bleu": 0.3746001579917344, "rouge": 0.7034596375617792}, {"predict": "verify that the given public key successfully handles and confirms the signature associated with this signer", "true": "verify that the given public key successfully handles and confirms the signature associated with this signer", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates activity scope graph using activity module plus additional modules provided by inheritance", "true": "generates activity scope graph using activity module plus additional modules provided by inheritance", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the request to the write request", "true": "request the write lock", "bleu": 0.2626909894424158, "rouge": 0.5736677115987461}, {"predict": "reads a local date from the stream", "true": "reads a date value from the input stream", "bleu": 0.2898580955281284, "rouge": 0.7904967602591793}, {"predict": "removes a selection listener from the listener list", "true": "removes the listener from the collection of listeners who will be notified when the user changes the receiver ' s value", "bleu": 0.06677917017485561, "rouge": 0.25523012552301255}, {"predict": "equivalent to , but cheaper than writing integer", "true": "equivalent to , but cheaper than writing integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads an input stream from a reader", "true": "read an <unk> stream reader", "bleu": 0.22089591134157885, "rouge": 0.5154929577464789}, {"predict": "parses the input list of type parameters from a type", "true": "create a list of maps from the list of type parameters", "bleu": 0.3570381007186144, "rouge": 0.47213622291021673}, {"predict": "find free space on the * nix platform using the ' df ' command", "true": "find free space on the * nix platform using the ' df ' command", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads all data from stream and close it silently", "true": "reads all data from stream and close it silently", "bleu": 1.0, "rouge": 1.0}, {"predict": "see if within three moves of solution", "true": "see if within two moves of solution", "bleu": 0.5, "rouge": 0.8571428571428571}, {"predict": "constructs a lib i mpl for a given camera name and auxiliary name", "true": "reads the specified sections from penn tree bank", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "processes ssl v 2 hello message", "true": "processes ssl v 2 hello message", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the write half of the stream", "true": "closes the write half of the stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "issue an exception if the sql statement does not be logged", "true": "apply one or more row changes", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "writes the contents of this cache header to the specified output stream", "true": "writes the contents of this cache header to the specified output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "the ' avg requests per second ' field will make everything look like it changed", "true": "the ' avg requests per second ' field will make everything look like it changed", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if this float value is infinitely large in magnitude", "true": "returns true if this double value is infinitely large in magnitude", "bleu": 0.7348889200874658, "rouge": 0.9090909090909091}, {"predict": "get the name of the in progress z node", "true": "get the name of the in progress z node", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new value to the series", "true": "adds a new value to the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "receive a multiple health check on three partition", "true": "receive socket redundancy data", "bleu": 0.16036590969929357, "rouge": 0.17732558139534885}, {"predict": "output the doc type declaration", "true": "output the doc type declaration", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a stack store with the given configuration", "true": "create and open the store", "bleu": 0.19070828081828378, "rouge": 0.32105263157894737}, {"predict": "are these two vectors x , y coordinate vectors ?", "true": "check a vector", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "resolve relative url - s and fix a java", "true": "resolve relative url - s and fix a few java", "bleu": 0.8085785995823291, "rouge": 0.9384615384615386}, {"predict": "given the depth of and return the maximum element of the list , starting depth with depth first to the element in the given signature", "true": "compute the depth of the graph", "bleu": 0.10275474580767145, "rouge": 0.2901307966706302}, {"predict": "determines the height of this view", "true": "determines the height of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "utility method for converting a search path string to an array of directory and jar file urls", "true": "convert a string containing a space - separated list of urls into a corresponding array of url objects , throwing a malformed url exception if any of the urls are invalid", "bleu": 0.04962012628689051, "rouge": 0.19792342634652824}, {"predict": "use this to add the specified stacks to the output", "true": "separates the recipe into an input and output list", "bleu": 0.13950796967929133, "rouge": 0.21254355400696867}, {"predict": "fire the event listeners to all listeners", "true": "helper method to fire the connection closed event", "bleu": 0.240785655451027, "rouge": 0.3952483801295896}, {"predict": "stores an in t ( volatile ) into the specified object with volatile semantic value", "true": "stores integer value with volatile semantic", "bleu": 0.16943571815930883, "rouge": 0.4128595600676818}, {"predict": "construct a strategy that parses a number field", "true": "construct a strategy that parses a number field", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a uri from server or ip set and port", "true": "returns the uri of a random server", "bleu": 0.14991106946711685, "rouge": 0.24302788844621517}, {"predict": "creates a new plot plot with the specified plot names", "true": "initializes a new instance that is responsible for zooming and panning the axes with the specified names of the specified plot", "bleu": 0.11678581235766097, "rouge": 0.36381709741550694}, {"predict": "ensures there is enough space in the buffer for the given number of additional bytes", "true": "ensures there is enough space in the buffer for the given number of additional bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a column to the table", "true": "set the attributes of the column", "bleu": 0.24446151121745047, "rouge": 0.16666666666666666}, {"predict": "construct the point with dimension and dimension", "true": "constructs a new comparator on the given dimension", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "adds a new element to the xml node", "true": "helper method to add elements to the test data schema", "bleu": 0.1643685581109115, "rouge": 0.21785714285714283}, {"predict": "flush the internal buffer", "true": "flush the internal buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a character to the start of the queue ( will be the first character )", "true": "add a character to the start of the queue ( will be the next character retrieved )", "bleu": 0.7822018913456786, "rouge": 0.9041501976284585}, {"predict": "adds an instance of a class that should be analyzed", "true": "add an class name which property values must implement", "bleu": 0.13950796967929133, "rouge": 0.21254355400696867}, {"predict": "read the specified number of bytes into an array", "true": "read the specified number of bytes into an array", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if the displayed value is displayed", "true": "this check contains a workaround for an issue in aem 6", "bleu": 0.10489671869455933, "rouge": 0.10683012259194395}, {"predict": "processes and returns the once started again , or does not work with related tests", "true": "parses and stores the test identifier ( class and test name )", "bleu": 0.09103526405546068, "rouge": 0.15117719950433703}, {"predict": "creates a display string of a character at the specified offset", "true": "inserts the character at the given offset", "bleu": 0.22416933501922287, "rouge": 0.4629981024667932}, {"predict": "adds a proto element to the end of the list", "true": "add a root element to the model", "bleu": 0.24808415001701817, "rouge": 0.48605577689243035}, {"predict": "expands all ancestors of the given element or tree path so that the given element can be expanded", "true": "expands all ancestors of the given element or tree path so that the given element becomes visible in this viewer ' s tree control , and then expands the subtree rooted at the given element to the given level", "bleu": 0.25777750111957093, "rouge": 0.4935275080906149}, {"predict": "appends a new cell to the current row containing the provided double value", "true": "appends a new cell to the current row containing the provided float value", "bleu": 0.855526185871245, "rouge": 0.9230769230769234}, {"predict": "create a collector set collector", "true": "constructs a new svn change set collector used to collect incoming change sets", "bleu": 0.07795171967670728, "rouge": 0.3086003372681282}, {"predict": "ensure that we have a list of width within a list of dimensions", "true": "ensure a max size for the image", "bleu": 0.10571070857151538, "rouge": 0.21143847487001732}, {"predict": "check whether a sequence of char values is a normalized form", "true": "determines if the given sequence of char values is normalized", "bleu": 0.43361890903486755, "rouge": 0.5763779527559055}, {"predict": "constructs a string representation of the test results", "true": "a string representation of this item , ( i", "bleu": 0.3938792067159195, "rouge": 0.465648854961832}, {"predict": "un - escapes a som string fragment replacing \"", "true": "un escapes a som string fragment replacing \" \\", "bleu": 0.7825422900366437, "rouge": 0.8888888888888888}, {"predict": "save the column into the database", "true": "saves an entity asynchronously", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "reads a set of bytes from the given input stream , and returns the new state set with the received state", "true": "pulls copy state off the wire", "bleu": 0.06429451441231726, "rouge": 0.16464237516869096}, {"predict": "inserts any necessary separators and whitespace before a name", "true": "inserts any necessary separators and whitespace before a name", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates redeem token for pay - to - address pairs , address and redeem token", "true": "checks whether a token can be <unk> and then <unk> it i", "bleu": 0.09103526405546068, "rouge": 0.15117719950433703}, {"predict": "compare a color to an integer", "true": "lighten the given color by the factor", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "format for unsigned short size", "true": "returns the database string of a given operand size", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "converts a class name from the name of a given class name", "true": "get the file name of a class", "bleu": 0.22997519112894443, "rouge": 0.552536231884058}, {"predict": "write process variable with variable size = variable size", "true": "write a process variable as xml to an output stream", "bleu": 0.17861170664603615, "rouge": 0.31282051282051276}, {"predict": "adds new values to the series", "true": "adds new values to the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "parameter asserts that a struct namespace is set", "true": "parameter asserts that a qualifier namespace is set", "bleu": 0.5969491792019646, "rouge": 0.875}, {"predict": "formats the float array d with the specified number format", "true": "formats the float array d with the specified number format", "bleu": 1.0, "rouge": 1.0}, {"predict": "pack from string into array", "true": "pack from string into array", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove a viewpoint in the list", "true": "remove a viewpoint from the list", "bleu": 0.488923022434901, "rouge": 0.8333333333333334}, {"predict": "remove all listeners that are notified of any changes in scroll state or position", "true": "remove all listeners that are notified of any changes in scroll state or position", "bleu": 1.0, "rouge": 1.0}, {"predict": "update the color with the current input field", "true": "updates the color of the input field depending on whether the entered formula string is valid or not", "bleu": 0.07958011770945457, "rouge": 0.35966981132075476}, {"predict": "if there were some view you don ' t want reside menu to intercept their touch event , you could remove it to ignored views", "true": "remove a view from ignored views ;", "bleu": 0.07265857755970445, "rouge": 0.20866590649942987}, {"predict": "writes the contents of this cache header to the specified output stream", "true": "writes the contents of this cache header to the specified output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the current resource has the same time , at this time", "true": "utility method that check for valid resource", "bleu": 0.09552040806823771, "rouge": 0.10571923743500866}, {"predict": "returns the maximum number of entries that can be filled before rehashing", "true": "returns the maximum number of entries that can be filled before rehashing", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all the existing values from the series", "true": "removes all the existing values from the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the selection status for the given section", "true": "toggle selection state of an entire section", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "copy file from out - length path ( length = end by default ) sox - e signed - integer - length", "true": "simple combine r sox file 0 file 1", "bleu": 0.0612957497932821, "rouge": 0.07279236276849642}, {"predict": "stop the instance scroller", "true": "tell the instance scroller to stop scrolling", "bleu": 0.3340135926488844, "rouge": 0.5198863636363635}, {"predict": "do the current auto - built up steps don ' t start anything on the history , but don ' t call", "true": "layout time has changed to a new minute", "bleu": 0.04657469807170698, "rouge": 0.0}, {"predict": "renders in 1 and 2 for 2 + in 2", "true": "simplified version of execute ( data in 1 , double in 2 ) without exception handling and casts", "bleu": 0.09810728230025882, "rouge": 0.2717149220489978}, {"predict": "create a text response with known length", "true": "create a text response with known length", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the next xml event ( if there are no more events )", "true": "check the next xml event without reading it from the stream", "bleu": 0.26584835766658776, "rouge": 0.33841886269070737}, {"predict": "replace the end point of an url with point set", "true": "replace the url end point ( schema + host + port ) with the given end point", "bleu": 0.11651058361579869, "rouge": 0.42459396751740147}, {"predict": "computes the length of a vector", "true": "computes the length of a vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new path for given ok and values , and tile", "true": "make the path to show", "bleu": 0.10390302174233558, "rouge": 0.12708333333333333}, {"predict": "this method will trust the trust manager", "true": "set the default x 509 trust manager to an instance of a fake class that trust all certificates , even the self - signed ones", "bleu": 0.021228310944440526, "rouge": 0.17023255813953486}, {"predict": "adds a new member", "true": "adds a new member", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string object representing this double ' s value", "true": "returns a string representation of this float object", "bleu": 0.25965358893403384, "rouge": 0.4535315985130111}, {"predict": "returns a list of strings with whitespace characters", "true": "adds leading and trailing whitespace characters to all members in this list", "bleu": 0.13755608571892394, "rouge": 0.1930379746835443}, {"predict": "computes a qualified name for a widget", "true": "computes the fully qualified name for the widget - derived type at the given node", "bleu": 0.12201458693655999, "rouge": 0.42657342657342656}, {"predict": "writes the atom data", "true": "process an ft y p atom to determine whether the media is <unk>", "bleu": 0.041910459064397936, "rouge": 0.1073943661971831}, {"predict": "extracts a map of name / value pairs from the given string", "true": "extracts a map of name / value pairs from the given string", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "issue an http delete and delete the response status code", "true": "issue an http delete and assert the response status code", "bleu": 0.7016879391277371, "rouge": 0.9}, {"predict": "setup stats on the set of bounds to do : do not actual bounds of the bounds", "true": "compute running sum of density values and weights", "bleu": 0.07223943354597204, "rouge": 0.08555399719495091}, {"predict": "returns a copy of the entries in the uni variate table", "true": "returns a copy of the probability table", "bleu": 0.43361890903486755, "rouge": 0.6944971537001898}, {"predict": "creates a new sub configuration for the sub configuration given the prefix and the configuration prefix", "true": "return a sub configuration from this instance that has the keys equal to either prefix", "bleu": 0.1203921753741131, "rouge": 0.32446808510638303}, {"predict": "converts a set of configuration names to a map of configuration names", "true": "maps service internal names to displayable ( localized ) names via their resource names", "bleu": 0.12438292405881463, "rouge": 0.22761194029850743}, {"predict": "create a new in t column", "true": "create a new in t column", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of the object", "true": "returns a string representation of the object", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the current work has been canceled or if there was no work in progress on this image view", "true": "returns true if the current work has been canceled or if there was no work in progress on this image view", "bleu": 1.0, "rouge": 1.0}, {"predict": "puts a given key to the queue", "true": "temporarily store a bitmap", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "analyze the location path and return 32 bits that give information about the location and return 32 / number of a step", "true": "analyze the location path and return 32 bits that give information about the location path as a whole", "bleu": 0.6367855537743938, "rouge": 0.763772954924875}, {"predict": "adds a listener to the set of listeners that need to be invoked after the life of an server", "true": "adds a new after start listener for post - startup cleanup", "bleu": 0.09629943614188137, "rouge": 0.21010332950631458}, {"predict": "adds a marker to this log with the specified name", "true": "adds a marker to this log with the specified name", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates a list of acceptable preview sizes", "true": "generates a list of acceptable preview sizes", "bleu": 1.0, "rouge": 1.0}, {"predict": "attempts to read more data", "true": "attempts to read more data", "bleu": 1.0, "rouge": 1.0}, {"predict": "instantiate s a new relation notification", "true": "creates a notification for either a relation creation ( relation support object created internally in the relation service , or an mbe an added as a relation ) or for a relation removal from the relation service", "bleu": 0.0014982709296198647, "rouge": 0.08232118758434548}, {"predict": "below method will be used to add row to store", "true": "below method will be used to add row to store", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the given domain is in the local host or does not return true if it starts with the given host", "true": "is true if the host name matches exactly the specified host name , or if there is no domain name part in the host name , but the unqualified host name matches", "bleu": 0.07938606975273726, "rouge": 0.28672150411280845}, {"predict": "returns a string as an entropy of a data array and as an array of data", "true": "helper function to compute entropy from z / w values", "bleu": 0.07692375026049747, "rouge": 0.08026315789473684}, {"predict": "write the distribution to the output file", "true": "write the distribution for * distribution model", "bleu": 0.345720784641941, "rouge": 0.42857142857142855}, {"predict": "save the working instances to a file", "true": "queries the user for a file to save instances as , then saves the instances in a background process", "bleu": 0.054412648117691864, "rouge": 0.28405122235157154}, {"predict": "calculate the color selected by the pointer on the bar", "true": "calculate the color selected by the pointer on the bar", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads characters into a portion of an array", "true": "reads characters into a portion of an array", "bleu": 1.0, "rouge": 1.0}, {"predict": "adjust whether there ' s text , which contains some \" \\ r , and animate separator", "true": "adjusts indent of the current block", "bleu": 0.06074588070876682, "rouge": 0.0}, {"predict": "append the string value of the given field", "true": "adds the text for an initialization of a variable from a field to the string builder", "bleu": 0.09233266757408672, "rouge": 0.23582474226804123}, {"predict": "creates a new dialogue system with an empty dialogue system", "true": "constructs a forward <unk> for the dialogue system", "bleu": 0.17827531042796255, "rouge": 0.34014869888475835}, {"predict": "this method adds a new button to a container", "true": "adds a pre configured j button to the specified container using the specified alignment constraint", "bleu": 0.12551072480361714, "rouge": 0.3986928104575163}, {"predict": "returns true if the given attribute value is in the attributes passed in tag", "true": "searches the attribute set for a tag , both of which are passed in as a parameter", "bleu": 0.11165964299780826, "rouge": 0.25363825363825365}, {"predict": "returns a string representation of the business object data key", "true": "returns a string representation of the business object data key", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the given if d is a valid if d", "true": "returns true if the given if d is a valid if d", "bleu": 1.0, "rouge": 1.0}, {"predict": "the system needs to be accessed only when the jvm needs to be accessed and system will just change the system", "true": "get talk incoming / outgoing info from the json file and save in cache", "bleu": 0.06429451441231726, "rouge": 0.11856171039844508}, {"predict": "gets the first enclosing element in the stream from the invoking method", "true": "returns enclosing method call of a given context ' s place", "bleu": 0.11498759556447223, "rouge": 0.17528735632183906}, {"predict": "generates an iso - up image file", "true": "generate ov fen v iso image which will be then saved to ov fen v partition", "bleu": 0.056829570481990416, "rouge": 0.16245006657789615}, {"predict": "creates a text event from a specific tenant", "true": "creates an <unk> event and persists to the database", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "creates a new fair byte provider", "true": "instantiate s a new rational", "bleu": 0.2907153684841096, "rouge": 0.3696969696969697}, {"predict": "remove notification of an notification that the notification identified by the specified type", "true": "removes all the timer notifications corresponding to the specified type from the list of notifications", "bleu": 0.168694047994874, "rouge": 0.2820809248554913}, {"predict": "treat the parent and parent atom", "true": "propagate variables to child via a relation atom ( atom variables are bound )", "bleu": 0.05822753005110548, "rouge": 0.09327217125382263}, {"predict": "add a u u id node to the \" pos \" tree", "true": "adds u u id value to given node as u u id most and u u id least tags", "bleu": 0.1194284666865302, "rouge": 0.2479674796747967}, {"predict": "removes wheel changing listener", "true": "removes wheel changing listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the raw byte offset from the start of an object ' s memory to the memory used to store the indicated instance field", "true": "gets the raw byte offset from the start of an object ' s memory to the memory used to store the indicated instance field", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines the number of consecutive characters that are en cod able using numeric compaction", "true": "determines the number of consecutive characters that are en cod able using numeric compaction", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the xml representation of the object ( without xml headers or enclosing p list - tags )", "true": "generates the xml representation of the object ( without xml headers or enclosing p list - tags )", "bleu": 1.0, "rouge": 1.0}, {"predict": "when the window closes , stop any sequences running", "true": "when the window closes , stop any sequences running", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new instance which has the additional source to be merged together with the current array of sources", "true": "returns a new instance which has the additional first source to be concatenated together with the current array of sources", "bleu": 0.724386543179998, "rouge": 0.9188284518828452}, {"predict": "shut down the web server shutdown", "true": "closes the server socket and all client sockets", "bleu": 0.17516432701748888, "rouge": 0.2785388127853881}, {"predict": "check whether a local id is a local id", "true": "returns true if local id has the right basic format for a local id", "bleu": 0.1792371224986277, "rouge": 0.41838134430727025}, {"predict": "bind the server socket to the server", "true": "creates the server socket", "bleu": 0.345720784641941, "rouge": 0.5736677115987461}, {"predict": "checks for interrupt , returning throw ie if interrupted before signalled , re interrupt if after signalled , or 0 if not interrupted", "true": "checks for interrupt , returning throw ie if interrupted before signalled , re interrupt if after signalled , or 0 if not interrupted", "bleu": 1.0, "rouge": 1.0}, {"predict": "resets list of visual effects to empty state", "true": "reset both output builders", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "this method is used to convert the byte buffer into a string", "true": "read this segment from a byte buffer using the given dictionary for lookups", "bleu": 0.14961487835433152, "rouge": 0.23828125000000006}, {"predict": "writes carriers and their plans into a xml - file", "true": "writes carriers and their plans into a xml - file", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove a listener from the system", "true": "un - registers a listener to the system", "bleu": 0.2619317629190374, "rouge": 0.5570776255707762}, {"predict": "test that a manifest with an activity with a launcher intent has been found on an error", "true": "test that a manifest with an activity with a launcher intent has no warnings", "bleu": 0.6952582546166497, "rouge": 0.7879440258342303}, {"predict": "appends message if the given name is similar to the candidate", "true": "appends message if the given name is similar to the candidate", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the header to the file , advancing the pointer", "true": "this is called by superclass when attempt to write data from file", "bleu": 0.12273680279953825, "rouge": 0.1788856304985337}, {"predict": "returns the java vendor for the jvm", "true": "returns the vendor for the java version used to generate this build", "bleu": 0.22117541221307574, "rouge": 0.5024711696869852}, {"predict": "creates an instance of a voice result", "true": "creates an instance of a voice result", "bleu": 1.0, "rouge": 1.0}, {"predict": "return in t array of nodes headed by a tab", "true": "forms tree of the nodes linked from this node", "bleu": 0.13950796967929133, "rouge": 0.21254355400696867}, {"predict": "add a category tree to the tree", "true": "this recursive method is a hack : directory items flattens the directory structure , but it provides useful functionality , so this method will reconstruct the directory structure for the j tree", "bleu": 0.006210634283218926, "rouge": 0.13790504898266767}, {"predict": "adds the specified listener to the list of listeners that will be notified of drawer events", "true": "adds the specified listener to the list of listeners that will be notified of drawer events", "bleu": 1.0, "rouge": 1.0}, {"predict": "starts an intent to edit a note", "true": "method used to enter note edition mode", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "adds the entry associated with the specified position in the buffer", "true": "adds an entry to the source map ( entry must be added in order )", "bleu": 0.09956647337521526, "rouge": 0.2993865030674847}, {"predict": "turn the hide action bar", "true": "onclick handler - un hide action bar", "bleu": 0.3406115671352173, "rouge": 0.48541114058355433}, {"predict": "formats the time delta , including any x values , f , and fraction digits , and generate a string", "true": "formats a time delta in human readable format", "bleu": 0.09134423666564473, "rouge": 0.23223350253807104}, {"predict": "runs the device p cm / device data", "true": "the main execution loop which should be executed in its own thread", "bleu": 0.09726684100532913, "rouge": 0.09651898734177215}, {"predict": "used to check whether there is a specialized handler for a given intent", "true": "used to check whether there is a specialized handler for a given intent", "bleu": 1.0, "rouge": 1.0}, {"predict": "set bounds for the right text view including clip padding", "true": "set bounds for the right text view including clip padding", "bleu": 1.0, "rouge": 1.0}, {"predict": "merge the internal arrays using the ^ n directly", "true": "takes a probability distribution and reduces higher - order terms by contributions <unk> from combinations of lower order terms", "bleu": 0.03906995774729051, "rouge": 0.0}, {"predict": "remove / collapse multiple newline characters", "true": "remove / collapse multiple newline characters", "bleu": 1.0, "rouge": 1.0}, {"predict": "read object is called to restore the state of the delegation permission from a stream", "true": "read object is called to restore the state of the exec option permission from a stream", "bleu": 0.7627703949022747, "rouge": 0.8980021030494217}, {"predict": "returns the total of the values in one column of the supplied data table", "true": "returns the total of the values in one column of the supplied data table by taking only the row numbers in the array into account", "bleu": 0.4557940183280172, "rouge": 0.6832}, {"predict": "opens the analysis of all analysis engines defined for the given file", "true": "opens the analysis", "bleu": 0.19338531381761725, "rouge": 0.4485294117647059}, {"predict": "bean context membership listener method", "true": "method for bean context membership interface", "bleu": 0.43989172475842214, "rouge": 0.5366568914956013}, {"predict": "performs some processing on the given item", "true": "performs some processing on the given item", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes instances from containers during scaling down", "true": "removes instances from containers during scaling down", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a specified normal message", "true": "draws a message which is sent between two different lifelines", "bleu": 0.14203729394569906, "rouge": 0.37731958762886597}, {"predict": "remove the loco net field value to an alias", "true": "kills consist using lead loco address", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "start a listening start listening on the listening start listening", "true": "listen on the default address", "bleu": 0.16590387014219712, "rouge": 0.2837209302325582}, {"predict": "returns best - type holder object of given type", "true": "parses a sum of flags as numerical values ( bit mask ) and translates it to set of e num values", "bleu": 0.03720407880344645, "rouge": 0.06218144750254842}, {"predict": "defines a new package using the information extracted from the specified manifest", "true": "defines a new package using the information extracted from the specified manifest", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses an element input stream", "true": "parse the xml document content using specified handlers and an input source", "bleu": 0.07450619999160439, "rouge": 0.2190305206463196}, {"predict": "verifies the signature bytes", "true": "verifies the signature bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new match string to the set of match strings", "true": "add string to see if it matches in the query", "bleu": 0.17033186037639278, "rouge": 0.384251968503937}, {"predict": "closes the cache and deletes all of its stored values", "true": "closes the cache and deletes all of its stored values", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the time ago that the passed time has passed in milliseconds", "true": "get time ago that milliseconds date occurred", "bleu": 0.2044800736021839, "rouge": 0.44202898550724634}, {"predict": "decode hex string to byte array", "true": "converts a string with an even number of hexadecimal characters to a byte array", "bleu": 0.08707046609544257, "rouge": 0.3730886850152905}, {"predict": "stops volume and stops", "true": "called when we want to remove a job status object that we ' ve finished executing", "bleu": 0.01504254234731835, "rouge": 0.0}, {"predict": "returns the euclidean coefficient", "true": "returns the coefficient of variance", "bleu": 0.39573418216703893, "rouge": 0.6535714285714286}, {"predict": "transfers node , if necessary , to sync queue after a cancelled wait", "true": "transfers node , if necessary , to sync queue after a cancelled wait", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of this predictor term", "true": "prints out a representation of the term", "bleu": 0.239802967618271, "rouge": 0.5398230088495575}, {"predict": "creates a new skeleton ( iterator ) instance", "true": "creates an instance , loads requirements file", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "creates an attribute schema i mpl for the given attribute schema", "true": "this is called when the service is added for the first time and it will change the default install value of an attribute", "bleu": 0.0633202915960231, "rouge": 0.16591115140525836}, {"predict": "convert an android class name to its canonical form", "true": "convert a canonical java class name to dal vi k flavor", "bleu": 0.23278666914796883, "rouge": 0.3929146537842191}, {"predict": "emit a method that ensures a collection is initialized", "true": "emit a method that ensures a collection is initialized", "bleu": 1.0, "rouge": 1.0}, {"predict": "un registers the client that will be used by the proxy client that should be used by the server", "true": "un registers a client to be monitored", "bleu": 0.09629943614188137, "rouge": 0.3356258596973865}, {"predict": "returns the double value based on the given resource", "true": "this method handles double quotes", "bleu": 0.14113991930789777, "rouge": 0.1506172839506173}, {"predict": "create a new array of containers that are children of the given container", "true": "allocate a new container of a given capacity", "bleu": 0.14949751774990683, "rouge": 0.39804241435562804}, {"predict": "check if uri represents local resource", "true": "check if uri represents local resource", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if mines h after is present", "true": "check if mines h after is present", "bleu": 1.0, "rouge": 1.0}, {"predict": "waits for click / o / o bb", "true": "helper to synchronously wait until we can get a path for a given o bb file", "bleu": 0.0834319834185865, "rouge": 0.23582474226804123}, {"predict": "volume is not a zone level resource", "true": "block consistency group is not a zone level resource", "bleu": 0.631914561891573, "rouge": 0.7334669338677354}, {"predict": "validate given message with expected type", "true": "protocol safety checks for the server returned message", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "close databases dropped , releasing resources", "true": "closes target and source databases", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "md 5 ' s md 5 digest", "true": "cal cola il md 5 del mess a gg io , usan do la crypto api", "bleu": 0.06758212955973163, "rouge": 0.16245006657789615}, {"predict": "test that a thrift job that represents renaming a table", "true": "runs the job to s can the meta store for directory locations", "bleu": 0.10320893749383378, "rouge": 0.08944281524926685}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete the contact during the state of the bag state", "true": "deletes sub people containers in this people container", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "test of find all u ids in the mailbox method , of class h base message mapper", "true": "test of find recent message u ids in mailbox method , of class h base message mapper", "bleu": 0.667278568794606, "rouge": 0.8823529411764706}, {"predict": "queue an \" event \" to be run on the gl rendering thread", "true": "queue an \" event \" to be run on the gl rendering thread", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an error message to the error", "true": "return list of error messages found while parsing last template", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "ensure that the buffer has at least capacity to hold the target size", "true": "ensure that the buffer has at least capacity to hold the target size", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a key - value pair into the cache", "true": "performs the best effort of updating z k node { base path } / { key } to the provided value", "bleu": 0.04424335522018044, "rouge": 0.12436289500509684}, {"predict": "timing target implementation : calculate and set the current car position based on the animation fraction", "true": "timing target implementation : calculate and set the current car position based on the animation fraction", "bleu": 1.0, "rouge": 1.0}, {"predict": "process the source tree to the output result", "true": "process the source tree to the output result", "bleu": 1.0, "rouge": 1.0}, {"predict": "processes a \" query \" using a user constructed so lr query request , and closes the request at the end", "true": "processes a \" query \" using a user constructed so lr query request , and closes the request at the end", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the header for link statistics for both links and link", "true": "compare link attributes", "bleu": 0.11390778025531027, "rouge": 0.15926892950391647}, {"predict": "generate a unique id suitable for the also passed run n , unique id name and also clone", "true": "generate a unique id - that is friendly for a url or file system", "bleu": 0.1983544145418289, "rouge": 0.319706498951782}, {"predict": "removes the provider at the specified 1 - based position", "true": "removes the provider at the specified 1 - based position", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses an xml element and returns an object", "true": "parses a ( non - top ) xml element", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "formats amount ' s suffix of a percentage", "true": "formats a given monetary value in a default format ( 2 decimals , padded left to 10 characters )", "bleu": 0.04487246777590933, "rouge": 0.13800904977375564}, {"predict": "delete an instance of the entry class , and remove the class from entry classes if this is the last such instance", "true": "delete an instance of the entry class , and remove the class from entry classes if this is the last such instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the settings and stores them in a properties map", "true": "loads the settings and stores them in a properties map", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is used to write a warning to the log", "true": "logs a warning message using the logger of this interpreter", "bleu": 0.17033186037639278, "rouge": 0.28818897637795277}, {"predict": "reads an input stream into a string", "true": "reads an input stream into a single string result", "bleu": 0.6533657281851004, "rouge": 0.8557114228456915}, {"predict": "construct a vector with preset values", "true": "construct a vector with preset values", "bleu": 1.0, "rouge": 1.0}, {"predict": "un registers a transaction service listener", "true": "remove a transaction service listener", "bleu": 0.6147881529512643, "rouge": 0.7393939393939394}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "pushes a new type on to the output frame stack", "true": "pushes a new type on to the output frame stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method simply take the passing them to the output", "true": "this methods sorts the vertices in level according to their <unk> s in bc , using insertion sort", "bleu": 0.06735938555336447, "rouge": 0.20378619153674832}, {"predict": "test that the computed model class have been done", "true": "tests whether model classes can identified correctly as consistent", "bleu": 0.14113991930789777, "rouge": 0.1111111111111111}, {"predict": "called from an object input bean context", "true": "look at the object received in a map handler status message and connect to it if necessary", "bleu": 0.04451531901458464, "rouge": 0.0775095298602287}, {"predict": "removes all layers from the status map", "true": "removes all layers from the map", "bleu": 0.7071067811865475, "rouge": 0.9360613810741688}, {"predict": "returns the number of productions contained in this rule", "true": "returns the number of productions contained in this rule", "bleu": 1.0, "rouge": 1.0}, {"predict": "asynchronously create zookeeper path recursively and optimistically", "true": "asynchronously create zookeeper path recursively and optimistically", "bleu": 1.0, "rouge": 1.0}, {"predict": "write this object to a safe serialization format", "true": "write this object to a stream", "bleu": 0.5873949094699213, "rouge": 0.7331730769230769}, {"predict": "check based on net amount", "true": "is net amount equal ?", "bleu": 0.35930411196308426, "rouge": 0.4}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "for given object name , look for field equality and field", "true": "creates an attribute which reads values from the field indicated using reflection", "bleu": 0.10400927574124633, "rouge": 0.08628005657708629}, {"predict": "process the host to the host , including the host , and port , according to the host , etc", "true": "processes a log event", "bleu": 0.051366639095059514, "rouge": 0.0}, {"predict": "un registers a membership listener", "true": "remove listener from the list to receive notification when a pro <unk> is added or removed", "bleu": 0.03347779366253814, "rouge": 0.08701854493580599}, {"predict": "adds an sms to the given uri", "true": "add an sms to the given uri with thread id specified", "bleu": 0.47486944442513457, "rouge": 0.6409807355516637}, {"predict": "updates the current current current frame port", "true": "present the final image on the screen / view port", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "dec re ment a calendar by one day", "true": "increment a calendar by one day", "bleu": 0.5873949094699213, "rouge": 0.7331730769230769}, {"predict": "processes and processes the notebook object", "true": "push the given angular variable to the target interpreter angular registry given a not <unk> and a paragraph id", "bleu": 0.02800522812577658, "rouge": 0.07314148681055155}, {"predict": "remove all elements from the list", "true": "removes from the given list the elements at the given indexes", "bleu": 0.1435549295013305, "rouge": 0.33516483516483514}, {"predict": "creates the new project tree", "true": "creates a new project tree component", "bleu": 0.43989172475842214, "rouge": 0.7155425219941348}, {"predict": "determine if the expression passed in object is a object", "true": "determine if the expression is an object", "bleu": 0.3816330911371337, "rouge": 0.7290836653386453}, {"predict": "use interpol at or to get t", "true": "use interpol at or to get t", "bleu": 1.0, "rouge": 1.0}, {"predict": "displays one or all the channels from the list of channels the server , and / mods list has already connected", "true": "if enabled in the settings , requests / mods for one currently joined channel ( and only one ) , ignoring the ones it was already requested for", "bleu": 0.07210193265785107, "rouge": 0.19895629484670582}, {"predict": "calculate the ( and set of depreciation over", "true": "build depreciation ( a depreciation exp ) entries", "bleu": 0.17747405280050269, "rouge": 0.25}, {"predict": "checks whether the specified object is contained in this set", "true": "iterates over all values and returns true if one value matches", "bleu": 0.0959156018869021, "rouge": 0.0}, {"predict": "rename existing database row with new jd bc connection", "true": "updates the filename field to the new value", "bleu": 0.14113991930789777, "rouge": 0.1189083820662768}, {"predict": "check to see if there is another element in the stream", "true": "checks if another objects is available by attempting to read another byte from the stream", "bleu": 0.12879607627726938, "rouge": 0.37423312883435583}, {"predict": "handle error associated with a custom formatter implementation", "true": "non - zero exit status when any violation messages have severity", "bleu": 0.09268172804333874, "rouge": 0.0}, {"predict": "remove the specified sensor from this sensor selection model", "true": "remove the specified sensor from this sensor selection model", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints the image to a buffer", "true": "prints a way entity", "bleu": 0.24446151121745047, "rouge": 0.4149659863945578}, {"predict": "returns a string representation of the data row", "true": "returns a string representation of the data row", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the path of the given object reference instance , or the relative reference", "true": "walks up the tree until a root object is found", "bleu": 0.09782375748961449, "rouge": 0.17183098591549298}, {"predict": "returns true if there ' s another proxy to try", "true": "returns true if there ' s another proxy to try", "bleu": 1.0, "rouge": 1.0}, {"predict": "trigger signals one entry on ' s", "true": "encapsulate logic for determining the case where no object ( neuron node , syn pas e node , etc ) was clicked on at the beginning of this drag sequence", "bleu": 0.006949644591173836, "rouge": 0.04860557768924303}, {"predict": "unsupported , because html implementation supports dynamic ( )", "true": "this operation is not supported because sets are mutable", "bleu": 0.14113991930789777, "rouge": 0.1111111111111111}, {"predict": "request being executed after the current system mappings", "true": "map measurement to a defined measurement name , where the key is the measurement name and the value is the re q ex the measurement should be mapped by", "bleu": 0.011616867535193535, "rouge": 0.04903536977491961}, {"predict": "given the location of the ' middle snake ' , split the diff in two parts and re curse", "true": "given the location of the ' middle snake ' , split the diff in two parts and re curse", "bleu": 1.0, "rouge": 1.0}, {"predict": "credit card is not a valid credit card number", "true": "validate credit card number", "bleu": 0.2626909894424158, "rouge": 0.4959349593495934}, {"predict": "fills the contents of a file with the given visitor", "true": "extract the contents of a zip file to a directory", "bleu": 0.3672056269893592, "rouge": 0.5}, {"predict": "create a new configuration object", "true": "creates a new config within the config directory , using the filename provided", "bleu": 0.07254224910650854, "rouge": 0.20573355817875214}, {"predict": "creates new form goto line dialog", "true": "creates new form goto line dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "attempts to prepare the request for a retry", "true": "attempts to prepare the request for a retry", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets up the y - axis labels", "true": "sets up the y - axis labels", "bleu": 1.0, "rouge": 1.0}, {"predict": "forges and sends the tear down request", "true": "forges and sends the tear down request", "bleu": 1.0, "rouge": 1.0}, {"predict": "if this is the first time calling this method , the buffer will be checked to make sure it starts with so i marker ( 0 xff d 8 )", "true": "if this is the first time calling this method , the buffer will be checked to make sure it starts with so i marker ( 0 xff d 8 )", "bleu": 1.0, "rouge": 1.0}, {"predict": "test deploying a simple ear", "true": "test deploying a simple ear", "bleu": 1.0, "rouge": 1.0}, {"predict": "compares the value , and returns true if they are equal", "true": "equals method to be consistent with comparable", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "notify the wi fi state", "true": "send a notification via the mw if i monitor when the wi fi state changes", "bleu": 0.10283257773094409, "rouge": 0.3669172932330827}, {"predict": "check to see if the key associated with the key", "true": "checks whether the value exists in an array list of certain key", "bleu": 0.11421946507590645, "rouge": 0.1788856304985337}, {"predict": "removes the given listener from the list of diagram change listeners", "true": "removes the given listener from the list of diagram change listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a simple grid based on the range of the range provided by the range", "true": "returns a connectivity grid object based on a hash value", "bleu": 0.14247788801610148, "rouge": 0.4149659863945578}, {"predict": "strips the given string of leading leading and trailing slash", "true": "removes any leading $ from the given string", "bleu": 0.24808415001701817, "rouge": 0.34014869888475835}, {"predict": "clears the \" host context \" system property", "true": "clears the \" host context \" system property", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a p norm attribute for the p double", "true": "creates a new p norm", "bleu": 0.23356898886410005, "rouge": 0.6024691358024692}, {"predict": "adds a separator to the log ' there is no more items to be re - program", "true": "add separator routines are not used in peers", "bleu": 0.07223943354597204, "rouge": 0.08555399719495091}, {"predict": "adds a chart viewer to the stage and displays it", "true": "adds a chart viewer to the stage and displays it", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "true": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "bleu": 1.0, "rouge": 1.0}, {"predict": "accept a data point to plot", "true": "accept a data point ( encapsulated in a chart event ) to plot", "bleu": 0.22019533131336494, "rouge": 0.5922330097087379}, {"predict": "moves a sub range to the end range", "true": "assumptions : ranges are disjoint , non - contiguous , and ordered", "bleu": 0.08179133792443427, "rouge": 0.0}, {"predict": "support for get parent of node ; walks a dom tree until it finds the element which owns the at tr", "true": "support for get parent of node ; walks a dom tree until it finds the element which owns the at tr", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates and starts a tail er for the given file", "true": "creates and starts a tail er for the given file", "bleu": 1.0, "rouge": 1.0}, {"predict": "is operating system os x", "true": "is operating system mac os ?", "bleu": 0.43989172475842214, "rouge": 0.7155425219941348}, {"predict": "returns the number of elements in this array", "true": "returns the number of items in the collection", "bleu": 0.46713797772820004, "rouge": 0.625}, {"predict": "creates a new d view as n 1 dump dialog", "true": "creates new d view as n 1 dump dialog where the parent is a dialog", "bleu": 0.5013077911152323, "rouge": 0.6949367088607595}, {"predict": "trims the string and whitespace", "true": "remove all spaces on right", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "add an object in the buffer", "true": "add a message in the buffer", "bleu": 0.4347208719449915, "rouge": 0.6666666666666666}, {"predict": "cleans up the displayed content", "true": "closes the current form and returns to the previous form , releasing the edt in the process", "bleu": 0.02476709768976917, "rouge": 0.08276797829036635}, {"predict": "the result will be positive , if the line is on the left of p point else negative", "true": "returns the signed distance of this line from p point", "bleu": 0.10657284485555579, "rouge": 0.3012345679012346}, {"predict": "expands the given number string as a real number", "true": "expands the given number string as a real number", "bleu": 1.0, "rouge": 1.0}, {"predict": "get a vector initialized with a vector", "true": "ones - return a vector full of 1 s", "bleu": 0.18370727471078332, "rouge": 0.24448897795591182}, {"predict": "submits a requests for a set of permissions for an activity", "true": "submits a requests for a set of permissions for an activity", "bleu": 1.0, "rouge": 1.0}, {"predict": "tell the user of an error , and probably throw an exception", "true": "tell the user of an error , and probably throw an exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "test for ( ) of the context ' s properties of the current configuration", "true": "setting a null property is the way maven 2 operates when the user specifies an empty property", "bleu": 0.0789552907486192, "rouge": 0.12681912681912683}, {"predict": "creates a new delete - xxx sub - command for an existing relation", "true": "creates a new delete - xxx sub - command for a set relation", "bleu": 0.7744031410142033, "rouge": 0.8461538461538461}, {"predict": "remove cycles from starting graph", "true": "the following two methods remove cycles from the graph", "bleu": 0.24141769716889283, "rouge": 0.5434298440979956}, {"predict": "returns a string representation of the given matrix", "true": "returns a string representation of the given matrix", "bleu": 1.0, "rouge": 1.0}, {"predict": "given a ' from ' pattern ( a la xsl : number ) , a match pattern and a context , find the first ancestor that matches the pattern ( including the context handed in )", "true": "given a ' from ' pattern ( a la xsl : number ) , a match pattern and a context , find the first ancestor that matches the pattern ( including the context handed in )", "bleu": 1.0, "rouge": 1.0}, {"predict": "kill a shell command", "true": "try to clean up as much as possible from a shell that ' s gotten itself wedged", "bleu": 0.018335190851298155, "rouge": 0.17134831460674158}, {"predict": "this is a facade method for the encoding operation", "true": "this is a facade method for the encoding operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "constants map", "true": "creates a metrics object with the dimensions map immutable", "bleu": 0.022945049537581412, "rouge": 0.16310160427807485}, {"predict": "resolve class name in class loader ( if present ) is a class in the given class loader", "true": "resolve class is extended to acquire ( if present ) the location from which to load the specified class", "bleu": 0.22542604414058817, "rouge": 0.43033509700176364}, {"predict": "check if a point is at this zone", "true": "checks whether a re spawn point is within this area", "bleu": 0.1867587389639562, "rouge": 0.43571428571428567}, {"predict": "inserts a byte array", "true": "inserts a byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will be used to load the new file in the cache", "true": "below method will be used to fill the level cache", "bleu": 0.3759663529467017, "rouge": 0.6233576642335765}, {"predict": "helper to validate the specified file location", "true": "helper to validate the contents of a \" long \" file on our o <unk> the format of the files are sequential 0 ' s of type long", "bleu": 0.026938899922027446, "rouge": 0.25781910397295016}, {"predict": "write this tag to the given stream", "true": "saving method", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "will apply a mask a returns", "true": "makes a masked value of a value", "bleu": 0.20693220168471366, "rouge": 0.3034825870646766}, {"predict": "computes the duration for a duration of time", "true": "computes the duration by subtracting start to the current time in milliseconds", "bleu": 0.19142013845510458, "rouge": 0.3860759493670886}, {"predict": "size + value 1 type id + value length + value 1 binary content +", "true": "size + value 1 type id + value length + value 1 binary content +", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the records that should be drawn from the file", "true": "checks to see if the file is in n <unk> or not , and then puts the file pointer in the right place to start reading the header for the file", "bleu": 0.021830957760699873, "rouge": 0.13396778916544658}, {"predict": "returns the image that should be visible on to expand to the output file", "true": "convenience method that takes a screenshot of the device and returns a buffered image for further processing", "bleu": 0.08971053043365333, "rouge": 0.12681912681912683}, {"predict": "sets the order root inside bottom , inside , top to bottom , bottom , left , right in bottom )", "true": "find and connect widget s centered over other widget s", "bleu": 0.048853266442119285, "rouge": 0.0}]