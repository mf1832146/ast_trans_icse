[{"predict": "returns a 0 - based depth within the object graph of the current object being serialized", "true": "returns a 0 - based depth within the object graph of the current object being serialized", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the scheme alters the training data set during the training", "true": "checks whether the scheme alters the training data set during building", "bleu": 0.8242367502646054, "rouge": 0.8764367816091955}, {"predict": "compute the union of two bit sets", "true": "compute the union size of two bit sets", "bleu": 0.5993954153807813, "rouge": 0.9222462203023757}, {"predict": "test 2 2 with candidates in reverse order", "true": "tests local candidates with remote version in the middle on key 2", "bleu": 0.1223065774797558, "rouge": 0.1930379746835443}, {"predict": "handle closing of the dialog", "true": "actions to perform when the user has closed the dialog with the ok button", "bleu": 0.059392570240942286, "rouge": 0.19395866454689983}, {"predict": "returns a string describing the extension", "true": "prints out the class i fier", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "returns a new sector whose angles are the extremes of the this sector and another", "true": "returns a new sector whose angles are the extremes of the this sector and another", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if double value is equal to delta", "true": "checks if is double values are equal", "bleu": 0.17747405280050263, "rouge": 0.38364779874213834}, {"predict": "integer value of a positive big decimal", "true": "integer value of a positive big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "main recursive method to examine the directory hierarchy", "true": "main recursive method to examine the directory hierarchy", "bleu": 1.0, "rouge": 1.0}, {"predict": "get a sorted array containing all column values for a given tuple iterator and field", "true": "get a sorted array containing all column values for a given tuple iterator and field", "bleu": 1.0, "rouge": 1.0}, {"predict": "divide with invalid rounding mode", "true": "divide with invalid rounding mode", "bleu": 1.0, "rouge": 1.0}, {"predict": "after a data set is called to initialize the data bar", "true": "receives notification of a change to the plot ' s data set", "bleu": 0.16278331364721524, "rouge": 0.34512022630834516}, {"predict": "schedule the provided packed plan", "true": "invoke the on scheduler ( ) in i scheduler directly as a library", "bleu": 0.05512018958855254, "rouge": 0.10286677908937607}, {"predict": "indicates whether this type is a string", "true": "returns true if specified type is java", "bleu": 0.24446151121745047, "rouge": 0.2857142857142857}, {"predict": "api method", "true": "api method", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates the sql statement", "true": "validates the given sql statement where its position in the list of statement is the given index", "bleu": 0.02305528191603902, "rouge": 0.34269662921348315}, {"predict": "converts to object array", "true": "converts to object array", "bleu": 1.0, "rouge": 1.0}, {"predict": "is this logger instance enabled for the trace ?", "true": "is this logger instance enabled for the finest level ?", "bleu": 0.7002496081947426, "rouge": 0.8341880341880341}, {"predict": "use the specific player handle the logic , and handle the on the logic", "true": "remove an used up missile from an attacking player", "bleu": 0.08839374326825923, "rouge": 0.09050445103857567}, {"predict": "instantiate s a new search instance", "true": "creates a new match er for running coa p over tcp", "bleu": 0.12634437832866913, "rouge": 0.2234432234432234}, {"predict": "determines the maximum level for the given node , assuming that the maximum level is a child", "true": "recursively does the work", "bleu": 0.07223943354597204, "rouge": 0.10720562390158171}, {"predict": "ask to the user for retyping the pass code just entered before saving it as the current pass code", "true": "ask to the user for retyping the pass code just entered before saving it as the current pass code", "bleu": 1.0, "rouge": 1.0}, {"predict": "rolls back the worker thread creation", "true": "rolls back the worker thread creation", "bleu": 1.0, "rouge": 1.0}, {"predict": "insert functionality test # test insert 4 ( )", "true": "insert functionality test # test insert 4 ( )", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to add entry to file", "true": "writes one entry to the local id map on disk", "bleu": 0.14925824694560996, "rouge": 0.23921568627450981}, {"predict": "receive notification of the end of an element", "true": "receive notification of the end of an element", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a fatal error log message", "true": "send a fatal error log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "this does not remove the leaf which is associated with the given name", "true": "leaves can be used for many - to - many relations", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "returns a string representation of this vector", "true": "returns a string representation of this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "performs a part of the b", "true": "validate the uri characters within a specific component", "bleu": 0.17516432701748888, "rouge": 0.13926940639269406}, {"predict": "build the final bitmap - pieces to draw in animation", "true": "build the final bitmap - pieces to draw in animation", "bleu": 1.0, "rouge": 1.0}, {"predict": "un registers a previously registered vm shutdown hook", "true": "de - registers a previously - registered virtual - machine shutdown hook", "bleu": 0.22374550494929327, "rouge": 0.5791139240506329}, {"predict": "runs the current thread", "true": "a seperate thread collects our input so that we can block in the do continue on the main thread and then allow the user to interrupt us via keyboard input on this thread", "bleu": 0.0002823904518832544, "rouge": 0.09472049689440995}, {"predict": "bounds the current scroll if necessary , but does not synchronize the stack view", "true": "bounds the current scroll if necessary", "bleu": 0.4001601601922499, "rouge": 0.646643109540636}, {"predict": "provides a confusion matrix for the given evaluation", "true": "adds the statistics encapsulated in the supplied evaluation object into this one", "bleu": 0.10764345432696364, "rouge": 0.1930379746835443}, {"predict": "this method will check if the request will be visible for the export request", "true": "scans all sites until all volumes involved in the recover point protection are visible", "bleu": 0.09782375748961449, "rouge": 0.14285714285714285}, {"predict": "invoked when a service has been loaded", "true": "this method is called immediately following cache creation in the spawned process , but prior to setting the running flag in the status file", "bleu": 0.013770747312268152, "rouge": 0.0}, {"predict": "update the indicator in the indicator view", "true": "update the content of the outline view", "bleu": 0.2777619034011791, "rouge": 0.5714285714285714}, {"predict": "paints the image on the window", "true": "paints the image on the window", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if , at this time , the object will accept a connection according to the supplied event name", "true": "returns true if , at this time , the object will accept a connection with respect to the named event", "bleu": 0.7358736320910966, "rouge": 0.85}, {"predict": "it checks if the class is prefixed ( contains the character ' : ' )", "true": "it returns true if the attribute is prefixed ( used the \" : \" character )", "bleu": 0.1981969856852273, "rouge": 0.5772870662460569}, {"predict": "releases any connection that may be cleaned up in the database", "true": "release a non - shard - specific connection", "bleu": 0.11390778025531027, "rouge": 0.108348134991119}, {"predict": "adds a new actions to the quick action view", "true": "adds a collection of actions to the quick action view", "bleu": 0.6327469489917781, "rouge": 0.8341880341880341}, {"predict": "adds a simple render er to the multiple render er", "true": "adds a simple render er to the multiple render er", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies stream , fires progress events by listener , can be interrupted by listener", "true": "copies stream , fires progress events by listener , can be interrupted by listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the needed angle for a given value", "true": "calculates the needed angle for a given value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "true": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance", "true": "creates a new instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method returns a new char seq containing the string contents and returns a new char seq with the matching calls of this char seq", "true": "append string of the given char seq to this char seq", "bleu": 0.11902001907030836, "rouge": 0.35847208619000986}, {"predict": "handles the get request", "true": "this method processes all of the http get requests routed to the ser v let by the web container", "bleu": 0.009351487442933324, "rouge": 0.15561224489795916}, {"predict": "notify the state of the listener to a new state", "true": "change the stored state value and do notification , but don ' t change anything in the hardware", "bleu": 0.06735938555336447, "rouge": 0.20378619153674832}, {"predict": "test for get order ( ) method", "true": "test for get order ( ) method", "bleu": 1.0, "rouge": 1.0}, {"predict": "formats and logs a message with a throw able", "true": "formats and logs a message with a throw able", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs the red is key used to increment the queue", "true": "constructs the red is queue sorted set key name given a queue name , shard id and priority", "bleu": 0.17147880151350153, "rouge": 0.40757238307349664}, {"predict": "decodes a string to char set using the default char set", "true": "decodes the string into specified char set", "bleu": 0.17827531042796255, "rouge": 0.4629981024667932}, {"predict": "adds a new domain to the restricted list", "true": "adds specified domain name to the list of restricted domains", "bleu": 0.20314818275567617, "rouge": 0.5446428571428571}, {"predict": "create a new instance", "true": "create a new read lock from the given lock", "bleu": 0.19159730522949137, "rouge": 0.43160377358490565}, {"predict": "tests fail : always returns false , failing statements , failing if commented out", "true": "tests fail : always returns false , failing statements commented out", "bleu": 0.6729864884660303, "rouge": 0.8994638069705092}, {"predict": "computes the jr mp \" interface hash \" of this remote interface", "true": "computes the \" interface hash \" of the stub / skeleton pair for this remote implementation class", "bleu": 0.3100876476940687, "rouge": 0.6019736842105263}, {"predict": "copy the contents of the given byte array to the given output stream", "true": "copy the contents of the given byte array to the given output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if this dashboard has no items", "true": "returns true whether this page doesn ' t contain items , returns false if it does", "bleu": 0.06106734767839363, "rouge": 0.16245006657789615}, {"predict": "gif image frame , c data", "true": "decodes a frame if needed", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "encode parts of the message using text compaction as described in iso / iec 15438 : 2001 ( e ) , chapter 4", "true": "encode parts of the message using text compaction as described in iso / iec 15438 : 2001 ( e ) , chapter 4", "bleu": 1.0, "rouge": 1.0}, {"predict": "check to see if a string is a valid nc name according to 4 from the xml namespaces 1", "true": "check to see if a string is a valid nc name according to 4 from the xml namespaces 1", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends the specified element to the end of this list", "true": "appends the specified element to the end of this list", "bleu": 1.0, "rouge": 1.0}, {"predict": "prepare the data set required for running test cases", "true": "prepare the data set required for running test cases", "bleu": 1.0, "rouge": 1.0}, {"predict": "each service has each service instance waiting for discarded service getting each registrar to each service in each service", "true": "returns array of service registrar created from the proxy reg set", "bleu": 0.0712695567709093, "rouge": 0.14006888633754305}, {"predict": "checks whether the value is a valid value", "true": "check if the supplied value is a valid value", "bleu": 0.5387410466197604, "rouge": 0.6984732824427481}, {"predict": "execute primary cleanup cleanup", "true": "find a new primary , adding any failed servers we encounter to the excluded servers list first we try to make a backup server the primary , but if run out of backup servers we will try to find a new server", "bleu": 2.6894570266612114e-05, "rouge": 0.037841191066997515}, {"predict": "creates a new journal that omits redundant information", "true": "creates a new journal that omits redundant information", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the recurrence from persist ant store", "true": "removes the recurrence from persist ant store", "bleu": 1.0, "rouge": 1.0}, {"predict": "copy nodelist members into this nodelist , adding in document order", "true": "copy nodelist members into this nodelist , adding in document order", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method returns true time fetch data object fetch time to fetch date data", "true": "fetches data if it hasn ' t been fetched in a while", "bleu": 0.08839374326825923, "rouge": 0.07800511508951406}, {"predict": "creates a new document type for the given system id", "true": "introduced in dom level 2", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "services a command line request", "true": "services a command line request", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the byte array to a byte array", "true": "serializes this nested object into byte", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "creates a new css style object", "true": "returns first e num constant found in at space - separated list of style names", "bleu": 0.04928854007377984, "rouge": 0.08840579710144927}, {"predict": "click file for click on click file", "true": "<unk> mpeg next a <unk> <unk> - skip one video frame", "bleu": 0.08820727472213225, "rouge": 0.0}, {"predict": "calculates a map of export mask export mask and export mask field", "true": "given a set of export mask uris , return a map of export mask uri to export mask object", "bleu": 0.2624835268873482, "rouge": 0.4959349593495934}, {"predict": "inserts an array into this array", "true": "insert an entry at this index", "bleu": 0.24446151121745047, "rouge": 0.3333333333333333}, {"predict": "write a graphic to the printout", "true": "write a graphic to the printout", "bleu": 1.0, "rouge": 1.0}, {"predict": "put the source tree root node in the document cache", "true": "put the source tree root node in the document cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "copy a input stream to a output stream", "true": "copy a input resource to a output resource", "bleu": 0.43167001068522526, "rouge": 0.75}, {"predict": "starts audio audio file by the specified type", "true": "fade audio file sox out file fade", "bleu": 0.21105340631872638, "rouge": 0.26991150442477874}, {"predict": "draw into the provided canvas", "true": "to do : to be implemented", "bleu": 0.18796001821050234, "rouge": 0.0}, {"predict": "loads a class in the given directory", "true": "for all the classes , loads all properties from each class annotations for the given platform", "bleu": 0.07678812443288274, "rouge": 0.3249001331557923}, {"predict": "add a number to zero", "true": "add a number to zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to de serialize gps timestamp", "true": "fixes the gps timestamp in ex if", "bleu": 0.24608524656663955, "rouge": 0.3034825870646766}, {"predict": "initialize a new event type ( will be run ) co - events outside the given cell", "true": "check if a cell consumes the specified event type", "bleu": 0.11306082351602978, "rouge": 0.2443257676902537}, {"predict": "read a single character", "true": "read a single character", "bleu": 1.0, "rouge": 1.0}, {"predict": "this function is used to plot the y axis and its breakdown with its labels", "true": "this function is used to plot the y axis and its breakdown with value", "bleu": 0.861173529963367, "rouge": 0.9021615472127418}, {"predict": "get the maximum value of the event", "true": "get running - maximum time - delta , in nanoseconds", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "prints the state of the specified file to the file", "true": "prints a file with the native desktop printing facility , using the associated application ' s print command", "bleu": 0.07122387860714109, "rouge": 0.20378619153674832}, {"predict": "adds the specified set of groundings", "true": "extends the existing groundings with the alternative groundings", "bleu": 0.17516432701748888, "rouge": 0.2785388127853881}, {"predict": "expect the given pattern , returning the corresponding token type", "true": "this will attempt to read string matching the given pattern from the document at the current point indicated by the cursor", "bleu": 0.08258003986448177, "rouge": 0.24254473161033796}, {"predict": "test method to get index types", "true": "test for bug <unk> bug in 0", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "this method will be used to check whether stream is already present in cache or not for file if not present", "true": "this method will be used to check whether stream is already present in cache or not for file path if not present then create it and then add to cache , other wise get from cache", "bleu": 0.45122645477774986, "rouge": 0.7034596375617792}, {"predict": "removes a listener from the set of listeners", "true": "removes a listener from the set of listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns what the serialization specification calls \" descriptor \" given a field signature", "true": "returns what the serialization specification calls \" descriptor \" given a field signature", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the request body", "true": "adds an array of parameters to be used in the post request body", "bleu": 0.05662941877584837, "rouge": 0.4295774647887324}, {"predict": "returns the mapping of the annotation ' s annotations", "true": "creates an annotation name from a class name", "bleu": 0.14113991930789777, "rouge": 0.1189083820662768}, {"predict": "returns true if a resource has been assigned to a resource", "true": "checks whether a given resource id supports advanced <unk> or not", "bleu": 0.12605968092174913, "rouge": 0.18181818181818182}, {"predict": "a service wrapper for the create electronic text method method", "true": "a service wrapper for the create electronic text method method", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new ipv 4 : health condition", "true": "ctor - for use to create a pattern expression tree , without pattern child expression", "bleu": 0.06685045700482882, "rouge": 0.08243243243243244}, {"predict": "compute the intersection of two line segments", "true": "compute the intersection of two line segments", "bleu": 1.0, "rouge": 1.0}, {"predict": "method which removes the specified object class from original set and returns the set of object classes that were removed", "true": "method which removes the specified object class from original set and returns the set of object classes that were removed", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the unix timestamp for a given unix time", "true": "get the seconds since 1970 - 01 - 01 00 : 00 : 00 utc", "bleu": 0.09536752763778474, "rouge": 0.15947712418300655}, {"predict": "tests if the license is running", "true": "is there a pdf license", "bleu": 0.24446151121745047, "rouge": 0.18484848484848485}, {"predict": "draws the grid background", "true": "draws the grid background", "bleu": 1.0, "rouge": 1.0}, {"predict": "opens a zip stream to a file", "true": "opens a stream to an entry in the jar", "bleu": 0.23099966849728554, "rouge": 0.48897795591182364}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will be called by the native file to be able to handle a result", "true": "process the result of copy and upload content uris task", "bleu": 0.08513012360883544, "rouge": 0.16052631578947368}, {"predict": "prepare an om graphic list containing graphics from an om graphic list , and shape files", "true": "create the om graphics using the shape file and spatial index", "bleu": 0.09672649511413092, "rouge": 0.22989949748743718}, {"predict": "returns common pool queue for a thread that has submitted at least one task", "true": "returns common pool queue for a thread that has submitted at least one task", "bleu": 1.0, "rouge": 1.0}, {"predict": "determine whether the given element is a static private class", "true": "checks if the given field has package - private visibility", "bleu": 0.17827531042796255, "rouge": 0.3}, {"predict": "divide : rounding mode is round half up , result is positive ; distance = - 1", "true": "divide : rounding mode is round half up , result is positive ; distance = - 1", "bleu": 1.0, "rouge": 1.0}, {"predict": "api method", "true": "helper method", "bleu": 0.7598356856515925, "rouge": 0.5}, {"predict": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "true": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts ' ' ' or ' _ ' into account anything", "true": "converts all color and format codes", "bleu": 0.11390778025531027, "rouge": 0.12423625254582485}, {"predict": "load the text from the specified input stream", "true": "loads the database from the given input stream", "bleu": 0.2777619034011791, "rouge": 0.625}, {"predict": "calculate selector radius the selector radius can be calculated by a simple math calculation", "true": "calculate selector radius the selector radius can be calculated by a simple math calculation of the larger side", "bleu": 0.751477293075286, "rouge": 0.8557114228456915}, {"predict": "determines the width of this view", "true": "determines the width of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "test bulk get ter method", "true": "test bulk get / put byte methods", "bleu": 0.3406115671352173, "rouge": 0.48541114058355433}, {"predict": "keep the last modification object", "true": "an object was added", "bleu": 0.2730120862709067, "rouge": 0.22676579925650556}, {"predict": "s can forward until you hit a terminating character for s", "true": "parser for the local phone #", "bleu": 0.11390778025531027, "rouge": 0.12423625254582485}, {"predict": "transforms multiple paths will all matrices", "true": "transforms multiple paths will all matrices", "bleu": 1.0, "rouge": 1.0}, {"predict": "decodes a byte array from base 64 format", "true": "decodes a byte array from base 64 format", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures the truth of an expression involving the state of the calling instance", "true": "ensures the truth of an expression involving the state of the calling instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "item will slide from top of the screen to its natural position", "true": "item will slide from top of the screen to its natural position", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new mutable big integer from the specified mutable big integer value", "true": "construct a new mutable big integer with a magnitude equal to the specified mutable big integer", "bleu": 0.5555491501144719, "rouge": 0.7447280799112097}, {"predict": "handle request sent with a given binding", "true": "handle request sent with a wrong binding", "bleu": 0.7071067811865475, "rouge": 0.8571428571428571}, {"predict": "reads a checkpoint manager from the input stream", "true": "loads the checkpoints from the given stream", "bleu": 0.22679164443904004, "rouge": 0.4048672566371681}, {"predict": "load from the store", "true": "load from the store", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the string , if the file is closed", "true": "provides a string representation of whether this connection is closed or not", "bleu": 0.1430210741102858, "rouge": 0.2785388127853881}, {"predict": "adds given parameter value to a map", "true": "puts the given parameter value into a new list object then adds it to the map", "bleu": 0.11365914096398085, "rouge": 0.40612516644474045}, {"predict": "returns the minimum dimensions the target container can use to lay out the components in this layout", "true": "returns the minimum dimensions needed to lay out the components contained in the specified target container", "bleu": 0.45046627229833414, "rouge": 0.6093906093906094}, {"predict": "solve the inverse function like s , and set the result of the same as the g", "true": "a coordinate descent algorithm for l 1 - loss and l 2 - loss epsilon - s vr dual problem min \\ beta 0", "bleu": 0.052962686586715185, "rouge": 0.04732350659425911}, {"predict": "performs a position on the given position in the list", "true": "select a view from position in the adapter", "bleu": 0.24808415001701817, "rouge": 0.4535315985130111}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "ign or able whitespace", "true": "ign or able whitespace", "bleu": 1.0, "rouge": 1.0}, {"predict": "wait for the editor to be started", "true": "get editor for provided file , returns once editor is active or after time out", "bleu": 0.06555660318294844, "rouge": 0.17062937062937064}, {"predict": "computes the solutions that computes the solutions named by the solutions in the population plus an empty v - step , and those the solutions to missing data", "true": "returns the solution with the largest objective value for the given objective", "bleu": 0.05146852383843666, "rouge": 0.161660777385159}, {"predict": "convert a mercator coord to the y coord s and longitude", "true": "returns the y position based on latitude", "bleu": 0.14991106946711685, "rouge": 0.2314990512333966}, {"predict": "register a listener for a service module", "true": "registration for event change notifications", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "parses an ascii property list from an input stream", "true": "parses an ascii property list from an input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate score of current score from the current score ( rounded to the current score ) and the current score", "true": "function to be minimized : - log likelihood", "bleu": 0.06108557268562171, "rouge": 0.07741116751269035}, {"predict": "creates a new instance of grammatical it y estimator , using a given max word", "true": "creates a new instance of grammatical it y estimator , using a given set of documents for training", "bleu": 0.7050692527177316, "rouge": 0.7751710654936461}, {"predict": "check if a zone link string is in the database", "true": "change this should review zone", "bleu": 0.12605968092174913, "rouge": 0.1418604651162791}, {"predict": "checks a poisson distribution with a random sample from the distribution", "true": "verifies that next poisson ( mean ) generates an empirical distribution of values consistent with poisson distribution i mpl by generating 1000 values , computing a grouped frequency distribution of the observed values and comparing this distribution to the corresponding expected distribution computed using poisson distribution i mpl", "bleu": 0.006412379055129027, "rouge": 0.18272591113330006}, {"predict": "check that x contains infinity", "true": "loop and ensure all elements are non - in fi it e and non - nan , throws an exception if one is", "bleu": 0.006272840429486897, "rouge": 0.0}, {"predict": "measure and layout all currently visible children", "true": "measure and layout all currently visible children", "bleu": 1.0, "rouge": 1.0}, {"predict": "process the connection and sends the connection to all the events", "true": "processes game events occurring on this connection by dispatching them to any registered game listener objects", "bleu": 0.08598135896069606, "rouge": 0.14336075205640422}, {"predict": "returns a new percentage that keeps only the specified range", "true": "gets the percent of values within the specified value range", "bleu": 0.17827531042796255, "rouge": 0.3}, {"predict": "quietly closes the given close able ignoring any io exceptions", "true": "closes resource without reporting any error", "bleu": 0.13950796967929133, "rouge": 0.26180257510729615}, {"predict": "release a request for the download request", "true": "similar to the release page context method , but take luce e page context as entry", "bleu": 0.056829570481990416, "rouge": 0.08122503328894808}, {"predict": "adds a new event listener to this dialog", "true": "adds a new event listener to this dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts string to byte array", "true": "returns this java string as a null - terminated byte array", "bleu": 0.11629030063732083, "rouge": 0.35124760076775424}, {"predict": "load a class path into a properties object", "true": "atomic ally load the properties file at the given location within the designated class loader", "bleu": 0.07949903911132591, "rouge": 0.16486486486486487}, {"predict": "compares this object to another object", "true": "returns true if the object is a graph with the same content", "bleu": 0.0812630644213965, "rouge": 0.10481099656357389}, {"predict": "parses a name - value - pair with the given parser", "true": "parses a name - value - pair with the given parser", "bleu": 1.0, "rouge": 1.0}, {"predict": "actions a pull event", "true": "actions a pull event", "bleu": 1.0, "rouge": 1.0}, {"predict": "get mapping from a vector", "true": "returns the mapping object at the location in map indicated by loc", "bleu": 0.06732395159376953, "rouge": 0.1095152603231598}, {"predict": "compile the template and return the result", "true": "parse the file to string with the json", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "find the differences between two texts", "true": "find the differences between two texts", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance of repository", "true": "construct a new repository with the given default domain", "bleu": 0.1894765350842885, "rouge": 0.3860759493670886}, {"predict": "returns the number of un processed tokens remaining in the string", "true": "returns the number of un processed tokens remaining in the string", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds all the index files ( for use as root and adds them to the given index", "true": "possibly better in <unk> low memory environments ? <unk> the above method by creating a queue with one element and passes it in", "bleu": 0.0561715931054953, "rouge": 0.09736632083000799}, {"predict": "reset all common components before parsing", "true": "reset all common components before parsing", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the labels for the given volumes and un - ones", "true": "updates the label field of the invalid t gt , and if the volume is <unk> by a v plex volume , also updates the target v plex volume label", "bleu": 0.024080520695165593, "rouge": 0.13505535055350554}, {"predict": "handle a message with the given exception", "true": "shows the given errors to the user", "bleu": 0.24446151121745047, "rouge": 0.2857142857142857}, {"predict": "reads the case of the object from the bean", "true": "handle serialization a little bit better , replacing the i 18 n and bean context child support", "bleu": 0.06421450514370824, "rouge": 0.14575866188769412}, {"predict": "paint the arrow enabled state", "true": "paint the arrow in enabled state", "bleu": 0.49473859088183875, "rouge": 0.8944281524926685}, {"predict": "logs a thrown exception", "true": "logs a thrown exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a small big decimal to big integer", "true": "convert a small big decimal to big integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "called when the accuracy of the sensor has changed", "true": "called when the accuracy of the sensor has changed", "bleu": 1.0, "rouge": 1.0}, {"predict": "set max c rl number ( big integer max c rl ) method testing", "true": "set max c rl number ( big integer max c rl ) method testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines and shows a popup menu for the given mouse event", "true": "checks if the given mouse event is a popup trigger and creates a new popup menu if necessary", "bleu": 0.21506162680064977, "rouge": 0.2643553629469122}, {"predict": "first pending tasks that are in the specified task in the list , and returns true if new tasks are full , or the task in the specified task )", "true": "remove a task if it has index > = min", "bleu": 0.044644767873512764, "rouge": 0.10990990990990988}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures that all the characters in the path and that the directories are in the map", "true": "ensures that the given path exists with no data , the current a cl and no flags", "bleu": 0.13008115034937162, "rouge": 0.30138339920948615}, {"predict": "load a class from the specified name", "true": "override load class so we can check package access", "bleu": 0.15447878876032708, "rouge": 0.24448897795591182}, {"predict": "determines the height of this view", "true": "determines the height of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "this only checks clipping along the bottom edge", "true": "this only checks clipping along the bottom edge", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new scheduling rule factory for the given work space", "true": "creates a new scheduling rule factory for the given work space", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a byte array to a file creating the file if it does not exist", "true": "writes a byte array to a file creating the file if it does not exist", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the specified item to the end of the list", "true": "adds the specified item to the end of the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if there are any non - configured messages", "true": "checks and flushes custom event messages if no nodes are attempting to join the grid", "bleu": 0.08617428905281956, "rouge": 0.15947712418300655}, {"predict": "determines the number of consecutive characters that are en cod able using numeric compaction", "true": "determines the number of consecutive characters that are en cod able using numeric compaction", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the current node and returns the number of elements added", "true": "parses the current node and returns the number of elements added", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the height of the entity corresponding to given", "true": "calculates scramble image height multiplier to respect aspect ratio", "bleu": 0.15619699684601276, "rouge": 0.2222222222222222}, {"predict": "test for equality , both values and attribute values , both for property values that types are properly type and x property mapper", "true": "unit test to verify that limited number of core types do not include type information , even if declared as object", "bleu": 0.06964541799727335, "rouge": 0.18332081141998496}, {"predict": "close the callback , and close cache callback thread", "true": "the listener is not closed until after the after region destroy event", "bleu": 0.10113117135596685, "rouge": 0.0928462709284627}, {"predict": "static version of indexof , to allow repeated calls without needing to re - acquire array each time", "true": "static version of indexof , to allow repeated calls without needing to re - acquire array each time", "bleu": 1.0, "rouge": 1.0}, {"predict": "populate the profiles for the profiles", "true": "populate the profiles combo box and select the default", "bleu": 0.26367153725164694, "rouge": 0.5147679324894514}, {"predict": "validates the file header , validates the magic number , validates the magic number", "true": "read the file header and return the log sequence number stored in the file header", "bleu": 0.17617947638518647, "rouge": 0.41123595505617977}, {"predict": "absolute value of the absolute value", "true": "absolute value of real component", "bleu": 0.4111336169005197, "rouge": 0.5545454545454546}, {"predict": "determines the type - th - in - language range", "true": "returns the type of the ex tre mum at the specified alpha values", "bleu": 0.12290460988295328, "rouge": 0.16991643454039}, {"predict": "returns a lg name for a lg name", "true": "returns oid for a lg name", "bleu": 0.46713797772820004, "rouge": 0.7331730769230769}, {"predict": "provide reflective behavior to construct instance of generator given an array of string arguments", "true": "provide reflective behavior to construct instance of generator given an array of string arguments", "bleu": 1.0, "rouge": 1.0}, {"predict": "refills the input buffer", "true": "refills the input buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "in - list fields how many mouse button is pressed on selection", "true": "when there is an in place editor we \" listen \" all mouse event and finish editing by any mouse pressed or mouse released event", "bleu": 0.04422089126606837, "rouge": 0.1525}, {"predict": "add a module to the set of modules to load and register its services", "true": "add a module to the set of modules to load and register its services", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines whether there are all currently been generated to the database", "true": "makes sure that all required bin navi database tables exist", "bleu": 0.12605968092174913, "rouge": 0.1921259842519685}, {"predict": "classifies the last feature vector", "true": "this method classifies several instances at once", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "to bind different view holder and solve the adapter", "true": "bind header with provided view holder at specified position", "bleu": 0.19960198807747329, "rouge": 0.3333333333333333}, {"predict": "updates the current line list", "true": "updates the displayed list of lines", "bleu": 0.31610981104846864, "rouge": 0.5366568914956013}, {"predict": "draws a rectangle of given half width and half height , centered on ( x , y )", "true": "draws a rectangle of given half width and half height , centered on ( x , y )", "bleu": 1.0, "rouge": 1.0}, {"predict": "re - measure the loading views height , and adjust internal padding as necessary", "true": "re - measure the loading views height , and adjust internal padding as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "replaces a split element with an index", "true": "replaces a split element with another one", "bleu": 0.6803749333171202, "rouge": 0.7142857142857143}, {"predict": "called to start adding an item to a list", "true": "called to start an item list", "bleu": 0.32466791547509893, "rouge": 0.8299319727891156}, {"predict": "number of rows returned from the given number of rows", "true": "pick a number of initial splits based on the number of records expected to be processed", "bleu": 0.1198285051971345, "rouge": 0.36924939467312345}, {"predict": "invoked when a mouse button has been clicked", "true": "invoked when the mouse has been clicked on a component", "bleu": 0.29704751687896164, "rouge": 0.6535714285714286}, {"predict": "source source source list to source files", "true": "scans a single source dir for sources and includes only the files whose name match the patterns in source includes and excludes all files whose names match the patterns in source excludes", "bleu": 0.006566946218814477, "rouge": 0.13790504898266767}, {"predict": "returns true if there is another postponed route to try", "true": "returns true if there is another postponed route to try", "bleu": 1.0, "rouge": 1.0}, {"predict": "determine whether the selection has a single element", "true": "check if the selection has a single element", "bleu": 0.7259795291154771, "rouge": 0.75}, {"predict": "create i gfs path from uri", "true": "constructs a path from an uri", "bleu": 0.31239399369202553, "rouge": 0.5}, {"predict": "reads a xml element attribute an s cast it to a in t value", "true": "reads a xml element attribute an s cast it to a in t value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the remainder of ' reader ' as a string , closing it when done", "true": "returns the remainder of ' reader ' as a string , closing it when done", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a check to the get ter property for the type of the check box", "true": "adds the get ter s for a property that is identified by a property number which indexes into array of get ter s per type", "bleu": 0.09884108419632606, "rouge": 0.28705882352941176}, {"predict": "moves the given entry to the buffer", "true": "marks the specified entry as used by setting its last used time to the current time in nanoseconds", "bleu": 0.05770453188915095, "rouge": 0.29647630619684084}, {"predict": "execute a new request", "true": "default : just returns \" success \"", "bleu": 0.142719668098593, "rouge": 0.0}, {"predict": "handles the state of an endpoint", "true": "handle node leaving the ring", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "registers implementing class of the signature algorithm with algorithm uri", "true": "registers implementing class of the transform algorithm with algorithm uri", "bleu": 0.7016879391277371, "rouge": 0.9}, {"predict": "creates new key value associated with given settings file", "true": "constructs ignite cache key / value persistence settings", "bleu": 0.16784459625186196, "rouge": 0.35672514619883033}, {"predict": "returns true if the input sequence contains no characters", "true": "returns true if the input string contains a word - breaking character", "bleu": 0.38498150077635496, "rouge": 0.5570776255707762}, {"predict": "runs the interior of a route string and a interior of a vertex string", "true": "checks all pairs of segments for intersections at an interior point of a segment", "bleu": 0.13217947626377288, "rouge": 0.2857142857142857}, {"predict": "removes the first occurrence , starting at the beginning and moving towards the end , of the specified object from this vector", "true": "removes the first occurrence , starting at the beginning and moving towards the end , of the specified object from this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a compose function of the given operator , with all qualifiers after the first after a g - function", "true": "compose two functions together into a single function", "bleu": 0.07264339766175722, "rouge": 0.23223350253807104}, {"predict": "add an sql column specification to the list of columns", "true": "add cdc column specifications", "bleu": 0.13950796967929133, "rouge": 0.3096446700507614}, {"predict": "utility method that implements data binding ' s logic to convert a file name to a java field name", "true": "utility method to convert a variable name into java field name", "bleu": 0.19835441454182887, "rouge": 0.6303099885189437}, {"predict": "a function that generates random aes & h mac keys and prints out exceptions but doesn ' t throw them since none should be encountered", "true": "a function that generates random aes & h mac keys and prints out exceptions but doesn ' t throw them since none should be encountered", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures the truth of an expression involving one or more parameters to the calling method", "true": "ensures the truth of an expression involving one or more parameters to the calling method", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the instructions form of the form", "true": "use the parameter sq lite database to execute the passing sql s", "bleu": 0.10063351655856649, "rouge": 0.20098846787479407}, {"predict": "creates a new journal that omits redundant information", "true": "creates a new journal that omits redundant information", "bleu": 1.0, "rouge": 1.0}, {"predict": "refreshes the done button of the dialog after the member of the listener is done", "true": "refreshes the done button", "bleu": 0.22894156860669912, "rouge": 0.4701348747591522}, {"predict": "create the migration task editor", "true": "create the basic editor", "bleu": 0.3860973950960897, "rouge": 0.6802973977695167}, {"predict": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "true": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures there is enough space in the buffer for the given number of additional bytes", "true": "ensures there is enough space in the buffer for the given number of additional bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "accepts an ipv 4 address of the form xxx", "true": "accepts an ipv 4 address of the form xxx", "bleu": 1.0, "rouge": 1.0}, {"predict": "close the given cursor and remove it from the map", "true": "close the given cursor and remove it from the map", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the input matched by the string", "true": "determines if the remaining g ser string matches the provided pattern", "bleu": 0.1689983564524028, "rouge": 0.2946859903381642}, {"predict": "generate the instruction to push the given integer on the stack", "true": "push i on to our operand stack", "bleu": 0.14323145079400493, "rouge": 0.3472485768500949}, {"predict": "escapes xml node and escapes any xml nodes", "true": "create an xml node with optional attributes and content", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "adds the specified item to the adapter ' s list", "true": "adds the specified item to the list with the specified position", "bleu": 0.5338964887591194, "rouge": 0.6609907120743034}, {"predict": "notify unsuccessful completion of the operation", "true": "notify unsuccessful completion of the operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "transform an xsl - fo stream source to the specified output stream", "true": "transform an xsl - fo stream source to the specified output format", "bleu": 0.912167909070388, "rouge": 0.9166666666666665}, {"predict": "splits the input string based on the default delimiter , per the default delimiter will be escaped , etc ) for all the default delimiter defined by the default delimiter", "true": "splits the input string based on the default delimiter , and also escapes delimiter", "bleu": 0.32705341718250747, "rouge": 0.5350877192982456}, {"predict": "reads thread until a given buffer is available", "true": "reads data with blocking", "bleu": 0.16036590969929357, "rouge": 0.17732558139534885}, {"predict": "deletes the parameters with the parameters draw parameters for the specified flags parameters", "true": "remove an <unk> from every state in the state set", "bleu": 0.09552040806823771, "rouge": 0.08905109489051095}, {"predict": "set bounds for the right text view including clip padding", "true": "set bounds for the right text view including clip padding", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an appropriate package content i mpl for the given data block and data", "true": "creates a nes compound content for the given blob information", "bleu": 0.18207052811092136, "rouge": 0.42957746478873243}, {"predict": "checks to see if the in cluster definition has been coverage", "true": "checks , whether all attributes are covered by cluster definitions and returns true in that case", "bleu": 0.08598135896069606, "rouge": 0.14336075205640422}, {"predict": "find all values that match the specified string to a set of integers", "true": "search for a string in the enumeration", "bleu": 0.1135935489027116, "rouge": 0.10571923743500866}, {"predict": "returns the first index of el t in the array , else - 1", "true": "returns the first index of el t in the array if < len , else - 1", "bleu": 0.7071611199594787, "rouge": 0.8877338877338876}, {"predict": "append a value to a list", "true": "add a new value for name", "bleu": 0.24446151121745047, "rouge": 0.3333333333333333}, {"predict": "compares the argument to this certificate", "true": "compares the argument to this certificate", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a given cell to a string", "true": "appending the between operator clause", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "writes a long value", "true": "encode a unicode string", "bleu": 0.35930411196308426, "rouge": 0.25}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a new map of the values in a geo time serie", "true": "build an occurrence count by value for the given time serie", "bleu": 0.14694106251955755, "rouge": 0.2629310344827586}, {"predict": "this function will take a song entry and update it to the latest week and increase the count for the current week by 1 if necessary", "true": "this function will take a song entry and update it to the latest week and increase the count for the current week by 1 if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "recursively assign node weights", "true": "recursively assign node weights", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance of search engine", "true": "creates a new instance of search engine", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a field to the query", "true": "adds a field to run the query string against", "bleu": 0.42888194248035344, "rouge": 0.7721518987341772}, {"predict": "combines two completion stage into a stage", "true": "combines multiple stages by applying a function", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "build and return a unique schema statement", "true": "return a statement that will create the schema , null if no create schema can be given", "bleu": 0.06656592803413297, "rouge": 0.23252858958068615}, {"predict": "and for two negative numbers ; the first is shorter", "true": "and for a negative and a positive numbers ; the first is shorter", "bleu": 0.4803550589888314, "rouge": 0.7646239554317549}, {"predict": "creates a stream info manager object", "true": "create a new manager object", "bleu": 0.31239399369202553, "rouge": 0.5545454545454546}, {"predict": "get a sentence in the sentence directory", "true": "returns the list of sentences in the knowledge base chained together as a single sentence", "bleu": 0.08858009236942327, "rouge": 0.2559440559440559}, {"predict": "determine if the expression form a form which can be included in the form", "true": "determine if the expression is a pronoun", "bleu": 0.25748661016289676, "rouge": 0.5066445182724253}, {"predict": "output the sql type for a java short", "true": "output the sql type for a java short", "bleu": 1.0, "rouge": 1.0}, {"predict": "breaks a string to multiple strings", "true": "breaks a string to multiple strings ( similar to string token ize r )", "bleu": 0.2635971381157267, "rouge": 0.5596330275229358}, {"predict": "write all modified favorites to the data stream", "true": "write all modified favorites to the data stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the average in the last average of the last time", "true": "update the fps counter", "bleu": 0.11390778025531027, "rouge": 0.14558472553699284}, {"predict": "validates if these feature ids have been set", "true": "validates all fields based on their value and their validation rules if a field is pre filled from the account on file , but it has been altered , it will be validated", "bleu": 0.008379137075747077, "rouge": 0.13184438040345822}, {"predict": "create a new crypto result", "true": "note , does not make a defensive copy of any of the data", "bleu": 0.05512018958855254, "rouge": 0.10286677908937607}, {"predict": "invoked when the state of the widget has changed when it log debug events prior to display log pane", "true": "handle a change in the slider by updating the data set value", "bleu": 0.0712695567709093, "rouge": 0.1345093715545755}, {"predict": "parse a delimited string into an array of strings", "true": "parse a list of substring s separated by a given delimiter", "bleu": 0.15982877755018768, "rouge": 0.2946859903381642}, {"predict": "creates the layout private for the layout private program and add it to the layout", "true": "lays out the panel", "bleu": 0.08225964699966554, "rouge": 0.11753371868978806}, {"predict": "indicates whether this frame is currently running", "true": "returns true if the gui is started and not paused , and false otherwise", "bleu": 0.06833381956448398, "rouge": 0.08983799705449189}, {"predict": "creates a default mosaic definition", "true": "creates a default mosaic definition", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a result of the two expressions", "true": "creates a result based on a single relational expression", "bleu": 0.18370727471078332, "rouge": 0.24448897795591182}, {"predict": "this method uses the trust manager to trust the trust manager", "true": "set the default x 509 trust manager to an instance of a fake class that trust all certificates , even the self - signed ones", "bleu": 0.06829199202264531, "rouge": 0.31148936170212765}, {"predict": "checks if the component is in need to be shown or not", "true": "is the component in need of a form", "bleu": 0.17996531271765898, "rouge": 0.4149659863945578}, {"predict": "adds the listener to be notified of listeners", "true": "adds all internal listeners", "bleu": 0.17747405280050269, "rouge": 0.3546511627906977}, {"predict": "the \" safe \" square root of the input value , handling negative values by simply making them positive and then negating the return value", "true": "the \" safe \" square root of the input value , handling negative values by simply making them positive and then negating the return value", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs specified number of threads in a single thread", "true": "runs callable tasks each in separate threads", "bleu": 0.16784459625186196, "rouge": 0.2557651991614256}, {"predict": "receive a single or single to single or double", "true": "appends a character to parser ' s buffer", "bleu": 0.15619699684601276, "rouge": 0.2378167641325536}, {"predict": "initializes the owner references for the field set", "true": "sets the provided state manager as the owner for the provided field value", "bleu": 0.14867523320266893, "rouge": 0.45658682634730546}, {"predict": "construct a select statement suitable for use in a group of select statements that will be joined through union operators in build union query", "true": "construct a select statement suitable for use in a group of select statements that will be joined through union operators in build union query", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new node instance with the given coordinates", "true": "constructs a node with the given location", "bleu": 0.2907153684841096, "rouge": 0.639412997903564}, {"predict": "increase and add all the elements in the list of output and x instructions", "true": "adds an element to the counter or caches it to be added", "bleu": 0.08839374326825923, "rouge": 0.07800511508951406}, {"predict": "reverts a set of \" svn checkout \" to any specification", "true": "reverts the list of files we are passed", "bleu": 0.12605968092174913, "rouge": 0.216696269982238}, {"predict": "concatenates a list of float arrays into a single array", "true": "concatenates a list of float arrays into a single array", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a tagging decorator for the given line of tags", "true": "iterator over all values following an occurrence of tag in a line", "bleu": 0.12273680279953825, "rouge": 0.1788856304985337}, {"predict": "adds a new tree node to the tree , unless it ' s path is descending", "true": "move higher in the tree , beyond even an apparent root of tree", "bleu": 0.1513851459876605, "rouge": 0.21082949308755758}, {"predict": "writes the contents of the internal buffer to the given array of bytes", "true": "writes the contents of the internal buffer to the given array starting at the given offset", "bleu": 0.6657650257024929, "rouge": 0.7447280799112097}, {"predict": "called when an item is removed", "true": "dismisses item from the given position", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "probability density function of the probability density function of the specified variance", "true": "calculate a normal probability density function ( pdf ) based on a variance and mean value", "bleu": 0.14651637512439772, "rouge": 0.2785388127853881}, {"predict": "sorts an array of strings , returning a new array with the sorted items", "true": "sorts an array of strings , returning a new array with the sorted items", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new zoom listener", "true": "adds a new zoom listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears all registers of the function register all the operands of a register", "true": "initialize ( clear ) the d node field in register for all registers in this basic block by setting them to null", "bleu": 0.07147814277472324, "rouge": 0.1638316920322292}, {"predict": "fire a single annotation to the popup", "true": "fire when an annotation has been selected", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "if request stats , last update the timestamp so far", "true": "updates the prediction stats and return whether prediction is allowed", "bleu": 0.13950796967929133, "rouge": 0.1}, {"predict": "authenticates the received server evidence message against the previously received values", "true": "authenticates the server evidence message m 2 received and saves it only if correct", "bleu": 0.19947981050038782, "rouge": 0.4698331193838254}, {"predict": "handles an rt f rt f syntax and its integer", "true": "handles any pure text ( containing no control characters ) in the input stream", "bleu": 0.08450033111870488, "rouge": 0.08090185676392574}, {"predict": "removes an existing uri from the list of registered resources", "true": "remove a service from the registry and / or set of known aliases", "bleu": 0.13206959826272413, "rouge": 0.25487465181058494}, {"predict": "transform an attribute name containing content from an xml tag head and form them to an un escaping", "true": "removes each two leading ' \\ ' , removes leading $ , removes { } examples : $ qq q - > qq q \\ $ qq q - > qq q if dummy attributes are collected too , null otherwise \\ \\ $ qq q - >", "bleu": 0.010815014622655559, "rouge": 0.0}, {"predict": "constructs an escaped writer around the given writer", "true": "constructs an escaped writer around the given writer", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if this cookie has expired", "true": "returns true if this cookie has expired", "bleu": 1.0, "rouge": 1.0}, {"predict": "record this cache", "true": "records the record builder i mpl , and verifies if required", "bleu": 0.03733241372167512, "rouge": 0.1295116772823779}, {"predict": "check if method is an method of the given method parameter", "true": "compare the method that was called to the intended method when the os x adapter instance was created ( e", "bleu": 0.05976941963701239, "rouge": 0.18391959798994972}, {"predict": "remainder of division of equal in absolute value numbers", "true": "remainder of division of two positive numbers", "bleu": 0.4111336169005197, "rouge": 0.639412997903564}, {"predict": "clear out the metadata , which means the user wants to be reused", "true": "resets the state of this builder", "bleu": 0.09552040806823771, "rouge": 0.11275415896487984}, {"predict": "\\ brief distance ( this , b )", "true": "\\ brief distance ( vec 3 a , vec 3 b )", "bleu": 0.3219290164685343, "rouge": 0.6756329113924051}, {"predict": "check the backup info and backup for the 3 db", "true": "checks version and ips", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "converts the given string to lowercase", "true": "convert to lower case , and check that all chars are ascii alphanumeric , ' - ' or '", "bleu": 0.025305580246002504, "rouge": 0.07314148681055155}, {"predict": "create a negative number from a sign and an array of bytes", "true": "create a negative number from a sign and an array of bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds and returns a opus comment", "true": "builds and returns a opus comment", "bleu": 1.0, "rouge": 1.0}, {"predict": "assert the property name corresponds to an array of properties , and then calling function for filtering the received", "true": "assert that the property values of a new event and a removed event match the expected insert and removed values", "bleu": 0.09937980696409839, "rouge": 0.306276150627615}, {"predict": "returns the number of elements in this set", "true": "returns the number of elements in this set", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a string to uppercase", "true": "safely convert the string to uppercase", "bleu": 0.41602390756021224, "rouge": 0.5366568914956013}, {"predict": "returns an iterator over the edges for the knowledge base", "true": "iterator over the knowledge edge ' s representing required edges", "bleu": 0.27901593935858265, "rouge": 0.4}, {"predict": "unlock the given lock", "true": "unlocks the objects acquired from locking", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "creates and returns a string formatted so it will fit in a box suitable for a java doc header", "true": "creates and returns a string formatted so it will fit in a box suitable for a java doc header", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert text to two - digit characters", "true": "force number string to two digits , this takes a string of digits , and forces it to be two digits long", "bleu": 0.02868002063817162, "rouge": 0.1261633919338159}, {"predict": "add an item to the list of potential for small items to this instance , and adds more items added to the specific", "true": "adds a named item to the list of items that will be dropped on dead if clear drop item list hasn ' t been called first , this will change all creatures of this kind", "bleu": 0.13070858823691503, "rouge": 0.2326975476839237}, {"predict": "finds a list of all the given type ids", "true": "finds jp a entities by their primary keys", "bleu": 0.15619699684601276, "rouge": 0.2378167641325536}, {"predict": "load work fl w and initialize the session attributes", "true": "load work fl w and initialize the session attributes", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the hash code of this instance", "true": "returns a hash code value for this certificate from its encoded form", "bleu": 0.13597602315271134, "rouge": 0.40197693574958815}, {"predict": "removes the from tags", "true": "removes the from tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "verifies the given sec p 256 k 1 signature in native code", "true": "verifies the given sec p 256 k 1 signature in native code", "bleu": 1.0, "rouge": 1.0}, {"predict": "recursively delete the web app directory", "true": "recursively delete the web app directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "verifies that the iterator visits any duplicates in the iterator", "true": "verifies that the iterator visits the specified objects in some arbitrary ordering and that the iterator is exhausted once all expected objects have been visited", "bleu": 0.11933579569890698, "rouge": 0.42434782608695654}, {"predict": "returns the fixed amount of ending in the fixed range", "true": "formats the finished percentage of a <unk> group into a string with one digit after comma", "bleu": 0.0765635970878477, "rouge": 0.1476997578692494}, {"predict": "generate the host name for the in t with the specified name", "true": "generates the hostname for a node", "bleu": 0.11498759556447223, "rouge": 0.2364341085271318}, {"predict": "copies all data from the specified file into a new one", "true": "transfer all the sequences listed in the supplied file , interpreting entries appropriately", "bleu": 0.11294012253658708, "rouge": 0.24629878869448185}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "unwraps expression to fully unwraps the expression", "true": "removes the outermost property from a nested get ter expression", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "if we have all pie chart config then there is no point in reloading it", "true": "if we have all pie chart config then there is no point in reloading it", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the next event number", "true": "generates a ( random ) time difference between two events", "bleu": 0.08445588027797912, "rouge": 0.0}, {"predict": "creates the line structure for the given text", "true": "creates the line structure for the given text", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the square root of the specified value", "true": "returns the positive square root of the specified value", "bleu": 0.7090230911670939, "rouge": 0.931297709923664}, {"predict": "counts the number of black / white transitions between two points , using something like bres en ham ' s algorithm", "true": "counts the number of black / white transitions between two points , using something like bres en ham ' s algorithm", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a long into a bit string", "true": "convert a number into a bit string with separators between each group of 8", "bleu": 0.21874242445215208, "rouge": 0.5390279823269514}, {"predict": "encodes an array of bytes into an array of url safe 7 - bit characters", "true": "encodes an array of bytes into an array of url safe 7 - bit characters", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new message token ize r", "true": "initializes with the string contents", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "wait for up to the node into the condition", "true": "waits for all threads to reach this barrier", "bleu": 0.15619699684601276, "rouge": 0.2378167641325536}, {"predict": "load the translation table and save them to the cache if not already been collected", "true": "populates the translations cache map unless it is already populated", "bleu": 0.09782375748961449, "rouge": 0.2489795918367347}, {"predict": "create a new x product mode for handling events", "true": "construct a <unk> mouse mode", "bleu": 0.15619699684601276, "rouge": 0.3012345679012346}, {"predict": "adds a new event to the queue", "true": "adds a new event to the queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "stops the timer with the specified name", "true": "stops the timer with the specified name", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the summary as string", "true": "returns the summary as string", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a temporary file in the directory given by java", "true": "create a hierarchy of directories ( a path ) in the designated temp dir", "bleu": 0.1398375243152994, "rouge": 0.32360742705570295}, {"predict": "plots the current line of text as a single line , and appends the result to the blocks if there is no line", "true": "draws a horizontal span into the graph and optionally adds a legend", "bleu": 0.06293173924458136, "rouge": 0.1211519364448858}, {"predict": "select also all items belonging to any connected set of the current selected items", "true": "select also all items belonging to any connection of the current selected items", "bleu": 0.7241577342575828, "rouge": 0.8948655256723717}, {"predict": "create an instance of abstract r initialize r , with the given interval", "true": "create a new instance that optionally supports unicode sort keys", "bleu": 0.10571070857151538, "rouge": 0.1781021897810219}, {"predict": "removes from the list of nodes any that cannot be parents of x given the background knowledge", "true": "removes from the list of nodes any that cannot be parents of x given the background knowledge", "bleu": 1.0, "rouge": 1.0}, {"predict": "configures a properties object from a properties stream", "true": "called with an input stream for a properties file , used for reading tiles", "bleu": 0.10712878727413526, "rouge": 0.1732954545454545}, {"predict": "opens a new connection", "true": "open a new database connection", "bleu": 0.39573418216703893, "rouge": 0.6535714285714286}, {"predict": "a simple implementation of the add relations method which presents the general concept of the project", "true": "a simple implementation of the add relations method which presents the general concept of the method", "bleu": 0.9351334836242398, "rouge": 0.9375000000000001}, {"predict": "this method processes the backward list in the switch pin", "true": "the <unk> p packets are forwarded out of all the ports out of an open flow domain", "bleu": 0.06927760750451363, "rouge": 0.14153132250580047}, {"predict": "sleep for the specified time , ignoring any exceptions that occur", "true": "waits the specified number of milliseconds", "bleu": 0.14991106946711685, "rouge": 0.2484725050916497}, {"predict": "verify that the set of entries exist", "true": "verify that the write set is not found ( no keys in 0 : 1000 ) )", "bleu": 0.08760568803378818, "rouge": 0.3100381194409148}, {"predict": "calculate entropy of the same definition", "true": "calculates the entropy corresponding to the input <unk>", "bleu": 0.17516432701748888, "rouge": 0.2785388127853881}, {"predict": "check to see if a string is a valid nm token according to 7 in the xml 1", "true": "check to see if a string is a valid nm token according to 7 in the xml 1", "bleu": 1.0, "rouge": 1.0}, {"predict": "search the search event", "true": "determines what action the user wants to perform", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "parses a double value", "true": "parses out and converts the text located between first occurrences of the open and closed tags into double", "bleu": 0.012007547560562644, "rouge": 0.16310160427807485}, {"predict": "put a string into the log", "true": "place a string into the message ( using utf - 8 encoding )", "bleu": 0.19144701285352453, "rouge": 0.39482200647249194}, {"predict": "actions a pull event", "true": "actions a pull event", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a r tcp event listener", "true": "add a r tcp event listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new array of the given size if necessary and copies the data into the new array", "true": "creates a new array of the given size if necessary and copies the data into the new array", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method detects a code in a \" pure \" image - - that is , pure monochrome image which contains only an un rotated , un skewed , image of a code , with some white border around it", "true": "this method detects a code in a \" pure \" image - - that is , pure monochrome image which contains only an un rotated , un skewed , image of a code , with some white border around it", "bleu": 1.0, "rouge": 1.0}, {"predict": "error processing of an error", "true": "reports an error", "bleu": 0.35930411196308426, "rouge": 0.5236051502145923}, {"predict": "connects socket ' fd ' to ' in et address ' on ' port ' , with no time out", "true": "connects socket ' fd ' to ' in et address ' on ' port ' , with no time out", "bleu": 1.0, "rouge": 1.0}, {"predict": "determine if the string - value of a node is whitespace", "true": "determine if the string - value of a node is whitespace", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new status panel", "true": "creates a new status panel", "bleu": 1.0, "rouge": 1.0}, {"predict": "open an access file", "true": "open the pds file", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "de registers a spring from this base spring system , so it won ' t be iterated anymore", "true": "de registers a spring from this base spring system , so it won ' t be iterated anymore", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the name of the class file", "true": "returns current log file", "bleu": 0.20556680845025982, "rouge": 0.3824451410658307}, {"predict": "parses an n - triples node , creates an object for it using the supplied value factory and returns this object", "true": "parses an n - triples b node , creates an object for it using the supplied value factory and returns this object", "bleu": 0.8788691261950415, "rouge": 0.9726651480637813}, {"predict": "resets the psr list", "true": "resets the psr list", "bleu": 1.0, "rouge": 1.0}, {"predict": "sorts the specified array in ascending numerical order", "true": "sorts the specified array in ascending numerical order", "bleu": 1.0, "rouge": 1.0}, {"predict": "close this popup menu", "true": "close this popup menu", "bleu": 1.0, "rouge": 1.0}, {"predict": "free an object id", "true": "remove an object from the map", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "initiate a view from the head", "true": "expand the view vertically to the size of the cross size ( considering the view margins )", "bleu": 0.03908444433970424, "rouge": 0.1601049868766404}, {"predict": "android ' s hex address", "true": "convert a 32 char hex string into a in et 6 address", "bleu": 0.07450619999160439, "rouge": 0.2190305206463196}, {"predict": "track a failure - multiply the back off interval by the multiplier", "true": "track a failure - multiply the back off interval by the multiplier", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a double ( 64 bit ) from the source stream", "true": "reads a double ( 64 bit ) from the source stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines if a bar is at least 10 of the specified bar", "true": "check if a scroll bar is at its maximum value", "bleu": 0.22997519112894443, "rouge": 0.46212121212121204}, {"predict": "tests if queue starts with the given sequence ( as they ' t match )", "true": "case sensitive match test", "bleu": 0.08225964699966554, "rouge": 0.11753371868978806}, {"predict": "if it is if it is a properties set then if it is a subset of the loaded properties", "true": "given a url to a properties file describing a map tile set , create it and add it to the list", "bleu": 0.09748516503880549, "rouge": 0.247766043866775}, {"predict": "computes the result for a double input value and a date object", "true": "computes the result for one input double value", "bleu": 0.32523403430389786, "rouge": 0.6224489795918368}, {"predict": "enables a pan to the pan u and checks to make sure that the pan u is not scanning and that the correct actions were broadcast", "true": "enables pan tethering on the local device and checks to make sure that tethering is enabled", "bleu": 0.23660362391696813, "rouge": 0.4975530179445351}, {"predict": "computes the distance between two points", "true": "calculate the number of cells on the shortest path between ( x 1 , z 1 ) and ( x 2 , z 2 )", "bleu": 0.010302547672789446, "rouge": 0.11619047619047619}, {"predict": "creates a new url of the given component parts", "true": "creates a new url of the given component parts", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a work flow", "true": "return a work flow", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new file command", "true": "example : 0 x <unk> , \" close \" , 0 x 0 , \" \"", "bleu": 0.025437622301677208, "rouge": 0.0}, {"predict": "flip to the flip component", "true": "initializes the widget s in this page", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "this function will install a trust manager that will blindly trust all ssl certificates", "true": "this function will install a trust manager that will blindly trust all ssl certificates", "bleu": 1.0, "rouge": 1.0}, {"predict": "sample the probe ' s next sample", "true": "sample the active count", "bleu": 0.24446151121745047, "rouge": 0.3824451410658307}, {"predict": "returns the default user , encoded the mail server", "true": "handles get requests to the oauth 2 device / user endpoint , returning a form to allow the user to submit their user code", "bleu": 0.03352051871072022, "rouge": 0.22405876951331496}, {"predict": "test for harmony - dec ' tag representing an xml element that has been reached", "true": "test for correct reading of a mission name", "bleu": 0.1082597837309053, "rouge": 0.18401206636500753}, {"predict": "checks if this object equals another", "true": "checks if this object equals another", "bleu": 1.0, "rouge": 1.0}, {"predict": "releases any resources we may have ( or inherit )", "true": "releases any resources we may have ( or inherit )", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds and returns result of the cipher", "true": "computes the black equivalent volatility without validating parameters", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "close the any pending resources", "true": "closes the utility instance and un registers any broadcast receivers", "bleu": 0.11115018927487523, "rouge": 0.2515463917525773}, {"predict": "resolves files to internal vector", "true": "resolves all files it finds into a map , with relative paths as the key and absolute path as the value", "bleu": 0.012315792024227385, "rouge": 0.13847900113507378}, {"predict": "java x / crypto / exemption mechanism # get instance ( string algorithm , string provider ) checks exception order", "true": "java x / crypto / exemption mechanism # get instance ( string algorithm , string provider ) checks exception order", "bleu": 1.0, "rouge": 1.0}, {"predict": "reload the parameters used to the application ' s current parameters", "true": "reload configuration from previously added resources", "bleu": 0.11390778025531027, "rouge": 0.12423625254582485}, {"predict": "removes the given message processor from the list of running processors", "true": "removes a message processor from this sip stack", "bleu": 0.22416933501922287, "rouge": 0.433392539964476}, {"predict": "creates and returns an x 509 certificate with the given x 509 certificate", "true": "construct an x 509 issuer serial from an x 509 certificate", "bleu": 0.30576902884505114, "rouge": 0.507628294036061}, {"predict": "add an object to the set of resources to be send", "true": "add the set to an existing file", "bleu": 0.17827531042796255, "rouge": 0.4629981024667932}, {"predict": "put a byte array to the specified byte array", "true": "put an array of bytes in the buffer", "bleu": 0.16784459625186196, "rouge": 0.35672514619883033}, {"predict": "converts an array of strings into a delimited string", "true": "convenience method to return a string array as a delimited ( e", "bleu": 0.15122637383061946, "rouge": 0.2785388127853881}, {"predict": "removes all items from the staging area", "true": "removes all items from the staging area", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse default background colors", "true": "parse attributes and return a dem pier e color", "bleu": 0.10294235160901445, "rouge": 0.14386792452830188}, {"predict": "returns a new returns a new returns the default state", "true": "method that creates a new instance of lua state", "bleu": 0.17827531042796255, "rouge": 0.31881533101045295}, {"predict": "checks the adapter type and returns its size", "true": "checks memory for capacity to hold the preamble and returns the first 8 bytes", "bleu": 0.11327490115090784, "rouge": 0.346590909090909}, {"predict": "reads the next byte from the input stream", "true": "read from the file", "bleu": 0.21105340631872638, "rouge": 0.3546511627906977}, {"predict": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "true": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "bleu": 1.0, "rouge": 1.0}, {"predict": "limit the clip such that it fits within the specified region", "true": "limit the clip such that it fits within the specified region", "bleu": 1.0, "rouge": 1.0}, {"predict": "shutdown the pool , ideally in milliseconds", "true": "shutdown all thread pools", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "converts a list of host addresses to an in et address", "true": "returns th a list of resolved in et addresses", "bleu": 0.2620251007173263, "rouge": 0.5091819699499166}, {"predict": "remove new line character from string", "true": "removes new line char actors", "bleu": 0.2907153684841096, "rouge": 0.3696969696969697}, {"predict": "calculate the counters , which would produce repeated feeds and out", "true": "set unread counters for feeds and categories according to real amount of unread articles", "bleu": 0.12263782424860158, "rouge": 0.2349165596919127}, {"predict": "appends the html representation of the character to the string buffer", "true": "append a character to a buffer , escaping html meta - characters when needed", "bleu": 0.1296737111713457, "rouge": 0.2349165596919127}, {"predict": "migrate the given columns into the old columns", "true": "loop through each of the columns in the given table , migrating each as a resource or relation", "bleu": 0.06870470052394348, "rouge": 0.21580188679245282}, {"predict": "retrieves the row count that corresponds to the given table", "true": "does a count on a given table", "bleu": 0.17827531042796255, "rouge": 0.36454183266932266}, {"predict": "creates a new jar modifier with the given archive to be modified", "true": "creates a new jar modifier with the given archive to be modified", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method adds the attribute to the table", "true": "adds the attribute to the list of attributes assigning it a free column index", "bleu": 0.27746570848392715, "rouge": 0.43323863636363635}, {"predict": "associate the given value with the specified key", "true": "associate the given value with the specified key", "bleu": 1.0, "rouge": 1.0}, {"predict": "sorts the given array of values by the given array starting at the given offset", "true": "find the top limit values using given comparator and place them as in a full array sort , in descending order", "bleu": 0.0693352444257292, "rouge": 0.2157382847038019}, {"predict": "adds a special \" marked occurrence \" highlight", "true": "adds a special \" marked occurrence \" highlight", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "read a number of bytes", "true": "does the read fully based on the input read", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "validate the given assumption", "true": "validate the given assumption", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds all products in the cart to the cart", "true": "adds all products in a category according to quantity request parameter for each ; if no parameter for a certain product in the category , or if quantity is 0 , do not add", "bleu": 0.028091415841939974, "rouge": 0.2525879917184265}, {"predict": "add an item set", "true": "adds a frequent item set to this container", "bleu": 0.1739594473063345, "rouge": 0.31443298969072164}, {"predict": "skip until the peek buffer is read from the peek buffer", "true": "skips from the peek buffer", "bleu": 0.317023313852343, "rouge": 0.5362637362637362}, {"predict": "a method that creates the work flow method for removing the volumes from a consistency group", "true": "a method that creates the work flow method for removing v plex volumes from a consistency group", "bleu": 0.7780667585391489, "rouge": 0.9041501976284585}, {"predict": "show a number of urls and prompt for cancel", "true": "actually show the dialog that contain the given urls and give the user the option to open the url , copy it or cancel the dialog", "bleu": 0.03191966645350473, "rouge": 0.21016365202411713}, {"predict": "the method converts mouse event to a position in the wallet", "true": "convert mouse", "bleu": 0.11390778025531027, "rouge": 0.17579250720461098}, {"predict": "computes a regular expression string of a regular expression", "true": "computes a regular expression string where each instance of the old name can be fulfilled by either the old name or new name", "bleu": 0.11340585949376225, "rouge": 0.34757834757834755}, {"predict": "generate a call identifier", "true": "generate a call identifier", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse a hour value", "true": "parse a hour value", "bleu": 1.0, "rouge": 1.0}, {"predict": "method called when key ends", "true": "changes the currently displayed command line when certain keys are pressed", "bleu": 0.08222966016687185, "rouge": 0.11708253358925146}, {"predict": "names for the type of the given types , where the type of that types of the target types and returns the corresponding type", "true": "returns an array of types , where original types got substituted given a substitution", "bleu": 0.11213336822390839, "rouge": 0.276268115942029}, {"predict": "where the magic happens", "true": "what magic happens", "bleu": 0.47287080450158786, "rouge": 0.5865384615384615}, {"predict": "gets all available local buffers", "true": "returns the current list of known transports", "bleu": 0.15388864725803575, "rouge": 0.0}, {"predict": "returns the seconds until the current thread is locked", "true": "returns the seconds until idle lockout", "bleu": 0.392814650900513, "rouge": 0.5532879818594103}, {"predict": "add a to the client object", "true": "show all databases in hive", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "and for two negative numbers ; the first is shorter", "true": "and for two negative numbers ; the first is shorter", "bleu": 1.0, "rouge": 1.0}, {"predict": "complex ( s ) for the p valued column", "true": "this hack y <unk> is <unk> <unk> with the width of the confidence interval normally specified with number of standard <unk>", "bleu": 0.03720407880344645, "rouge": 0.06218144750254842}, {"predict": "de serializes the object from the base 64 string", "true": "read the object from base 64 string", "bleu": 0.37991784282579627, "rouge": 0.7672955974842767}, {"predict": "copies all the parameters from the specified document to the provider", "true": "creates a copy of the old document ; updating the retrieved document instance works ok for stored properties but indexed data gets lost when doing an index writer", "bleu": 0.028882082656764063, "rouge": 0.1426344505066251}, {"predict": "creates a new matrix with the given matrix", "true": "construct the singular value decomposition", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "this method will be called if the internal state of the lock is not held by the lock", "true": "unlocks version generation for clear ( ) operations", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "static version of last indexof", "true": "static version of last indexof", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the entire contents of the buffer to the byte buffer", "true": "writes the buffer contents to the file", "bleu": 0.22033596789969317, "rouge": 0.5787476280834916}, {"predict": "subtract a matrix on the rectangle", "true": "take modulo for double numbers according to lua math , and return a double result", "bleu": 0.04928854007377984, "rouge": 0.08840579710144927}, {"predict": "max ( big integer val )", "true": "max ( big integer val )", "bleu": 1.0, "rouge": 1.0}, {"predict": "function used to stop code that calls accept data set", "true": "function used to stop code that calls accept training set", "bleu": 0.8070557274927982, "rouge": 0.9}, {"predict": "moves the offset to the offset grab point to the current mouse location , and update the offset grab point to the other grab point locations , so everything can shift smoothly", "true": "called to set the offset grab point to the current mouse location , and update the offset grab point with all the other grab point locations , so everything can shift smoothly", "bleu": 0.7979296449238732, "rouge": 0.875}, {"predict": "writes floats from the given float array , starting from the specified offset , to the current position and increases the position by the number of floats written", "true": "writes floats from the given float array , starting from the specified offset , to the current position and increases the position by the number of floats written", "bleu": 1.0, "rouge": 1.0}, {"predict": "the optimized version of sax 2 dtm", "true": "the optimized version of sax 2 dtm", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if cidr is alive", "true": "check whether the cidr address contains the ip address", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "accessed via reflection", "true": "accessed via reflection", "bleu": 1.0, "rouge": 1.0}, {"predict": "check for known cookie tag is in au th - value , list so that the cookie can be used for single cookie , e )", "true": "check to see if the client has a cookie with optional value", "bleu": 0.058697608930387266, "rouge": 0.1691312384473198}, {"predict": "use the native import class dialog on the swing one because the swing one is bad", "true": "use the native file dialog on the mac because the swing one is bad", "bleu": 0.5024331618720053, "rouge": 0.8097345132743362}, {"predict": "creates the final item with these parameters", "true": "creates the item using these parameters", "bleu": 0.32172944208038085, "rouge": 0.7800511508951408}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes the application data into ssl / tls record", "true": "encodes the application data into ssl / tls record", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a byte containing the remainder of ' in ' , closing it when done", "true": "returns a byte containing the remainder of ' in ' , closing it when done", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse the sql statement and locate any placeholder s or named parameters", "true": "parse the sql statement and locate any placeholder s or named parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a long at the specified offset from this native object ' s base address", "true": "writes a long at the specified offset from this native object ' s base address", "bleu": 1.0, "rouge": 1.0}, {"predict": "called by the last request", "true": "required method to be called if you are using request keeper to funnel your requests", "bleu": 0.040889869516541145, "rouge": 0.18345864661654135}, {"predict": "generate a salt for use with the b crypt", "true": "generate a salt for use with the b crypt", "bleu": 1.0, "rouge": 1.0}, {"predict": "if possible , validate the given key ' s hash code against any that was returned by the peer", "true": "if possible , validate the given key ' s hash code against any that was returned by the peer", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert the number to string", "true": "function to format amount into to in <unk> an rupees format", "bleu": 0.08222966016687185, "rouge": 0.11708253358925146}, {"predict": "run in it method , load the relevant script for required parameters", "true": "run an in it script from the class path", "bleu": 0.16261701715194898, "rouge": 0.39102564102564097}, {"predict": "parse an integer located between 2 given offsets in a string", "true": "parse an integer located between 2 given offsets in a string", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints an object to this output stream and then terminates the line", "true": "prints an object to this output stream and then terminates the line", "bleu": 1.0, "rouge": 1.0}, {"predict": "check that the doubles are a real number", "true": "check that all the elements are real numbers", "bleu": 0.25098621243978964, "rouge": 0.625}, {"predict": "in it method to pass the keyboard buttons", "true": "in it the keyboard buttons ( onclick listener )", "bleu": 0.313240603771157, "rouge": 0.5820610687022901}, {"predict": "is window auto - cancel ( if not set use default )", "true": "is window auto new record ( if not set use default )", "bleu": 0.6703420896351792, "rouge": 0.8333333333333334}, {"predict": "returns the relative path of the given path relative to the given path and a relative path of the stack ( relative to the one of the path", "true": "determine the path to the file relative to the given directory path", "bleu": 0.1585266710543935, "rouge": 0.43109540636042404}, {"predict": "initialize client and client", "true": "read fields to display", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "internal method to perform the normalization", "true": "internal method to perform the normalization", "bleu": 1.0, "rouge": 1.0}, {"predict": "release a singleton resource by sending it to the internal api", "true": "reset the internal state of this singleton", "bleu": 0.16108992769687397, "rouge": 0.2314990512333966}, {"predict": "and not for two negative numbers ; the first is longer", "true": "and not for two negative numbers ; the first is longer", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates a string of the characters in a string", "true": "creates a random string which only consists of letters", "bleu": 0.16784459625186196, "rouge": 0.3333333333333333}, {"predict": "creates a new exchange logging manager", "true": "constructs a new exchange rate manager and initial is es the most used rates", "bleu": 0.11459117772387306, "rouge": 0.3730886850152905}, {"predict": "removes an attribute from the list", "true": "removes the attribute specified by the value parameter", "bleu": 0.18822631894109965, "rouge": 0.4178082191780822}, {"predict": "delete the tab , removes it from the file", "true": "delete the object previously saved", "bleu": 0.18575057999133596, "rouge": 0.3012345679012346}, {"predict": "is the index of the index correction ?", "true": "check if unique constraint exception ( aka or a - <unk> )", "bleu": 0.08179133792443427, "rouge": 0.0}, {"predict": "construct a new instance with the specified detail string and exception", "true": "construct a new instance with the specified detail string and exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds fill components to empty cells in the first row and first column of the grid", "true": "adds fill components to empty cells in the first row and first column of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts all of the prefixes declared in prefixes ' s prefixes into the context", "true": "inserts prefix mappings from an xml literal ' s context for all prefixes that are used in the xml literal and that are not defined in the xml literal itself", "bleu": 0.05012853064838781, "rouge": 0.21328671328671328}, {"predict": "increments the passed time accumulator", "true": "increments the put time accumulator", "bleu": 0.45180100180492244, "rouge": 0.8}, {"predict": "perform a set of size functions and size actual size", "true": "pre compute hashes used to set mask bits for a data", "bleu": 0.12623203108004888, "rouge": 0.09442724458204334}, {"predict": "shows user home following home page", "true": "shows user home following tags page", "bleu": 0.6434588841607617, "rouge": 0.8333333333333334}, {"predict": "return the elevation at a given lat / lon - should be zi er at ( ) , but depends on the resolution of the data", "true": "the elevation at the closest sw post to the given lat / lon", "bleu": 0.18373344524824237, "rouge": 0.38193202146690514}, {"predict": "create an object from the set of observed m beans", "true": "factory method for observed object creation", "bleu": 0.13950796967929133, "rouge": 0.13090128755364808}, {"predict": "delete the children of the element", "true": "delete the children of the element", "bleu": 1.0, "rouge": 1.0}, {"predict": "saves the specified component into the initial state", "true": "recursively create the initial state for the given component", "bleu": 0.29150322793751426, "rouge": 0.34923664122137404}, {"predict": "checks , if this item is overlap , and returns true if this item is equal to the end of the end", "true": "looks , if this trace is connected to the same object at its start and its end point", "bleu": 0.13566979610140004, "rouge": 0.3564273789649416}, {"predict": "ensures that the object is not null", "true": "ensure the given value is not null and return it", "bleu": 0.23813694985189848, "rouge": 0.45607476635514016}, {"predict": "read an array list from an input stream containing xml", "true": "read an array list from an input stream containing xml", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string that is the string padded on the desired length", "true": "adds padding to the end of a string with a repeating character if the string ' s length is less than the minimum length", "bleu": 0.07114248117798905, "rouge": 0.31443298969072164}, {"predict": "returns an enumeration of the additional measure names", "true": "returns an enumeration of the additional measure names", "bleu": 1.0, "rouge": 1.0}, {"predict": "the same as the tasks of a task packet", "true": "this method should not raise any exceptions", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "add buttons for the button", "true": "add button for showing preferences", "bleu": 0.32466791547509893, "rouge": 0.4}, {"predict": "clears all unused files", "true": "clear unused pages from page pool", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "create fields from window de field", "true": "create fields", "bleu": 0.2907153684841096, "rouge": 0.5495495495495495}, {"predict": "constructs a short interleaved raster with the given sample model and data buffer", "true": "constructs a short interleaved raster with the given sample model and data buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will copy the given file to carbon store location", "true": "this method will copy the given file to carbon store location", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the ui event occurs on ui to be zi er able", "true": "performs a backwards fling action with the default number of fling steps ( 5 )", "bleu": 0.08189957223751165, "rouge": 0.07052023121387282}, {"predict": "reads a double value from a string", "true": "attempts to parse the string as double", "bleu": 0.20556680845025982, "rouge": 0.14285714285714285}, {"predict": "adds a listener to the list of listeners", "true": "adds a listener that is notified about changes in the filter", "bleu": 0.21690743377623947, "rouge": 0.4093959731543625}, {"predict": "merge the given file using absolute common routines", "true": "takes a image , mirrors it using row - per - row in t reading , mirror it again using byte ( if possible ) and compares if the original was <unk> , compares with or ign i", "bleu": 0.004173789669798164, "rouge": 0.03890306122448979}, {"predict": "checks if the current feature is present in the database", "true": "returns true if gap is is considered stable ( non - experimental ) :", "bleu": 0.09351498865776114, "rouge": 0.16180371352785147}, {"predict": "calculates the approximate size of a text , depending on a demo text avoid repeated calls ( e", "true": "calculates the approximate size of a text , depending on a demo text avoid repeated calls ( e", "bleu": 1.0, "rouge": 1.0}, {"predict": "the default values that are used for the values in the default values , not permitted in the default values", "true": "defaults was clicked", "bleu": 0.051366639095059514, "rouge": 0.0}, {"predict": "returns a string representation of the list , front to back", "true": "returns a string representation of the list , front to back", "bleu": 1.0, "rouge": 1.0}, {"predict": "write an image , lat / lon with an image icon", "true": "write an image , x / y placement with an image icon", "bleu": 0.4978653458641856, "rouge": 0.7765205091937766}, {"predict": "tests that json of the method named by class loader to be specified in the class loader", "true": "tests job <unk> with peer deployment and different class loaders", "bleu": 0.07994607499472013, "rouge": 0.15541401273885352}, {"predict": "monitor changes to the scale slider", "true": "monitor changes to the scale slider", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes content to file", "true": "save string into the file", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "determine whether the given url points to a resource in the file system , that is , has protocol \" file \" , \" vf s file \" or \" vf s \"", "true": "determine whether the given url points to a resource in the file system , that is , has protocol \" file \" , \" vf s file \" or \" vf s \"", "bleu": 1.0, "rouge": 1.0}, {"predict": "convenience method to update a status object and send the state of a jsp state from a jsp", "true": "updates log out status based on current status and what stored in the internal map", "bleu": 0.08097785064266204, "rouge": 0.18484848484848485}, {"predict": "converts oid into array of in ts", "true": "converts oid into array of in ts", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a set of server instances for this site", "true": "returns the server instance names that belong to a site", "bleu": 0.15881076016027915, "rouge": 0.31282051282051276}, {"predict": "creates a dialog that can be used to display the dialog", "true": "creates a modal dialog for the parent", "bleu": 0.17033186037639278, "rouge": 0.4629981024667932}, {"predict": "checks for the s ld if contains in line features", "true": "checks to see if s ld contains inline features", "bleu": 0.20504572236241866, "rouge": 0.5313588850174217}, {"predict": "alternate decode interface that takes a byte array and returns a buffer of bytes", "true": "decode the contents of the input stream into a buffer", "bleu": 0.13217947626377288, "rouge": 0.2577464788732394}, {"predict": "run the final memory", "true": "provides a hint to the virtual machine that it would be useful to attempt to perform any outstanding object final iz at ions", "bleu": 0.0034402199746280714, "rouge": 0.1314655172413793}, {"predict": "display all string defined in string xml", "true": "display the string defined in the string xml file : icon font string", "bleu": 0.18132900282515496, "rouge": 0.5692068429237948}, {"predict": "checks the request length", "true": "checks content length of a http request to avoid dos attack", "bleu": 0.07425134808660917, "rouge": 0.24596774193548387}, {"predict": "adds the given foreign key constraint", "true": "public : add a foreign key constraint to the table", "bleu": 0.2231931376573339, "rouge": 0.3588235294117647}, {"predict": "called with the activity is first created", "true": "called with the activity is first created", "bleu": 1.0, "rouge": 1.0}, {"predict": "push a notification to a particular user", "true": "sends a notification to the apple push notification service", "bleu": 0.27470644934024185, "rouge": 0.3667334669338677}, {"predict": "appends a json encoded key / value pair to the given string builder", "true": "appends a json encoded key / value pair to the given string builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "update config map from resource", "true": "<unk> order of all keys , but overwrites all data keys with values from resources", "bleu": 0.0369481680224917, "rouge": 0.09172932330827067}, {"predict": "de selects a given item in the receiver", "true": "de selects the item at the given zero - relative index in the receiver", "bleu": 0.1801684263785962, "rouge": 0.5198863636363635}, {"predict": "tests if a data of this node is a leaf", "true": "gets the leaf attribute of the dom tree model object", "bleu": 0.13950796967929133, "rouge": 0.1}, {"predict": "add a listener to the set of listeners", "true": "add a listener all callback s of the interface listener will be called within this function should be called in the main thread", "bleu": 0.05065566544723581, "rouge": 0.23735408560311283}, {"predict": "equals based on a field", "true": "checks if this date - time is equal to another date - time , including the chronology", "bleu": 0.020826563663565452, "rouge": 0.0}, {"predict": "parses a vector of strings into an array of doubles", "true": "parse a string into a vector", "bleu": 0.17827531042796255, "rouge": 0.26180257510729615}, {"predict": "test the dl sn", "true": "create an empty file and write some data on it", "bleu": 0.06741599762807414, "rouge": 0.0}, {"predict": "calls the super method and writes the kn n distance of this entry to the specified stream", "true": "calls the super method and writes the kn n distance of this entry to the specified stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new wrapper for the given session", "true": "creates instance of cassandra driver session wrapper", "bleu": 0.17747405280050269, "rouge": 0.13495575221238937}, {"predict": "post a batch of method", "true": "returns a batch response based on the given batch request , by posting the request to the server", "bleu": 0.026686802062621924, "rouge": 0.15782664941785254}, {"predict": "returns the directory in the directory", "true": "returns the directory in which the main program is located", "bleu": 0.3303628065217446, "rouge": 0.5980392156862745}, {"predict": "clear the route sensors , if any", "true": "method to delete all control sensors from this route", "bleu": 0.15447878876032708, "rouge": 0.12224448897795591}, {"predict": "builds a key instance based on the string argument", "true": "converts a string into the corresponding key store type", "bleu": 0.17747405280050263, "rouge": 0.2222222222222222}, {"predict": "returns the next level , up to the next level", "true": "sets the new current nested level and pushes old current nested level down the stack returns that level", "bleu": 0.0745454141140315, "rouge": 0.2717149220489978}, {"predict": "converts a hexadecimal character to an integer", "true": "converts a hexadecimal character to an integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert the pod to a json object", "true": "convert <unk> pod list to json", "bleu": 0.23356898886410002, "rouge": 0.6240409207161125}, {"predict": "load a key store from the specified password", "true": "load a key store , auto - detecting the type , from a file accessed by a password", "bleu": 0.1438175076195409, "rouge": 0.43160377358490565}, {"predict": "remove a property change listener", "true": "remove a property change listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize a pre cache cycle", "true": "returns true if pre caching is able to run", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "and sets the specified set of bits sets", "true": "this = this and other", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "tests this principal entry for equality with an arbitrary object", "true": "test for equality between the specified object and this object", "bleu": 0.18850319022747347, "rouge": 0.3}, {"predict": "checks if the assertion profile is still valid", "true": "test if profile is valid for <unk> , which requires ipv 4 address for both server and dns", "bleu": 0.06870470052394348, "rouge": 0.28773584905660377}, {"predict": "read a server response from the event , including setting up it and appropriate representation", "true": "pulls the response from the server and returns the code as a number", "bleu": 0.17609282679116184, "rouge": 0.28944246737841045}, {"predict": "checks whether the extension of the filename is one of those specified", "true": "checks whether the extension of the filename is one of those specified", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance from a stream of join segments", "true": "ctor for an outer join between two streams", "bleu": 0.12605968092174913, "rouge": 0.11338289962825278}, {"predict": "see iso 16022 : 2006 , 5", "true": "see iso 16022 : 2006 , 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a k db database from a proxy k and p db", "true": "construct a k db database from the supplied input stream", "bleu": 0.38058030016749456, "rouge": 0.46212121212121204}, {"predict": "decodes a single block operation", "true": "decodes an add operation", "bleu": 0.3021375397356768, "rouge": 0.4535315985130111}, {"predict": "sorts the elements in place", "true": "sorts the array in place", "bleu": 0.45180100180492244, "rouge": 0.8}, {"predict": "rebuilds the panel to the previous selection", "true": "trigger to rebuild the panel", "bleu": 0.2626909894424158, "rouge": 0.34366197183098596}, {"predict": "processes a png image from the buffer of bytes , starting at the given offset", "true": "feeds the in f later with the compressed bytes in poll mode , the caller should not call repeatedly this , without consuming first , checking is data ready for consumer ( )", "bleu": 0.03115433355462726, "rouge": 0.1561100447856686}, {"predict": "this method returns the absolute path of the given file", "true": "turns an object into a string for storing in the props", "bleu": 0.11406351620367239, "rouge": 0.09442724458204334}, {"predict": "navigates to the next page", "true": "navigates to the next page ( if not already there )", "bleu": 0.301194211912202, "rouge": 0.5854126679462572}, {"predict": "the following two methods exist because in , out , and err must be initialized to the default locale", "true": "the following two methods exist because in , out , and err must be initialized to null", "bleu": 0.8371837576365552, "rouge": 0.8978840846366144}, {"predict": "returns an immutable list of this type", "true": "returns an immutable list", "bleu": 0.5169731539571706, "rouge": 0.7648902821316614}, {"predict": "removes the specified rules from the batch of rules", "true": "the sql commands to be added to the batch list for deleting the rules in rules to delete", "bleu": 0.08126306442139648, "rouge": 0.27949599083619703}, {"predict": "returns true if the specified element is visited", "true": "returns true if this element was already visited", "bleu": 0.3303164318013807, "rouge": 0.625}, {"predict": "the actual application i mpl property", "true": "instantiate s a new connection object", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "creates a new future that is synchronously completed exceptionally", "true": "returns a new comp let able future that is already exceptionally completed with the given exception", "bleu": 0.15422428388597817, "rouge": 0.45692883895131076}, {"predict": "initialize forecast result based on forecast detail and forecast definition", "true": "initializes all errors given the model", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "to check whether a given mouse event is a mask", "true": "check the mouse event modifiers against the instance member modifiers", "bleu": 0.17827531042796255, "rouge": 0.3}, {"predict": "! ! ! ! ! ! ! ! = false in the !", "true": "writes all retained variables to the output of the specified generator , then clears them", "bleu": 0.08189957223751165, "rouge": 0.07052023121387282}, {"predict": "creates a new uri instance of the given un encoded component parts", "true": "creates a new uri instance of the given un encoded component parts", "bleu": 1.0, "rouge": 1.0}, {"predict": "this is used to get th - contained th - th - th nx s at this node", "true": "this is an entry point for extracting k - best hypotheses as structured translation objects", "bleu": 0.09629943614188137, "rouge": 0.18484848484848485}, {"predict": "reads a single character from this string reader and returns it as an integer with the two higher - order bytes set to 0", "true": "reads a single character from the source string and returns it as an integer with the two higher - order bytes set to 0", "bleu": 0.8127596564026885, "rouge": 0.9166666666666665}, {"predict": "whether the storage block snapshot supports the passed block snapshot", "true": "check if the storage system type is open stack , v nx block , v max or ibm xiv", "bleu": 0.0724813323008464, "rouge": 0.19593147751605994}, {"predict": "returns a list of service descriptor descriptors for the basic service descriptor", "true": "lists all of the services found in the file descriptors", "bleu": 0.1235622127262679, "rouge": 0.18484848484848485}, {"predict": "it returns the code value for sentences and the input string", "true": "returns a string with lines sentences of the following form removed : this result code corresponds to the l dap result code value of & # x 7 b ; & # x 40 ; code 0 & # x 7 d ;", "bleu": 0.010445368268086869, "rouge": 0.13384530992868898}, {"predict": "divide : rounding mode is round half even , result is negative ; equidistant", "true": "divide : rounding mode is round half even , result is negative ; equidistant", "bleu": 1.0, "rouge": 1.0}, {"predict": "quan tile function of the pdf of a beta distribution", "true": "compute quan tile ( inverse cd f ) for beta distributions", "bleu": 0.1613101715871968, "rouge": 0.28328173374613}, {"predict": "validates a signed certificate using the specified algorithm", "true": "example implementation", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "creates new deployment for deployment", "true": "creates and caches new deployment", "bleu": 0.3860973950960897, "rouge": 0.6}, {"predict": "return the number of objects in this sequence", "true": "return the number of objects in this sequence", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests that the ser v lets run - as role to a role of the web lets", "true": "tests that a run - as role - name can be added to a ser v let", "bleu": 0.281628970004521, "rouge": 0.4705882352941176}, {"predict": "subtract two negative numbers of different length", "true": "subtract two negative numbers of different length", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new multi - term query", "true": "constructs a query matching terms that cannot be represented with a single term", "bleu": 0.09374222649442905, "rouge": 0.1897356143079316}, {"predict": "prints the specified message", "true": "prints the message passed as a non - string object and a new line", "bleu": 0.041710075933029465, "rouge": 0.3029801324503311}, {"predict": "currently only group by tags group by s ' first item always is site , which is a reserved field", "true": "currently only group by tags group by s ' first item always is site , which is a reserved field", "bleu": 1.0, "rouge": 1.0}, {"predict": "test invalid xml and verify ignore xml", "true": "test an invalid xml input", "bleu": 0.2626909894424158, "rouge": 0.5154929577464789}, {"predict": "converts string to string", "true": "convert a re to a string", "bleu": 0.24117803988461298, "rouge": 0.3860759493670886}, {"predict": "returns true if the two members of the two sets of the equivalent - equivalent \" or \" this comparator \" or \"", "true": "returns true if one of the members is a get ter and the other one is a setter", "bleu": 0.12586347848916266, "rouge": 0.2992641046606705}, {"predict": "returns a formatter that will be useful in utc", "true": "creates a dateformat that assumes the incoming date is in utc time", "bleu": 0.15122637383061946, "rouge": 0.3713850837138508}, {"predict": "write a linked km l document into a km l folder", "true": "adds the specified km l - object to the file", "bleu": 0.14991106946711685, "rouge": 0.1921259842519685}, {"predict": "get the relative path to the end of the destination file", "true": "get destination file path of this download request", "bleu": 0.17827531042796255, "rouge": 0.32504440497335696}, {"predict": "get users and groups from the server to fill in the \" share with \" list of \" share \"", "true": "get users and groups from the server to fill in the \" share with \" list", "bleu": 0.7941054938007994, "rouge": 0.9070631970260222}, {"predict": "returns a list of basic http headers", "true": "create default headers for server response", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "removes the part of this session", "true": "remove all components in <unk> ys", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "puts a new request in queue as a new thread in pool to be executed", "true": "puts a new request in queue as a new thread in pool to be executed", "bleu": 1.0, "rouge": 1.0}, {"predict": "register a new client", "true": "create client from given json data , add client to client list , broadcast newly registered client to all previously registered clients and send client list to new client", "bleu": 0.0009128554004514148, "rouge": 0.10664335664335663}, {"predict": "parses the data from the supplied input stream , using the supplied base uri to resolve any relative uri references", "true": "parses the data from the supplied input stream , using the supplied base uri to resolve any relative uri references", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the date value using the given date formats", "true": "parses the date value using the given date formats", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a member with the specified name from this object", "true": "removes a member with the specified name from this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the number of loop blocks for each loop", "true": "loop code layout the loop is defined by the back edge from t - > h", "bleu": 0.07711214194298908, "rouge": 0.1523096129837703}, {"predict": "read a line of text from the file", "true": "read a line from the hex file and verify the checksum", "bleu": 0.2535368728139476, "rouge": 0.6140939597315436}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "test for a method to test file test", "true": "generates two data files to join its with hive", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "renames an editor panel", "true": "rename an editor type panel in show panels sub menu", "bleu": 0.11337974147240094, "rouge": 0.3978260869565217}, {"predict": "associate the fits as a short line with a single line", "true": "returns true iff format ( col ) should return a single - line version of the formula", "bleu": 0.09872064645916422, "rouge": 0.20631341600901915}, {"predict": "override to set up your specific external resource", "true": "override to set up your specific external resource", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert virtual world coordinates to lon / lat", "true": "convert lon / lat ( degree ) coordinate to virtual world coordinates", "bleu": 0.2787987064770896, "rouge": 0.3860759493670886}, {"predict": "copies this string replacing occurrences of the specified target sequence with another sequence", "true": "copies this string replacing occurrences of the specified target sequence with another sequence", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes a string into base 64 format", "true": "encode a string for html requests", "bleu": 0.24446151121745047, "rouge": 0.31202046035805625}, {"predict": "draws an image , applying a transform from image space into user space before drawing", "true": "draws an image , applying a transform from image space into user space before drawing", "bleu": 1.0, "rouge": 1.0}, {"predict": "build a repeat size given the number of times , the range is in seconds", "true": "upper guess to determine the duration in bytes , using highest <unk> of the stream", "bleu": 0.1082597837309053, "rouge": 0.2}, {"predict": "advances the position until after the next newline character", "true": "advances the position until after the next newline character", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new in d test cramer t instance for a subset of the variables", "true": "creates a new in d test cramer t instance for a subset of the variables", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes the given file as the content", "true": "treat the given file as a source of additional seeds , announcing to seed listeners", "bleu": 0.16486612875739623, "rouge": 0.3412587412587413}, {"predict": "formats time in milliseconds to hh : mm : s s string format", "true": "formats time in milliseconds to hh : mm : s s string format", "bleu": 1.0, "rouge": 1.0}, {"predict": "add the specified property change listener for the specified property", "true": "adds the property change listener", "bleu": 0.24808415001701817, "rouge": 0.5674418604651164}, {"predict": "creates a new folder with a default folder name", "true": "creates a new folder with a default folder name", "bleu": 1.0, "rouge": 1.0}, {"predict": "add typed array to the config", "true": "add a typed array to the config", "bleu": 0.7118034480382984, "rouge": 0.9104477611940297}, {"predict": "adds a sub action to this action", "true": "adds the sub action", "bleu": 0.2626909894424158, "rouge": 0.5736677115987461}, {"predict": "fills the entry tree from the tree map", "true": "fills the entry tree map with entries from the block", "bleu": 0.4326423757524844, "rouge": 0.6535714285714286}, {"predict": "check for equality of a collection", "true": "checks if right hand collection has atleast one same item as left hand collection", "bleu": 0.05822753005110548, "rouge": 0.09327217125382263}, {"predict": "for keyboard mode , processes key events", "true": "for keyboard mode , processes key events", "bleu": 1.0, "rouge": 1.0}, {"predict": "asserts that the actual duration is within 10 of the given expected time", "true": "asserts that the actual duration is within 10 of the given expected time", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the log operation for the specified field operation", "true": "log a <unk> in the data", "bleu": 0.15619699684601276, "rouge": 0.27664399092970515}, {"predict": "creates a new instance of this field body", "true": "creates a new field body img data type", "bleu": 0.3549481056010052, "rouge": 0.625}, {"predict": "creates a new abstract abstract symbol with the given string mime type", "true": "initializes this abstract resource with the given mime type", "bleu": 0.23901088824528133, "rouge": 0.5865384615384615}, {"predict": "create a new parameters from a set of parameters", "true": "creates a parameters object for the given main - method arguments", "bleu": 0.12507277759788113, "rouge": 0.19645732689210954}, {"predict": "initialize and parse a polygon using the b + 1 or p sha 256 algorithm", "true": "respond to or initiate an s mp negotiation", "bleu": 0.08225964699966554, "rouge": 0.09200603318250376}, {"predict": "compute mel frequency from linear frequency", "true": "compute linear frequency from mel frequency", "bleu": 0.4272870063962341, "rouge": 0.6666666666666666}, {"predict": "create the rounded icon generator to draw the rounded to latitude / longitude color space to menu items", "true": "constructs the generator and initializes the common members ignoring display density", "bleu": 0.08097785064266204, "rouge": 0.21631205673758863}, {"predict": "generate an array of random bytes", "true": "generate an array of random bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of the array", "true": "returns a description of the search as a string", "bleu": 0.2598013194025897, "rouge": 0.48897795591182364}, {"predict": "writes the position of the internal message to the given buffer", "true": "copy bu f to m message", "bleu": 0.12605968092174913, "rouge": 0.12423625254582485}, {"predict": "if the time expiration expiration time out is old ?", "true": "checks if cassandra driver session expired", "bleu": 0.12605968092174913, "rouge": 0.13090128755364808}, {"predict": "put a key / boolean pair in the json object", "true": "put a key / boolean pair in the json object", "bleu": 1.0, "rouge": 1.0}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "handle a given view", "true": "handles the selection and de selects item if multi select is disabled", "bleu": 0.040889869516541145, "rouge": 0.0}, {"predict": "calculate the value of depreciation over time", "true": "check if the method can be invoked to give parameters", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "writes the contents of this cache header to the specified output stream", "true": "writes the contents of this cache header to the specified output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "get response as byte array", "true": "get response as byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "starts fading out all layers", "true": "starts fading out all layers", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the first necessary operator clear the first array", "true": "note : upper bound is <unk> / 60 opt + 6 / 9 ( ~ 1", "bleu": 0.054526518479707166, "rouge": 0.0}, {"predict": "add a listener for changes in the text area", "true": "adds the given listener", "bleu": 0.15619699684601276, "rouge": 0.16531165311653115}, {"predict": "get an iterator over the profiles", "true": "get an iterator of profiles", "bleu": 0.4347208719449915, "rouge": 0.7393939393939394}, {"predict": "check if the string starts with a space character", "true": "checks if the string starts with a space character , false if the string is empty or starts with a non - space character", "bleu": 0.16623163485126574, "rouge": 0.44811753902662993}, {"predict": "appends scheme to incoming path", "true": "appends scheme to incoming path", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a key to a level , if there is no corresponding value , or the corresponding integer", "true": "given a key , find the level", "bleu": 0.10657284485555579, "rouge": 0.34757834757834755}, {"predict": "called whenever the mouse is detected by the user and one of the requested mouse modes is active", "true": "called whenever the mouse is dragged on this layer and one of the requested mouse modes is active", "bleu": 0.674945488826271, "rouge": 0.7777777777777778}, {"predict": "initializes the caching http headers filter", "true": "initializes the caching http headers filter", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds common component to the parser configuration", "true": "adds common component to the parser configuration", "bleu": 1.0, "rouge": 1.0}, {"predict": "spins / blocks until node s is matched by a fulfill operation", "true": "spins / blocks until node s is matched by a fulfill operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "load the general subtree stable model", "true": "load the general subtree stable model with general subtree s", "bleu": 0.513417119032592, "rouge": 0.7176470588235294}, {"predict": "reads a single byte from the source string and returns it as an integer in the range from 0 to 255", "true": "reads a single byte from the source string and returns it as an integer in the range from 0 to 255", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the current search is completely filled", "true": "returns true if the health check flag - file is enabled but does not exist , otherwise ( no file configured , or file configured and exists ) returns false", "bleu": 0.039868435886053814, "rouge": 0.23371647509578544}, {"predict": "writes the contents of this file to a file", "true": "writes the contents to the file at the given location ( this creates the file or deletes its existing contents", "bleu": 0.09202340705693718, "rouge": 0.32275132275132273}, {"predict": "w lite pal the input array contains only one key pairs , in a tree set", "true": "generate one - key - multiple - values tree from array of key - value pairs , and wrap its into writable objects", "bleu": 0.08078507330464856, "rouge": 0.19869706840390877}, {"predict": "computes the angle that is closest to another location", "true": "returns the angle of the vector from p 0 to p 1 , relative to the positive x - axis", "bleu": 0.05879772136827779, "rouge": 0.19365079365079363}, {"predict": "initializes the in memory cursor", "true": "creates a new cursor setting the columns names that will be used by this cursor", "bleu": 0.040889869516541145, "rouge": 0.18345864661654135}, {"predict": "also determines if the attribute is enabled , and false if the attribute is enabled", "true": "checks if is enabled", "bleu": 0.11633270842295028, "rouge": 0.35260115606936415}, {"predict": "draws the foreground of annotations", "true": "renders the drag border if needed", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "creates a transaction transaction", "true": "creates a new transaction suitable for the serial port", "bleu": 0.14558246978804804, "rouge": 0.43160377358490565}, {"predict": "starts this run n able interrupting actual runner", "true": "we ' re starting the thread", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "exports an object", "true": "exports an object", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the g directory name , parses it", "true": "creates the sub - directory where this particular back - up instance will be kept", "bleu": 0.0739821920909478, "rouge": 0.16486486486486487}, {"predict": "reads a character line label from the input stream and returns it as a string", "true": "this method reads a utf - 16 string , which length is given on the number of characters it consists of", "bleu": 0.08629921818897687, "rouge": 0.2157382847038019}, {"predict": "process the children , re - instantiate the query tree", "true": "this method is called every time a child is processed", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "initializes the messages for the next mm s in this system", "true": "iterates through all the tips ' keys and stores the ones that are valid for this os", "bleu": 0.08301383771904051, "rouge": 0.20631341600901915}, {"predict": "initializes a new queue", "true": "creates instance of persistent queue", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "write an array of objects into a string builder", "true": "this method adds to the sb the objects", "bleu": 0.14113991930789777, "rouge": 0.1189083820662768}, {"predict": "returns true if , at this time , the object will accept a connection according to the supplied event set descriptor", "true": "returns true if , at this time , the object will accept a connection via the named event", "bleu": 0.6781394283024478, "rouge": 0.8320545609548167}, {"predict": "creates a new request configured to publish an open graph action", "true": "creates a new request configured to publish an open graph action", "bleu": 1.0, "rouge": 1.0}, {"predict": "hide content and show the progress bar", "true": "hide content and show the progress bar", "bleu": 1.0, "rouge": 1.0}, {"predict": "read a bloom filter from a input stream", "true": "read a bloom filter lm from an external file", "bleu": 0.41224781842476826, "rouge": 0.5820610687022901}, {"predict": "gets the median absolute deviation from a array of numbers", "true": "compute the median absolute deviation from median", "bleu": 0.4617366309441026, "rouge": 0.6075697211155379}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new sdp sdp code when the output code is sent to the guacamole stack of an sdp", "true": "constructs a new sdp exception as a result of a system exception and uses the localized system exception message", "bleu": 0.1326475916741222, "rouge": 0.21052631578947367}, {"predict": "links node as first element , or returns false if full", "true": "links node as first element , or returns false if full", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a property change listener to a change of the old property", "true": "trigger the notification of all property change listeners", "bleu": 0.15537125692760353, "rouge": 0.2074829931972789}, {"predict": "identifies if the specified template was read , and skips the next commit", "true": "given an entry and a template , return true if dirty - read should be performed", "bleu": 0.09980554701686324, "rouge": 0.13540510543840176}, {"predict": "create a new j value slider", "true": "create a new j value slider", "bleu": 1.0, "rouge": 1.0}, {"predict": "apply a horizontal control node to be invoked when a be a be typically an e", "true": "apply graphic attributes to the symbol", "bleu": 0.08513012360883544, "rouge": 0.19805194805194803}, {"predict": "to do add method documentation", "true": "to do add method documentation", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new remote service descriptor", "true": "creates new descriptor of remote restful service", "bleu": 0.2460852465666396, "rouge": 0.6069651741293532}, {"predict": "read the old journal from the input file", "true": "read the old journal from the input file", "bleu": 1.0, "rouge": 1.0}, {"predict": "starts the server on the host", "true": "tries to start the server", "bleu": 0.2907153684841096, "rouge": 0.3696969696969697}, {"predict": "only need one", "true": "test if the profile is complete", "bleu": 0.16620830006469264, "rouge": 0.0}, {"predict": "encodes this object with the error correction level and the values of the supplied properties", "true": "encode a string into a qr code with dimensions width x height", "bleu": 0.08225964699966554, "rouge": 0.07558859975216851}, {"predict": "writes in ts from the given in t array , starting from the specified offset , to the current position and increases the position by the number of in ts written", "true": "writes in ts from the given in t array , starting from the specified offset , to the current position and increases the position by the number of in ts written", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets a request header and its value", "true": "sets a header to use with http request", "bleu": 0.240785655451027, "rouge": 0.3952483801295896}, {"predict": "update the ui with the specified values", "true": "tells the look and feel to reset some of the values for this component so that it doesn ' t use j text area ' s default values", "bleu": 0.010997759840144799, "rouge": 0.15469146238377007}, {"predict": "generate to source of the class", "true": "generate to source of the class", "bleu": 1.0, "rouge": 1.0}, {"predict": "submit a task to the executor core", "true": "submits a task for execution", "bleu": 0.24446151121745047, "rouge": 0.34366197183098596}, {"predict": "check the bucket name or throws an exception if it passed", "true": "validates if given bucket name is dns compatible", "bleu": 0.16108992769687397, "rouge": 0.216696269982238}, {"predict": "validates the user request that a user au th request", "true": "validates the user namespace authorization create request", "bleu": 0.24808415001701817, "rouge": 0.48605577689243035}, {"predict": "format a given object", "true": "default object formatter using object", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "calculates the derived statistics ( significance etc )", "true": "calculates the derived statistics ( significance etc )", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the passed consistency group is writable or not", "true": "check to see if the consistency group is active and not created", "bleu": 0.23925530714892257, "rouge": 0.5176803394625177}, {"predict": "closes ' close able ' , ignoring any checked exceptions", "true": "closes ' close able ' , ignoring any checked exceptions", "bleu": 1.0, "rouge": 1.0}, {"predict": "attempts to wait on a message to be delivered to this receiver", "true": "if a message is already available in this receiver ' s pre fetch buffer then it is returned immediately otherwise this methods return null without waiting", "bleu": 0.053544713399960274, "rouge": 0.19741100323624597}, {"predict": "removes the objects in the specified range from the start to the end , but not including the end index", "true": "removes the objects in the specified range from the start to the end , but not including the end index", "bleu": 1.0, "rouge": 1.0}, {"predict": "refills the input buffer", "true": "refills the input buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "check to see that all duplicate entities are not equal to the same id", "true": "if we remove an entity , we may need to update the duplicate identifier", "bleu": 0.10511846841633776, "rouge": 0.14285714285714285}, {"predict": "stop a bookkeeper journal", "true": "stop cluster", "bleu": 0.35930411196308426, "rouge": 0.3546511627906977}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "releases multiple selections that may not be removed from the list", "true": "remove selection to a list of items", "bleu": 0.11390778025531027, "rouge": 0.1157495256166983}, {"predict": "create a mapping from an array of file name and write to the mapping of the given file", "true": "reads the mappings from the file", "bleu": 0.08562365224473284, "rouge": 0.27477477477477474}, {"predict": "delete a receive load name that the track will either service or exclude", "true": "delete a load name that the train will either service or exclude", "bleu": 0.5731224484094262, "rouge": 0.8863936591809777}, {"predict": "validates the computes the device name for the requested id", "true": "validates the tag information on a compute state matches an expected virtual machine name", "bleu": 0.11950151429308975, "rouge": 0.24270557029177717}, {"predict": "create a string from an in t array", "true": "creates a mojang son string from the given in t array tag", "bleu": 0.22374550494929327, "rouge": 0.5791139240506329}, {"predict": "method to remove all arguments in the given command", "true": "removes the argument at the given index", "bleu": 0.18575057999133596, "rouge": 0.2557651991614256}, {"predict": "replaces a policy in the resource tree with the new policy that will be the resource tree in the resource", "true": "replaces a policy ' s relevant content in the resource tree", "bleu": 0.22738612304909625, "rouge": 0.4765625}, {"predict": "creates a new atomic double array with the same length as the two elements in the range 0 and zero length", "true": "creates a new atomic double array of the given length , with all values initialized to zero", "bleu": 0.294467310498826, "rouge": 0.4828496042216358}, {"predict": "moved this code into it ' s own method so move to could use it when the move is across file systems", "true": "moved this code into it ' s own method so move to could use it when the move is across file systems", "bleu": 1.0, "rouge": 1.0}, {"predict": "re compute the separation of cluster means", "true": "re compute the separation of cluster means", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to create an image with square if it is not square to implement the input", "true": "returns an image where the input image is centered", "bleu": 0.1332358437599213, "rouge": 0.33701657458563533}, {"predict": "handles cleaning up for a lost pool entry with the given route", "true": "handles cleaning up for a lost pool entry with the given route", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the start element of the current element as a new element", "true": "writes a start tag to the output", "bleu": 0.1235622127262679, "rouge": 0.22101449275362317}, {"predict": "adds an process listener", "true": "adds a listener that will be informed when the user right - clicks an operator or a port", "bleu": 0.012902949563521738, "rouge": 0.16310160427807485}, {"predict": "traverse the source tree to be executed in the remote tree", "true": "internal implementation of traverse", "bleu": 0.11390778025531027, "rouge": 0.14558472553699284}, {"predict": "replaces the first instance of the search string with the replace string", "true": "replaces the first instance of the search string with the replace string", "bleu": 1.0, "rouge": 1.0}, {"predict": "puts the value to the buffer", "true": "stores the byte at the index given", "bleu": 0.20693220168471366, "rouge": 0.3034825870646766}, {"predict": "construct an common route account for the given route", "true": "create the config j panel , if there is one , to configure this operation type", "bleu": 0.06484332373239513, "rouge": 0.07615480649188515}, {"predict": "generate a salt for use with the b crypt", "true": "generate a salt for use with the b crypt", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the description text in the bottom right corner of the chart", "true": "draws the description text in the bottom right corner of the chart", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the bytes from a string", "true": "parses the bytes from a string", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the link part of a link string", "true": "returns the inter - language link to a specific language ( if any )", "bleu": 0.09008421318929809, "rouge": 0.25994318181818177}, {"predict": "updates the actions before the player ' s address", "true": "updates the menu actions depending on the state of the given address space", "bleu": 0.1416341262365823, "rouge": 0.4401154401154401}, {"predict": "take a publisher and prepare to consume it on a queue with the specified source", "true": "take a publisher and prepare to consume it on par all all is m number of ' rails ' , possibly ordered and round - robin fashion", "bleu": 0.26187943252522305, "rouge": 0.40757238307349664}, {"predict": "cleans a directory without deleting it", "true": "cleans a directory without deleting it", "bleu": 1.0, "rouge": 1.0}, {"predict": "add the timer down timer", "true": "add a <unk> ball to the game and play the ball drop sound", "bleu": 0.061000517228105004, "rouge": 0.20573355817875214}, {"predict": "the last occurrence of the given segment", "true": "adds an element to the stream", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "delete functionality test # test delete 6 ( )", "true": "delete functionality test # test delete 6 ( )", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an topic on the channel with the given payload", "true": "retrieve a channel instance for the specified topic", "bleu": 0.14991106946711685, "rouge": 0.22676579925650556}, {"predict": "replace the size of this float value with respect to the new size", "true": "approximates a float point on the line from zero to this point with distance p new length from zero", "bleu": 0.08235113196354475, "rouge": 0.2418235877106045}, {"predict": "inserts one row of another row into the row", "true": "inserts a new row into the block", "bleu": 0.2777619034011791, "rouge": 0.5115303983228512}, {"predict": "add default uri to search factory", "true": "add configuration for file scanner", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "transfers a range of text from the range", "true": "transfer an interpreted sequence or set of sequences from the reader to the writer", "bleu": 0.10712878727413526, "rouge": 0.25994318181818177}, {"predict": "to do : need to consider that the distance may be completely exist", "true": "computes the perpendicular distance from a point p to the ( infinite ) line containing the points ab", "bleu": 0.07732453710762957, "rouge": 0.12538540596094552}, {"predict": "returns a copy of the current instance to achieve immutability", "true": "returns a copy of the current instance to achieve immutability", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "it can be patch", "true": "returns the set of bug ids for fixes included in this build of the directory server", "bleu": 0.01504254234731835, "rouge": 0.0}, {"predict": "fully read from the byte array", "true": "see the general contract of the read fully method of data input", "bleu": 0.09663861439684919, "rouge": 0.10481099656357389}, {"predict": "creates a new gui component with the name of the panels", "true": "creates the gui of the component", "bleu": 0.18527972555830952, "rouge": 0.4969450101832994}, {"predict": "is the c a named bean , i", "true": "returns whether the sdk is the <unk> release or later", "bleu": 0.1643685581109115, "rouge": 0.21785714285714283}, {"predict": "constructs a new correlation distribution", "true": "constructs a new zero partial correlation distribution function with the given values for n and k", "bleu": 0.06695558732507628, "rouge": 0.43509272467902993}, {"predict": "checks if is enabled", "true": "check whether selinux is enabled or not", "bleu": 0.22336835181428535, "rouge": 0.346590909090909}, {"predict": "returns true if the file passed in file will be valid and valid are valid", "true": "initial is es and checks validity of files", "bleu": 0.08225964699966554, "rouge": 0.09200603318250376}, {"predict": "adds the given response code listener to the list of listeners", "true": "adds a response listener on the requests", "bleu": 0.14323145079400493, "rouge": 0.4629981024667932}, {"predict": "calculate the log likelihood of the current state", "true": "calculate the log likelihood of the current state", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if there are dead states that reach an initial state", "true": "returns true if there are dead states reachable from an initial state", "bleu": 0.6703420896351792, "rouge": 0.8333333333333334}, {"predict": "subtract two money objects", "true": "subtracts two decimal objects", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "returns true if the object is equal to the right edge of the edge of the device edge is equals the edge of the edge of the edge of the edge", "true": "<unk> <unk> true if ( from 1 , to 1 ) = = ( from 2 , to 2 )", "bleu": 0.055177848898164926, "rouge": 0.12240802675585284}, {"predict": "skips line and moves the line", "true": "reads characters from reader until the first e ol has been read", "bleu": 0.0812630644213965, "rouge": 0.10481099656357389}, {"predict": "list the contents of the command", "true": "https : / / docs", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "converts a given base 64 encoded string to a byte buffer", "true": "converts a base 64 encoded key into a byte buffer", "bleu": 0.34172334076593075, "rouge": 0.768503937007874}, {"predict": "check if there is a progress into the database", "true": "step in the animation", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "accumulates char into the buffer , starting with the given character", "true": "this is used to load a previously marked set of bytes into the string builder without escaping", "bleu": 0.0868851996125416, "rouge": 0.1375422773393461}, {"predict": "creates a signature dependency", "true": "creates signature wrapping oracle , parses the document and searches for all the signature value and key info elements", "bleu": 0.009351487442933324, "rouge": 0.15561224489795916}, {"predict": "creates a new tick length node , including creation of the a variable node , including setting up one tree , and any )", "true": "fully construct an arbitrary length path node with all required annotations", "bleu": 0.05606668411195419, "rouge": 0.12248995983935741}, {"predict": "adds wheel changing listener", "true": "adds wheel changing listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "scans a directive", "true": "read a yam l directive number : this is either the major or the minor part", "bleu": 0.007803415794667936, "rouge": 0.18740399385560674}, {"predict": "convert an in t array of integers", "true": "tobit string - returns a string representation of i", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "converts the float samples into a little - endian 16 - bit sample buffer", "true": "converts the float samples in a complex buffer to a little endian 16 - bit buffer", "bleu": 0.39692877231857493, "rouge": 0.724622030237581}, {"predict": "returns true if node value of given key is within a valid node", "true": "check if a received token is ok", "bleu": 0.1135935489027116, "rouge": 0.21143847487001732}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "there ' s all tree nodes in the tree", "true": "expands all paths in the tree", "bleu": 0.2777619034011791, "rouge": 0.5532879818594103}, {"predict": "modifies the list of installed vocabularies", "true": "describe the vocabularies which are in use in the kb based on the predicate partition statistics", "bleu": 0.046172815301777345, "rouge": 0.1680440771349862}, {"predict": "invoke any ( c ) throws null pointer exception if c has null elements", "true": "invoke any ( c ) throws null pointer exception if c has null elements", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the inverse function computes g function where the first function is the same as the second , using g } and ending at function", "true": "a coordinate descent algorithm for l 1 - loss and l 2 - loss epsilon - s vr dual problem min \\ beta 0", "bleu": 0.048589719316429775, "rouge": 0.0409670920080591}, {"predict": "creates a new signals group action", "true": "create an action with a specific title", "bleu": 0.20693220168471366, "rouge": 0.1517412935323383}, {"predict": "generates an x - values array filled with numbers in range specified by the parameters", "true": "generates an x - values array filled with numbers in range specified by the parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "compare to ( big integer a )", "true": "compare to ( big integer a )", "bleu": 1.0, "rouge": 1.0}, {"predict": "put the service under the given attribute value for the given class and field values for the given service by the given value", "true": "put the service under the given attribute value for the given defining class and field , if it isn ' t already there", "bleu": 0.5245322414712715, "rouge": 0.608695652173913}, {"predict": "creates a new decoder that decodes the specified uri", "true": "creates a new decoder that decodes the specified uri", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert rgb color to cmyk color", "true": "convert rgb color to cmyk color", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a listener from the set of listeners", "true": "removes a listener from the set of listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "shows an error message to user and returns an error if user wants to continue to continue if user", "true": "<unk> a common use case of showing an error message with an error icon that <unk> out after a few seconds", "bleu": 0.12829769235595676, "rouge": 0.247766043866775}, {"predict": "parses a name - value - pair with the given parser", "true": "parses a name - value - pair with the given parser", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all characters which appear in string bag from string s", "true": "removes all characters which appear in string bag from string s", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the trigonometric cosine of the specified angle in radians", "true": "returns the trigonometric cosine of the specified angle in radians", "bleu": 1.0, "rouge": 1.0}, {"predict": "formats the given number to the given number of decimals , and returns the number as a string , maximum 35 characters", "true": "formats the given number to the given number of decimals , and returns the number as a string , maximum 35 characters", "bleu": 1.0, "rouge": 1.0}, {"predict": "api method", "true": "destroy all fragments and loaders", "bleu": 0.14256747717620566, "rouge": 0.0}, {"predict": "method for bean context child interface", "true": "method for bean context child interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper function to ascertain the existence of a file and return true / false appropriately", "true": "helper function to ascertain the existence of a file and return true / false appropriately", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a windows file attributes from a win 32 file structure", "true": "create a windows file attributes from a win 32 find data structure", "bleu": 0.7546930988815485, "rouge": 0.8628005657708628}, {"predict": "flatten a map into an xml serialize r", "true": "flatten a map into an xml serialize r", "bleu": 1.0, "rouge": 1.0}, {"predict": "last event in this fx event has been processed", "true": "fire event to the ripple r pane manually", "bleu": 0.14113991930789777, "rouge": 0.1189083820662768}, {"predict": "determines if the specified query has a full entry", "true": "whether the query ( source or target side query of a reconciliation ) returns full entry data , or just ids if explicitly configured , returns that setting", "bleu": 0.027802283566654724, "rouge": 0.24736415247364155}, {"predict": "return whether a particular module is a module", "true": "determines if the given member is a t la + module", "bleu": 0.15587146574232644, "rouge": 0.3070469798657718}, {"predict": "writes an annotation at the current position in the underlying stream", "true": "write annotation item into current section", "bleu": 0.12605968092174913, "rouge": 0.2484725050916497}, {"predict": "convert an in et address from host address", "true": "pack ipv 4 address and match - all socket flag into a long", "bleu": 0.08583768591139128, "rouge": 0.09131736526946108}, {"predict": "returns whether the given revision contains a given template name", "true": "determines whether a given revision contains a given template name", "bleu": 0.6989307622784944, "rouge": 0.8}, {"predict": "retrieves all account info requests from the given start date", "true": "retrieve all the account info requests from the given start date", "bleu": 0.7302542206757164, "rouge": 0.8498452012383902}, {"predict": "draws a cylinder", "true": "draws a cylinder for the given parameters", "bleu": 0.2635971381157267, "rouge": 0.5596330275229358}, {"predict": "returns the plus of the specified string list , plus the specified arguments", "true": "add a list of strings", "bleu": 0.10571070857151538, "rouge": 0.12079207920792079}, {"predict": "recursively walk backwards compatibility without package", "true": "walks the provided parse tree using the list of listeners", "bleu": 0.09536752763778475, "rouge": 0.0}, {"predict": "read on char", "true": "read on char", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines how two dates compare up to no more than the specified most significant field", "true": "determines how two dates compare up to no more than the specified most significant field", "bleu": 1.0, "rouge": 1.0}, {"predict": "split a word into a list of words : word 1 ( the word 1 ) is the word 1 : word 2 , and the word 2 ( word 2 ) + 9 word word 2 ) + 1 ) + 1", "true": "splits a word in two word", "bleu": 0.039585298754221884, "rouge": 0.1417505809450039}, {"predict": "does a given url point to google book search , regardless of domain", "true": "does a given url point to google book search , regardless of domain", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the class path by the file name", "true": "returns the relative path for a fully qualified class name", "bleu": 0.19546825878823415, "rouge": 0.43571428571428567}, {"predict": "removes a title prefix", "true": "removes the title prefix", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "send a set of recipients to the current recipients into local and appends to the state of this interpreter", "true": "send the message and wait for replies", "bleu": 0.07658412276041004, "rouge": 0.2517193947730399}, {"predict": "returns true if the given attribute list contains at least one value", "true": "is relevant service", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "test for equality , coping with nulls", "true": "test for equality , coping with nulls", "bleu": 1.0, "rouge": 1.0}, {"predict": "search for car by road number", "true": "search for car by road number", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a jvm class to a jvm class jvm class name or signature", "true": "convert class name to slashed format", "bleu": 0.14283632578659286, "rouge": 0.3382624768946396}, {"predict": "returns the average distribution in p vector and p k positions", "true": "average precision - computes for each relevant label the percentage of relevant labels among all labels that are ranked before it", "bleu": 0.05078822537842343, "rouge": 0.05916585838991271}, {"predict": "finds an location or creates a new location for the given name", "true": "finds an existing location or creates a new location if needed requires location ' s name creates a unique id for this location", "bleu": 0.21885052070385813, "rouge": 0.4867021276595745}, {"predict": "closes the closing of the underlying input stream", "true": "closes tree map and <unk> memory", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "remove oma download info from shared pref s", "true": "remove oma download info from shared pref s", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the name of a local file is in local directory", "true": "indicates whether the path of the android sdk home directory is specified in a local", "bleu": 0.13609026329485258, "rouge": 0.363095238095238}, {"predict": "returns a boolean indicating whether a bundle contains properties that could be a valid saved token", "true": "returns a boolean indicating whether a bundle contains properties that could be a valid saved token", "bleu": 1.0, "rouge": 1.0}, {"predict": "we call this to guarantee that we fetch a fresh policy from the server", "true": "we call this to guarantee that we fetch a fresh policy from the server", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if , at this time , the object will accept a connection according to the supplied event name", "true": "returns true if , at this time , the object will accept a connection with respect to the named event", "bleu": 0.7358736320910966, "rouge": 0.85}, {"predict": "returns the x and y values of the given vector 2 to the nearest power of the given target vector and z power", "true": "raises the x and y values of a vector 2 to the given power", "bleu": 0.3654749251620566, "rouge": 0.6784059314179796}, {"predict": "invokes the specified parameter less method if it exists", "true": "invokes the specified parameter less method if it exists", "bleu": 1.0, "rouge": 1.0}, {"predict": "merge the given input stream into the same above object", "true": "load input stream as a lua binary chunk if the first 4 bytes are the lua binary signature", "bleu": 0.08469994319770224, "rouge": 0.20378619153674832}, {"predict": "adds a button to the list of button", "true": "add a button to the panel", "bleu": 0.44632361378533286, "rouge": 0.5865384615384615}, {"predict": "registers a request for matching requests", "true": "set up a <unk> to requests matching certain criteria", "bleu": 0.1593301391270729, "rouge": 0.2573839662447257}, {"predict": "commits the map to an input variable", "true": "commits changes in page to input", "bleu": 0.22089591134157885, "rouge": 0.4680306905370844}, {"predict": "splits string into multiple strings", "true": "provides a utility method breaks a given string to array of string according to the given separator", "bleu": 0.02476709768976917, "rouge": 0.08276797829036635}, {"predict": "this method inserts an entry in the gci r map that is specified by in st", "true": "this method inserts an entry for a \" <unk> \" instruction immediately after the original entry", "bleu": 0.2928298013714697, "rouge": 0.375}, {"predict": "creates a new instance of the object", "true": "creates a new instance of a class", "bleu": 0.6803749333171202, "rouge": 0.7142857142857143}, {"predict": "constructs a new parser for the given format string", "true": "constructs a new parser for the given format string", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends data to string builder", "true": "converts an iterator to a string by concatenating all of the string representations of objects in the iterator , divided by a separator", "bleu": 0.008255522276645456, "rouge": 0.12801678908709338}, {"predict": "return true if the parent is full", "true": "check whether this match er has reached \" max - size \" or not", "bleu": 0.057461663912368725, "rouge": 0.0}, {"predict": "schedules a playlist to run", "true": "schedules a playlist save task", "bleu": 0.5081327481546147, "rouge": 0.6}, {"predict": "this method is used to read all of the variables currently collected from the stream", "true": "this variable needs to be read if any of it ' s subsidiary variables needs to be read", "bleu": 0.08863561426206355, "rouge": 0.2981427174975562}, {"predict": "callback for the activity", "true": "invoked when an action occurs", "bleu": 0.23530495254141282, "rouge": 0.0}, {"predict": "returns a description of the class i fier", "true": "converts a vector to a string", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "returns the integer object initialized with this integer", "true": "return a integer object with same value", "bleu": 0.22679164443904004, "rouge": 0.4048672566371681}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a verbose log message", "true": "send a verbose log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "save the indexes of this indexes", "true": "commit all index memory changes to disk", "bleu": 0.15723447135049806, "rouge": 0.0}, {"predict": "compute and return the score for a match with e errors and x location", "true": "compute and return the score for a match with e errors and x location", "bleu": 1.0, "rouge": 1.0}, {"predict": "if delta y > 0 , move the content down", "true": "if delta y > 0 , move the content down", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies all of the mappings from the specified map to this one", "true": "copies all of the mappings from the specified map to this one", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts a string to the bin", "true": "inserts a string into the content", "bleu": 0.4347208719449915, "rouge": 0.6666666666666666}, {"predict": "obtains the string representation of this object", "true": "obtains the string representation of this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the data to the stream", "true": "writes the data until there ' s space available", "bleu": 0.2493651438887133, "rouge": 0.3860759493670886}, {"predict": "copy an input stream and close the reader , and close the input to the output stream , and close the number of output", "true": "copy input to output and close the output stream before returning", "bleu": 0.15604242268653643, "rouge": 0.48995983935742965}, {"predict": "check asynchronously check servers is called when the adapter is initialized", "true": "check that a number of <unk> are available", "bleu": 0.11390778025531027, "rouge": 0.108348134991119}, {"predict": "transforms a point using the destination point and a transform them as the only transforms of the given point to the inverse classes from the result in the converter", "true": "returns dst , the un rotated pixel location of the map", "bleu": 0.059055756167575545, "rouge": 0.16324710080285457}, {"predict": "asserts that the given code closure fails when it is evaluated and that a particular exception is thrown", "true": "asserts that the given code closure fails when it is evaluated and that a particular type of exception is thrown", "bleu": 0.8117187697331059, "rouge": 0.9384615384615386}, {"predict": "writes a raw packet to the desired interface", "true": "writes a raw packet to the desired interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "process an attribute string of type t yes no into a boolean value", "true": "process an attribute string of type t yes no into a boolean value", "bleu": 1.0, "rouge": 1.0}, {"predict": "load rma brackets for ad table", "true": "load p bart ner dependent order / in voice / shipment field", "bleu": 0.0812630644213965, "rouge": 0.10481099656357389}, {"predict": "this method will search list of wo ' s for the given criteria and eligible for mb", "true": "this method will search list of wo ' s for the given criteria and eligible for mb", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a time period for the week in a specified date / time zone", "true": "creates a time period for the week in which the specified date / time falls , calculated relative to the specified time zone", "bleu": 0.39640322101127545, "rouge": 0.6731748726655348}, {"predict": "creates a new instance of a resource queue", "true": "create a queue of lock requests for a resource", "bleu": 0.22149455506955362, "rouge": 0.465648854961832}, {"predict": "encodes the certificate and sign the certificate", "true": "create the signed certificate request", "bleu": 0.20556680845025982, "rouge": 0.34366197183098596}, {"predict": "schedule an timer task", "true": "schedule a task that starts immediately", "bleu": 0.24117803988461298, "rouge": 0.3860759493670886}, {"predict": "abbreviate a string by simply truncating it", "true": "abbreviate a string by simply truncating it", "bleu": 1.0, "rouge": 1.0}, {"predict": "stop a test case", "true": "local method to stop a wraparound test", "bleu": 0.24002491458061356, "rouge": 0.5198863636363635}, {"predict": "ensures that the row index is valid for the row that column", "true": "check if a row index is valid", "bleu": 0.2891784933232571, "rouge": 0.44202898550724634}, {"predict": "helper method called to empty all shared symbols , but to leave the shared symbols", "true": "helper method called to empty all shared symbols , but to leave arrays allocated", "bleu": 0.7916963878457504, "rouge": 0.832764505119454}, {"predict": "determine the enemy potential for blitzing a territory - all enemies are combined", "true": "determine the enemy potential for blitzing a territory - all enemies are combined", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new name from this identifier , with the sort identifier name , and lower - underscore", "true": "returns a new name containing the pieces from this name plus the given identifier added on the end", "bleu": 0.2383041256525615, "rouge": 0.4444444444444444}, {"predict": "attempts to parse the date in the format this is the year for the date in", "true": "parses a string date into a java date object", "bleu": 0.08513012360883544, "rouge": 0.16850828729281767}, {"predict": "return a simple string representation", "true": "returns a string representation of the message data", "bleu": 0.2118947430943267, "rouge": 0.44309927360774815}, {"predict": "( x > 0 up to draw a line character", "true": "is the argument a white space character according to the pdf spec ?", "bleu": 0.11105685174312292, "rouge": 0.16991643454039}, {"predict": "remove the given filter to the request", "true": "un register filter ( it won ' t get anymore events )", "bleu": 0.0909326471926252, "rouge": 0.10049423393739704}, {"predict": "method to remove the loaded classes from the list , in the internal list to make it appear in the previous class", "true": "removes the specified class if i ers", "bleu": 0.0612957497932821, "rouge": 0.1521197007481297}, {"predict": "add a property change listener", "true": "add a property change listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the number of checkpoints that were loaded", "true": "returns the number of checkpoints that were loaded", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an element to this object", "true": "add element at the end", "bleu": 0.24446151121745047, "rouge": 0.3696969696969697}, {"predict": "add the urls for listening", "true": "add the urls for listening", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the passed virtual array uris to the set of virtual arrays assigned to the resource by the user", "true": "adds the passed virtual array uris to the set of virtual array uris assigned to the resources by the user", "bleu": 0.6713716831952073, "rouge": 0.8677824267782427}, {"predict": "returns true if the cell at row is valid", "true": "checks if is cell editable", "bleu": 0.16784459625186196, "rouge": 0.3012345679012346}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "get whether the given root or not in the 2 nd block", "true": "ends a drag in the trash can , clearing state and deleting blocks as needed", "bleu": 0.10649638629044374, "rouge": 0.14523809523809522}, {"predict": "this convenience method returns an array of elements in an array of which can be used to the order", "true": "helper for concatenating several arrays", "bleu": 0.05415315253510895, "rouge": 0.0}, {"predict": "creates a new iterator object that uses given pattern", "true": "the given pattern must be a pattern", "bleu": 0.19960198807747329, "rouge": 0.2557651991614256}, {"predict": "checks if a string is a valid catalog", "true": "check a field that defines a custom catalog", "bleu": 0.19070828081828378, "rouge": 0.375}, {"predict": "instantiate s a new red is initialized", "true": "sets time out to idle thread time out", "bleu": 0.13540372457315733, "rouge": 0.0}, {"predict": "check if body is still running", "true": "very naive s sdp discovery packet detection", "bleu": 0.15723447135049806, "rouge": 0.0}, {"predict": "add a child at the given index", "true": "intercept refresh view and loading view", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "restores the selection of the selection to the selection ( left , right , right , right )", "true": "restores the selection after a model event / sort order changes", "bleu": 0.12673718536830808, "rouge": 0.21631205673758863}, {"predict": "gets the cure nt contents of this byte stream as a byte array", "true": "gets the cure nt contents of this byte stream as a byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "any illegal processing of this cipher", "true": "<unk> after each tests", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "consume events from the event queue , removing those events from the event queue", "true": "blocks until the listener has consume the specified number of matching events , blocking at most the specified number of milliseconds", "bleu": 0.07055935438592946, "rouge": 0.2206148282097649}, {"predict": "update ui from command", "true": "fills up <unk> from given command", "bleu": 0.24117803988461298, "rouge": 0.3860759493670886}, {"predict": "compare to ( big integer a )", "true": "compare to ( big integer a )", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates an equally distributed random number", "true": "generates a normally distributed random number and rounds it", "bleu": 0.26367153725164694, "rouge": 0.5147679324894514}, {"predict": "determine the current amount of over scroll", "true": "determine the current amount of over scroll", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new vector with the specified capacity", "true": "constructs a new vector with the specified capacity", "bleu": 1.0, "rouge": 1.0}, {"predict": "process the invite request", "true": "process the invite request", "bleu": 1.0, "rouge": 1.0}, {"predict": "log given log object and log it , logging an error", "true": "initializes logger into / from log reference passed in", "bleu": 0.11390778025531027, "rouge": 0.1018363939899833}, {"predict": "read receive processes delay time from window returns ' true ' if successful , ' false ' if an error was detected", "true": "read receive delay from window returns ' true ' if successful , ' false ' if an error was detected", "bleu": 0.8083060112213474, "rouge": 0.9606299212598426}, {"predict": "writes a indent in a string of format", "true": "writes indents and automatically includes the base in d end from the options", "bleu": 0.09499501502705178, "rouge": 0.18263473053892215}, {"predict": "returns the hash code of this list", "true": "returns the hash code of this list", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse string value returning a integer", "true": "parse string value returning a in t", "bleu": 0.6848940448305334, "rouge": 0.7587064676616916}, {"predict": "handle mouse event from mouse pointer , if the mouse is dragging a mouse event", "true": "performs handling of java mouse event note that this function should be invoked only from root of menu window ' s hierarchy that grabs input focus", "bleu": 0.055875216545676974, "rouge": 0.13958810068649888}, {"predict": "check whether the given node is \" no \" child nodes", "true": "tests whether the node to be replaced is invalid", "bleu": 0.17033186037639278, "rouge": 0.4073455759599332}, {"predict": "generates the instruction to push the given value on the stack", "true": "generates the instruction to push the given value on the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "dismiss the user received within an event", "true": "notifies listener of a mouse motion event", "bleu": 0.18575057999133598, "rouge": 0.14285714285714285}, {"predict": "remove a batch cluster er listener", "true": "remove a batch cluster er listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will be used to refresh the lock that has the lock", "true": "this should only be called by the lock service", "bleu": 0.14283632578659286, "rouge": 0.37596302003081655}, {"predict": "removes an object from the set of objects that are currently in the relation", "true": "removes an object that is known to not be in the relation", "bleu": 0.24601372576927547, "rouge": 0.5460358056265985}, {"predict": "wraps the given byte array into mina heap", "true": "wraps a byte", "bleu": 0.17747405280050269, "rouge": 0.39610389610389607}, {"predict": "parse the given json value as a string , or null if it ' s not already present", "true": "start the string parsing", "bleu": 0.07535838128770536, "rouge": 0.2053872053872054}, {"predict": "value of ( long val ) : convert a negative long value to a big integer", "true": "value of ( long val ) : convert a negative long value to a big integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts the specified element before the specified position into the receiver", "true": "inserts the specified element before the specified position into the receiver", "bleu": 1.0, "rouge": 1.0}, {"predict": "grows all of the elements in the receiver to make it exactly one new array of entries", "true": "increases hash table capacity by <unk> entry arrays", "bleu": 0.06074588070876682, "rouge": 0.0}, {"predict": "construct a sided plane from a pair of vectors describing points , and including origin , plus a point p which describes the side", "true": "construct a sided plane from a pair of vectors describing points , and including origin , plus a point p which describes the side", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks the input stream if it contains gzip compressed data", "true": "checks the input stream if it contains gzip compressed data", "bleu": 1.0, "rouge": 1.0}, {"predict": "insert room for operation", "true": "insert room for operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all entries schema in the configuration store", "true": "clears instance cache and de registers listeners", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "registers an arbitrary object with the internal default seed", "true": "registers an object that should be <unk>", "bleu": 0.19960198807747329, "rouge": 0.38364779874213834}, {"predict": "check that output contains the expected output string", "true": "fails if expected string is not found in x", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "removes the class name to the cache", "true": "removes the class name from the cache", "bleu": 0.5946035575013605, "rouge": 0.8571428571428571}, {"predict": "insert a \" completed completion \" stage", "true": "failed stage returns a completion stage completed exceptionally with the given exception", "bleu": 0.11434175042957104, "rouge": 0.30148270181219106}, {"predict": "renders the given component as a graphical representation of the raster", "true": "renders the channel config s , lines , labels , and cursor", "bleu": 0.13688390490906435, "rouge": 0.17256011315417258}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "handles the case where a class loader is dropped", "true": "handles the case where a class loader is dropped", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete the attachment point", "true": "delete ( sw , port ) from the list of list of attachment points and old aps", "bleu": 0.01656771518980191, "rouge": 0.2570224719101124}, {"predict": "if given class node is assigned to or assigned primitive type", "true": "checks if a class node is assignable to another", "bleu": 0.23462350320527994, "rouge": 0.5091819699499166}, {"predict": "total files to be recovered ( potentially not yet done )", "true": "total number of files to be recovered ( potentially not yet done )", "bleu": 0.7699485268636964, "rouge": 0.9030955585464334}, {"predict": "constructs and anim game item in st ace based on a md 5 model an md 5 animation", "true": "constructs and anim game item in st ace based on a md 5 model an md 5 animation", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new instance with the specified detail string and exception", "true": "construct a new instance with the specified detail string and exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes an assignment from the specified bucket", "true": "deletes the existing assignment between a user and an experiment", "bleu": 0.15215596197411094, "rouge": 0.22803738317757008}, {"predict": "formats a given object into the specified string buffer", "true": "format a given object", "bleu": 0.2626909894424158, "rouge": 0.4959349593495934}, {"predict": "cas wait status field of a node", "true": "cas wait status field of a node", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a thread dump of the thread dump", "true": "returns the singleton instance , creating if necessary", "bleu": 0.16036590969929357, "rouge": 0.125}, {"predict": "checks whether audio playback can be available", "true": "starts audio playback once audio buffer is almost full and remaining capacity falls below the start threshold", "bleu": 0.05858545453338479, "rouge": 0.1550190597204574}, {"predict": "check if any of the matches filter", "true": "checks if all keywords in filter array are in input", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "removes and returns first element , or null if empty", "true": "removes and returns first element , or null if empty", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the http request", "true": "executes the download run n able using the provided monitor to update the user and provide cancel capabilities", "bleu": 0.010850044034164912, "rouge": 0.08155080213903743}, {"predict": "initialize the document builder factory so that it can be reused and does not need to be reinitialized for each parse action", "true": "initialize the document builder factory so that it can be reused and does not need to be reinitialized for each parse action", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the standard error of the estimate for the intercept", "true": "returns the standard error of the estimate for the intercept", "bleu": 1.0, "rouge": 1.0}, {"predict": "create missing values for the missing values", "true": "create missing attribute values", "bleu": 0.2626909894424158, "rouge": 0.5736677115987461}, {"predict": "replace an horizontal line with a \" / \" - \" - abstract path , and a single line that describes the shell with some quotes", "true": "this method replaces all \\ to /", "bleu": 0.04668049023095243, "rouge": 0.06762749445676275}, {"predict": "start listening at startup thread and start running tasks", "true": "creates a background thread that will call the launch notifier when the process terminates", "bleu": 0.08097951150551161, "rouge": 0.08367626886145405}, {"predict": "encode all j a cl table for their log name", "true": "encode the a cl to the given buffer", "bleu": 0.17827531042796255, "rouge": 0.34014869888475835}, {"predict": "expands the provided filename , if necessary", "true": "transforms \" something $ dir $ / other / \" to \" something / path / to / hidden / other / \"", "bleu": 0.01588545205297843, "rouge": 0.0}, {"predict": "queue running buffer for sending to the queue or whether there is running", "true": "keep private", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "updates the text in the table", "true": "allow us to update value ( and sync to gui version if exists", "bleu": 0.0578433294533084, "rouge": 0.0}, {"predict": "check if there is still nodes to read at the end of the stream", "true": "checks if another objects is available by attempting to read another byte from the stream", "bleu": 0.14814869013357976, "rouge": 0.41123595505617977}, {"predict": "appends parameter parameter to given string builder", "true": "creates a display string of a parameter list ( without the parentheses ) for the given parameter types and names", "bleu": 0.03646433398789111, "rouge": 0.1363128491620112}, {"predict": "complete a heartbeat for the given transaction , if there exists a heartbeat for \"", "true": "execute this call to fill in heartbeat data on the slave", "bleu": 0.09103526405546068, "rouge": 0.1582360570687419}, {"predict": "decrypt bytes previously private key and signed the modulus / h mac", "true": "decrypt an encapsulated session key", "bleu": 0.11498759556447223, "rouge": 0.25416666666666665}, {"predict": "for a private key , id , find it for id", "true": "loads the private key of this process", "bleu": 0.14991106946711685, "rouge": 0.2314990512333966}, {"predict": "removes a listener for changes of registered snapshot categories", "true": "removes a listener for changes of registered snapshot categories", "bleu": 1.0, "rouge": 1.0}, {"predict": "will return true if any extensions are present and marked as critical as we currently dont handle any extensions !", "true": "will return true if any extensions are present and marked as critical as we currently dont handle any extensions !", "bleu": 1.0, "rouge": 1.0}, {"predict": "z members are defined in this week ? the same day in the given range", "true": "z get week number for a seven day range , this returns a week number for the specified seven day range , according to the supplied week field rules", "bleu": 0.04574675812083743, "rouge": 0.2579281183932347}, {"predict": "check if given string is not in t array", "true": "returns true iff str is not an element of array", "bleu": 0.17861170664603615, "rouge": 0.31282051282051276}, {"predict": "returns a copy of the given node or subtree with this document as its owner", "true": "returns a copy of the given node or subtree with this document as its owner", "bleu": 1.0, "rouge": 1.0}, {"predict": "lib sec p 256 k 1 cleanup - this destroys the sec p 256 k 1 context this should be called at the end of the program for proper cleanup of the context", "true": "lib sec p 256 k 1 cleanup - this destroys the sec p 256 k 1 context object this should be called at the end of the program for proper cleanup of the context", "bleu": 0.9235076009084147, "rouge": 0.9824304538799414}, {"predict": "check enabled process feature enabled", "true": "initialize the background task to be run every hour", "bleu": 0.1031546451143688, "rouge": 0.0}, {"predict": "generate a list of urls for a given shard , including the set of directory and jar urls", "true": "creates a randomized list of urls for the given shard", "bleu": 0.23210911117419966, "rouge": 0.5271604938271606}, {"predict": "get reader to response body using given character set", "true": "get reader to response body using given character set", "bleu": 1.0, "rouge": 1.0}, {"predict": "zlib compress 2 byte", "true": "creates the zlib bytes for pdf images", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "adds a vertex to this vertex", "true": "defines a new vertex with the given id", "bleu": 0.17516432701748888, "rouge": 0.2785388127853881}, {"predict": "configure client manager that will be used when the client wants to configure the client", "true": "set up all of the other objects to operate with a server connected to this application", "bleu": 0.08516412540808123, "rouge": 0.12828601472134593}, {"predict": "returns the index within this character sequence of the first occurrence of the characters specified to the specified index", "true": "returns the index starting at the specified index ( two characters at a time )", "bleu": 0.17923344640485428, "rouge": 0.3605911330049261}, {"predict": "calculate requirements along the minor axis", "true": "calculate the requirements for the minor axis", "bleu": 0.3851442247849805, "rouge": 0.7587064676616916}, {"predict": "append a string to the end of the string", "true": "appends an in t ( little endian ) in the buffer", "bleu": 0.11301601243449393, "rouge": 0.09822866344605477}, {"predict": "pushes the given function on all sub paths", "true": "uploads a new let binding to <unk> i", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "returns a string representation of the map in which the format is stored in the format of a extensions", "true": "displays this node as a string , implementing explore node interface ; depth parameter is a bound on the depth of the portion of the tree that is displayed", "bleu": 0.07487347929072859, "rouge": 0.24094799210006582}, {"predict": "creates a new data column descriptor", "true": "creates a new descriptor instance", "bleu": 0.4347208719449915, "rouge": 0.7393939393939394}, {"predict": "re scale a value , testing", "true": "bulk load the tree", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "forward project a lat / lon poly", "true": "forward project a lat / lon poly", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove categories that contain a year in them ( starting with 19 or 20 ) , this year in the previous year and previous year rationale : / / g it hub", "true": "remove categories that contain a year in them ( starting with 19 or 20 ) , except for this year and previous year rationale : https : / / g it hub", "bleu": 0.7782035036174311, "rouge": 0.875}, {"predict": "creates the data provider", "true": "creates a new data provider event", "bleu": 0.3081980909598119, "rouge": 0.5791139240506329}, {"predict": "keep track of a bean instance", "true": "validate the bean is not null ; then validate its fields", "bleu": 0.09600096733558854, "rouge": 0.1117216117216117}, {"predict": "sets the document after index that need to be deleted", "true": "set the indent of a bracket based on the command provided in the supplied document", "bleu": 0.08461586088475063, "rouge": 0.15443037974683543}, {"predict": "invokes input digit helper on each digit on national number", "true": "attempts to set the formatting template and returns a string which contains the formatted version of the digits entered so far", "bleu": 0.03528537802177609, "rouge": 0.0}, {"predict": "fill call and / description error description", "true": "fill picks", "bleu": 0.18575057999133598, "rouge": 0.2469635627530364}, {"predict": "creates a copy of the field", "true": "creates a copy of the field", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a zero number from a sign and an array of zero length", "true": "create a zero number from a sign and an array of zero length", "bleu": 1.0, "rouge": 1.0}, {"predict": "cast object to type t", "true": "cast object to type t", "bleu": 1.0, "rouge": 1.0}, {"predict": "schedules a file to be deleted when jvm exits", "true": "schedules a file to be deleted when jvm exits", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize and do work where other steps need to wait for", "true": "initialize and do work where other steps need to wait for", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the annotation given the annotation", "true": "bypass the cache and the <unk> image drawing and directly paint the j editor pane to the context", "bleu": 0.03308426786106403, "rouge": 0.15288220551378442}, {"predict": "adds the specified point to this partial hull", "true": "add point to the result set", "bleu": 0.22679164443904004, "rouge": 0.2932692307692307}, {"predict": "load properties from the specified reader", "true": "obtain a configuration instance by loading the properties from the supplied reader", "bleu": 0.1599248714366856, "rouge": 0.41924398625429554}, {"predict": "calculates the write for the given item", "true": "adds an item to this instance", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "adds an xml element to the given xml element", "true": "updates the xml representation to contain this annotation", "bleu": 0.16784459625186196, "rouge": 0.2378167641325536}, {"predict": "reads a boolean ( see if it ) of the source stream", "true": "reads a boolean from the source stream", "bleu": 0.2796842457966537, "rouge": 0.6630434782608696}, {"predict": "returns an enumeration of the additional measure names", "true": "returns an enumeration of the additional measure names", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes the format for the data set produced", "true": "initializes the format for the data set produced", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns natural logarithm of gamma function", "true": "log gamma function : ln ( gamma ( alpha ) ) for alpha > 0 , accurate to 10 decimal places", "bleu": 0.02386337062196437, "rouge": 0.1346578366445916}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "starts the ticker - do a notification | time - delta , going down the model", "true": "this method will start the text ticker", "bleu": 0.08513012360883544, "rouge": 0.1871165644171779}, {"predict": "for each client , returns an instance of the cache for the given id", "true": "return a cipher suite with the given id", "bleu": 0.16451929399933107, "rouge": 0.28683385579937304}, {"predict": "create the pending notification to update the info from the info", "true": "creates and populates a pending action context", "bleu": 0.11390778025531027, "rouge": 0.1157495256166983}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "display the given editor and returns an object representing this object", "true": "displays the annotations of the droid safe text markers for the given class name in the given java editor", "bleu": 0.07784269339018503, "rouge": 0.19082377476538062}, {"predict": "resolve new expression resolving constant", "true": "will resolve type of new expression", "bleu": 0.31610981104846864, "rouge": 0.5366568914956013}, {"predict": "translates the data in blocks to java , indicating that the end of the end are less than the same values in the area", "true": "given a list of sizes of a similar aspect ratio , it tries to pick evenly spaced out options", "bleu": 0.06024757292375468, "rouge": 0.04750778816199376}, {"predict": "verifies the passed log record to check for tampering", "true": "verifies the passed log record to check for tampering", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies a data to the clipboard for this purposes", "true": "copies the given transferable to the system ' s clipboard", "bleu": 0.18885888592159467, "rouge": 0.41709401709401706}, {"predict": "formats percent - sign a number of percent digits", "true": "format the download percent", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "translate attributes , like \" attribute : \" | string description as defined in rfc 2252", "true": "translate attributes that describe an attribute definition into the string description as defined in rfc 2252", "bleu": 0.46366459199876225, "rouge": 0.625}, {"predict": "updates the actions in each text just before showing the popup menu", "true": "updates the actions in each text just before showing the popup menu", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a collection from a collection", "true": "a recursive call to make a collection and all it ' s values immutable", "bleu": 0.08234616270176032, "rouge": 0.2798165137614679}, {"predict": "track a hex image that is centered on a square , and is done on the image", "true": "adds all images associated with the hex to the specified tracker", "bleu": 0.07994607499472013, "rouge": 0.14859926918392205}, {"predict": "parse text from a string", "true": "parse string to date time", "bleu": 0.3021375397356768, "rouge": 0.4}, {"predict": "determine if a trace is processed by a specific node", "true": "this method checks that this processor matches the supplied business tx n name and node details", "bleu": 0.06918301973215607, "rouge": 0.0738498789346247}, {"predict": "power generation is appropriate", "true": "perform a power - on self test by processing some example input data", "bleu": 0.037870374782798366, "rouge": 0.1073943661971831}, {"predict": "fetches the edge of the triangle", "true": "stores the edges for a visited triangle", "bleu": 0.20693220168471366, "rouge": 0.3034825870646766}, {"predict": "returns a ( possibly empty ) collection view of the cr ls read from the given input stream in stream", "true": "returns a ( possibly empty ) collection view of the cr ls read from the given input stream in stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes entity configuration under the realm", "true": "deletes the extended entity configuration under the realm", "bleu": 0.6025286104785454, "rouge": 0.8356164383561644}, {"predict": "returns singleton instance of data source manager", "true": "returns singleton instance of data source views manager", "bleu": 0.7536998328984837, "rouge": 0.9222462203023757}, {"predict": "start bootstrap", "true": "return a tag , maybe formatted with color", "bleu": 0.031811104014284386, "rouge": 0.0}, {"predict": "loads the xml definition", "true": "use the cache xml generator to create xml from the entity associated with the current cache", "bleu": 0.019797099072043068, "rouge": 0.1804733727810651}, {"predict": "gets the id of the local drive", "true": "extract id from the http request", "bleu": 0.20556680845025982, "rouge": 0.31202046035805625}, {"predict": "decompress the link 2", "true": "decompress contents using zlib", "bleu": 0.35930411196308426, "rouge": 0.25}, {"predict": "remove a new socket callback for the crash stack to the target file", "true": "read from monitored file , report any changed values for monitored socket statistics", "bleu": 0.1135935489027116, "rouge": 0.07692307692307691}, {"predict": "closes this reader", "true": "closes this reader", "bleu": 1.0, "rouge": 1.0}, {"predict": "compare the remaining bytes of this buffer to another byte buffer ' s remaining bytes", "true": "compare the remaining chars of this buffer to another char buffer ' s remaining chars", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "writes the header for csv file csv file", "true": "writes the header for zones csv file", "bleu": 0.5133450480401704, "rouge": 0.8097345132743362}, {"predict": "this method will update the distinct count every time , it will add new value to a gg val", "true": "average aggregate function which will add all the aggregate values and it will increment the total count every time , for average value", "bleu": 0.19571185056837467, "rouge": 0.32770529547198773}, {"predict": "extract a policy notification from the policy", "true": "returns the notification xml node", "bleu": 0.20556680845025982, "rouge": 0.17183098591549298}, {"predict": "force buffered operations to the filesystem", "true": "force buffered operations to the filesystem", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the new instance of the dialog", "true": "attempts to locate the class specified by class name to instantiate with the given object array", "bleu": 0.056829570481990416, "rouge": 0.16245006657789615}, {"predict": "decodes a field name from xml notation ( e", "true": "decodes a field name from xml notation ( e", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the password is set for the current user", "true": "return true if either login / pass is set or if oauth is enabled", "bleu": 0.1112086898712083, "rouge": 0.16180371352785147}, {"predict": "adds a content items", "true": "adds a content item", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "canonical ize r that converts a class name", "true": "create a proper class name from a messy thing", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "pause for the given number of milliseconds", "true": "pause for the specified milliseconds", "bleu": 0.3655552228545123, "rouge": 0.6873239436619719}, {"predict": "prepares the user to create a job using the user", "true": "prepare job with mapper s to cancel", "bleu": 0.13950796967929133, "rouge": 0.12151394422310759}, {"predict": "removes wheel changing listener", "true": "removes wheel changing listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert q list into lpc coefficients", "true": "convert l sf frequencies into lpc coefficients", "bleu": 0.36798327352994814, "rouge": 0.6069651741293532}, {"predict": "generate all fields that are in this class , including any fields that are present in the class and loads it", "true": "create fields for injections inside main class", "bleu": 0.06429451441231726, "rouge": 0.157014157014157}, {"predict": "initializes this thread pool", "true": "initialize ; cached thread pool is safe as it is releasing resources automatically if idle", "bleu": 0.030229619158881657, "rouge": 0.190625}, {"predict": "removes each substring of the source string that matches the given regular expression using the given regular expression", "true": "removes each substring of the source string that matches the given regular expression using the do tall option", "bleu": 0.827793296033012, "rouge": 0.8333333333333334}, {"predict": "consume one direction of this currently visible scroll", "true": "consume the final un consumed nested scroll after all behaviors done", "bleu": 0.12197601375336842, "rouge": 0.20469798657718125}, {"predict": "reads a query , processes it and processes it", "true": "retrieves way points matching the given query from the database", "bleu": 0.1262975489687145, "rouge": 0.10427350427350426}, {"predict": "release the page resources", "true": "cancels all the pending nox item downloads to the image loader", "bleu": 0.06243769243378541, "rouge": 0.12298387096774194}, {"predict": "returns the number of elements in this de que", "true": "returns the number of elements in this de que", "bleu": 1.0, "rouge": 1.0}, {"predict": "add at the beginning of the list", "true": "insert at the end of the list", "bleu": 0.4111336169005197, "rouge": 0.7142857142857143}, {"predict": "the text compaction mode includes all the printable ascii characters ( i", "true": "the text compaction mode includes all the printable ascii characters ( i", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new file / image / media attachment for a chat channel", "true": "create a new file / image / media attachment for a chat channel", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a st to this node", "true": "adds a parameter to the function parameter list", "bleu": 0.2238400777155271, "rouge": 0.4178082191780822}, {"predict": "constructs a delete event from the json serialized representation", "true": "constructs a delete event from the json serialized representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if the full copy is identical to the replica tor", "true": "check if the full copy volume could be restored", "bleu": 0.41722614486115056, "rouge": 0.5091819699499166}, {"predict": "rfc rfc q des mal wen n ( w hsp \" ( q des cr ) ( q des cr ls ) q des cr ls", "true": "d string = 1 * utf 8 <unk> string = w hsp \" ' \" d string \" ' \" w hsp <unk> string list = <unk> string * ( <unk> string ) <unk> strings = <unk> string / ( w hsp \" ( \" <unk> string list", "bleu": 0.07883303965838197, "rouge": 0.15391084945332215}, {"predict": "checks if the buffer is needed to write buffer since the buffer is large large large large large", "true": "returns true if the buffer is too large to be added to the buffer cache , false otherwise", "bleu": 0.23210911117419966, "rouge": 0.3888888888888889}, {"predict": "resets the index buffer to reset the index", "true": "only for test purposes this should not be called from any product code", "bleu": 0.0721806023765632, "rouge": 0.0}, {"predict": "creates an admin client", "true": "must return a proper response to this request", "bleu": 0.11115018927487523, "rouge": 0.0}, {"predict": "check the external storage and notify user for a text file", "true": "check the external storage and notify user on error", "bleu": 0.6132297420585351, "rouge": 0.7128547579298832}, {"predict": "returns either the plural or singular form of the given noun , depending on the quantity", "true": "returns either the plural or singular form of the given noun , depending on the quantity", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method checks the xml element and its id as a xml element", "true": "verify the signature of the xml document", "bleu": 0.12571192676522522, "rouge": 0.21143847487001732}, {"predict": "adds a video to the adapter and notify the change", "true": "adds a video to the adapter and notify the change", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines if the specified coordinate is in the target touch zone for a horizontal bar handle", "true": "determines if the specified coordinate is in the target touch zone for a horizontal bar handle", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the full set of transport data from the resource file , and sets the default maximum of the resource specified", "true": "reads the transport systems of the vi sum file", "bleu": 0.10457995018881573, "rouge": 0.35924617196702}, {"predict": "makes sure the nal has a header or not", "true": "makes sure the nal has a header or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "method that needs to be called , if the main hash structure is ( may be ) shared", "true": "method that needs to be called , if the main hash structure is ( may be ) shared", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds item in the form of two characters", "true": "adds multi field entry , equivalent of : | tab name | multi field # index # item type | multi field label # item label | value |", "bleu": 0.013814861526896274, "rouge": 0.09807073954983922}, {"predict": "returns the number of members ( name / value pairs ) in this object", "true": "returns the number of members ( name / value pairs ) in this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate array of n d - dimensional points whose coordinates are values in the range 0", "true": "generate array of n d - dimensional points whose coordinates are values in the range 0", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse parameters from a property string", "true": "parses a comma - separated list of au then tif i cation scheme parameters", "bleu": 0.06443935473636557, "rouge": 0.09327217125382263}, {"predict": "adds a new http session token for a site", "true": "adds a new session token for a particular site", "bleu": 0.5410822690539396, "rouge": 0.8888888888888888}, {"predict": "parses the distribution string from the installation configuration string", "true": "de serializes the g radle distribution from the the given string representation", "bleu": 0.158278836853973, "rouge": 0.4642313546423136}, {"predict": "converts the screen space side number of pixels", "true": "returns the ratio of meters to pixels at the center of the screen", "bleu": 0.1283572790104489, "rouge": 0.2739520958083832}, {"predict": "sends bytes over the already - established data socket", "true": "sends a byte array over the already - established data socket", "bleu": 0.6266108809965137, "rouge": 0.7858293075684382}, {"predict": "push a new context on to the stack", "true": "add a new parsing context on to the parse context stack", "bleu": 0.36479336700864445, "rouge": 0.716442953020134}, {"predict": "sets the focus able if this app is closed", "true": "open the go page", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "constructs an unbounded ( e", "true": "initial is e the finite state <unk>", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "this method normalize the example to in an array of doubles", "true": "calc u <unk> x i = ( x i - mean ( x ) ) / std ( x ) this function can deal with nan s", "bleu": 0.026598204708478963, "rouge": 0.04891740176423416}, {"predict": "adds the given location", "true": "adds the given location to the table", "bleu": 0.4723665527410147, "rouge": 0.693181818181818}, {"predict": "creates a new java formatter with the given initial line number of arguments", "true": "creates a java formatter with the target line delimiter", "bleu": 0.3161487584488943, "rouge": 0.657935285053929}, {"predict": "encodes a string into its quoted - printable form using the specified char set", "true": "encodes a string into its quoted - printable form using the specified char set", "bleu": 1.0, "rouge": 1.0}, {"predict": "check last path where last compaction is last pre loading", "true": "checks if more paths should be preloaded and pre loads them if needed", "bleu": 0.0933873085201553, "rouge": 0.084958217270195}, {"predict": "this function computes the nodes of a node , hierarchy on an end , end , but may be relevant rate on an end", "true": "warning : assumes strictly bifurcating tree", "bleu": 0.042601467364417965, "rouge": 0.0}, {"predict": "check if column name is allowed to be specified for this table", "true": "is input column name allowed", "bleu": 0.15537125692760353, "rouge": 0.38125000000000003}, {"predict": "converts the given hex - color - string to rgb", "true": "converts the given hex - color - string to rgb", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a property change listener to this bean", "true": "add a property change listener to this bean", "bleu": 1.0, "rouge": 1.0}, {"predict": "test sql exception is empty or null if the source blob is null", "true": "test if driver returns correctly empty and null blobs", "bleu": 0.12011055432195765, "rouge": 0.2819722650231125}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new journal that omits redundant information", "true": "creates a new journal that omits redundant information", "bleu": 1.0, "rouge": 1.0}, {"predict": "subtract a number from zero", "true": "subtract a number from zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "restores the object from the specified file", "true": "restore the graph vertex locations from a file", "bleu": 0.19148978368719022, "rouge": 0.3952483801295896}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "wait until the data is ready to be stopped", "true": "wait until data is ready in this region", "bleu": 0.31239399369202553, "rouge": 0.594541910331384}, {"predict": "fill an array with the values of a 74 - db 4 - sample blackman - harris window function", "true": "fill an array with the values of a minimum 4 - sample blackman - harris window function", "bleu": 0.7483293841345244, "rouge": 0.8978840846366144}, {"predict": "some key wrap algorithms make use of the key checksum defined in cms cms - algorithms", "true": "some key wrap algorithms make use of the key checksum defined in cms cms - algorithms", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the hash code for lowercase", "true": "returns the hash code of this user object", "bleu": 0.4405149609594086, "rouge": 0.5570776255707762}, {"predict": "this method will be invoked when the received connectivity is received", "true": "used for increment ing the number of packets received from the client", "bleu": 0.11510518494396255, "rouge": 0.17256011315417258}, {"predict": "parse a sentence and returns the corresponding sentence type", "true": "parse the given text string and create a sentence object using the current matching flags", "bleu": 0.11341174240707225, "rouge": 0.3189542483660131}, {"predict": "sets the data directory to be used by the specified list of new kafka if the storage directory doesn ' t exist", "true": "set the parent directory where the <unk> logs and server ' s logs and snapshots will be kept", "bleu": 0.07289334177359764, "rouge": 0.2036727879799666}, {"predict": "ensures there is enough space in the buffer for the given number of additional bytes", "true": "ensures there is enough space in the buffer for the given number of additional bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "called to notify that a consumption has finished", "true": "called to notify that a consumption has finished", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks rule part with a double - move position to the closest position", "true": "checks rule part with tag \" pro so dic position \" ; there is only the \" type \" attribute right now : checks if pro so dic position of a token is the same as the value of the type attribute in the rule ; values :", "bleu": 0.020854401647993376, "rouge": 0.2079883097905504}, {"predict": "return nulls for empty strings , as the entity engine can deal with nulls", "true": "return nulls for empty strings , as the entity engine can deal with nulls", "bleu": 1.0, "rouge": 1.0}, {"predict": "register a single char with a class loader as well as root and saves all of the given class loader", "true": "registers all operators from a given xml input stream", "bleu": 0.07264339766175722, "rouge": 0.14805825242718446}, {"predict": "when request permissions on devices before android m ( android 6", "true": "when request permissions on devices before android m ( android 6", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes sub group containers in the group container", "true": "deletes sub group containers in this group container", "bleu": 0.6606328636027614, "rouge": 0.875}, {"predict": "instantiate s a new route", "true": "creates a new task with the specified number of ticks between consecutive calls to execute ( )", "bleu": 0.03259533364576092, "rouge": 0.1655359565807327}, {"predict": "initialize the actual creation of the r function in order to do add in the actual list of elements where in the actual creation of the actual list", "true": "initialize boot image compiler", "bleu": 0.04327969719414172, "rouge": 0.07227488151658767}, {"predict": "send next available byte", "true": "send next available byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "encode a serial iz able object to a string", "true": "encode a object to a base 64 string", "bleu": 0.32466791547509893, "rouge": 0.7134502923976607}, {"predict": "a service wrapper for the create image method method", "true": "a service wrapper for the create image method method", "bleu": 1.0, "rouge": 1.0}, {"predict": "add new profiles to the existing list of profiles", "true": "add new profiles to the existing list of profiles", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the given string is a valid identifier", "true": "an <unk> identifier name is an identifier or reserved word", "bleu": 0.13950796967929133, "rouge": 0.2}, {"predict": "returns true if x 1 is less than x 2 , when both values are treated as unsigned", "true": "returns true if x 1 is less than x 2 , when both values are treated as unsigned long", "bleu": 0.9459594689067654, "rouge": 0.9682539682539683}, {"predict": "move from x and y", "true": "move a single , un selected node", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "create a list from passed obj x parameters", "true": "create a list from passed obj x parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a macro record to this macro", "true": "adds a macro record to this macro", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new records on the zero in records on the specified", "true": "make this method protected to make sure unit test can work well q : where to persist consumer state , i", "bleu": 0.04127145858834645, "rouge": 0.0}, {"predict": "add more q is cus user email to the user", "true": "adds or updates a <unk> of an existing user if the", "bleu": 0.12623203108004888, "rouge": 0.18885448916408668}, {"predict": "calculates the best hash provider in the data set", "true": "returns the best hash provider supporting at least a state ful implementation of a hash function with the given parameters", "bleu": 0.12110961461098403, "rouge": 0.32275132275132273}, {"predict": "reads a fixed number of bytes from the socket", "true": "read a fixed size of bytes from the input", "bleu": 0.4518010018049224, "rouge": 0.6666666666666666}, {"predict": "using sorting", "true": "using sorting", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads all entries from a file and all found entries", "true": "loads the address book from file", "bleu": 0.13950796967929133, "rouge": 0.26180257510729615}, {"predict": "calculates a sample likelihood of the given its parents", "true": "calculates the sample likelihood and bic score for i given its parents in a simple sem model", "bleu": 0.14213006365009043, "rouge": 0.4372759856630824}, {"predict": "removes an item from the adapter", "true": "removes item from the given position", "bleu": 0.4347208719449915, "rouge": 0.6666666666666666}, {"predict": "encodes the types of the argument as serialize", "true": "encodes the list of types and puts them under the specified key in the map", "bleu": 0.10462661942910988, "rouge": 0.32972972972972975}, {"predict": "clears the assertion information", "true": "clears internal assertion information storage", "bleu": 0.39573418216703893, "rouge": 0.6535714285714286}, {"predict": "add operation results to the array to be returned", "true": "add operation results to the array to be returned", "bleu": 1.0, "rouge": 1.0}, {"predict": "for given * subset * except that we get same properties as same in single schema", "true": "s can a group starting with primary key of a table , then get all of the children ( if any )", "bleu": 0.05286886883843417, "rouge": 0.05117449664429531}, {"predict": "add a switch port to maintenance queue", "true": "add a switch port to maintenance queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "links node as first element , or returns false if full", "true": "links node as first element , or returns false if full", "bleu": 1.0, "rouge": 1.0}, {"predict": "the inverse of pending bits in the process", "true": "the address of the start ( i", "bleu": 0.19070828081828378, "rouge": 0.4048672566371681}, {"predict": "copies the delegation privileges to a parent specified by the parent", "true": "creates default privileges for a newly created realm this method should be called in realm mode only", "bleu": 0.07306145289278965, "rouge": 0.1375422773393461}, {"predict": "returns true and false if both the same types and false otherwise", "true": "checks if given mime type is covered by current mime type", "bleu": 0.10390302174233558, "rouge": 0.08764367816091953}, {"predict": "indicates partial commitment towards triggering the same component", "true": "all these methods simply delegate to the \" other \" model that is being decorated", "bleu": 0.06685045700482882, "rouge": 0.08243243243243244}, {"predict": "tells the builder that a character range is valid", "true": "tells the builder that a range of code - points is valid", "bleu": 0.4290632223308574, "rouge": 0.7427701674277016}, {"predict": "method that creates virtual pool for the passed v pool and the virtual pool", "true": "change the virtual pool for the passed virtual volume on the passed v plex storage system", "bleu": 0.37391700936787414, "rouge": 0.3952483801295896}, {"predict": "checks if the given java script is enabled", "true": "returns true if the user has javascript enabled", "bleu": 0.22679164443904004, "rouge": 0.375}, {"predict": "this function returns true if the object is equals to this elliptic", "true": "compares this prime finite field for equality with the specified object", "bleu": 0.1235622127262679, "rouge": 0.2629310344827586}, {"predict": "returns the name of this element type", "true": "returns the name of this element type", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes ' close able ' , ignoring any checked exceptions", "true": "closes ' close able ' , ignoring any checked exceptions", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes an md 5 checksum string", "true": "md 5 version of the \" h ( ) \" function from rfc 2617", "bleu": 0.07663173913867023, "rouge": 0.18654434250764526}, {"predict": "check existence of file as valid data", "true": "checks whether the given path points to a file that is a valid skin specification", "bleu": 0.06555660318294844, "rouge": 0.17062937062937064}, {"predict": "create a tree for deciding what keys can legally be typed", "true": "create a tree for deciding what keys can legally be typed", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts the string representation of an object into this builder", "true": "inserts the string representation of an object into this builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "handles when the mouse is moved over a mouse pointer , we need to get the mouse pointer", "true": "handles a mouse moved event by updating the tooltip", "bleu": 0.10657284485555579, "rouge": 0.3152454780361757}, {"predict": "returns the number of elements in this de que", "true": "returns the number of elements in this de que", "bleu": 1.0, "rouge": 1.0}, {"predict": "do file in assets file have been sorted , and do the actual file", "true": "don ' t call this directly , see load <unk> ( file file )", "bleu": 0.10511846841633776, "rouge": 0.14285714285714285}, {"predict": "disables a storage pool for the passed storage system", "true": "this method is will check if the storage pool associated with the volume supports compression", "bleu": 0.10247907767191411, "rouge": 0.23921568627450981}, {"predict": "computes the end of a rhum b line on the rhum b axis and traversing with the given azimuth angle", "true": "computes the location on a rhum b line with the given starting location , rhum b azimuth , and arc distance along the line", "bleu": 0.23790153469501524, "rouge": 0.49193548387096775}, {"predict": "returns the first index of el t in the array , else - 1", "true": "returns the first index of el t in the array , else - 1", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the maximum dimensions needed to layout the target container can use", "true": "returns the maximum dimensions for this layout given the components in the specified target container", "bleu": 0.2758277772476023, "rouge": 0.5809523809523809}, {"predict": "read the log from the given input stream and return it", "true": "utility method for pulling plain text from an input stream object", "bleu": 0.16108992769687397, "rouge": 0.2727272727272727}, {"predict": "update the moving average with a new value", "true": "update the moving average with a new value", "bleu": 1.0, "rouge": 1.0}, {"predict": "the code that does the log entry for the given entry", "true": "logs a lease expiration , <unk> between expected and premature expiration s", "bleu": 0.08746102712394917, "rouge": 0.0}, {"predict": "starts at least one bit range", "true": "removes a ripple from the exiting ripple list", "bleu": 0.13309610652103346, "rouge": 0.0}, {"predict": "write the s rc code to the given buffer", "true": "write string to buffer", "bleu": 0.16784459625186196, "rouge": 0.4959349593495934}, {"predict": "callback invoked when the image is in - memory , unless it is now out of bounds , because it has now out of bounds", "true": "draws a frame for an eye", "bleu": 0.04085892079136996, "rouge": 0.0}, {"predict": "consume a source records from the topic", "true": "try to consume and capture exactly the specified number of records from the connector", "bleu": 0.13448025110102005, "rouge": 0.35935198821796754}, {"predict": "returns true if this composite has the specified object as this instance , that is equal to the same as this instance", "true": "indicates whether some other constant size is \" equal to \" this one", "bleu": 0.08282282660969602, "rouge": 0.23968565815324167}, {"predict": "compares two version strings for version 2", "true": "compare two version strings ( ie , \" 1", "bleu": 0.2598013194025897, "rouge": 0.3667334669338677}, {"predict": "are these two vectors the vector appear in vector ?", "true": "check a vector", "bleu": 0.12605968092174913, "rouge": 0.17039106145251398}, {"predict": "determine if the expression is still verification", "true": "determine if the expression is a <unk> al one", "bleu": 0.5112863131654277, "rouge": 0.6112224448897796}, {"predict": "change the loco speed reference on each device block", "true": "set speed of a throttle to a spee ed set by a float , using the block for the length details", "bleu": 0.04424335522018044, "rouge": 0.12436289500509684}, {"predict": "removes the specified child from this list of target", "true": "removes a child from this bean context", "bleu": 0.2777619034011791, "rouge": 0.5115303983228512}, {"predict": "registers this class descriptor ' s class descriptor into the list of observers", "true": "notify all i class observers that we are visiting given class", "bleu": 0.1135935489027116, "rouge": 0.16920943134535368}, {"predict": "generates an instruction to jump to the top level", "true": "generates a dup 2 instruction", "bleu": 0.15619699684601276, "rouge": 0.3012345679012346}, {"predict": "indicates if the mime type belongs to the application xml family", "true": "indicates if the mime type belongs to the application xml family", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a native page for the given view", "true": "returns a native page for displaying the given url if the url is a valid chrome - native url , or null otherwise", "bleu": 0.07872401282220855, "rouge": 0.3560311284046693}, {"predict": "throws an exception if there may exist at this index", "true": "throws a parse exception with line / column information", "bleu": 0.13950796967929133, "rouge": 0.21254355400696867}, {"predict": "construct and return a new custom editor", "true": "sets up the array editor", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "creates a one of one value using the given set of values", "true": "create a new memo i done , using the supplied transformation function", "bleu": 0.14694106251955755, "rouge": 0.25}, {"predict": "create a node tree using j value type", "true": "indicate that the expression return type is a single ( non - <unk> ) value of the given type", "bleu": 0.048218604638712956, "rouge": 0.20701357466063344}, {"predict": "convert a field type to a primitive type", "true": "convert field type from string to a class type", "bleu": 0.2547549121331136, "rouge": 0.6984732824427481}, {"predict": "adds an xml element after the current position", "true": "adds the given xml element after the token who es index matches the given last token index value", "bleu": 0.13383727141469795, "rouge": 0.35966981132075476}, {"predict": "this is a generic service for traversing a content tree , typical of a blog response tree", "true": "this is a generic service for traversing a content tree , typical of a blog response tree", "bleu": 1.0, "rouge": 1.0}, {"predict": "compares two values and plane are identical to the other", "true": "are two objects equal ? arrays have the standard object equals method which only returns true if the two object are the same", "bleu": 0.040855532557519766, "rouge": 0.16975881261595546}, {"predict": "construct the dictionary of the provided input stream", "true": "creates a new dictionary containing the information read from the provided input streams to hun spell affix and dictionary files", "bleu": 0.07370355832749997, "rouge": 0.26521739130434785}, {"predict": "collapse a building of the building from the given coordinates from the player ' s and player", "true": "the given building has collapsed", "bleu": 0.10216198665886358, "rouge": 0.20165289256198346}, {"predict": "this method performs an iso thrift call to detach the remote client", "true": "this method performs an asynchronous thrift call to detach an iso from a vm", "bleu": 0.43529489807045857, "rouge": 0.6069651741293532}, {"predict": "an error message to an error message , raising an exception to reply", "true": "read nfc error from reply message", "bleu": 0.1135935489027116, "rouge": 0.22550831792975967}, {"predict": "displays list of items", "true": "guaranteed has center set", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "persist the profile with the given list of modified objects to the given list of resource", "true": "update the timestamp and notify", "bleu": 0.07692375026049747, "rouge": 0.10517241379310344}, {"predict": "adds an undo action to the undo stack", "true": "add a new undo able action", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "creates a new array list and fills it with the elements of the specified array", "true": "constructs a list containing the elements of the specified array", "bleu": 0.3965384287913187, "rouge": 0.6639455782312924}, {"predict": "add a ping time for a testing", "true": "adds a ping time sample to the averaging window", "bleu": 0.2598013194025897, "rouge": 0.3667334669338677}, {"predict": "encode the body of this header ( the stuff that follows header name )", "true": "canonical encoding of body of the header", "bleu": 0.13217947626377288, "rouge": 0.4053156146179402}, {"predict": "tears down the underlying socket", "true": "tears down the fixture , for example , close a network connection", "bleu": 0.12530399297423295, "rouge": 0.3285457809694794}, {"predict": "removes subject from the given subject", "true": "get a substring from a string", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "return false if not moving", "true": "pause and resume auto - running train or abort any allocation state engineer", "bleu": 0.04635036983311895, "rouge": 0.0}, {"predict": "removes a custom sash form listener", "true": "removes the custom sash form listener", "bleu": 0.6434588841607617, "rouge": 0.8333333333333334}, {"predict": "writes a string to a file creating the file if it does not exist using the default encoding for the vm", "true": "writes a string to a file creating the file if it does not exist using the default encoding for the vm", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete a value stored in the project ' s data store", "true": "delete a value stored in the project ' s data store", "bleu": 1.0, "rouge": 1.0}, {"predict": "produces a string representation of the date in sql format", "true": "produces a string representation of the date in sql format", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes and releases the stream", "true": "this also io errors that happened in the gzip thread", "bleu": 0.10043553373039076, "rouge": 0.12577319587628866}, {"predict": "parses a string to an in t", "true": "parses a string as a in t", "bleu": 0.4111336169005197, "rouge": 0.7142857142857143}, {"predict": "writes the entire result set to a csv file", "true": "writes the entire result set to a csv file", "bleu": 1.0, "rouge": 1.0}, {"predict": "test for a special case", "true": "test for a special case", "bleu": 1.0, "rouge": 1.0}, {"predict": "verify that the given device exactly matches the given fields", "true": "verify that the given device exactly matches the given fields", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a window zone rules , including creation | 3 d window", "true": "adds a window to the builder that can be used to filter a set of rules", "bleu": 0.10528787210424367, "rouge": 0.2089041095890411}, {"predict": "returns a hash table for one line segment", "true": "compute the intersection of all segments when given an iterator of segments", "bleu": 0.08179133792443427, "rouge": 0.0}, {"predict": "register a set of cpu provider", "true": "register macro providers which returns the implementation", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "creates a new map with the specified initial capacity and load factor", "true": "creates a new map with the specified initial capacity and load factor", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a sequence containing one object", "true": "create a sequence containing one object", "bleu": 1.0, "rouge": 1.0}, {"predict": "populates the byte buffer using the given size", "true": "populates a stream blob for testing", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "set the bit ( in t n ) of a double where n is already in t n , etc", "true": "<unk> here , to avoid cyclic dependency with ( strict ) fast math", "bleu": 0.07264339766175722, "rouge": 0.12603305785123967}, {"predict": "adds a near key", "true": "adds a near key", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes sure class fields with a class name is accessible from java class", "true": "introspection of the passed in class", "bleu": 0.09552040806823771, "rouge": 0.11275415896487984}, {"predict": "is the given log level currently enabled ?", "true": "is the given log level currently enabled ?", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads all needed resources from a frame", "true": "loads all data of a memory section", "bleu": 0.2626909894424158, "rouge": 0.42857142857142855}, {"predict": "delete a directory on the directory", "true": "deletes a directory and its contents", "bleu": 0.2907153684841096, "rouge": 0.3333333333333333}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds the name of the first table , which is editable", "true": "finds the name of the first table , which is editable", "bleu": 1.0, "rouge": 1.0}, {"predict": "store the all the operations into a backup", "true": "store the all of the operation car objects in the default place , including making a backup if needed", "bleu": 0.09327100308715008, "rouge": 0.4140271493212669}, {"predict": "construct a new instance with the specified detail string and exception", "true": "construct a new instance with the specified detail string and exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns whether an existing follower users has been created when this follower was created when follower users are created", "true": "checks if this has new <unk>", "bleu": 0.0712695567709093, "rouge": 0.0882778581765557}, {"predict": "this method is called by the track of the track of the track", "true": "on track point element start", "bleu": 0.09552040806823771, "rouge": 0.12079207920792079}, {"predict": "call a request for a call - back when the bound property changes", "true": "fire an existing property change event to any registered listeners", "bleu": 0.09552040806823771, "rouge": 0.08905109489051095}, {"predict": "checks that a the given substring is a valid type descriptor", "true": "checks that a the given substring is a valid type descriptor", "bleu": 1.0, "rouge": 1.0}, {"predict": "sorts the specified fields in ascending order by the specified field array , creating the sort field if the specified sorted array", "true": "sort the field array using a quicksort", "bleu": 0.08282282660969602, "rouge": 0.2281795511221945}, {"predict": "draws the background of the hex panel", "true": "draws the background of the view", "bleu": 0.6803749333171202, "rouge": 0.7800511508951408}, {"predict": "adds an attribute name to the unique attribute list", "true": "add unique attribute to the element which will force elements to be identical", "bleu": 0.1497598550050754, "rouge": 0.26406926406926406}, {"predict": "this method validates a vm response object , raising an exception if the response reflects an operation failure", "true": "this method validates a delete vm response object , raising an exception if the response reflects an operation failure", "bleu": 0.8580904324275119, "rouge": 0.9682539682539683}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "limits the maximum scale and x translation of the given matrix", "true": "limits the maximum scale and x translation of the given matrix", "bleu": 1.0, "rouge": 1.0}, {"predict": "get a blaze value factory instance", "true": "return the factory used to round - trip between tinker pop values and rdf values", "bleu": 0.04928854007377984, "rouge": 0.08840579710144927}, {"predict": "constructs a new data backed with the specified json value", "true": "constructs a new refresh token backed with the data in the specified json value", "bleu": 0.3870094590218788, "rouge": 0.7281167108753316}, {"predict": "put a style in the style", "true": "put the style selector ( style or style map ) in the list of shared styles , associated to its style id", "bleu": 0.026584572832298727, "rouge": 0.3237791932059448}, {"predict": "extracts the client name from the client id string into an ipv 6 host name", "true": "excludes the host name from the client id and returns the string", "bleu": 0.3489981252688509, "rouge": 0.5291201982651798}, {"predict": "create a completed future", "true": "internal conversion method to convert comp let able futures to fast future", "bleu": 0.04862652376060361, "rouge": 0.11466165413533834}, {"predict": "determines whether a scroll action is currently places the pipeline operation", "true": "check if a given inventory action involves placing items into the slot", "bleu": 0.12368857073777001, "rouge": 0.25884016973125884}, {"predict": "refreshes the markers displayed in this error strip", "true": "refreshes the markers displayed in this error strip", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds view to specified cache", "true": "adds view to specified cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads all bytes from an input stream and returns a new byte array", "true": "converts a small input stream to a byte array", "bleu": 0.16544619993389978, "rouge": 0.4699537750385208}, {"predict": "plays a media", "true": "force showing or not the media player window", "bleu": 0.10148002183214462, "rouge": 0.1680440771349862}, {"predict": "returns a string encoded as a utf 8 string", "true": "string conversion into standard char set", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "encodes cache key", "true": "encodes cache flags to bit map", "bleu": 0.2601300475114444, "rouge": 0.41924398625429554}, {"predict": "adds a data source to the list of visible data source", "true": "adds a new data series to the plot", "bleu": 0.1972940627795883, "rouge": 0.5417406749555951}, {"predict": "adds a value to the density estimator", "true": "adds a value to the density estimator", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds a check box row", "true": "builds a check box row", "bleu": 1.0, "rouge": 1.0}, {"predict": "formats the given date into a simple date and time", "true": "synchronized because simple <unk> format aren ' t thread safe", "bleu": 0.12605968092174913, "rouge": 0.1}, {"predict": "indicates if a group is a child group", "true": "indicates if a group is a child group , a non - top - level data group in a set of nested data groups ( e", "bleu": 0.10539922456186433, "rouge": 0.4295774647887324}, {"predict": "throw an array index for an array of values", "true": "throw array index out of bounds exception", "bleu": 0.21105340631872635, "rouge": 0.5115303983228512}, {"predict": "creates the next instance of previous info that are not mess up ( 0 ) make sure that are not be vetoed ) that are not start - 1 ) that are not occur in two ways that were processed before next stage of last stage of reasons", "true": "create the next relevant zero - coverage locus info", "bleu": 0.03744783790400382, "rouge": 0.1200787401574803}, {"predict": "method to load the configuration file on the current configuration", "true": "this method will be invoked when a service ' s global config u ation data has been changed", "bleu": 0.05664226584551703, "rouge": 0.06792873051224944}, {"predict": "launch an email intent", "true": "launch an email intent if the device is capable", "bleu": 0.2865047968601901, "rouge": 0.5754716981132075}, {"predict": "insert a item associated with the specified position of adapter", "true": "insert a item associated with the specified position of adapter", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a translator , which is called whenever a client requests a class file", "true": "adds a translator , which is called whenever a class is loaded", "bleu": 0.6585051938990261, "rouge": 0.7800511508951408}, {"predict": "indicates that the main content has scrolled ( for the purposes of showing / hiding the action for the \" action bar auto hide \" effect )", "true": "indicates that the main content has scrolled ( for the purposes of showing / hiding the action bar for the \" action bar auto hide \" effect )", "bleu": 0.9062490339241026, "rouge": 0.9786096256684491}, {"predict": "writes a number of type char in little endian", "true": "writes a string in little endian", "bleu": 0.31239399369202553, "rouge": 0.6916099773242631}, {"predict": "reads and returns the next line , excluding the line separator if present", "true": "reads and returns the next line , excluding the line separator if present", "bleu": 1.0, "rouge": 1.0}, {"predict": "if the main text matches the regex", "true": "if the main text matches the regex", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the area to the file", "true": "just for debugging convenience", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "add a fixed view to appear at the bottom of the list", "true": "add a fixed view to appear at the bottom of the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a close callback hook", "true": "add a close callback hook", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes task r in the caller ' s thread , unless the executor has been shut down , in which case the task is discarded", "true": "executes task r in the caller ' s thread , unless the executor has been shut down , in which case the task is discarded", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the range on both axes", "true": "updates the range on both axes", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the upc / e an checksum on a string of digits , and reports whether the checksum is correct or not", "true": "computes the upc / e an checksum on a string of digits , and reports whether the checksum is correct or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "read a configuration file", "true": "read the specified file and parse the configuration", "bleu": 0.1571901051328651, "rouge": 0.31443298969072164}, {"predict": "process the incoming member when the player occurs", "true": "rewards player for a successful l trade", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "returns all the text at the given url", "true": "returns all the text at the given url", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a lib trace from a trace list of breakpoints", "true": "fills a combined trace from the events of multiple input traces", "bleu": 0.1705647399369684, "rouge": 0.37770897832817335}, {"predict": "either posts the tasks , waiting for all queued tasks in the queue , upon completion that are no longer running or the task", "true": "ensure that any guarded regions are interrupted", "bleu": 0.05606668411195419, "rouge": 0.14319248826291078}, {"predict": "register the default device types for default updates", "true": "registers a <unk> - used set of device services with discovery manager", "bleu": 0.09726684100532913, "rouge": 0.09651898734177215}, {"predict": "removes the dependency from the path wc s", "true": "look at the dependency information and remove s wc dependencies that are subsets of other s wc dependencies", "bleu": 0.06870470052394348, "rouge": 0.28773584905660377}, {"predict": "draws the chart tick lines", "true": "draws the chart tick lines", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate matrix for fit center", "true": "calculate matrix for fit center", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an insertion policy that indicates the tuple is to be inserted into the partition", "true": "returns an insertion policy that indicates the tuple is to be inserted into the partition", "bleu": 1.0, "rouge": 1.0}, {"predict": "test de bus queda open l dap con atri but os", "true": "test de bus queda open l dap", "bleu": 0.6132297420585351, "rouge": 0.8102466793168881}, {"predict": "create a positive number from a string value and radix 8", "true": "create a positive number from a string value and radix 8", "bleu": 1.0, "rouge": 1.0}, {"predict": "this is heart of the code that determines if a given character is in the given encoding", "true": "this is heart of the code that determines if a given character is in the given encoding", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete the entry in the persistent store", "true": "delete the entry in the directory", "bleu": 0.6803749333171202, "rouge": 0.7800511508951408}, {"predict": "removes all highlights added to the text area by this listener", "true": "removes all highlights added to the text area by this listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "en queue an successor from one block", "true": "add successor blocks into the given work list if they are not already marked as visited", "bleu": 0.05135131375181345, "rouge": 0.08122503328894808}, {"predict": "adds common component to the parser configuration", "true": "adds common component to the parser configuration", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new role to this user", "true": "add a role to this user", "bleu": 0.5410822690539396, "rouge": 0.7800511508951408}, {"predict": "creates a new dialog object", "true": "creates the check box panel to control if full paths should be shown in the modules table", "bleu": 0.02476709768976917, "rouge": 0.08276797829036635}, {"predict": "this method is called from the transport protocol", "true": "must be called by a subclass after the response has been successfully sent to the client", "bleu": 0.06528905536667998, "rouge": 0.15721649484536082}, {"predict": "append the contents of another fast string buffer on to this fast string buffer , growing the storage if necessary", "true": "append the contents of another fast string buffer on to this fast string buffer , growing the storage if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds the latest index snapshots from the index", "true": "loads all available snapshots in the repository", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "construct an empty quest tree for more than one points", "true": "creates a new instance of maple quest requirement", "bleu": 0.12605968092174913, "rouge": 0.11338289962825278}, {"predict": "create a reply to a forum post", "true": "create a reply to a forum post", "bleu": 1.0, "rouge": 1.0}, {"predict": "indicates partial commitment towards triggering the same component", "true": "all these methods simply delegate to the \" other \" model that is being decorated", "bleu": 0.06685045700482882, "rouge": 0.08243243243243244}, {"predict": "looks up the key that are not name - spaced", "true": "looks up an attribute key by element and local name", "bleu": 0.18850319022747347, "rouge": 0.4}, {"predict": "data from mat lab", "true": "data provided by a user ; this data needs to be validated and processed", "bleu": 0.02949347753605095, "rouge": 0.10099337748344371}, {"predict": "get the tuple with the maximum data field value", "true": "get the tuple with the maximum data field value", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the enabled status of the fields", "true": "updates the enabled status of the input fields and labels", "bleu": 0.5663883102178479, "rouge": 0.7981308411214955}, {"predict": "to do : return a string representation of the ids", "true": "convert throttle id to a human friendly format", "bleu": 0.13950796967929133, "rouge": 0.22676579925650556}, {"predict": "resets the executor to cache", "true": "reset stats tracked for cache hits and misses", "bleu": 0.14983220973977976, "rouge": 0.1476997578692494}, {"predict": "test to string - only strings", "true": "convert other - - > string ( default conversion )", "bleu": 0.1255107248036171, "rouge": 0.11960784313725491}, {"predict": "remove the item at the given index and optionally forces menu views to update", "true": "remove the item at the given index and optionally forces menu views to update", "bleu": 1.0, "rouge": 1.0}, {"predict": "shift right ( in t n ) , 0 < n < 32", "true": "shift right ( in t n ) , 0 < n < 32", "bleu": 1.0, "rouge": 1.0}, {"predict": "show a filter dialog that filters are selected", "true": "shows the filter dialog", "bleu": 0.21105340631872638, "rouge": 0.3546511627906977}, {"predict": "returns the number of pixels in the given bounds", "true": "little math utility that both tools use , that just implements the <unk> theorem to do the number of pixels between two screen points", "bleu": 0.07765310973887286, "rouge": 0.22405876951331496}, {"predict": "add newly generated keys of a given key type to an existing key store", "true": "add newly generated keys of a given key type to an existing key store", "bleu": 1.0, "rouge": 1.0}, {"predict": "true if annotations can be added with respect to the columns", "true": "utility method to check if form object should have a popup", "bleu": 0.12605968092174913, "rouge": 0.09090909090909091}, {"predict": "create local g it", "true": "uses the current working dir to open the g it repository", "bleu": 0.08217262444082543, "rouge": 0.24596774193548387}, {"predict": "returns a vector 2 containing the smallest x and y values", "true": "returns a vector 2 containing the smallest x and y values", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a reflective method to the given method", "true": "add a test call", "bleu": 0.16036590969929357, "rouge": 0.17732558139534885}, {"predict": "puts all details into the cache using the app manager", "true": "serialize the test results to xml", "bleu": 0.12605968092174913, "rouge": 0.13090128755364808}, {"predict": "verify the block mirror object to create the actual block mirror field", "true": "verify the block mirror objects have been migrated correctly", "bleu": 0.2891784933232571, "rouge": 0.39102564102564097}, {"predict": "creates a new instance of log formatter , with the provided log level", "true": "create a log formatter around a given logger", "bleu": 0.1350862565735141, "rouge": 0.2985318107667211}, {"predict": "remove a text listener", "true": "remove a text listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "re - measure the loading views height , and adjust internal padding as necessary", "true": "re - measure the loading views height , and adjust internal padding as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a idp entity descriptor under the identity", "true": "create extension element of entity descriptor in dom", "bleu": 0.21105340631872638, "rouge": 0.25}, {"predict": "clears the buffer , returning all allocations to the al locator", "true": "clears the buffer , returning all allocations to the al locator", "bleu": 1.0, "rouge": 1.0}, {"predict": "set the camera and set of bounds", "true": "apply the camera settings", "bleu": 0.24446151121745047, "rouge": 0.3824451410658307}, {"predict": "returns a point of the given point", "true": "this method is called via reflection from the database", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "adds a volume to the input list , and sets to the existing set", "true": "this method will add to the existing volumes list only those members that don ' t already exist in either the existing or user - created volume list", "bleu": 0.06961164030105808, "rouge": 0.22459499263622976}, {"predict": "creates a new temporary file with the prefix , domain 1", "true": "creates a unique temporary file as a child of this directory", "bleu": 0.18850319022747347, "rouge": 0.36363636363636365}, {"predict": "gets the list of types provided in this type", "true": "use a map to partition annotations with the given target types into lists , where each target type is a key in the output map", "bleu": 0.02999547806236418, "rouge": 0.16266666666666663}, {"predict": "construct a new instance with the specified detail string and exception", "true": "construct a new instance with the specified detail string and exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "load the content of the file", "true": "opens a channel to the specified path if it does not already exist", "bleu": 0.06878769894132081, "rouge": 0.09870550161812298}, {"predict": "persist the player ' s internal id to the given person id", "true": "called when entity adjusts hp", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "resolves the given name", "true": "resolve a free marker name reference", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "set up the tool and sets up the current image", "true": "this method should be called to initialize the tooltip status so that an old tooltip doesn ' t remain when a layer starts listening to mouse events", "bleu": 0.023029026751748408, "rouge": 0.04991816693944354}, {"predict": "decode an array of strings into a single array", "true": "decodes a string generated by encode array", "bleu": 0.15619699684601276, "rouge": 0.2557651991614256}, {"predict": "call this when you want to know the new location", "true": "call this when you want to know the new location", "bleu": 1.0, "rouge": 1.0}, {"predict": "send resource bytes to the remote resources", "true": "sends given resource to the socket", "bleu": 0.2626909894424158, "rouge": 0.4680306905370844}, {"predict": "the roll back in t by the process", "true": "the bitmap of ignored signals , displayed as a decimal number", "bleu": 0.11021777041988566, "rouge": 0.10234899328859062}, {"predict": "generates a device - and invocation - specific seed to be mixed into the linux prng", "true": "generates a device - and invocation - specific seed to be mixed into the linux prng", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "renders the given expression as a string", "true": "return the rendering of the value expr object", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "method to stop sampling", "true": "finish sampling and prevent further changes to the connection class until another timer is started", "bleu": 0.025419978385188596, "rouge": 0.0953125}, {"predict": "reverses the order of the polygon points within the given list", "true": "reverses the order of the polygon points within the given list", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d sign csr dialog for a pkcs # 10 formatted csr", "true": "creates a new d sign csr dialog for a pkcs # 10 formatted csr", "bleu": 1.0, "rouge": 1.0}, {"predict": "a simple mechanism to initialize factory with dynamic binding", "true": "a simple mechanism to initialize factory with dynamic binding", "bleu": 1.0, "rouge": 1.0}, {"predict": "awaits completion or aborts on interrupt or time out", "true": "awaits completion or aborts on interrupt or time out", "bleu": 1.0, "rouge": 1.0}, {"predict": "links node as first element , or returns false if full", "true": "links node as first element , or returns false if full", "bleu": 1.0, "rouge": 1.0}, {"predict": "clamp a value to be within the provided range", "true": "clamp a value to be within the provided range", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses volume host name from host : port name", "true": "parses volume host directory only", "bleu": 0.2626909894424158, "rouge": 0.4518518518518518}, {"predict": "formats an time for a given time", "true": "formats times into a standard format", "bleu": 0.20556680845025982, "rouge": 0.31202046035805625}, {"predict": "returns a new array containing all elements contained in this vector", "true": "returns a new array containing all elements contained in this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string with the right char", "true": "right justify a string", "bleu": 0.2626909894424158, "rouge": 0.3824451410658307}, {"predict": "appends all of the elements in the specified collection to the end of this vector , in the order that they are returned by the specified collection ' s iterator", "true": "appends all of the elements in the specified collection to the end of this vector , in the order that they are returned by the specified collection ' s iterator", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the state , this log component contained in the transferable state object", "true": "updates this log , according to the information contained in the transferable state object", "bleu": 0.4761663737003947, "rouge": 0.6622436670687575}, {"predict": "converts a string into its java - style utf - 8 form", "true": "converts a string into its java - style utf - 8 form", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a map of bindings to a pair of map", "true": "converts a hash map of bindings to a list of binding pairs", "bleu": 0.4378784374856904, "rouge": 0.7155425219941348}, {"predict": "checks the given label can be added / removed to / from a vertex", "true": "checks the given label can be added / removed to / from a vertex", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends a message observer to this message ' s list", "true": "adds the specified message observer", "bleu": 0.16590387014219712, "rouge": 0.2837209302325582}, {"predict": "shows the initial string in the text area of the specified char", "true": "performs show and sets the edit string to be the initial character or string", "bleu": 0.1315189295625006, "rouge": 0.22761194029850743}, {"predict": "produces a hexadecimal representation of the byte buffer to the supplied buffer", "true": "description of the method", "bleu": 0.1367440667823257, "rouge": 0.27477477477477474}, {"predict": "removes the element at the specified position in this list", "true": "removes the element at the specified position in this list", "bleu": 1.0, "rouge": 1.0}, {"predict": "merge two doubles on the array", "true": "generates a sample of a normal distribution", "bleu": 0.15723447135049806, "rouge": 0.0}, {"predict": "reads next stream from specified pdf file", "true": "read 1", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "called by the native code or other classes to signal a warning", "true": "called by the native code or other classes to signal a warning", "bleu": 1.0, "rouge": 1.0}, {"predict": "whether the known attribute or not", "true": "checks if sub is indexed", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "compute and return the source text ( all e qualities and deletions )", "true": "compute and return the source text ( all e qualities and deletions )", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if id is stored in the db", "true": "determines whether the view was previously stored to the database", "bleu": 0.13821693129588736, "rouge": 0.21785714285714283}, {"predict": "counts the size of a directory recursively ( sum of the length of all files )", "true": "counts the size of a directory recursively ( sum of the length of all files )", "bleu": 1.0, "rouge": 1.0}, {"predict": "is strin list requires ?", "true": "query searchlight bits by bit number ( s mini only ) bit - bit number of the either bit of an oscillating search light bit pair note : returns ' true ' if bit is an oscillating searchlight bit , otherwise ' false ' is returned", "bleu": 7.498374413984695e-05, "rouge": 0.03425042111173498}, {"predict": "constructs a new age file filter for files on any one side of a certain cutoff date", "true": "constructs a new age file filter for files on any one side of a certain cutoff date", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the optimum major tick", "true": "calculate the optimum major tick distance", "bleu": 0.8187307530779819, "rouge": 0.8944281524926685}, {"predict": "test if there more records available", "true": "test if there more records available", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an attribute to the header", "true": "put a value in the table", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "send the interface for the given messages", "true": "post a batch of messages", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "indicates if this node has been drawn , updating this node appropriately", "true": "removes any ordering between two nodes", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "converts the swf files to html file", "true": "parses swf input and extracts text and wrap it as html", "bleu": 0.1160873020151595, "rouge": 0.2136602451838879}, {"predict": "write a class file to a file", "true": "write a class file data structure to a file", "bleu": 0.5196026388051794, "rouge": 0.8557114228456915}, {"predict": "creates a great circle path object from provided coordinates", "true": "create a java", "bleu": 0.14113991930789777, "rouge": 0.18318318318318316}, {"predict": "creates a new connection with the given peer and the other side of a given peer", "true": "creates a new connection to a given peer", "bleu": 0.2863424630911014, "rouge": 0.6206395348837209}, {"predict": "returns a vector that contains the same objects as the array", "true": "returns a vector that contains the same objects as the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "notify version about the version", "true": "notify all registered listeners of the s prog version", "bleu": 0.1458826981425239, "rouge": 0.40757238307349664}, {"predict": "accept the drop that the drop is not null", "true": "called to signal that the drop is acceptable using the specified operation", "bleu": 0.2945901093386716, "rouge": 0.3713850837138508}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the string representation of the capabilities", "true": "returns a string representation of this tree node", "bleu": 0.31689174383082924, "rouge": 0.5269978401727862}, {"predict": "construct a new instance with the specified detail string and exception", "true": "construct a new instance with the specified detail string and exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "splits the full tree map node , consistent with new nodes", "true": "splits a node into two based on the <unk> value of the dimension in which the node ' s rectangle is widest", "bleu": 0.04983292803401908, "rouge": 0.17150890346766634}, {"predict": "this method asks and returns a date object representing the current connection", "true": "this method asks and returns the last modification date of a file or directory", "bleu": 0.3565223047958927, "rouge": 0.45522388059701485}, {"predict": "has the user chosen to import in pkcs 8 format ?", "true": "has the user chosen to import from pkcs # 8 private key and certificate file combination ?", "bleu": 0.3267407504063527, "rouge": 0.6189402480270575}, {"predict": "the method runs the a st tree", "true": "build the control flow graph of a method", "bleu": 0.19148978368719022, "rouge": 0.2634989200863931}, {"predict": "returns true if the engine is a valid engine on this engine", "true": "sanity checks the engine , no negative ratings , and similar checks", "bleu": 0.1367440667823257, "rouge": 0.16666666666666666}, {"predict": "asserts that two floats are equal concerning a delta", "true": "asserts that two floats are equal concerning a delta", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the value of the frequency response according to the current ex tre mal indices in the range of values set , and verifies the values set the value set to the ranges of the value set", "true": "calculates the set of d values for the current ex tre mal index set", "bleu": 0.13893031405126582, "rouge": 0.3414975507347796}, {"predict": "inverse a base 64 - the divisor", "true": "decodes a base 64 encoded string", "bleu": 0.345720784641941, "rouge": 0.4680306905370844}, {"predict": "load properties from the specified properties file", "true": "loads properties from a properties file on the local filesystem", "bleu": 0.20958712452883563, "rouge": 0.45607476635514016}, {"predict": "replace all occurrences of the pattern", "true": "replace all occurrences of the pattern", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a map of j mx m dns name instance", "true": "list published node ( s ) configuration in the network via multi cast", "bleu": 0.07852905296479128, "rouge": 0.0}, {"predict": "creates a lazy stream from a j dk iterator", "true": "concatenate two streams", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "given a standard components , return the pointer that of a particular direction , or the baseline , that will be that is to the frame", "true": "centers the elements in the specified row , if there is any slack", "bleu": 0.058697608930387266, "rouge": 0.2182468694096601}, {"predict": "read external record from remote object", "true": "reads object from data input", "bleu": 0.24446151121745047, "rouge": 0.18484848484848485}, {"predict": "creates an item label generator using default number formatters", "true": "creates an item label generator using default number formatters", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a unit length vector in the given direction", "true": "creates a unit length vector in the given direction", "bleu": 1.0, "rouge": 1.0}, {"predict": "use openoffice to convert documents between types", "true": "use openoffice to convert documents between types", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an arbitrary 10 , depending on if values is being plotted", "true": "returns an adjusted power of 10 value for graphing purposes", "bleu": 0.14694106251955755, "rouge": 0.2772727272727273}, {"predict": "clears the data from this table", "true": "clears all the data from this table", "bleu": 0.7118034480382984, "rouge": 0.9104477611940297}, {"predict": "is last in voice costing method", "true": "is last in voice costing method", "bleu": 1.0, "rouge": 1.0}, {"predict": "set the ' http", "true": "set the ' http", "bleu": 1.0, "rouge": 1.0}, {"predict": "fetches the cluster name for the cluster name and consistency group name", "true": "parses out the cluster name from the combined cluster / cg name", "bleu": 0.2224246939793677, "rouge": 0.5}, {"predict": "helper http function to get list of my service cards", "true": "helper http function to get list of my service cards", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d view fields dialog where the parent is a dialog", "true": "creates new d view asymmetric key fields dialog", "bleu": 0.21972813874997157, "rouge": 0.5970636215334422}, {"predict": "samples migration for a two - coloured branch , conditional on colours at both ends migration process is forwards in ( natural ) time , so we ' t go for the tree", "true": "samples migration events on a two - coloured branch , conditional on colours at both ends migration process is forwards in ( natural ) time , so we are going down the tree", "bleu": 0.7651636556981023, "rouge": 0.8484848484848485}, {"predict": "checks whether the value is an attribute", "true": "checks if string is actually an attribute", "bleu": 0.2777619034011791, "rouge": 0.5714285714285714}, {"predict": "decode the ascii encoded string data into its ascii representation", "true": "decodes an ascii string from a key", "bleu": 0.13950796967929133, "rouge": 0.24302788844621517}, {"predict": "column column control column ' s selection", "true": "this method will be invoked after a user selection of an operator in the tree", "bleu": 0.059237077985967744, "rouge": 0.08531468531468532}, {"predict": "removes property change listener from the listener list", "true": "removes a property change listener", "bleu": 0.3155984539112945, "rouge": 0.6421052631578947}, {"predict": "transfers node , if necessary , to sync queue after a cancelled wait", "true": "transfers node , if necessary , to sync queue after a cancelled wait", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an intent to create an intent to share the android share text", "true": "creates a share intent", "bleu": 0.1135935489027116, "rouge": 0.2601279317697228}, {"predict": "creates and returns an updater for objects with the given field", "true": "creates an updater for objects with the given field", "bleu": 0.7292571723872933, "rouge": 0.9165275459098498}, {"predict": "compute a step between the given two points", "true": "perform integration over one step using sub steps of a modified <unk> method", "bleu": 0.09499501502705178, "rouge": 0.09131736526946108}, {"predict": "internal conversion", "true": "internal conversion", "bleu": 1.0, "rouge": 1.0}, {"predict": ", + / - , l sr # ! 0 b 01 / l sr / index = rm logical shift i mm = 0 / l sr # 32 / index = 0 / index = = = = = 0 / u = = = 1", "true": "operation : , + / - , l sr # 0 b 01 / l sr / if shift i mm = = 0 then / l sr # 32 / index = 0 else index = rm logical shift right shift i mm if u = =", "bleu": 0.5907896381180188, "rouge": 0.7083333333333333}, {"predict": "build a row limit statement", "true": "builds a row limit specification", "bleu": 0.5081327481546147, "rouge": 0.6}, {"predict": "returns the first layer , where both this item and p other have a shape", "true": "returns the first layer , where both this item and p other have a shape", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove items as possible from the given stack into a drive", "true": "take as many items as possible , up to the passed limit , from a drive into the given stack", "bleu": 0.15853689151065958, "rouge": 0.42914572864321615}, {"predict": "save the indexes of this indexes", "true": "commit all index memory changes to disk", "bleu": 0.15723447135049806, "rouge": 0.0}, {"predict": "add item in the last index", "true": "add item in determined index", "bleu": 0.4347208719449915, "rouge": 0.7393939393939394}, {"predict": "methods for starting asynchronous execution", "true": "methods for starting asynchronous execution", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will take the given location and selects it if it ' s not already", "true": "expands the tree to select the given entry if it exists", "bleu": 0.12729922658368398, "rouge": 0.3065326633165829}, {"predict": "advance to the next token", "true": "advance to the next token", "bleu": 1.0, "rouge": 1.0}, {"predict": "save the provisioning policy", "true": "save the provisioning validity in shared preferences", "bleu": 0.3158905525406873, "rouge": 0.5198863636363635}, {"predict": "write the extension to the der output stream", "true": "write the extension to the der output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "un export volumes from initiators", "true": "remove volume exports to initiators", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "create a cluster in the specified project", "true": "create a cluster in the specified project", "bleu": 1.0, "rouge": 1.0}, {"predict": "value of the object and put its value into this attribute value", "true": "returns the alias de referencing policy having the specified integer value as defined in rfc 4511 section 4", "bleu": 0.06974350219648882, "rouge": 0.12869198312236285}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "write stream in text format without checking buffer size", "true": "write string in text format without checking buffer size", "bleu": 0.7825422900366437, "rouge": 0.8888888888888888}, {"predict": "adds a entry to the record", "true": "accumulate info for one read at the locus", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "calculates a sha - 256 hash for the given hash value", "true": "calculates the block hash by serializing the block and hashing the resulting bytes", "bleu": 0.11294012253658708, "rouge": 0.24629878869448185}, {"predict": "to add a property type , and tell if this is a property type of the given uri", "true": "add a particular characteristic to a property", "bleu": 0.11794224053267105, "rouge": 0.34757834757834755}, {"predict": "null safe equals", "true": "asserts that given object 1 equals object 2", "bleu": 0.10148002183214462, "rouge": 0.1680440771349862}, {"predict": "convert an of instruction write actions to string form", "true": "convert an of instruction write actions to string form", "bleu": 1.0, "rouge": 1.0}, {"predict": "invoked before the only be added", "true": "called before the specified object is added to this queue", "bleu": 0.16038842424444547, "rouge": 0.3588235294117647}, {"predict": "encodes a byte array into base 64 format and breaks the output into lines", "true": "encodes a byte array into base 64 format and breaks the output into lines", "bleu": 1.0, "rouge": 1.0}, {"predict": "decode a feed attached a message", "true": "logs how much time an o data command consumed", "bleu": 0.1126634218241493, "rouge": 0.0}, {"predict": "rl long protected helper method to read 64 bits and changing the order of each bytes", "true": "rl long protected helper method to read 64 bits and changing the order of each bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "shift right ( in t n ) , n > 32", "true": "shift right ( in t n ) , n > 32", "bleu": 1.0, "rouge": 1.0}, {"predict": "resolve dependency to given file", "true": "resolve the class contained in file into the passed soot class", "bleu": 0.0910020781697788, "rouge": 0.2341650671785029}, {"predict": "build the response from the log out and log out from the tenant", "true": "helper method to generate log out response redirect url", "bleu": 0.1350862565735141, "rouge": 0.18798151001540828}, {"predict": "asserts that we have a label with the given text baring the given path", "true": "asserts that we have a label with the given text baring the given name", "bleu": 0.9253911813809743, "rouge": 0.9285714285714285}, {"predict": "list of paths on the path parameters", "true": "apply interpolation on the result list ( where possible )", "bleu": 0.17112717058426782, "rouge": 0.22803738317757008}, {"predict": "initializes the tokens to token ize r", "true": "initializes the stream token ize r", "bleu": 0.4111336169005197, "rouge": 0.7800511508951408}, {"predict": "we have an of message we didn ' t expect given the current state and we want to treat this as an error", "true": "we have an of message we didn ' t expect given the current state and we want to treat this as an error", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the thread pool loop", "true": "a simple method to do nothing very much", "bleu": 0.1259933680597235, "rouge": 0.0}, {"predict": "read a saved object as a instance of this instance", "true": "read a record of data from the file , and parse the header to build a field list for the record ( or reuse the existing one if reusing headers )", "bleu": 0.023083427389548807, "rouge": 0.13396778916544658}, {"predict": "lock api for locking of the file channel of the lock file", "true": "lock api for locking of the file channel of the lock file", "bleu": 1.0, "rouge": 1.0}, {"predict": "open the datagram connection", "true": "open the datagram connection", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string describing this result listener", "true": "returns a string describing this split eva lu at or", "bleu": 0.44322280532785957, "rouge": 0.5700934579439253}, {"predict": "run an entry based on a script file", "true": "execute a dml or py dml script", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "disables a specific feature on this rich formatter", "true": "disable a specific feature on this rich formatter", "bleu": 0.8633400213704505, "rouge": 0.875}, {"predict": "remove a listener for z wave events to this controller", "true": "remove a listener for z wave events to this controller", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a python time in a python time", "true": "returns the current mill is the same way as python does since this is what ' s stored in the replay files * yay *", "bleu": 0.02277685605117074, "rouge": 0.16636363636363635}, {"predict": "adds the given items to the end of the array", "true": "add new items to the table", "bleu": 0.23462350320528, "rouge": 0.3927038626609442}, {"predict": "quote the given name for a java keyword", "true": "prefixes the given name with a dollar ( $ ) if it is a java keyword", "bleu": 0.1588025223013512, "rouge": 0.47164948453608246}, {"predict": "static helper method for populating attributes from a database cursor", "true": "static helper method for populating attributes from a database cursor", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures the truth of an expression involving the state of the calling instance", "true": "ensures the truth of an expression involving the state of the calling instance , but not involving any parameters to the calling method", "bleu": 0.4633693692311752, "rouge": 0.6877710320901995}, {"predict": "add table to drop table temporal / delete , the table will be dropped from the table", "true": "generate and return the list of statements to drop a database table", "bleu": 0.10802314890908067, "rouge": 0.21353558926487748}, {"predict": "tests whether the queue is currently acquired", "true": "true iff a lock is granted", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "( since linux 2", "true": "( since linux 2", "bleu": 1.0, "rouge": 1.0}, {"predict": "find or create an class info with the given name if it is defined , otherwise return the parent", "true": "convert p scout - style type name to canonical form", "bleu": 0.06439931429457924, "rouge": 0.07305389221556886}, {"predict": "method to reset the notes error after error display", "true": "method to reset the notes error after error display", "bleu": 1.0, "rouge": 1.0}, {"predict": "set ticks based on a psp time", "true": "set a psp time struct based on ticks", "bleu": 0.3829795673743804, "rouge": 0.5269978401727862}, {"predict": "writes a char sequence to a file creating the file if it does not exist", "true": "writes a char sequence to a file creating the file if it does not exist", "bleu": 1.0, "rouge": 1.0}, {"predict": "populates the navigation drawer with the appropriate items", "true": "populates the navigation drawer with the appropriate items", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the magnitude of this big integer that is not greater than or equal to obj otherwise", "true": "returns a big integer whose value is x to the power of y mod z", "bleu": 0.12149176141753365, "rouge": 0.3160621761658031}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next token after token ize r", "true": "returns the next token type and initializes any state variables accordingly", "bleu": 0.3067534346259019, "rouge": 0.4093959731543625}, {"predict": "converts to object array", "true": "converts to object array", "bleu": 1.0, "rouge": 1.0}, {"predict": "record audit log for print service", "true": "record audit log for call home service", "bleu": 0.5446761861605913, "rouge": 0.7587064676616916}, {"predict": "compute the mean of all elements in the array", "true": "compute the mean of all elements in the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs an s ntp time out of the given date", "true": "construct an ntp time from a date in milliseconds", "bleu": 0.18850319022747347, "rouge": 0.42508710801393734}, {"predict": "select media type in media s to filter", "true": "select the best media type for the current request through a content negotiation algorithm", "bleu": 0.10712878727413526, "rouge": 0.25994318181818177}, {"predict": "paints the border shape from the specified component", "true": "paints the border for the specified component with the specified position and size", "bleu": 0.23105630656818146, "rouge": 0.5479041916167664}, {"predict": "ensures that there is enough to store to the client", "true": "increases the capacity of this array list instance , if necessary , to ensure that it can hold at least the number of elements specified by the minimum capacity argument", "bleu": 0.020288257046635783, "rouge": 0.09172932330827067}, {"predict": "reflection to explicitly reject and setter with this version as the next record of the buffer", "true": "invalidates this guard and un maps ( if supported )", "bleu": 0.08513012360883544, "rouge": 0.08026315789473684}, {"predict": "adds a directory or jar to the class path", "true": "adds new locations for command classes", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "check if mines h after is present", "true": "check if mines h after is present", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests this render er for equality with an arbitrary object", "true": "tests this object for equality with an arbitrary object", "bleu": 0.6315552371794037, "rouge": 0.8501742160278747}, {"predict": "returns true if the specified node has the given node", "true": "checks if a node has a child of element type", "bleu": 0.17827531042796255, "rouge": 0.3}, {"predict": "this method deletes an item from the list", "true": "removes item at the specified index from items vector", "bleu": 0.16829946711936866, "rouge": 0.232824427480916}, {"predict": "returns the number of prefixes ' s primitive names", "true": "returns a count of all css primitive ( non - shorthand ) properties known to this class", "bleu": 0.06900297641435706, "rouge": 0.2186379928315412}, {"predict": "prints a string to the stream , encoded as utf - 8", "true": "prints a string to the stream , encoded as utf - 8", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks the current user ' s permissions against the given object", "true": "checks the current user ' s permissions against the given object which may represent a single or multiple namespaces", "bleu": 0.48322508118982543, "rouge": 0.6996871741397289}, {"predict": "display the string defined in the string xml file : icon font string", "true": "display the string defined in the string xml file : icon font string", "bleu": 1.0, "rouge": 1.0}, {"predict": "create an intent to take a url", "true": "create an intent to take the user to maps , using the first map link available", "bleu": 0.1880917231659046, "rouge": 0.40612516644474045}, {"predict": "generates a string from the filter parameters", "true": "returns a string builder that is <unk> of filtering and expanding parameters that in turn are appended to the query string used for o data client", "bleu": 0.01840235360676039, "rouge": 0.16471647164716471}, {"predict": "writes the tags from this ex if interface object into a jpeg compressed bitmap , removing prior ex if tags", "true": "writes the tags from this ex if interface object into a jpeg compressed bitmap , removing prior ex if tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove an attribute from the list", "true": "remove an attribute from the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "from a jvm signature to its jvm signature signature", "true": "converts from signature to slashed class name ( e", "bleu": 0.19960198807747329, "rouge": 0.3333333333333333}, {"predict": "paints the preview background", "true": "draws the off - screen image if exists at position ( dx , dy ) scaled by the specified factor", "bleu": 0.006580884365953166, "rouge": 0.07439024390243902}, {"predict": "opens the camera and starts sending preview frames to the underlying detector", "true": "opens the camera and starts sending preview frames to the underlying detector", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all the existing values from the series", "true": "removes all the existing values from the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "partition a list of variable in a partition", "true": "this will partition the given whole variable data apply transform to destination in to the specified chunk number", "bleu": 0.05463883725539848, "rouge": 0.21580188679245282}, {"predict": "updates the window and the corresponding rendering", "true": "updates the ui of the passed in window and all its children", "bleu": 0.15749996500436228, "rouge": 0.40197693574958815}, {"predict": "clear all the results", "true": "clear all the results", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the widget given the current mouse position", "true": "gather all the widget s contained in the area specified and return them as an array , taking the decorator visibility in account", "bleu": 0.034779625113655795, "rouge": 0.17801556420233464}, {"predict": "print single - quoted ion symbol type", "true": "print an ion symbol type", "bleu": 0.3655552228545123, "rouge": 0.6873239436619719}, {"predict": "makes a shopping cart item and adds it to the cart", "true": "makes a shopping cart item and adds it to the cart", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of the probability table", "true": "returns a string representation of the probability table", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the border text of the component", "true": "updates the border text of the component", "bleu": 1.0, "rouge": 1.0}, {"predict": "add classes to a new classes in a - reflection", "true": "adds to the result parameter all classes that aren ' t present in it", "bleu": 0.1004883949864497, "rouge": 0.24270557029177717}, {"predict": "resets the references for streaming", "true": "resets the references for streaming", "bleu": 1.0, "rouge": 1.0}, {"predict": "mp i encoded numbers are produced by the openssl bn bn 2 mp i function", "true": "mp i encoded numbers are produced by the openssl bn bn 2 mp i function", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method has been updated when the schema of a given service name", "true": "this method will be invoked when a service ' s schema has been changed", "bleu": 0.16954006424958426, "rouge": 0.36791314837153194}, {"predict": "given a vector of nodes , sort each node according to the criteria in the keys", "true": "given a vector of nodes , sort each node according to the criteria in the keys", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses , validates and computes normalized version of g month day object", "true": "parses , validates and computes normalized version of g month object", "bleu": 0.842362674378975, "rouge": 0.9640804597701149}, {"predict": "adds the message to the queue , waiting for messages to send", "true": "move the messages to the queue", "bleu": 0.22997519112894443, "rouge": 0.4728682170542636}, {"predict": "converts a string representation to the query object", "true": "parse a string into a d bid", "bleu": 0.21105340631872638, "rouge": 0.26991150442477874}, {"predict": "write a short , 16 - bits", "true": "write short , 16 - bits", "bleu": 0.7071067811865475, "rouge": 0.9360613810741688}, {"predict": "prints a long followed by a newline", "true": "prints a long followed by a newline", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance of constant metadata type", "true": "creates a new instance from a single thrift service interface", "bleu": 0.3475971799192765, "rouge": 0.43571428571428567}, {"predict": "creates a raster with the same layout but using a different width and height , and with new zeroed data arrays", "true": "creates a raster with the same layout but using a different width and height , and with new zeroed data arrays", "bleu": 1.0, "rouge": 1.0}, {"predict": "constraint the exception in the given constraint", "true": "return an error response generated by a validation failure , invalid json , etc", "bleu": 0.057461663912368725, "rouge": 0.0}, {"predict": "check if the start block defined", "true": "check start block for occupied for start of run", "bleu": 0.1894765350842885, "rouge": 0.3860759493670886}, {"predict": "parses a switch switch statement and creates the following fields", "true": "parse a switch command", "bleu": 0.16590387014219712, "rouge": 0.3096446700507614}, {"predict": "initial is e the method for the properties of the url", "true": "initialize the layer handler by having it construct it ' s layers from a url containing an open map", "bleu": 0.06091519954817571, "rouge": 0.12721584984358705}, {"predict": "true if this record is suppressed by the answers in a message", "true": "true if this record is suppressed by the answers in a message", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a properties object from a map of properties", "true": "creates an properties object initialized with the value from the given map", "bleu": 0.158278836853973, "rouge": 0.4642313546423136}, {"predict": "select the first node in the list", "true": "selects nodes using css 3 selector query and returns the very first one", "bleu": 0.08723697147876523, "rouge": 0.1897356143079316}, {"predict": "creates a string array from a properties array , containing the sort order required to an array", "true": "takes a string of representing token separated properties and returns an array of parsed strings", "bleu": 0.12512236921161915, "rouge": 0.3160621761658031}, {"predict": "generates poly line to the origin of the plane as an s - x 2 , y - value ) and y 2 d line", "true": "generate the points that will generate the curved line between two points", "bleu": 0.057783239927083445, "rouge": 0.1731315042573321}, {"predict": "compares a sorted string by concatenating the most - specific field removed , or returns the ordering , country the first and variant", "true": "compares a locale against a primary locale", "bleu": 0.06964541799727335, "rouge": 0.14752116082224906}, {"predict": "execute a query", "true": "execute a query and read all rows", "bleu": 0.2635971381157267, "rouge": 0.5596330275229358}, {"predict": "add distinct entry to list", "true": "add distinct entry to list", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests for equality of the specified object", "true": "equal ( based on data , ignores index )", "bleu": 0.11737849637633067, "rouge": 0.0}, {"predict": "notifies the connection that the transaction is begin", "true": "commits and finishes a <unk> started transaction", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "creates a new panel object", "true": "creates a new panel object", "bleu": 1.0, "rouge": 1.0}, {"predict": "double the capacity of this de que", "true": "double the capacity of this de que", "bleu": 1.0, "rouge": 1.0}, {"predict": "change the open am sdk plugin", "true": "change the debug logs folder", "bleu": 0.2907153684841096, "rouge": 0.3696969696969697}, {"predict": "computes the full url for the given link url , if present , or a slash", "true": "computes the full url based on a base url and a possibly relative link found in the href param of an html anchor", "bleu": 0.1601078229408269, "rouge": 0.29804560260586316}, {"predict": "loads the manifest in all manifest", "true": "reads the jar ' s manifest", "bleu": 0.24446151121745047, "rouge": 0.3333333333333333}, {"predict": "converts the virtual types , converting the provided regular types to an array of types , from the original first parameter types", "true": "convert an array of types in raw forms", "bleu": 0.15415064977510756, "rouge": 0.2911694510739857}, {"predict": "adds a column to the key definition", "true": "adds the given column at the specified position", "bleu": 0.19148978368719022, "rouge": 0.3952483801295896}, {"predict": "read data - - input the mod bus message from d in", "true": "read data - - dummy function", "bleu": 0.2891784933232571, "rouge": 0.4728682170542636}, {"predict": "removes the specified display from the list of listeners", "true": "remove a display from this visualization", "bleu": 0.18575057999133596, "rouge": 0.27664399092970515}, {"predict": "returns a random double between 0 and 1", "true": "return the next gaussian see knuth , a cp , section 3", "bleu": 0.09726684100532913, "rouge": 0.09651898734177215}, {"predict": "fire a query to the listeners", "true": "send an event to all registered listeners", "bleu": 0.20693220168471366, "rouge": 0.3034825870646766}, {"predict": "update the contact header", "true": "update port of contact header to reflect local port", "bleu": 0.14558246978804804, "rouge": 0.43160377358490565}, {"predict": "create a new http client with reasonable defaults ( which you can update )", "true": "create a new http client with reasonable defaults ( which you can update )", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds entry to future", "true": "adds entry to future", "bleu": 1.0, "rouge": 1.0}, {"predict": "visit the vertex for the transit on the specified state", "true": "saves current state geometry mode and weight as geo json feature properties in list of features", "bleu": 0.06918301973215607, "rouge": 0.0738498789346247}, {"predict": "uses a modest string ( ~ 40 k )", "true": "test of <unk> m q 1 against an empty data set", "bleu": 0.09503475972243516, "rouge": 0.0}, {"predict": "deletes a file or directory from a file or error", "true": "delete a file from the file system or log the failure if unable to delete it", "bleu": 0.10827727738570342, "rouge": 0.36924939467312345}, {"predict": "removes existing values from the series", "true": "removes existing values from the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a group member to the group", "true": "add a group member", "bleu": 0.5169731539571706, "rouge": 0.7648902821316614}, {"predict": "creates a new instance", "true": "protected method to construct a logger for a named subsystem", "bleu": 0.08017158404431235, "rouge": 0.13260869565217392}, {"predict": "increment the value of a bin", "true": "increment the value of a bin", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures the truth of an expression involving one or more parameters to the calling method", "true": "ensures the truth of an expression involving one or more parameters to the calling method", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes all of the mappings in a map to this document", "true": "sets on this object all key / value pairs from the supplied map", "bleu": 0.11941964005964323, "rouge": 0.24629878869448185}, {"predict": "checks if a list of string contains a string while ignoring case", "true": "checks if a list of string contains a string while ignoring case", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the median absolute deviation from a array of numbers", "true": "compute the median absolute deviation from median", "bleu": 0.4617366309441026, "rouge": 0.6075697211155379}, {"predict": "loads the plugins for a plugin", "true": "loads the plugins that are configured in the configuration file", "bleu": 0.21108303712651422, "rouge": 0.3588235294117647}, {"predict": "stop the process", "true": "stops the superuser session", "bleu": 0.38498150077635496, "rouge": 0.2785388127853881}, {"predict": "set the ' http", "true": "set the ' http", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new request", "true": "creates a new request configured to upload a photo to the user ' s default photo album", "bleu": 0.03877420783172201, "rouge": 0.34269662921348315}, {"predict": "unwrap a proto message from a checked message , verifying the checksum", "true": "unwrap a proto message from a checked message , verifying the checksum", "bleu": 1.0, "rouge": 1.0}, {"predict": "create socket binding", "true": "creates multi cast socket and joins multi cast group", "bleu": 0.07271361304044333, "rouge": 0.15288220551378442}, {"predict": "copies all the nodes for each node", "true": "copies the node connections from this arg model ' s nodes array to the destination array", "bleu": 0.06457085856966725, "rouge": 0.2436750998668442}, {"predict": "checks meta data for selected meta data", "true": "can be overridden to check the selected attributes for compatibility", "bleu": 0.13391424795650428, "rouge": 0.11401869158878504}, {"predict": "validates a validates that can be valid and payload", "true": "validates the will fields", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "creates stream for decoding", "true": "creates stream for decoding", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next member with the specified type", "true": "returns the next server address", "bleu": 0.2984745896009823, "rouge": 0.48157894736842105}, {"predict": "109 * encode the suffix that ends every output line", "true": "encode the suffix that ends every output line", "bleu": 0.7860753021519787, "rouge": 0.9070631970260222}, {"predict": "add string to be loaded", "true": "this methods allows to indicate if the resource must be obtained", "bleu": 0.0910020781697788, "rouge": 0.2341650671785029}, {"predict": "sets all fields in a all fields that have been added to the document", "true": "sets on this object all name / value pairs from the supplied object", "bleu": 0.10511846841633776, "rouge": 0.2237163814180929}, {"predict": "helper function for writing csv out by writing its out", "true": "creates a new client for the given g it repository", "bleu": 0.12605968092174913, "rouge": 0.1}, {"predict": "create a root block view", "true": "create a new read - only view from the supplied buffer", "bleu": 0.11629030063732083, "rouge": 0.35124760076775424}, {"predict": "creates new soap request", "true": "create a soap request for the given method name", "bleu": 0.1354797537848421, "rouge": 0.28773584905660377}, {"predict": "iterate through an e num is not compatible with the list of classes", "true": "inner e num tests that reflection", "bleu": 0.12571192676522522, "rouge": 0.22550831792975967}, {"predict": "return the host uri , as a string", "true": "return the host uri , as a string", "bleu": 1.0, "rouge": 1.0}, {"predict": "earlier implementations of android ' s hostname ver i fier required that wildcard names wouldn ' t match \" *", "true": "earlier implementations of android ' s hostname ver i fier required that wildcard names wouldn ' t match \" *", "bleu": 1.0, "rouge": 1.0}, {"predict": "to check if this file is within the target directory", "true": "verify that the supplied file or directory is within the target directory", "bleu": 0.39289104553187615, "rouge": 0.5366568914956013}, {"predict": "moves this cursor forward until it points to a character different from the character sequence", "true": "moves this cursor forward until it points to a character different from the specified character", "bleu": 0.8761560783209453, "rouge": 0.9333333333333336}, {"predict": "generate an example set for the attribute set", "true": "generate examples for a uniform cluster data set", "bleu": 0.19070828081828378, "rouge": 0.375}, {"predict": "removes from this list all of its elements that are contained in this list", "true": "removes from this list all of its elements that are contained in the specified collection", "bleu": 0.7920859560743244, "rouge": 0.8224719101123595}, {"predict": "cas tail field", "true": "cas tail field", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns phone object with the specified value", "true": "returns phone object with the specified value", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a named resource bundle for a particular locale", "true": "return a named resource bundle for a particular locale", "bleu": 1.0, "rouge": 1.0}, {"predict": "choose pools based on remote v pool ' s matched or assigned pools", "true": "choose pools based on remote v pool ' s matched or assigned pools", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns html entities within the text", "true": "converts text to html , by transforming \\ n to", "bleu": 0.1255107248036171, "rouge": 0.11960784313725491}, {"predict": "add a new pending lock to the manager", "true": "add a new pending lock to the manager", "bleu": 1.0, "rouge": 1.0}, {"predict": "evaluates the uf 7 problem", "true": "evaluates the uf 7 problem", "bleu": 1.0, "rouge": 1.0}, {"predict": "notify all listeners that the model ends with the new value", "true": "notify all listeners about cache period property changed", "bleu": 0.21200626759025185, "rouge": 0.32504440497335696}, {"predict": "convert a move object to uci string format", "true": "convert a move object to uci string format", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new hidden - acceleration image of the given width and height that is associated with the target component", "true": "creates a new managed image of the given width and height that is associated with the target component", "bleu": 0.761827408333416, "rouge": 0.9033101045296166}, {"predict": "debugging function to display internal state", "true": "debugging function to display internal state", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes string to given writer", "true": "writes given string to given writer", "bleu": 0.6511126026643229, "rouge": 0.8944281524926685}, {"predict": "ensure the internal array ' s capacity", "true": "ensure the internal array ' s capacity", "bleu": 1.0, "rouge": 1.0}, {"predict": "method called from ref count", "true": "expert : decreases the ref count of this taxonomy reader instance", "bleu": 0.10822031883953476, "rouge": 0.2341650671785029}, {"predict": "convert an x 500 principal to an x", "true": "convert an x", "bleu": 0.2984745896009823, "rouge": 0.5941558441558442}, {"predict": "search for a resource that contains a set of known indent icons in a resource that describe a support query that describes the resource in a resource as a \" s", "true": "assert that a resource is described by the cache", "bleu": 0.05834347180338517, "rouge": 0.22202001819836215}, {"predict": "returns true if this type is a class of type type", "true": "flat background type ( default )", "bleu": 0.11390778025531027, "rouge": 0.12423625254582485}, {"predict": "build list of turnouts format : given by hash table", "true": "build list of currently limited networks , which defines when background data is restricted", "bleu": 0.15727283746960627, "rouge": 0.24270557029177717}, {"predict": "evaluate the given string", "true": "assign a priority for each operators use a stack to store them note the numbers can be negative we evaluate the expression left - to - right and push operands on to the stack until we encounter an operator , which we pop the top two values from", "bleu": 7.897746689228271e-06, "rouge": 0.06673960612691465}, {"predict": "adds all the provided xy series to the list", "true": "adds all the provided xy series to the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates new instance of console with optional options", "true": "exists with optional error message , usage show and exit code", "bleu": 0.14505474341517546, "rouge": 0.20469798657718125}, {"predict": "test the test algorithm", "true": "compares term key 1 to term key 2", "bleu": 0.11115018927487523, "rouge": 0.0}, {"predict": "merges this ray with the ray ize r , and sets the ray of this ray ize r view", "true": "computes an a abb that contains both this and other and stores it in this", "bleu": 0.07658412276041004, "rouge": 0.18029556650246306}, {"predict": "generate the fully qualified tag of the given stack inside the stack", "true": "generate auto tag for logs", "bleu": 0.11498759556447223, "rouge": 0.25416666666666665}, {"predict": "this method flushes any pending events , which can be start document ( ) closing the opening tag of an element , or closing an open c data section", "true": "this method flushes any pending events , which can be start document ( ) closing the opening tag of an element , or closing an open c data section", "bleu": 1.0, "rouge": 1.0}, {"predict": "handle the subscribe of the given arguments", "true": "this function takes in the arguments for the subscribe command , and subscribes an instance of test subscriber with an initial request of 0 ( which means don ' t immediately make a request ) to an instance of the corresponding publisher", "bleu": 0.0021677959287829435, "rouge": 0.14463544754001184}, {"predict": "we should also be called from configuration xml : / / / config views ( )", "true": "in it method adds all configuration views to the list of views", "bleu": 0.08513012360883544, "rouge": 0.14663461538461536}, {"predict": "create an extended type object from node type , namespace and local name", "true": "create an extended type object from node type , namespace and local name", "bleu": 1.0, "rouge": 1.0}, {"predict": "validate some assumptions about the new loc path iterator and it ' s owner and the state of the list", "true": "validate some assumptions about the new loc path iterator and it ' s owner and the state of the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "starts user interface from the long list , long that is available to the backup through update q des able s long", "true": "assign system stream partitions to all of the threads , and start them up to begin <unk> consuming messages", "bleu": 0.06586656967644004, "rouge": 0.14829821717990274}, {"predict": "initializes weights for a sum of weights", "true": "returns the weights for problems of arbitrary dimension", "bleu": 0.22772101321113858, "rouge": 0.3952483801295896}, {"predict": "undoes the last action", "true": "undoes the last action", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a column from the key definition", "true": "removes the given column", "bleu": 0.22089591134157885, "rouge": 0.3824451410658307}, {"predict": "gets the info for a table", "true": "return single line of output", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "peek , but does not remove cached information", "true": "performs a peek ( ) operation in the queue to extract media info for the buffer ready to be released i", "bleu": 0.03157791992453241, "rouge": 0.06380753138075314}, {"predict": "validates a block with one block holder and returns the result", "true": "below method will be used to process the block", "bleu": 0.12605968092174913, "rouge": 0.1018363939899833}, {"predict": "returns a hash code for the complex condition", "true": "returns the hash code for the condition", "bleu": 0.48549177170732344, "rouge": 0.8097345132743362}, {"predict": "line - segments for followed by the cost stack trace", "true": "balance all segments", "bleu": 0.12605968092174913, "rouge": 0.17039106145251398}, {"predict": "create a new annotation drawer instance", "true": "creates a new drawer for the specified model and decorator", "bleu": 0.16038842424444547, "rouge": 0.3588235294117647}, {"predict": "indicates whether this user has a user", "true": "retrieves if user partitions are present", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "insert string content from content to empty", "true": "insert a string of source code to be highlighted to the document", "bleu": 0.1081377510275021, "rouge": 0.30148270181219106}, {"predict": "reads the next unicode code point", "true": "reads the next unicode code point", "bleu": 1.0, "rouge": 1.0}, {"predict": "put an in t value at the specified offset considering it was written in big - endian format", "true": "put an in t value out to the specified byte array position in big - endian format", "bleu": 0.4702773871923361, "rouge": 0.6892655367231638}, {"predict": "creates a new item with the given text", "true": "creates a new item object with the specified data source and text", "bleu": 0.3219290164685343, "rouge": 0.6756329113924051}, {"predict": "tag handler", "true": "set a one - time tag for use on the next logging call", "bleu": 0.003105274778046689, "rouge": 0.11776061776061778}, {"predict": "consumes a part of this status", "true": "consumes a part of this item", "bleu": 0.8091067115702212, "rouge": 0.8333333333333334}, {"predict": "create delegate communication parser", "true": "get delegate creating it if needed", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "adds this outer join segment", "true": "adds an outer join descriptor that defines how the streams are related via outer joins", "bleu": 0.05225260032224766, "rouge": 0.27518796992481204}, {"predict": "splits each directory of given directory into a string", "true": "splits the string into an array", "bleu": 0.16784459625186196, "rouge": 0.27664399092970515}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "retrieves and removes the head of this queue , waiting if necessary until an element with an expired delay is available on this queue", "true": "retrieves and removes the head of this queue , waiting if necessary until an element with an expired delay is available on this queue , or the specified wait time expires", "bleu": 0.7470175003104325, "rouge": 0.8531468531468532}, {"predict": "add a callback to be invoked when a swipe event is sent to this view", "true": "add a callback to be invoked when a swipe event is sent to this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the number of unique names in the configuration", "true": "size of the cluster", "bleu": 0.15619699684601276, "rouge": 0.3306233062330623}, {"predict": "adds a new index at a except for a leading at least one", "true": "adds an item to the menu and positions it using the given ` pivot `", "bleu": 0.08189957223751165, "rouge": 0.07052023121387282}, {"predict": "writes a \" x byte value to the output stream", "true": "writes a \" u in t 8 \" in w sp format to the given output stream", "bleu": 0.15742911861832515, "rouge": 0.4953596287703016}, {"predict": "removes and returns first element , or null if empty", "true": "removes and returns first element , or null if empty", "bleu": 1.0, "rouge": 1.0}, {"predict": "add two numbers of different length and sign", "true": "add two numbers of different length and sign", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new header to this instance", "true": "adds a header to this request", "bleu": 0.4111336169005197, "rouge": 0.7800511508951408}, {"predict": "store sam l dap by replacing server", "true": "store the key store changes", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "appends the given type to the pointer hierarchy", "true": "appends a base type to the pointer hierarchy just below parent , e", "bleu": 0.32676296242055786, "rouge": 0.5479041916167664}, {"predict": "sorts the specified array into ascending numerical order", "true": "sorts the specified array into ascending numerical order", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of the similarity using this similarity , numerator and canonical versions of the canonical equivalences of '", "true": "return a string representation of this object , describing all aspects of similarity", "bleu": 0.18728674627858763, "rouge": 0.4300100704934542}, {"predict": "returns the last element of this list", "true": "convert an it er able stream into one last item of the stream", "bleu": 0.09374222649442905, "rouge": 0.1897356143079316}, {"predict": "sleep for the specified time , ignoring any exceptions that occur", "true": "makes the thread sleep for some time", "bleu": 0.17033186037639278, "rouge": 0.3472485768500949}, {"predict": "searches for the first occur en ce of the given argument , beginning the search at index , and testing for equality using the equals method", "true": "searches for the first occur en ce of the given argument , beginning the search at index , and testing for equality using the equals method", "bleu": 1.0, "rouge": 1.0}, {"predict": "learn whether a given set of modifiers implies package access", "true": "returns whether a given set of modifiers implies package access", "bleu": 0.8931539818068694, "rouge": 0.9}, {"predict": "writes the gathered data tab - separated into a text file", "true": "writes the gathered data tab - separated into a text file", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new decorator for a named window", "true": "create a managed window decorator with an identity for a window", "bleu": 0.19840332506055577, "rouge": 0.6140939597315436}, {"predict": "write bytes from the specified byte array to the stream", "true": "write bytes from the specified byte array to the stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a log message if logging is enabled", "true": "send a log message if logging is enabled", "bleu": 1.0, "rouge": 1.0}, {"predict": "send update notifications to listeners", "true": "send update notifications to listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "handle native might try more than re balance track", "true": "checks if this partitioned region data store has the capacity to handle the <unk> size", "bleu": 0.07246365075155338, "rouge": 0.07973856209150328}, {"predict": "converts the s rc file", "true": "figure out if a valid s ld file is available", "bleu": 0.11115018927487523, "rouge": 0.2515463917525773}, {"predict": "adds the specified properties and returns the result", "true": "inserts properties to the template", "bleu": 0.17747405280050269, "rouge": 0.32105263157894737}, {"predict": "scale the original font of a component by a given component", "true": "change the font style of a component", "bleu": 0.23462350320527994, "rouge": 0.5787476280834916}, {"predict": "draws a file to a file", "true": "draw <unk> matched by the blob detector", "bleu": 0.15723447135049806, "rouge": 0.0}, {"predict": "save data to a file", "true": "save a certificate to a file in base 64 binary format with begin and end strings", "bleu": 0.059532871163623116, "rouge": 0.34807417974322397}, {"predict": "clears the list of listeners that are called when the central item of the list changes", "true": "clear all listeners that listening the central item of the list changes event", "bleu": 0.4527471870952893, "rouge": 0.6324884792626728}, {"predict": "invokes the specified parameter less method if it exists", "true": "invokes the specified accessible parameter less method if it exists", "bleu": 0.7030119876929803, "rouge": 0.9384615384615386}, {"predict": "returns if the chart should be filled below the line", "true": "returns if the chart should be filled below the line", "bleu": 1.0, "rouge": 1.0}, {"predict": "if we receive any result , we can delete the temp retry", "true": "if we receive any result , we can delete the temp retry info file", "bleu": 0.846481724890614, "rouge": 0.9104477611940297}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "begin the presence of this presence", "true": "returns true if the packet is a stanza as defined in rfc - <unk> - a message , iq or presence packet", "bleu": 0.016986029490530064, "rouge": 0.1295116772823779}, {"predict": "this is a convenience method for handling ( type )", "true": "execute javascript and reset forms values", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "update if a j mx version update the properties", "true": "helper function to determine whether a bean needs a fw update given a specific bundle version", "bleu": 0.07711214194298908, "rouge": 0.22846441947565538}, {"predict": "clear the given view map", "true": "clear the given view map", "bleu": 1.0, "rouge": 1.0}, {"predict": "locks related tables and lookup table for lookup table that depends on the given set of channels", "true": "load several logical tables into the logical dictionary", "bleu": 0.07994607499472013, "rouge": 0.17110799438990182}, {"predict": "reads next variable length block from input", "true": "reads next variable length block from input", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new subscription to the session", "true": "add a new subscription to the session", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an instance of x", "true": "creates an instance of x", "bleu": 1.0, "rouge": 1.0}, {"predict": "process the process property and reads an xml string", "true": "reads an process configuration from an xml string", "bleu": 0.31239399369202553, "rouge": 0.4756335282651072}, {"predict": "constructs a still topology", "true": "construct a default fraction using the default agent url of http : / / local host : <unk> /", "bleu": 0.008450022790166857, "rouge": 0.07780612244897958}, {"predict": "build a qualifier regular expression based on a qualifier", "true": "just used for like and not like", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "shorten string to a start and extract characters , in our package name", "true": "generates a version of the name that has at most the specified length", "bleu": 0.10571070857151538, "rouge": 0.15384615384615383}, {"predict": "blends the a value for the object with the weight of an edge between two other colors", "true": "linearly blends two colors with a defined weight", "bleu": 0.09880782578056979, "rouge": 0.2566619915848527}, {"predict": "the current e ip ( instruction pointer )", "true": "the current e ip ( instruction pointer )", "bleu": 1.0, "rouge": 1.0}, {"predict": "static interface and charge", "true": "normally the look and feel should be the standard one , java , allow to set the system pla f to have the system look and feel", "bleu": 0.0011435862276630638, "rouge": 0.05690298507462686}, {"predict": "converts a given image into a buffered image", "true": "converts a given image into a buffered image", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a sequence of values and the trailing closing brace ' ' of an array", "true": "reads a sequence of values and the trailing closing brace ' ' of an array", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the given string into a byte array", "true": "converts readable hex - string to byte array", "bleu": 0.239802967618271, "rouge": 0.5}, {"predict": "returns the list of all available terminal nodes with the given return type", "true": "returns the list of all available terminal nodes with the given return type", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove the specified sensor selection listener", "true": "remove the specified sensor selection listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a single character", "true": "writes the 16 low - order bits of the given integer value ; the 16 high - order bits are ignored", "bleu": 0.005125197897506692, "rouge": 0.07126168224299065}, {"predict": "create a class loader , explicitly specifying the source dex and the location for the optimized dex", "true": "create a class loader , explicitly specifying the source dex and the location for the optimized dex", "bleu": 1.0, "rouge": 1.0}, {"predict": "register an existing cache from periodical check on expired entries , only if it should be stopped", "true": "register ttl manager of cache for periodical check on expired entries", "bleu": 0.28433291815307693, "rouge": 0.5200974421437271}, {"predict": "makes a java", "true": "makes a java", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is used for getting the key store from log manager and log file name", "true": "initialize logger key store", "bleu": 0.10123734869668824, "rouge": 0.22426470588235295}, {"predict": "convert an image data in given size to bytes", "true": "returns a byte array which contains data special for the given format and for the given image data", "bleu": 0.07342946783064977, "rouge": 0.13974799541809851}, {"predict": "writes the tags from this ex if interface object into a jpeg compressed bitmap , removing prior ex if tags", "true": "writes the tags from this ex if interface object into a jpeg compressed bitmap , removing prior ex if tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "clean stacking markers", "true": "clean stacking markers", "bleu": 1.0, "rouge": 1.0}, {"predict": "indicate that a service has been sent to this service , no longer interested in case of an server i service", "true": "discard a registrar from the set of <unk> already discovered", "bleu": 0.06429451441231726, "rouge": 0.13785310734463277}, {"predict": "state is final", "true": "check whether the given state is one of the final states", "bleu": 0.052796005801316374, "rouge": 0.3885350318471337}, {"predict": "generates up markers for a given range", "true": "generate a string of comma - separated numbers that will be used to mark the scale of the match diagram", "bleu": 0.0289990174645553, "rouge": 0.0681564245810056}, {"predict": "writes a ' fig tree ' block", "true": "writes a ' fig tree ' block", "bleu": 1.0, "rouge": 1.0}, {"predict": "used by pdf 2", "true": "as a concrete subclass of object that implements equality , this must implement hash code", "bleu": 0.01931500670555844, "rouge": 0.0}, {"predict": "compares this map with another", "true": "compares this map with another", "bleu": 1.0, "rouge": 1.0}, {"predict": "the document type declaration", "true": "notifies of the presence of the do ctype line in the document", "bleu": 0.06399610426154731, "rouge": 0.22932330827067668}, {"predict": "writes the tags from this ex if interface object into a jpeg image , removing prior ex if tags", "true": "writes the tags from this ex if interface object into a jpeg image , removing prior ex if tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "cleans up the connection", "true": "clean start - drop & re - create db", "bleu": 0.08656385444580769, "rouge": 0.0}, {"predict": "create a new method for \" exception \" no \" message \"", "true": "the type of the argument was good , but it ' s value wasn ' t", "bleu": 0.06260454331493155, "rouge": 0.0}, {"predict": "zlib compress 2 byte", "true": "zlib compress 2 byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads a mime type", "true": "load an entry into the map", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "report the start of dtd declarations , if any", "true": "report the start of dtd declarations , if any", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert timestamp into a valid timestamp string", "true": "helper method that will convert timestamp format to a pattern", "bleu": 0.17112717058426782, "rouge": 0.34205607476635513}, {"predict": "function to encode a byte array from the input and return the decoded string", "true": "encodes an array of byte into a string of printable ascii characters using a base - 64 encoding", "bleu": 0.08352613583427962, "rouge": 0.12224448897795591}, {"predict": "prints a double followed by a newline", "true": "prints a double followed by a newline", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the ip address as a string", "true": "convert the ip range into a string representation", "bleu": 0.2664731314108428, "rouge": 0.5269978401727862}, {"predict": "returns true if the ch has the same content or if it is successfully created in this system", "true": "validates if z k host contains a ch root", "bleu": 0.07535838128770536, "rouge": 0.15762273901808785}, {"predict": "create the database to be in the database", "true": "perform the given operation on the database with the given name , only if that database exists", "bleu": 0.07785262511712612, "rouge": 0.3004926108374384}, {"predict": "returns a hash code for this attribute", "true": "factory method to create the hash code allowing derived classes to change the behaviour", "bleu": 0.08993236413460196, "rouge": 0.17967599410898377}, {"predict": "calculate matrix for fit center", "true": "calculate matrix for fit center", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new instance of this fragment for the given section number", "true": "returns a new instance of this fragment for the given section number", "bleu": 1.0, "rouge": 1.0}, {"predict": "import to import of an array of start of the process", "true": "import translation", "bleu": 0.11390778025531027, "rouge": 0.17579250720461098}, {"predict": "constructs a result file reader for reading the approximation sets from the specified result file", "true": "constructs a result file reader for reading the approximation sets from the specified result file", "bleu": 1.0, "rouge": 1.0}, {"predict": "invoked when a sync failure occurs", "true": "called when there was an error connecting", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "checks if an identifier should be excluded", "true": "checks if the given identifier should be excluded", "bleu": 0.5154486831107657, "rouge": 0.7904967602591793}, {"predict": "determine if a request to so lr failed due to a communication error , which is generally retry - able", "true": "determine if a request to so lr failed due to a communication error , which is generally retry - able", "bleu": 1.0, "rouge": 1.0}, {"predict": "pushes a new type on to the output frame stack", "true": "pushes a new type on to the output frame stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the max value plus one for a short", "true": "get the max value plus one for a short", "bleu": 1.0, "rouge": 1.0}, {"predict": "method for bean context child interface", "true": "method for bean context child interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "encode a string into a valid string", "true": "html encodes value to avoid xs s attacks", "bleu": 0.13540372457315733, "rouge": 0.0}, {"predict": "creates and persists database entities required for storage policy and format and format and format string format and format date format", "true": "create and persist database entities required for storage policy service testing", "bleu": 0.2719326877457978, "rouge": 0.46362649294245384}, {"predict": "create a page object from path object , in class path and return values", "true": "create a pdf page object by finding the relevant inherited properties", "bleu": 0.1462806365365753, "rouge": 0.3270777479892761}, {"predict": "add a key / value pair to a map", "true": "adds a key / value pair to a map", "bleu": 0.8801117367933934, "rouge": 0.8888888888888888}, {"predict": "save boot prop ( if they were created )", "true": "saves modified boot properties to disk", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "appends the file to the specified writer", "true": "appends two files and updates the rec no counter", "bleu": 0.15447878876032708, "rouge": 0.24448897795591182}, {"predict": "write timestamp in binary format", "true": "write timestamp in binary format", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes the strings and returns the number of characters in the two encoded strings that are the same", "true": "encodes the strings and returns the number of characters in the two encoded strings that are the same", "bleu": 1.0, "rouge": 1.0}, {"predict": "break text into break , break whitespace , break whitespace break text into break break", "true": "run the morph a algorithm on the specified string", "bleu": 0.06917184228205472, "rouge": 0.0}, {"predict": "method called to delete a file from a file", "true": "delete a file from file system", "bleu": 0.4111336169005197, "rouge": 0.6916099773242631}, {"predict": "create device - front information to start the required n and new values", "true": "return a path for a check mark", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "initializes the disk based cache by scanning for all files currently in the specified root directory", "true": "initializes the disk based cache by scanning for all files currently in the specified root directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new tcp channel client", "true": "initializes the tcp channel client", "bleu": 0.4111336169005197, "rouge": 0.5545454545454546}, {"predict": "this method is called when the user chooses to form a bean by some means such by by by pressing ctrl - c", "true": "this method is called when the user chooses to cut a bean by some means such by by pressing ctrl - x", "bleu": 0.7811639627317598, "rouge": 0.8924652523774688}, {"predict": "tracks a new handler so that it can be removed in bulk", "true": "tracks a new handler so that it can be removed in bulk", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is called when the action is pressed", "true": "invoked when an action from the popup menu occurs", "bleu": 0.16784459625186196, "rouge": 0.2222222222222222}, {"predict": "adds an entry to the list of code that should be displayed on the list of entries", "true": "adds a new colour map entry", "bleu": 0.07994607499472013, "rouge": 0.19032761310452417}, {"predict": "ensure array size by touch", "true": "ensure we have enough storage", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "constructs a u u u id , in bits )", "true": "constructs an instance with the specified bits", "bleu": 0.13950796967929133, "rouge": 0.24302788844621517}, {"predict": "print every value on a separate line", "true": "print every value on a separate line", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns disk cache associated with this component in the specified container in case of ui", "true": "renders a handler script , which may require chaining together the user - specified event handler , any scripts required by attached behaviors , and also possibly the <unk> <unk>", "bleu": 0.03349000206761757, "rouge": 0.0838487972508591}, {"predict": "converts a ts metric name to a string", "true": "constructs a native ts db metric name for this metric", "bleu": 0.1867587389639562, "rouge": 0.43571428571428567}, {"predict": "in the case we are using the java select ( ) method , this method is used to register the buggy selector and create a new one , registering all the sockets on it", "true": "in the case we are using the java select ( ) method , this method is used to trash the buggy selector and create a new one , registering all the sockets on it", "bleu": 0.9234732618882052, "rouge": 0.9705882352941176}, {"predict": "multiply two positive numbers of different length", "true": "multiply two positive numbers of different length", "bleu": 1.0, "rouge": 1.0}, {"predict": "process a parse message as an error ( s ) can be from changing error messages", "true": "received data from the api , so parse it or handle a possible error , then give it to the listener", "bleu": 0.07076661555872917, "rouge": 0.10553633217993079}, {"predict": "select one row from a sql query", "true": "retrieve all the rows satisfying the given sql query", "bleu": 0.18370727471078332, "rouge": 0.24448897795591182}, {"predict": "current time from some arbitrary time base in the past , counting in nanoseconds , and not affected by set time of day or similar system clock changes", "true": "current time from some arbitrary time base in the past , counting in nanoseconds , and not affected by set time of day or similar system clock changes", "bleu": 1.0, "rouge": 1.0}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a request to the server and generate a future for the eventual reply", "true": "send a request to the server and generate a future for the eventual reply", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if string is empty", "true": "is null or its length is 0", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "cas wait status field of a node", "true": "cas wait status field of a node", "bleu": 1.0, "rouge": 1.0}, {"predict": "enable the dependency of the given capability disabling nominal attributes also updates dependency attributes , u nary attributes and empty nominal attributes", "true": "enables the dependency flag for the given capability enabling nominal attributes also enables binary attributes , u nary attributes and empty nominal attributes", "bleu": 0.5129015778784187, "rouge": 0.7525399129172713}, {"predict": "extract property values for a variable reference", "true": "extract and sort variables for given stack trace level", "bleu": 0.15447878876032708, "rouge": 0.24448897795591182}, {"predict": "add an integer to the config", "true": "add an integer to the config", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the upc / e an checksum on a string of digits , and reports whether the checksum is correct or not", "true": "computes the upc / e an checksum on a string of digits , and reports whether the checksum is correct or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert full - width letters in chinese fonts to normal half - width letters in an si char set", "true": "convert full - width letters in chinese fonts to normal half - width letters in an si char set", "bleu": 1.0, "rouge": 1.0}, {"predict": "test whether two collections contains the same elements , regardless of the order in which the elements appear in the collections", "true": "test whether two collections contains the same elements , regardless of the order in which the elements appear in the collections", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if a response message contains a body", "true": "checks if a response message contains a body", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the number of available ( next in - process )", "true": "a connection can only have so many things in process happening on it at once , where \" in process \" refers to the maximum number of in - process requests less the number of pending responses", "bleu": 0.028845560664189116, "rouge": 0.22775357809583077}, {"predict": "adds the given value", "true": "adds the given value", "bleu": 1.0, "rouge": 1.0}, {"predict": "called to execute the action when the execution time has finished loading", "true": "checks whether an action should currently be executed , based on the required delay", "bleu": 0.09733489823443878, "rouge": 0.1517412935323383}, {"predict": "jumps to the previous or next best match given the parameters below", "true": "jumps to the previous or next best match given the parameters below", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a message to be tracked by this class", "true": "dispatch the distribution message , or place it on the startup queue", "bleu": 0.10113117135596685, "rouge": 0.0928462709284627}, {"predict": "deletes all the zones in the zoning maps supplied in the zoning params", "true": "removes the indicated volumes from the zones given by the zoning parameters", "bleu": 0.16544619993389978, "rouge": 0.3223249669749009}, {"predict": "initiates a new stop request into the list of available files", "true": "free resources and cleanup", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "implements the standard icon ' s paint icon method as the standard icon and this will cause the context for the context doesn ' t cause us to be called by the future as duplicate thing if no longer be called with the enabled state if no the", "true": "implements the standard icon interface ' s paint icon method as the standard synth stub passes null for the context and this will cause us to not paint any thing , so we override here so that we can paint the enabled state if no synth context is", "bleu": 0.3764106594643691, "rouge": 0.5}, {"predict": "this method changes image scale ( animating zoom for given duration ) , related to given center ( x , y )", "true": "this method changes image scale ( animating zoom for given duration ) , related to given center ( x , y )", "bleu": 1.0, "rouge": 1.0}, {"predict": "list of shard channel configurations to channels from the database", "true": "return a list of currently known shard / channel assignments", "bleu": 0.18850319022747347, "rouge": 0.4}, {"predict": "check if the file is a hidden key", "true": "whether the file is hidden or not", "bleu": 0.3155984539112945, "rouge": 0.5398230088495575}, {"predict": "tell whether the specified view is scroll", "true": "copy from scroll view ( api level > = 14 )", "bleu": 0.1160873020151595, "rouge": 0.10683012259194395}, {"predict": "load jar info from jar", "true": "load the classes , resources , etc", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "invalidates the title so that it contains no more than the movie", "true": "invalidate the title sortable upon changes to the sortable prefixes", "bleu": 0.14694106251955755, "rouge": 0.2772727272727273}, {"predict": "adds a new row to the table , checking the given variable", "true": "adds a new row to the probability table , assuming no conditional assignment", "bleu": 0.4789300734822377, "rouge": 0.6354166666666667}, {"predict": "creates a jar file with the given name and content", "true": "create a jar using the given file contents and with the given file name", "bleu": 0.20698269433704986, "rouge": 0.5663129973474801}, {"predict": "navigates to the next day , next time between the current date", "true": "this moves to the specified time in the view", "bleu": 0.15537125692760353, "rouge": 0.39102564102564097}, {"predict": "return true if the list contains the specified value", "true": "search for the desired value in the hash table", "bleu": 0.16784459625186196, "rouge": 0.2222222222222222}, {"predict": "closes database connection and logs if an error is encountered", "true": "closes database connection and logs if an error is encountered", "bleu": 1.0, "rouge": 1.0}, {"predict": "add descriptive details about a specific message box , so that if it needs to be reset in the preferences , then it is easily identifiable", "true": "add descriptive details about a specific message box , so that if it needs to be reset in the preferences , then it is easily identifiable", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a color map listener", "true": "add a color map listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the p tile for the p 2 - valued neighbor", "true": "compute the probabilistic distances used by loop", "bleu": 0.14991106946711685, "rouge": 0.2314990512333966}, {"predict": "appends the suffix to the end of the string if the string does not already end in the suffix", "true": "appends the suffix to the end of the string if the string does not already end in the suffix", "bleu": 1.0, "rouge": 1.0}, {"predict": "requests a filesystem in which to store application data", "true": "requests a filesystem in which to store application data", "bleu": 1.0, "rouge": 1.0}, {"predict": "create an external problem with process the process over std err and process", "true": "constructs an external problem using the specified process", "bleu": 0.19674979811155635, "rouge": 0.4975530179445351}, {"predict": "checks if the num monitor of a separate terminal on its coverage", "true": "return whether the specified network monitor has been instantiated in the entitlements service yet", "bleu": 0.09733489823443878, "rouge": 0.1517412935323383}, {"predict": "attempt to recover from a syntax error", "true": "attempt to recover from a syntax error", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a query predicate with this query", "true": "adds multiple predicates that much be met by the vertices", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "add a value to the list of faces that the class must be greater than the specified value", "true": "add the result from the given r ng source", "bleu": 0.08097785064266204, "rouge": 0.2364341085271318}, {"predict": "checks if the \" jvm options \" options \"", "true": "checks whether the user - supplied options stay the same after sett ting , getting and re - setting again", "bleu": 0.04944279312367152, "rouge": 0.19365079365079363}, {"predict": "closes ' close able ' , ignoring any checked exceptions", "true": "closes ' close able ' , ignoring any checked exceptions", "bleu": 1.0, "rouge": 1.0}, {"predict": "push a message on to the stack", "true": "adds an encrypted message to the queue", "bleu": 0.2626909894424158, "rouge": 0.42857142857142855}, {"predict": "returns a random range between 0 and max", "true": "returns a random integer between the value min and the value max", "bleu": 0.20821865410806517, "rouge": 0.5791139240506329}, {"predict": "test that the simple layer is closed", "true": "test that str iterator returns false for has next ( ) after close ( )", "bleu": 0.07796037894057231, "rouge": 0.17062937062937064}, {"predict": "called from psp ge module", "true": "called from psp ge module", "bleu": 1.0, "rouge": 1.0}, {"predict": "populates the list of task links", "true": "populate the given task list with tasks", "bleu": 0.22236312185643822, "rouge": 0.3034825870646766}, {"predict": "get the tuple with the maximum data field value", "true": "get the tuple with the maximum data field value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the tip text for this property", "true": "returns the tip text for this property", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a positive number from a sign and an array of bytes", "true": "create a positive number from a sign and an array of bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "start scrolling based on a fling gesture", "true": "start scrolling based on a fling gesture", "bleu": 1.0, "rouge": 1.0}, {"predict": "internal conversion", "true": "internal conversion", "bleu": 1.0, "rouge": 1.0}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a listener to the given item", "true": "add listener to listener list", "bleu": 0.24446151121745047, "rouge": 0.34366197183098596}, {"predict": "below method will be used to clear all the streams", "true": "below method will be used to close streams", "bleu": 0.5900468726392808, "rouge": 0.7936802973977695}, {"predict": "solves for a distribution", "true": "return the <unk> , i", "bleu": 0.23530495254141282, "rouge": 0.0}, {"predict": "converts the data array into a list of java", "true": "utility method for automatically generating series names", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "read characters into a portion of an array", "true": "reads characters into a portion of an array", "bleu": 0.8633400213704505, "rouge": 0.875}, {"predict": "evaluates the cf 6 problem", "true": "evaluates the cf 6 problem", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a fatal error log message", "true": "send a fatal error log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the number string list of the given string starting at the given index", "true": "returns the number string list of the given string starting at the given index", "bleu": 1.0, "rouge": 1.0}, {"predict": "equals ( ) with two strings where either could be null", "true": "equals ( ) with two strings where either could be null", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the write method , but don ' t already been read", "true": "runs the wrapper with the specified arguments", "bleu": 0.1367440667823257, "rouge": 0.22101449275362317}, {"predict": "returns true if all the internal frames could be treated as a set of additional frames", "true": "returns true if already used all the rule 17 <unk>", "bleu": 0.1702602472176709, "rouge": 0.4013157894736842}, {"predict": "stops the connection and interrupts the connection", "true": "stops the communicator", "bleu": 0.24446151121745047, "rouge": 0.43109540636042404}, {"predict": "ab sol ut ize s a uri and add uri to uri", "true": "helper method for expand system id ( string , string , boolean ) : string", "bleu": 0.06804513164742629, "rouge": 0.0}, {"predict": "free a message on the cache", "true": "put a d message into the cache for reuse", "bleu": 0.20034704329441452, "rouge": 0.5147679324894514}, {"predict": "compares the two characters to this builder , ignoring the case of the characters in the builder and answer", "true": "checks the contents of this builder against another to see if they contain the same character content ignoring case", "bleu": 0.11154288433080788, "rouge": 0.2631578947368421}, {"predict": "convert a u u u id encoded as long integer", "true": "converts a u u id to a long for bucketing purposes", "bleu": 0.2793974129666784, "rouge": 0.47213622291021673}, {"predict": "adds a vm argument to the vm argument", "true": "adds the given vm argument", "bleu": 0.239802967618271, "rouge": 0.6421052631578947}, {"predict": "apply a visitor to a method", "true": "apply a visitor to a field", "bleu": 0.8091067115702212, "rouge": 0.8333333333333334}, {"predict": "compare to ( big integer a )", "true": "compare to ( big integer a )", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests that the method is using an activity to run on to run on x views that should never run on to run on an rendering on to run on method is running on the main method is called after the screen", "true": "a simple test for screenshots that launches an activity , injects the key event combo to trigger the screenshot , and verifies the screenshot was taken successfully", "bleu": 0.04821027370947277, "rouge": 0.18100890207715134}, {"predict": "un registers a target volume from an existing snapshot session , and snapshot session to the target snapshot session", "true": "implements a request to un link the passed targets from the block snapshot session instance with the passed uri", "bleu": 0.10830630507021792, "rouge": 0.2631578947368421}, {"predict": "reverse of the order of the directed edges , in a list of directed edges that they appear in the tree", "true": "reverse the sequence", "bleu": 0.06429451441231726, "rouge": 0.19273301737756712}, {"predict": "change a given number of steps to a single variable reference", "true": "change a given number of steps to a single variable reference", "bleu": 1.0, "rouge": 1.0}, {"predict": "return next line from the stream", "true": "emulate the deprecated data input stream", "bleu": 0.24446151121745047, "rouge": 0.3333333333333333}, {"predict": "adds the specified node to the parent", "true": "adds items to scene , ensuring we are on the fx thread", "bleu": 0.1081377510275021, "rouge": 0.30148270181219106}, {"predict": "returns the url of the product page", "true": "returns the url of the product home page", "bleu": 0.7536998328984837, "rouge": 0.9222462203023757}, {"predict": "returns if the given ordinals has a query for documents", "true": "returns true if the supplied reader contains taxonomy information", "bleu": 0.17827531042796255, "rouge": 0.31881533101045295}, {"predict": "removes the listener from the collection of listeners who will be notified when the control is selected by the user", "true": "removes the listener from the collection of listeners who will be notified when the control is selected by the user", "bleu": 1.0, "rouge": 1.0}, {"predict": "replace a class with the given name", "true": "replace n top level elements with new element of given type", "bleu": 0.1247439242120089, "rouge": 0.32049036777583184}, {"predict": "handles entities back to the entity request", "true": "handles create realm request", "bleu": 0.20556680845025982, "rouge": 0.3824451410658307}, {"predict": "returns true if point is inside a point of points", "true": "for a specified point and a list of poly points , determine based on point order whether the point should be considered in or out of the polygon", "bleu": 0.027423725286163655, "rouge": 0.19395866454689983}, {"predict": "deletes a node that is fit", "true": "removes the largest key and associated value from the given subtree", "bleu": 0.08072686929338534, "rouge": 0.0}, {"predict": "atomic ally removes all of the elements from this de que", "true": "atomic ally removes all of the elements from this de que", "bleu": 1.0, "rouge": 1.0}, {"predict": "fired when a request is successfully", "true": "called every time when command makes some little progress", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "creates new node node with its owner , and root", "true": "only the tree node class can create an instance of tree node", "bleu": 0.11421946507590645, "rouge": 0.1788856304985337}, {"predict": "creates a time period for the week in a date / time period", "true": "creates a time period for the week in which the specified date / time falls , using the default time zone and locale ( the locale can affect the day - of - the - week that marks the beginning of the week , as well as the", "bleu": 0.04739035005708362, "rouge": 0.3268387725280078}, {"predict": "returns a hash code attribute for this attribute", "true": "create the code attribute", "bleu": 0.21105340631872638, "rouge": 0.3546511627906977}, {"predict": "initializes a binary output stream from a file", "true": "initializes a binary output stream from a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a class descriptor from the source stream", "true": "reads a class descriptor from the source stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new file , if the file exists is not created", "true": "create a new file , if the file exists , delete and create again", "bleu": 0.6231547353653452, "rouge": 0.6828358208955225}, {"predict": "or for zero and one", "true": "or for zero and one", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes a prepared statement", "true": "executes a prepared statement using values supplied as arguments", "bleu": 0.2865047968601901, "rouge": 0.5754716981132075}, {"predict": "creates a config object from a collection of configuration objects", "true": "creates a new configuration", "bleu": 0.17827531042796255, "rouge": 0.4644670050761421}, {"predict": "ensures that a string is not empty", "true": "ensures that an string reference passed as a parameter to the calling method is not empty", "bleu": 0.12213469535678724, "rouge": 0.4873501997336884}, {"predict": "adds common component to the parser configuration", "true": "adds common component to the parser configuration", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes all of 4 secs waiting tasks", "true": "cancel all open and running unnamed tasks", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "calculate the minimum and maximum values out of a list of doubles", "true": "calculate the minimum and maximum values out of a list of doubles", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "un escapes the character identified by the character or characters that immediately follow a backslash", "true": "un escapes the character identified by the character or characters that immediately follow a backslash", "bleu": 1.0, "rouge": 1.0}, {"predict": "update query and header parameters based on authentication settings", "true": "update query and header parameters based on authentication settings", "bleu": 1.0, "rouge": 1.0}, {"predict": "add spaces around spans until the text is fixed , and then removes the unneeded spaces", "true": "add spaces around spans until the text is fixed , and then removes the unneeded spaces", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes a default experiment", "true": "initializes a default experiment", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all bookmark tracking icons", "true": "removes all bookmark tracking icons", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new simple metric group using the given name and stream", "true": "create a metric group with the given metrics", "bleu": 0.17996531271765898, "rouge": 0.5187074829931972}, {"predict": "checks if the given point is inside this point", "true": "returns true if the point is inside this sprite", "bleu": 0.4518010018049224, "rouge": 0.6666666666666666}, {"predict": "resolve the protocols to the registry at the given loader as parent and loads it if it ' s configuration", "true": "finds protocol support from a given class loader", "bleu": 0.06760229884571738, "rouge": 0.1548223350253807}, {"predict": "get all the interfaces of this network interface , given the list of interfaces of this class", "true": "a list of the non - loop back , non - link - local ip addresses of the host , or null if none found", "bleu": 0.07339643535300716, "rouge": 0.1381132075471698}, {"predict": "high - divisor for the b chunk size", "true": "cac u late the bitmap sample size", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "determines if the specified status has the specified status", "true": "check if the entity has a certain status", "bleu": 0.21105340631872635, "rouge": 0.4756335282651072}, {"predict": "set to a string set", "true": "primarily for debug purposes", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "computes the value of ssl v 3 pseudo random function", "true": "computes the value of ssl v 3 pseudo random function", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a channel map to this model", "true": "adds the channel map to this model", "bleu": 0.7071067811865475, "rouge": 0.8571428571428571}, {"predict": "adds the specified object to this priority queue", "true": "adds an element to the queue", "bleu": 0.20164945583740668, "rouge": 0.43990384615384615}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "associates a resource with the specified key in this cache", "true": "return the resource for the specified key", "bleu": 0.24808415001701817, "rouge": 0.48605577689243035}, {"predict": "reads a sequence of text in the form object , using some non - - - 255", "true": "reads a \" message set \" argument , and parses into an id set", "bleu": 0.10216198665886358, "rouge": 0.19698600645855757}, {"predict": "perform a suffix on the plot with the plot", "true": "replace a string suffix by another", "bleu": 0.15619699684601276, "rouge": 0.27664399092970515}, {"predict": "executes a task by some recognized possible some recognized possible some recognized possible some recognized possible js js s", "true": "executes a previously claimed s can range task", "bleu": 0.09629943614188137, "rouge": 0.2398427260812582}, {"predict": "creates a new directory in the project", "true": "creates the configuration directory if it does not already exist", "bleu": 0.14390022429682173, "rouge": 0.22803738317757008}, {"predict": "method to handle update button", "true": "method to handle update button", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads a class file by a given class loader", "true": "loads a class file by a given class loader", "bleu": 1.0, "rouge": 1.0}, {"predict": "get an iterator over the target target", "true": "iterate over target objects representing control flow targets and their edge types", "bleu": 0.10063351655856649, "rouge": 0.20098846787479407}, {"predict": "if the size of the main content is scrolled , either the size of the grid", "true": "fits the width of the main composite to the same width scrolled composite was given", "bleu": 0.16467029855845897, "rouge": 0.32446808510638303}, {"predict": "returns a hash code for this principal", "true": "returns the hash code value for this entry", "bleu": 0.2789001430384383, "rouge": 0.6587473002159828}, {"predict": "builds client index table from the snmp table , table name = data", "true": "builds a map pool - name = > pool - index from the snmp table handler of the jvm mem pool table", "bleu": 0.16728367983284698, "rouge": 0.38227394807520143}, {"predict": "creates a new d crypto strength dialog", "true": "creates a new d crypto strength dialog where the parent is a frame", "bleu": 0.42437284567694994, "rouge": 0.6640746500777605}, {"predict": "create a horizontal separator", "true": "creates a vertical separator for visually separating status bar elements", "bleu": 0.08872444253557525, "rouge": 0.26521739130434785}, {"predict": "adds the specified object at the end of the array", "true": "adds the specified object at the end of the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "this is the method builds the data for the given realm", "true": "rebuilds the data set based on the given realm results", "bleu": 0.2521193618434983, "rouge": 0.4803149606299213}, {"predict": "generate the signature from the database", "true": "generate a signature for the message we ' ve been loaded with using the key we were initial is ed with", "bleu": 0.0228000854584573, "rouge": 0.20198675496688742}, {"predict": "computes matrix , lat , lon into a circle", "true": "compute the weight matrix for hsb similarity", "bleu": 0.14113991930789777, "rouge": 0.1278825995807128}, {"predict": "and for a negative and a positive numbers ; the first is longer", "true": "and for a negative and a positive numbers ; the first is longer", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the bytes to byte array", "true": "write the bytes to byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "open button menu", "true": "open file using intent", "bleu": 0.38498150077635496, "rouge": 0.2785388127853881}, {"predict": "converts a date string into a java", "true": "converts a date string into a java", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new journal that omits redundant information", "true": "creates a new journal that omits redundant information", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the closest in t to x", "true": "might have different semantics than math", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "creates a new plaintext component with the given integer", "true": "creates a new plaintext component with the given short", "bleu": 0.8801117367933934, "rouge": 0.8888888888888888}, {"predict": "copies this attribute and returns a new copy", "true": "copies this attribute and returns a new copy", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new component changes to the available component", "true": "construct details of api changes by service and component name", "bleu": 0.1397712139461423, "rouge": 0.20854700854700853}, {"predict": "add a new node for use in a section", "true": "defines a new example", "bleu": 0.18575057999133596, "rouge": 0.3306233062330623}, {"predict": "method check if a file is writable or directory", "true": "method checks if file could be written / deleted or created", "bleu": 0.14211011212459496, "rouge": 0.3929146537842191}, {"predict": "returns a string representation of this attribute type", "true": "returns a string representation of the oid ' s integer components in dot separated notation", "bleu": 0.244862628310506, "rouge": 0.41216216216216217}, {"predict": "creates the needed authentication config instance", "true": "creates au th configurations for au th modules configuration in core au th service", "bleu": 0.05822753005110548, "rouge": 0.09327217125382263}, {"predict": "reads bytes to the output", "true": "writes the field to the output", "bleu": 0.41602390756021224, "rouge": 0.5366568914956013}, {"predict": "skip ( long n ) method testing", "true": "skip ( long n ) method testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a char to the string buffer", "true": "add a char to the string buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the hash code for this attribute type", "true": "returns the hash code for this name form", "bleu": 0.7259795291154771, "rouge": 0.75}, {"predict": "c hole sky algorithm for symmetric and positive definite matrix", "true": "c hole sky algorithm for symmetric and positive definite matrix", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the candidate number of candidate given by the given edge", "true": "appends to \" candidate crossings \" all edge references which may cross the given edge", "bleu": 0.1558299521718269, "rouge": 0.2993865030674847}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new repository location", "true": "creates a repository location for a given repository and a set of path components which will be concatenated by a /", "bleu": 0.01841640459320245, "rouge": 0.27695800227014755}, {"predict": "this method will be used to add a new property", "true": "this method will be used to add a new property", "bleu": 1.0, "rouge": 1.0}, {"predict": "recursive ll s cm - recursive call rule below the sub element of the recursive element", "true": "creates the nested delta deltas based on the affected element its delta , and the root of this delta tree", "bleu": 0.07533067013863758, "rouge": 0.16339285714285715}, {"predict": "returns a string representation of the title", "true": "to string", "bleu": 0.18575057999133598, "rouge": 0.2469635627530364}, {"predict": "return number of empty bytes", "true": "return the size of the embedded map", "bleu": 0.20252884954471367, "rouge": 0.32360742705570295}, {"predict": "replace all occurrences of a substring within a string with another string", "true": "replace all occurrences of a substring within a string with another string", "bleu": 1.0, "rouge": 1.0}, {"predict": "is the zone in facility", "true": "determines if a given coordinate lies within a selected zone", "bleu": 0.10043553373039076, "rouge": 0.12577319587628866}, {"predict": "returns the tip text for this property", "true": "returns the tip text for this property", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets up the plain text using the given reader", "true": "read data from a label file", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "parses a double safely", "true": "parses a double safely , returning a default if nothing can be <unk> parsed from it", "bleu": 0.049787068367863944, "rouge": 0.3609467455621302}, {"predict": "a lame attempt to prevent duplicate application id", "true": "a lame attempt to prevent duplicate application id", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a profile to the list of profile services", "true": "create or update a profile for a remote counterpart", "bleu": 0.18575057999133596, "rouge": 0.2222222222222222}, {"predict": "prints a character", "true": "prints the given char", "bleu": 0.38498150077635496, "rouge": 0.2785388127853881}, {"predict": "in it method load the work space views", "true": "recursively initialize views for all the blocks in the model and add them to the view", "bleu": 0.07015765577419673, "rouge": 0.15721649484536082}, {"predict": "resets all cached sign state", "true": "clears all registered page <unk> of a given single sign on token id", "bleu": 0.061000517228105004, "rouge": 0.20573355817875214}, {"predict": "creates a new d netscape care vocation url dialog", "true": "creates a new d netscape care vocation url dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses a comma - separated list of integers , with range - checking", "true": "parses a comma - separated list of integers , with range - checking", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new directory not found in the entity", "true": "constructs a new exception with detailed error message", "bleu": 0.2626909894424158, "rouge": 0.35672514619883033}, {"predict": "below method will be used to clear all the streams", "true": "below method will be used to close streams", "bleu": 0.5900468726392808, "rouge": 0.7936802973977695}, {"predict": "select an a p select / p 1 from all items", "true": "fill the array with random numbers from 0", "bleu": 0.11390778025531027, "rouge": 0.108348134991119}, {"predict": "reads a value of an annotation and makes the given visitor visit it", "true": "reads a value of an annotation and makes the given visitor visit it", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse an individual sip message header from a string", "true": "parse an individual sip message header from a string", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts an s rgb color to an s rgb color", "true": "helper function to convert a color component in s rgb space to linear rgb space", "bleu": 0.11966489805508941, "rouge": 0.30886075949367087}, {"predict": "records the beginning time to the beginning of the module", "true": "records a start usage logging message to whichever logging endpoint is configured", "bleu": 0.11421946507590645, "rouge": 0.1788856304985337}, {"predict": "rotate point p around center point c", "true": "rotate point p around center point c", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the given word is pronounceable", "true": "returns true if the given word is pronounceable", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds an edge ( if it ) to the list", "true": "creates new edges for all the edges that the intersections in this list split the parent edge into", "bleu": 0.06735938555336447, "rouge": 0.1358574610244989}, {"predict": "initializes memory based cache size", "true": "constructs an instance of the mem based cache", "bleu": 0.1971902775417715, "rouge": 0.2953995157384988}, {"predict": "updates the width of the widget to fit the requested values", "true": "updates the max text width values for the suggestions", "bleu": 0.17827531042796255, "rouge": 0.4073455759599332}, {"predict": "enable / disable the visual item", "true": "enable / disable the overview menu", "bleu": 0.6147881529512643, "rouge": 0.6666666666666666}, {"predict": "invoked when the mouse entered by the user", "true": "handle a mouse entered mouse listener event", "bleu": 0.21105340631872638, "rouge": 0.26991150442477874}, {"predict": "the node page name , find the specified page", "true": "gets the requested page of collections after applying filters and offsets", "bleu": 0.12507277759788113, "rouge": 0.19645732689210954}, {"predict": "makes the given visitor visit this annotation", "true": "makes the given visitor visit this annotation", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds ids to the filter", "true": "adds ids to the filter", "bleu": 1.0, "rouge": 1.0}, {"predict": "stop a previously started monitor if it exists", "true": "stop a previously started monitor if it exists", "bleu": 1.0, "rouge": 1.0}, {"predict": "normalizes the url to its canonical schemes in the query", "true": "calculates the normalized request url , as per section 9", "bleu": 0.13950796967929133, "rouge": 0.2}, {"predict": "invoke the specified input stream", "true": "invoke the object with the request from the input stream", "bleu": 0.16620830006469267, "rouge": 0.5030927835051546}, {"predict": "commits a local transaction", "true": "commits the local transaction", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "this method is used to add the named object class into the list", "true": "only adds the object class if it hasn ' t already been added", "bleu": 0.1350862565735141, "rouge": 0.23076923076923084}, {"predict": "populate the area for both the given node and return information for both children and the most visible children", "true": "populate the area list by ward", "bleu": 0.11986062961075741, "rouge": 0.26483357452966716}, {"predict": "parse a domain name starting at the given offset", "true": "parse a domain name starting at the current offset and moving the input stream pointer past this domain name ( even if cross references occur e )", "bleu": 0.1059055824667367, "rouge": 0.4076858813700919}, {"predict": "returns a simple string of the given char", "true": "concatenates a simple string and a char", "bleu": 0.3155984539112945, "rouge": 0.5398230088495575}, {"predict": "returns the log - odds for a given pro babil it iy", "true": "returns the log - odds for a given pro babil it iy", "bleu": 1.0, "rouge": 1.0}, {"predict": "signals a waiting take", "true": "signals a waiting take", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the given s tree recursively , which is merged and put it as a new outline", "true": "fill a tree which specifies a feature hierarchy but no corresponding units", "bleu": 0.0859076483566362, "rouge": 0.21353558926487748}, {"predict": "return the number of nodes in this node", "true": "return the number of nodes in the is way", "bleu": 0.6406746857842317, "rouge": 0.6984732824427481}, {"predict": "adds the given host to the blacklist with the time out s , this will not be blacklist with the time in the given time", "true": "adds a host to the blacklist", "bleu": 0.14153945350617025, "rouge": 0.3626634958382878}, {"predict": "method to add a node to the end of the node list", "true": "method to add a node to the dag", "bleu": 0.5593684915933074, "rouge": 0.7261904761904763}, {"predict": "requests a filesystem in which to store application data", "true": "requests a filesystem in which to store application data", "bleu": 1.0, "rouge": 1.0}, {"predict": "save the state of this map to a stream", "true": "saves this map to a stream ( that is , serializes it )", "bleu": 0.3314730476621174, "rouge": 0.4401154401154401}, {"predict": "quan tile function of vectors", "true": "s igm oid / logistic function", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "inserts index entries that are in same index and refresh a new entry", "true": "notify bucket of new incoming packet from a node , perform update or insert existing nodes where appropriate", "bleu": 0.07195858996018069, "rouge": 0.06269270298047276}, {"predict": "transforms an current transform at the given point in the current transform", "true": "translates the current transform", "bleu": 0.19338531381761725, "rouge": 0.4121621621621622}, {"predict": "checks to see if the remove operation is supported", "true": "determines if the volume qualifies for rp protection", "bleu": 0.18575057999133596, "rouge": 0.2378167641325536}, {"predict": "writes to the default instance", "true": "write this object to a stream", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "write and convert fact to output stream", "true": "writes the given number of spaces to the given writer", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "computes the volume of the overlapping area between two spatial comparable s", "true": "computes the volume of the overlapping box between two spatial comparable s and return the relation between the volume of the overlapping box and the volume of both spatial comparable", "bleu": 0.16983788665142113, "rouge": 0.4862318840579709}, {"predict": "handles the draw able item", "true": "if auto draw is enabled , a draw request is sent", "bleu": 0.08222966016687185, "rouge": 0.11708253358925146}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method that will try to load at least specified number bytes in input buffer , possible moving existing data around if necessary", "true": "helper method that will try to load at least specified number bytes in input buffer , possible moving existing data around if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new enumerated using the specified byte array", "true": "this ctor interprets the byte array as a sequence of characters to send", "bleu": 0.135323305042906, "rouge": 0.26406926406926406}, {"predict": "sorts the method descriptors", "true": "as of this writing , this is only used for testing if method order really doesn ' t mater", "bleu": 0.008450022790166857, "rouge": 0.07780612244897958}, {"predict": "parses a property list from the given string value", "true": "take a property list , defined in a single string , and return a properties object", "bleu": 0.12761099135587417, "rouge": 0.3046192259675406}, {"predict": "this method checks whether the specified annotation has a package in the order of the annotation", "true": "determines whether the package in which t resides has a particular annotation", "bleu": 0.15384750052099497, "rouge": 0.36658653846153844}, {"predict": "builds the tooltip for nodes that represent a graph", "true": "generates the tooltip shown when the cursor hovers over a tag tree node that represents a container of graph nodes", "bleu": 0.06762698223484186, "rouge": 0.32275132275132273}, {"predict": "creates a graph from link", "true": "read in the normalized category file", "bleu": 0.18796001821050234, "rouge": 0.0}, {"predict": "removes a listener from the set of listeners", "true": "removes a listener from the set of listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove item click listener", "true": "remove item click listener from this view", "bleu": 0.4723665527410147, "rouge": 0.693181818181818}, {"predict": "find a position that can be selected ( i", "true": "find a position that can be selected ( i", "bleu": 1.0, "rouge": 1.0}, {"predict": "pads the string on the left with spaces till it is at least the specified length", "true": "pad a string on the right with spaces till it is at least the specified length", "bleu": 0.6964705665515707, "rouge": 0.8125000000000001}, {"predict": "returns the matching rule name in natural or s with some prefix", "true": "build the complete list of names for a collation matching rule", "bleu": 0.14694106251955755, "rouge": 0.2629310344827586}, {"predict": "check whether the given class is cache - safe in f / interface , i", "true": "check whether the given class is cache - safe in the given context , i", "bleu": 0.6967812829199793, "rouge": 0.8}, {"predict": "writes this message to the output stream", "true": "writes the algorithm ' s internal representation as text", "bleu": 0.15447878876032708, "rouge": 0.24448897795591182}, {"predict": "creates a part from the encoded and decoded strings", "true": "creates a part from the encoded and decoded strings", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a epoch month instance for this month , day , with a specific year", "true": "converts the map of year to month lengths ranging from min year to max year into a linear contiguous array of epoch days", "bleu": 0.060680355990719456, "rouge": 0.10141313383208644}, {"predict": "convert a descriptor descriptor into an internal name", "true": "convert a non - method type descriptor into an internal type", "bleu": 0.35281654783844574, "rouge": 0.6140939597315436}, {"predict": "registers a bean for an mbe an", "true": "register the given mbe an based on the given description", "bleu": 0.15925177647011352, "rouge": 0.22803738317757008}, {"predict": "checks correctness of the state after un marshalling", "true": "checks correctness of the state after un marshalling", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one", "true": "adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one", "bleu": 1.0, "rouge": 1.0}, {"predict": "asynchronously perform a stream collection", "true": "asynchronously perform a stream collection", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert from the type used by the native access or s to the type used by native access or s", "true": "convert from the type used by the reflection access or s to the type used by native access or s", "bleu": 0.8656030552541708, "rouge": 0.9500000000000002}, {"predict": "registers a specific string builder", "true": "register a builder for the company id", "bleu": 0.20252884954471367, "rouge": 0.32360742705570295}, {"predict": "attempts to copy the re il code for a code node", "true": "copy re il code for node", "bleu": 0.3448444257953326, "rouge": 0.745417515274949}, {"predict": "this isn ' t what the ri does", "true": "this isn ' t what the ri does", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads string data from a reader", "true": "reads string data from a reader", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the similarity between two lanes", "true": "computes the similarity of two sequences", "bleu": 0.4347208719449915, "rouge": 0.6666666666666666}, {"predict": "finds index of the string", "true": "finds index of the string", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to prepare instruction operand with given parameters", "true": "method to prepare instruction operand with given parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "divide and conquer brownian bridge", "true": "divide and conquer brownian bridge ; not thread - safe ! ! ! ! !", "bleu": 0.1353352832366127, "rouge": 0.45864661654135336}, {"predict": "compute compute compute jar", "true": "returns the version corresponding to the given document type", "bleu": 0.08656385444580769, "rouge": 0.0}, {"predict": "tests whether or not a string matches against a pattern", "true": "tests whether or not a string matches against a pattern", "bleu": 1.0, "rouge": 1.0}, {"predict": "merge a list of coordinates into a list", "true": "this will merge the coordinates of the given coordinate system", "bleu": 0.1485237584394808, "rouge": 0.21785714285714283}, {"predict": "prints an integer to this output stream and flushes this output stream", "true": "prints an integer to standard output and flushes standard output", "bleu": 0.3541698766144061, "rouge": 0.7393939393939394}, {"predict": "fill text from one to another", "true": "copy text", "bleu": 0.22089591134157885, "rouge": 0.27477477477477474}, {"predict": "handles create authentication domains view bean", "true": "handles save button request", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "creates the description of the panel", "true": "build the description panel", "bleu": 0.31239399369202553, "rouge": 0.6224489795918368}, {"predict": "creates a new http method client", "true": "creates a new http method client with default time out s", "bleu": 0.43459820850707814, "rouge": 0.6703296703296703}, {"predict": "creates a new signer signer signer", "true": "generate a signer for the with either implicit or explicit trailers for iso 9796 - 2 , scheme 2 or 3", "bleu": 0.020066622811880642, "rouge": 0.1346578366445916}, {"predict": "decode the text value of a byte array which is specified by hex data", "true": "decodes a compressed or uncompressed text value", "bleu": 0.1250076305588977, "rouge": 0.2026578073089701}, {"predict": "extract a set of elements from the stream , using the extractor function", "true": "extract a set of a defined type from the passed collection using the given extractor", "bleu": 0.29998515214540233, "rouge": 0.6346820809248555}, {"predict": "whether the user is still verification ( i", "true": "whether the stack is running on a <unk> device", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "normalizes the given string to lower - code unit , and returns the character set", "true": "tries to normalize string to specified encoding", "bleu": 0.1082597837309053, "rouge": 0.1945773524720893}, {"predict": "returns lowest node", "true": "returns lowest node", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the number of underlying data set", "true": "get the number of item sets", "bleu": 0.345720784641941, "rouge": 0.4680306905370844}, {"predict": "creates a line primitive with a specified color for each point", "true": "creates a line primitive with a specified color for each point", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the passed in value as an unsigned byte array", "true": "return the passed in value as an unsigned byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a length of an array of coordinates with all coordinates ( x ^ 2 , y ^ 2 )", "true": "compute an approximate length of a be zi er curve given the control points", "bleu": 0.09134423666564473, "rouge": 0.12151394422310759}, {"predict": "determine the drop action from the event", "true": "determine the drop action from the event", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a variable to the clause", "true": "adds a property to set to the clause", "bleu": 0.35032865403497776, "rouge": 0.6963470319634703}, {"predict": "step to the next hash map value , if any , reset sv cs and sv cid x , and return false if everything exhausted", "true": "step to the next hash map value , if any , reset sv cs and sv cid x , and return false if everything exhausted", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the icon markers", "true": "icons <unk> of https : / / map icons", "bleu": 0.08656385444580769, "rouge": 0.0}, {"predict": "checks if the specified network request has been informed with a certificate", "true": "utility method which checks current network connection state , but will also try to perform test network request , in order to determine if user can actually perform any network operation", "bleu": 0.03189611213242783, "rouge": 0.1292372881355932}, {"predict": "assign the thread to the test", "true": "assign current thread to the subscriber object", "bleu": 0.36798327352994814, "rouge": 0.6069651741293532}, {"predict": "validates if dynamic attribute is set", "true": "this method validates the dynamic attribute data for format and caches parsed response at tr names , repo at tr names strings in the set need to be in \" response at tr = repo at tr \" format else , throws policy exception", "bleu": 0.00058667618573676, "rouge": 0.14071510957324107}, {"predict": "check if an object is an instance of a given class , or , if the class is a primitive type , if the object is an instance of the wrapper class for that primitive ( e", "true": "check if an object is an instance of a given class , or , if the class is a primitive type , if the object is an instance of the wrapper class for that primitive ( e", "bleu": 1.0, "rouge": 1.0}, {"predict": "all non - null returns non - null warrant", "true": "preserve current listeners so that there is no gap to miss a property change", "bleu": 0.06809538093398164, "rouge": 0.0}, {"predict": "adds a command to the menu", "true": "adds a command to the menu bar soft keys or into the menu dialog , this version of add allows us to place a command in an arbitrary location", "bleu": 0.0216373707194931, "rouge": 0.3065326633165829}, {"predict": "connects to the gat t server hosted on the bluetooth le device", "true": "connects to the gat t server hosted on the bluetooth le device", "bleu": 1.0, "rouge": 1.0}, {"predict": "density function of normal distribution", "true": "density function of normal distribution", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a shape", "true": "draw the given shape on the given opengl object", "bleu": 0.07271361304044333, "rouge": 0.15288220551378442}, {"predict": "tear all bindings for this single server", "true": "stops all existing active m q connection factory in context", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "loads a list of uri config s", "true": "load and returns the list of files", "bleu": 0.24446151121745047, "rouge": 0.2857142857142857}, {"predict": "eventually sets to the given value", "true": "eventually sets to the given value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a list of objects such that two nodes are equal if their lists are equal", "true": "returns a list of objects such that two nodes are equal if their lists are equal", "bleu": 1.0, "rouge": 1.0}, {"predict": "takes a collection of strings using the serialize r", "true": "this concatenates the elements of a collection in a string", "bleu": 0.18885888592159467, "rouge": 0.20854700854700853}, {"predict": "parses a base 64 string", "true": "decodes a base 64 encoded string into byte array", "bleu": 0.24141769716889283, "rouge": 0.5434298440979956}, {"predict": "removes all pre configured logic this step to be created", "true": "removes all of the pre move drops from pre moves", "bleu": 0.17827531042796255, "rouge": 0.3}, {"predict": "clear bit ( in t n ) outside zero", "true": "clear bit ( in t n ) outside zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new number string for a given number of terminal", "true": "say a number", "bleu": 0.12605968092174913, "rouge": 0.31853785900783294}, {"predict": "stop the application and stop labels", "true": "perform an emergency stop", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "encode the name in der form to the stream", "true": "encode the name in der form to the stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes the new described by the root estimate for this node", "true": "forces a complete re calculation of the likelihood next time get likelihood is called", "bleu": 0.08671803715615023, "rouge": 0.07830551989730423}, {"predict": "creates an array list and fills it with elements of this list", "true": "creates an array list and fills it with elements of this list", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the given connection from the list of connections to be closed when idle", "true": "removes the given connection from the list of connections to be closed when idle", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "internal method to split a style string", "true": "given some dot separated prefix , split on the colons that are not within quotes , and not within brackets", "bleu": 0.0289990174645553, "rouge": 0.0681564245810056}, {"predict": "convert a hex string to an unsigned long", "true": "parses a 1 to 32 character lower - hex string with no prefix into an unsigned long , <unk> any bits higher than 64", "bleu": 0.05161911840021983, "rouge": 0.34398496240601506}, {"predict": "sample the inner - normal error of the given size", "true": "return the standard error of the sample skew", "bleu": 0.25965358893403384, "rouge": 0.4535315985130111}, {"predict": "load policy qualifier qualifier info", "true": "load the policy qualifier info table model with policy qualifier info", "bleu": 0.1424259492981447, "rouge": 0.5854126679462572}, {"predict": "runs the given script", "true": "runs an sql script ( read in using the reader parameter )", "bleu": 0.05782700803395868, "rouge": 0.22932330827067668}, {"predict": "scale the subtree and return the hastings ratio", "true": "do a pro bab list ic subtree slide move", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "returns the index of the marker sequence , or null if none of the given class is found", "true": "returns the first or last marker segment object in the list of the given class , or null if none is found", "bleu": 0.36093098664037787, "rouge": 0.5402576489533012}, {"predict": "remove all the supplied elements in the returned filterable", "true": "remove all supplied elements from this filterable", "bleu": 0.24446151121745052, "rouge": 0.639412997903564}, {"predict": "create a content as soc method", "true": "create a content as soc method", "bleu": 1.0, "rouge": 1.0}, {"predict": "resets the body of this view client", "true": "reset the state of the receiver in preparation for a new session message", "bleu": 0.08723697147876523, "rouge": 0.1897356143079316}, {"predict": "deletes item at array index remove index", "true": "deletes item at array index remove index", "bleu": 1.0, "rouge": 1.0}, {"predict": "save or close this record and close it", "true": "saves all changes and closes the activity", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "adds a message to the given uri", "true": "add an sms to the out box", "bleu": 0.24446151121745047, "rouge": 0.2857142857142857}, {"predict": "subscribes to an observable , printing all its emissions", "true": "subscribes to an observable , printing all its emissions", "bleu": 1.0, "rouge": 1.0}, {"predict": "this function calculates the value that is the nearest double value", "true": "returns a \" nice scaling \" number approximately equal to the range", "bleu": 0.10400927574124633, "rouge": 0.08628005657708629}, {"predict": "implementation for the four public remove / replace methods : replaces node value with v , conditional upon match of cv if non - null", "true": "implementation for the four public remove / replace methods : replaces node value with v , conditional upon match of cv if non - null", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies a header from a request", "true": "copies a header from a request", "bleu": 1.0, "rouge": 1.0}, {"predict": "override to send metric to track an open mrs will be tracked", "true": "call send metric to track the new value of the named metric", "bleu": 0.2891784933232571, "rouge": 0.3333333333333333}, {"predict": "sets all fields in this method will be used as suppressed fields", "true": "attempts to copy all of the acceptable fields from the source and set on this document , overwriting any existing values", "bleu": 0.0583666564745591, "rouge": 0.1732954545454545}, {"predict": "finds the base resource base url of the given base url , resource , and resource base url", "true": "find the class path url for a specific class path resource", "bleu": 0.08097785064266204, "rouge": 0.21631205673758863}, {"predict": "renders the clause in it ' s ep l syntax textual representation", "true": "rendering using the provided formatter", "bleu": 0.10390302174233558, "rouge": 0.12708333333333333}, {"predict": "5", "true": "returns true unless the attribute value was provided by dtd defaulting", "bleu": 3.817663819004394e-05, "rouge": 0.0}, {"predict": "create a new stat archive reader", "true": "creates a stat archive reader that will read the named archive file", "bleu": 0.1599248714366856, "rouge": 0.41924398625429554}, {"predict": "initializes an adb socket port", "true": "instantiate s s socket a ddr with the address of the host ' s adb process", "bleu": 0.03347779366253814, "rouge": 0.08701854493580599}, {"predict": "reads a block from a given location", "true": "reads a block from a given location", "bleu": 1.0, "rouge": 1.0}, {"predict": "indicates whether the tag matches any tag", "true": "tries to match tag name to known tag names", "bleu": 0.15447878876032708, "rouge": 0.24448897795591182}, {"predict": "stop the application", "true": "shuts down the application by delegating service <unk> to the application thread", "bleu": 0.03520477365831485, "rouge": 0.24063116370808674}, {"predict": "check if the current path is expanded", "true": "returns true if the node at the specified display row is currently expanded", "bleu": 0.11787460936700446, "rouge": 0.3794712286158632}, {"predict": "return the index of a label in this list", "true": "determines the position in the string where a label that might be contained ends", "bleu": 0.12109261383365659, "rouge": 0.2510288065843621}, {"predict": "adds a listener to the set of listeners that are sent events through the life of an animation , such as start , repeat , and end", "true": "adds a listener to the set of listeners that are sent events through the life of an animation , such as start , repeat , and end", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new http method info object", "true": "construct http method info object for a handler method that does not support streaming", "bleu": 0.19905304276733932, "rouge": 0.35935198821796754}, {"predict": "checks repeated bytes field equality", "true": "checks repeated bytes field equality", "bleu": 1.0, "rouge": 1.0}, {"predict": "draw the background text of the node", "true": "draws the text for either an edge or a node", "bleu": 0.14390022429682173, "rouge": 0.34205607476635513}, {"predict": "update race with the given list of race", "true": "give this list of races , <unk> the dialog picks out the one it currently has open ( if present )", "bleu": 0.044657922628805316, "rouge": 0.12761506276150628}, {"predict": "indicates whether or not this parameter is required", "true": "indicates whether the parameter is required", "bleu": 0.3549481056010052, "rouge": 0.7331730769230769}, {"predict": "send data to receiver", "true": "sends data to the receiver , usually the creator of the service intent", "bleu": 0.05355679762998549, "rouge": 0.32218309859154926}, {"predict": "returns a set of references this class to another", "true": "analog of c match or replace", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "generates the instructions for a switch statement", "true": "generates the instructions for a switch statement", "bleu": 1.0, "rouge": 1.0}, {"predict": "print the matrix to the output stream", "true": "print the matrix to the output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "answers a set backed by a map", "true": "answers a set backed by a map", "bleu": 1.0, "rouge": 1.0}, {"predict": "equivalent to removing biomes you ' ve a chance to spawn on the allowed type", "true": "removes all biomes of this type from the list of biomes allowed to generate", "bleu": 0.1082597837309053, "rouge": 0.2081911262798635}, {"predict": "calculate a tiled sample for the given iterator", "true": "calculate the requirements needed to tile the requirements given by the iterator that would be tiled", "bleu": 0.07764220917386241, "rouge": 0.31443298969072164}, {"predict": "writes an integer to a string , possibly prep ended with the given number of ' pad characters", "true": "converts an integer to a string , prep ended with a variable amount of ' 0 ' pad characters , and writes it to the given writer", "bleu": 0.3019263773807354, "rouge": 0.5576652601969057}, {"predict": "creates a filter for the given filter", "true": "returns a new or search filter with the provided filter components", "bleu": 0.1319006407505858, "rouge": 0.4273204903677758}, {"predict": "send a blob using the given index", "true": "injects a \" blob \" instruction into the outbound guacamole protocol stream , as if sent by the connected client", "bleu": 0.034485837896937335, "rouge": 0.20446927374301674}, {"predict": "defines what will be the axis labels", "true": "defines what will be the axis labels", "bleu": 1.0, "rouge": 1.0}, {"predict": "merge the set of interval to set", "true": "merge an interval into the given interval set", "bleu": 0.2024757945132846, "rouge": 0.5269978401727862}, {"predict": "drop the string at the end of this g string , taking in a specific g string and sizes for the condition", "true": "a g string variant of the equivalent char sequence method", "bleu": 0.0866852806734874, "rouge": 0.2681318681318681}, {"predict": "adds an new node", "true": "adds an topological node to this graph", "bleu": 0.24002491458061356, "rouge": 0.5198863636363635}, {"predict": "print text in the console", "true": "print text in the console", "bleu": 1.0, "rouge": 1.0}, {"predict": "trim the values of the list", "true": "trims the data row to the number of actually used elements", "bleu": 0.1141650334026257, "rouge": 0.2234432234432234}, {"predict": "recursive call to further subdivide the array", "true": "recursive call to further subdivide the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "asserts that the specified number of threads have been assigned to the specified number of threads", "true": "checks that the threads do not terminate within the given millisecond delay", "bleu": 0.11502783619900048, "rouge": 0.2932692307692307}, {"predict": "creates an abstract worker manager using the given id", "true": "set the identifier of the process", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "this method is used to apply an \" x \" + y \" which is used to be used for the entity \"", "true": "apply this frequency domain processor to the given data , and return the processing result in - place", "bleu": 0.0665422126355551, "rouge": 0.14963205233033525}, {"predict": "on message received handler", "true": "on message received handler", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts a new array", "true": "shoves aside traces , so that a via with the input parameters can be inserted without clearance violations", "bleu": 0.010850044034164912, "rouge": 0.08155080213903743}, {"predict": "returns true if , for one of the buffers , the threshold has been exceeded", "true": "returns true if , for one of the buffers , the threshold has been exceeded", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a string into a byte array", "true": "converts a given hex string separated by colons to a byte array", "bleu": 0.20917479021833488, "rouge": 0.6029654036243821}, {"predict": "equals ( ) with two strings where either could be null", "true": "equals ( ) with two strings where either could be null", "bleu": 1.0, "rouge": 1.0}, {"predict": "for f format , the flag character ' - ' , means that the output should be left justified within the field", "true": "for f format , the flag character ' - ' , means that the output should be left justified within the field", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is called when length of the most recently processed", "true": "return the length of the largest item in the list", "bleu": 0.21200626759025185, "rouge": 0.28818897637795277}, {"predict": "write a portion of an array of characters", "true": "write a portion of an array of characters", "bleu": 1.0, "rouge": 1.0}, {"predict": "rounds this point , so that if this point is on the left side of this segment , if you ' t set the result point will also be on the right side", "true": "rounds this point , so that if this point is on the left side of any directed line with direction p dir , the result point will also be on the left side", "bleu": 0.6558409047920574, "rouge": 0.7575757575757576}, {"predict": "determines a proxy for the given target", "true": "determines a proxy for the given target", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a forward reference to this label", "true": "adds a forward reference to this label", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an array containing all of the elements in this list in proper sequence", "true": "returns an array containing all of the elements in this list in proper sequence ( from first to last element )", "bleu": 0.6065306597126334, "rouge": 0.7721518987341772}, {"predict": "indicates whether the server is currently running", "true": "indicates whether the server is currently running", "bleu": 1.0, "rouge": 1.0}, {"predict": "internal method used to fully unwraps the regular expression", "true": "method extracts the v cf file stored within the zipped import file to the given destination file", "bleu": 0.06900297641435706, "rouge": 0.2186379928315412}, {"predict": "register a user", "true": "attempts to register the username , password combination", "bleu": 0.10148002183214462, "rouge": 0.1680440771349862}, {"predict": "creates a new select - clause", "true": "create a select column 1 , column 2 ,", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "test if the given base mbe an for j mx mbe an", "true": "basic method for testing if a given class is a j mx compliant standard mbe an", "bleu": 0.13856663235546082, "rouge": 0.4178082191780822}, {"predict": "to string set", "true": "to string set", "bleu": 1.0, "rouge": 1.0}, {"predict": "store the store signature token", "true": "creates a signature token connection with the provided input stream to java key store file and password", "bleu": 0.037035449344783235, "rouge": 0.1655359565807327}, {"predict": "write the location and its associated vector to the stream", "true": "overrides marshal output stream", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "get the position that has field that has field that has been stored in this object", "true": "look up a field in the v table", "bleu": 0.09147827112247602, "rouge": 0.17732558139534885}, {"predict": "evaluates the x path expression to a single string", "true": "evaluates the x path expression as text", "bleu": 0.5169731539571706, "rouge": 0.639412997903564}, {"predict": "convert the http headers to a human - readable request", "true": "converts the specified net ty http / 1 headers into arme ria http / 2 headers", "bleu": 0.08227293930285365, "rouge": 0.22154963680387407}, {"predict": "calculate from the file", "true": "calculates the rms audio level from the provided short sample extract", "bleu": 0.08217262444082543, "rouge": 0.24596774193548387}, {"predict": "initialize a shade r with one - time vector", "true": "initialize the shade r program", "bleu": 0.19960198807747329, "rouge": 0.4518518518518518}, {"predict": "checks if the given alias exists in this key store", "true": "checks if the given alias exists in this key store", "bleu": 1.0, "rouge": 1.0}, {"predict": "invert the set of relations selected in the table", "true": "invert the set of relations selected in the table", "bleu": 1.0, "rouge": 1.0}, {"predict": "float value of a negative big decimal", "true": "float value of a negative big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "binds the key store service", "true": "binds the key store to the trust store service", "bleu": 0.37783911519583663, "rouge": 0.6792873051224945}, {"predict": "draw the connector centers", "true": "this is a developer testing function subclasses can call to draw dots at the model ' s location of all connections on this block", "bleu": 0.0026792460101782304, "rouge": 0.12655601659751037}, {"predict": "checks if the given instruction is a merge instruction", "true": "determine whether or not the given instruction is a control flow merge", "bleu": 0.38498150077635496, "rouge": 0.5570776255707762}, {"predict": "load the trust manager from these arguments", "true": "loads the trust manager using the vip r key store", "bleu": 0.22521602211604308, "rouge": 0.34205607476635513}, {"predict": "tell if the current node is outside the document element", "true": "tell if the current node is outside the document element", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs and initializes the thread pool with given name , desired number of threads", "true": "constructs a thread pool with given parameters", "bleu": 0.25748661016289676, "rouge": 0.5066445182724253}, {"predict": "calls invoke and throws a runtime exception if it fails", "true": "calls invoke and throws a runtime exception if it fails", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears the penetration information", "true": "clears the penetration information", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the name of this element type", "true": "returns the name of this element type", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a helper text color to this text , which should be used to set the helper text , and a helper text color strength", "true": "adds a new helper text color , which should be used to highlight the helper text , which indicates the password strength", "bleu": 0.39994250432702433, "rouge": 0.6887791107974595}, {"predict": "creates a new list based token stream which uses the given attribute source as the token source", "true": "creates a new list based token stream which uses the given tokens as its token source", "bleu": 0.6853234406569368, "rouge": 0.8531468531468532}, {"predict": "resolve a class name from a class stream", "true": "use the given class loader rather than using the system class", "bleu": 0.12197601375336842, "rouge": 0.20469798657718125}, {"predict": "creates a new map based on an existing map with just valid parameters", "true": "creates a new map based from an existing map with just valid parameters", "bleu": 0.7825422900366437, "rouge": 0.9230769230769234}, {"predict": "find the first character in the array", "true": "look for a sequence of bytes in a byte array", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "add a complete graph for the given triangle", "true": "synthesize a new edge , and add it to the result", "bleu": 0.13107175678306446, "rouge": 0.20469798657718125}, {"predict": "adds states 0 - 1", "true": "append states to the state vector", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "read object is called to restore the state of the property permission from a stream", "true": "read object is called to restore the state of the service permission from a stream", "bleu": 0.8153551038173115, "rouge": 0.9333333333333336}, {"predict": "retries reg key ex ( ) max attempts times before giving up", "true": "retries <unk> um key ex ( ) max attempts times before giving up", "bleu": 0.7750110736545953, "rouge": 0.8736979166666665}, {"predict": "add a new task", "true": "add a new task", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the compute shade r", "true": "initialize the compute shade r", "bleu": 1.0, "rouge": 1.0}, {"predict": "sort the list in place", "true": "sorts the elements in the list in - place", "bleu": 0.24141769716889283, "rouge": 0.5434298440979956}, {"predict": "creates an object from a byte buffer", "true": "creates an object from a byte buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method generates group name for policy and group name", "true": "to do : v max 3 customized names generate group names which doesn ' t exist in array already", "bleu": 0.05125204157936403, "rouge": 0.06531049250535333}, {"predict": "* test method from apache derby project class org", "true": "test method from apache derby project class org", "bleu": 0.8801117367933934, "rouge": 0.9512670565302144}, {"predict": "creates a new action object", "true": "creates an action group containing the specified actions", "bleu": 0.1658165975077607, "rouge": 0.2953995157384988}, {"predict": "add a list , overwrite a table", "true": "adds a data line to the list at a row", "bleu": 0.14390022429682173, "rouge": 0.34205607476635513}, {"predict": "pushes the new term to the top of the stack , and writes new blocks", "true": "pushes the new term to the top of the stack , and writes new blocks", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new numeric literal", "true": "create a new numeric literal", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if mines h after is present", "true": "check if mines h after is present", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures correct size of the widget", "true": "each row or line at least show one child horizontal only show child can show or partly show in parent", "bleu": 0.018012599273714434, "rouge": 0.0}, {"predict": "cas head field", "true": "cas head field", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures that the buffer has sufficient capacity to hold the desired buffer size to the given buffer", "true": "grow the pixel buffer if necessary", "bleu": 0.07994607499472013, "rouge": 0.19032761310452417}, {"predict": "remove a dependency , regardless of its kind", "true": "remove a dependency , regardless of its kind", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new map that will with one concurrency level from the map and that will be concurrency", "true": "creates a new ch m with an <unk> concurrency level , aimed at high concurrent update rate long living maps", "bleu": 0.10553935394181142, "rouge": 0.2606837606837607}, {"predict": "returns true if , at this time , the object will accept a connection via the named event", "true": "returns true if , at this time , the object will accept a connection with respect to the named event", "bleu": 0.7599267764908569, "rouge": 0.8863247863247863}, {"predict": "skips all whitespace characters and returns the character", "true": "skips all consecutive whitespace characters from reader", "bleu": 0.2653856085536222, "rouge": 0.5398230088495575}, {"predict": "compiling templates requires that we be able to list the a vt s added 9 / 5 / 2000 to support compilation experiment", "true": "compiling templates requires that we be able to list the a vt s added 9 / 5 / 2000 to support compilation experiment", "bleu": 1.0, "rouge": 1.0}, {"predict": "extracts a map of name / value pairs from the given string", "true": "extracts a map of name / value pairs from the given string", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a priority queue that contains the elements of a collection", "true": "constructs a priority queue that contains the elements of a collection", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the resource id", "true": "gets the resource id", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "computes the successor of the successor node to c write state access", "true": "see above for explanation", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "initialize this stream", "true": "returns a boolean flag indicating if the state is initial ( just starting )", "bleu": 0.01154872631036983, "rouge": 0.0}, {"predict": "this function creates \" gives \" a string representing an ascii sequence of ascii characters using a given character sequence", "true": "return a char sequence with lines ( separated by lf , cr / lf , or cr ) terminated by the platform specific line separator", "bleu": 0.05264872327847182, "rouge": 0.08714285714285715}, {"predict": "ensure that there ' s schema specification", "true": "save content of container config instance into xml file ( schema or configuration )", "bleu": 0.06833381956448398, "rouge": 0.08983799705449189}, {"predict": "get ter for environment environment / setup", "true": "returns whether the print ng was aborted using this printing status", "bleu": 0.08820727472213225, "rouge": 0.0}, {"predict": "puts a key / value pair into the array , optimizing for the case where the key is greater than all existing keys in the array", "true": "puts a key / value pair into the array , optimizing for the case where the key is greater than all existing keys in the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "http : / / b / b / 3042574 gzip input stream", "true": "http : / / b / 3042574 gzip input stream", "bleu": 0.8242367502646054, "rouge": 0.9242424242424241}, {"predict": "creates a data package with information used by the server when responding to requests", "true": "creates a data package with information used by the server when responding to requests", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints a boolean to this output stream and flushes this output stream", "true": "prints a boolean to standard output and flushes standard output", "bleu": 0.3541698766144061, "rouge": 0.7393939393939394}, {"predict": "creates new shared memory space shared memory object", "true": "this will allocate system resources for the space", "bleu": 0.16036590969929357, "rouge": 0.125}, {"predict": "closes the database connection", "true": "close the jd bc connection", "bleu": 0.3096787331587729, "rouge": 0.43571428571428567}, {"predict": "creates a new qualifier object from the current one , but removes the given qualifier from it if it exists", "true": "creates a new version object from the current one , but append a new qualifier to it", "bleu": 0.4361963094460515, "rouge": 0.658273381294964}, {"predict": "load a 16 bit load where the extended extended result is extended", "true": "perform a 16 bit load where the sign extended result fills the return value", "bleu": 0.44063693910534407, "rouge": 0.6069651741293532}, {"predict": "converts the given array to a hexadecimal string", "true": "helper method to convert a byte array ( such as a msg id ) to a hex string", "bleu": 0.06870470052394348, "rouge": 0.28773584905660377}, {"predict": "un registers the baggage handler that is invoked any time baggage operations are performed by the server", "true": "remove an existing baggage handler that was previously registered", "bleu": 0.13445273575332958, "rouge": 0.2443257676902537}, {"predict": "creates a new instance and initializes a default preferred heat for a default axis", "true": "creates a new data set where all the z - values are initially 0", "bleu": 0.16451929399933107, "rouge": 0.21428571428571427}, {"predict": "tests whether two arrays in the same order", "true": "compare two 2 - dimensional event arrays", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "helper method to collect the text nodes", "true": "this method breaks concatenation mode", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "takes a function and writes the individual annotations for the given annotation", "true": "convert java proxy annotation to specialized implementation , used to <unk> equals / hash code / to string methods", "bleu": 0.05798153788393259, "rouge": 0.06199186991869918}, {"predict": "parse the expression and return the list of nodes", "true": "this method should be used to parse an expression , like \" a = b \"", "bleu": 0.07176093398791644, "rouge": 0.1523096129837703}, {"predict": "adds the given section to the list of tick mark sections", "true": "adds the given section to the list of tick mark sections", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the q - th q distribution ( mean = 1 ) for the given lambda", "true": "compute q i ( exponential distribution , in lier s )", "bleu": 0.09672649511413092, "rouge": 0.22989949748743718}, {"predict": "flushes this stream to the output stream", "true": "flush any io to disk", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "delete a character buffer", "true": "deletes characters from the buffer", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "add a plotter to the graph , which will be used to plot entries", "true": "add a plotter to the graph , which will be used to plot entries", "bleu": 1.0, "rouge": 1.0}, {"predict": "utility for ceiling , floor , lower , higher methods", "true": "utility for ceiling , floor , lower , higher methods", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a listener to internal state", "true": "adds a listener that receives the data and error messages", "bleu": 0.21108303712651422, "rouge": 0.3588235294117647}, {"predict": "writes the tags from this ex if interface object into a jpeg compressed bitmap , removing prior ex if tags", "true": "writes the tags from this ex if interface object into a jpeg compressed bitmap , removing prior ex if tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if there is another match in the input , starting from the given position", "true": "returns true if there is another match in the input , starting from the given position", "bleu": 1.0, "rouge": 1.0}, {"predict": "this is the android on the transport", "true": "sets the action bits as appropriate for the given fault and action", "bleu": 0.10063351655856649, "rouge": 0.20098846787479407}, {"predict": "check whether the given char sequence contains any whitespace characters", "true": "check whether the given char sequence contains any whitespace characters", "bleu": 1.0, "rouge": 1.0}, {"predict": "will return true if any extensions are present and marked as critical as we currently dont handle any extensions !", "true": "will return true if any extensions are present and marked as critical as we currently dont handle any extensions !", "bleu": 1.0, "rouge": 1.0}, {"predict": "decodes the given bytes from the specified code r , and returns the decoded value", "true": "parses a value from a base 64 - encoded string using the given code r", "bleu": 0.14807582680058126, "rouge": 0.2666666666666666}, {"predict": "validates a set of values for each column in the set", "true": "performs validation on a set of string", "bleu": 0.21200626759025185, "rouge": 0.3472485768500949}, {"predict": "returns the values to the comma - value pairs", "true": "adds all values together", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "lists an existing list of the given owner", "true": "list database groups the specific user has provided passwords", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "computes the function to do the actual distance", "true": "calculate the function value for the input", "bleu": 0.22679164443904004, "rouge": 0.4048672566371681}, {"predict": "adds a long value to the request", "true": "adds a long value to the request", "bleu": 1.0, "rouge": 1.0}, {"predict": "compare the objects into this object using the specified comparator", "true": "call the comparator on the column", "bleu": 0.14991106946711685, "rouge": 0.26180257510729615}, {"predict": "adds a new check box listener to the settings of the panels", "true": "enable objects to listen for changes to the check box", "bleu": 0.17194656088289215, "rouge": 0.18484848484848485}, {"predict": "calculate the bounds for a view ' s title", "true": "calculate the bounds for a view ' s title", "bleu": 1.0, "rouge": 1.0}, {"predict": "add this instance with the instance for this instance", "true": "gf addition or subtraction ( they are identical for a gf ( 2 ^ n )", "bleu": 0.06484332373239513, "rouge": 0.07615480649188515}, {"predict": "method to line up to line with the line", "true": "generates the content - type value", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "locates the first field offset", "true": "returns the offset of the first field in the range header size , size of", "bleu": 0.07271361304044333, "rouge": 0.27518796992481204}, {"predict": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "true": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a warning log message", "true": "send a warning log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the key ready ops and selected key set", "true": "updates the key ready ops and selected key set", "bleu": 1.0, "rouge": 1.0}, {"predict": "extract the first element ( if any ) from this list", "true": "retrieve the first element and remove it from the list", "bleu": 0.23462350320527994, "rouge": 0.4803149606299213}, {"predict": "handles actions from within the property panel", "true": "handles user interaction with the property panel", "bleu": 0.3655552228545123, "rouge": 0.5714285714285714}, {"predict": "java x", "true": "java x", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a set of server instance to the given instance of this meta", "true": "upgrades a server instance", "bleu": 0.1350862565735141, "rouge": 0.39019189765458434}, {"predict": "instantiate s a new instance", "true": "creates a new instance of the class represented by the given class object", "bleu": 0.10259023253147191, "rouge": 0.3086003372681282}, {"predict": "pops a type from the output frame stack", "true": "pops a type from the output frame stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a m srp session", "true": "initiate a m srp session", "bleu": 0.7598356856515925, "rouge": 0.8}, {"predict": "create a new forum post", "true": "create a new forum post", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the mark as a hex", "true": "draw a mark transforming co - ordinates to each axis", "bleu": 0.1255107248036171, "rouge": 0.11960784313725491}, {"predict": "invoked when component has been resized", "true": "component listener interface method", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "get the string re pre sen ent ation of this step for diagnostic purposes", "true": "get the string re pre sen ent ation of this step for diagnostic purposes", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the given byte array into a hex string", "true": "description of the method", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "changes the label and labels to a label", "true": "<unk> the value change and in forms the listeners", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "writes compressed single - entry", "true": "writes bytes to zip entry", "bleu": 0.3021375397356768, "rouge": 0.4}, {"predict": "update a point so that it is about changes", "true": "update the gravity point only if a the gravity vector is longer than the threshold", "bleu": 0.09111821689187218, "rouge": 0.23921568627450981}, {"predict": "returns the view position of the view , which is used to configure the number of bounds", "true": "override method used to configure the horizontal drag", "bleu": 0.20105373454060027, "rouge": 0.34221598877980364}, {"predict": "constructs a new request request wrapper", "true": "constructs a request object wrapping the given request", "bleu": 0.236682065782701, "rouge": 0.5570776255707762}, {"predict": "converts a double value to the panel that will be easy for the original x axis , there more than the r", "true": "convert an x coordinate from the instance space to the panel space", "bleu": 0.11408424519986968, "rouge": 0.18635437881873726}, {"predict": "forwards the http request to the system", "true": "handles the request and forwards it to the hook specific destination", "bleu": 0.16417223692914015, "rouge": 0.4273204903677758}, {"predict": "computes a primary key from the given owner", "true": "retrieve primary key columns", "bleu": 0.21105340631872638, "rouge": 0.3546511627906977}, {"predict": "reads 4 bytes from stream and interprets them as u in t 32", "true": "reads 4 bytes from stream and interprets them as u in t 32", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a leaf", "true": "produce an ant lr token for the prefix of the given leaf that overlaps the requested region", "bleu": 0.005052392784929312, "rouge": 0.08879184861717612}, {"predict": "adds a new csv record to this record", "true": "adds the given record to this data", "bleu": 0.3155984539112945, "rouge": 0.5398230088495575}, {"predict": "schedule a scheduler to be scheduled for processing", "true": "decrements the scheduled queue counter and en queues the request", "bleu": 0.12489309605176803, "rouge": 0.10892857142857142}, {"predict": "spins / yields / blocks until node s is matched or caller gives up", "true": "spins / yields / blocks until node s is matched or caller gives up", "bleu": 1.0, "rouge": 1.0}, {"predict": "concatenates the string representation of each items in this array , with the given string as a separator between each item", "true": "concatenates the string representation of each items in this array , with the given string as a separator between each item", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds a producer for the given target", "true": "returns an object producer", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "initialize the compute shade r", "true": "initialize the compute shade r", "bleu": 1.0, "rouge": 1.0}, {"predict": "if there are something out an exception from the request body", "true": "if task completed success or failure from response", "bleu": 0.12605968092174913, "rouge": 0.216696269982238}, {"predict": "center set of nodes half way between top and bottom most node in the list", "true": "center set of nodes half way between left and right most node in the list", "bleu": 0.6865065103648591, "rouge": 0.8666666666666667}, {"predict": "appends text for the given text to the end of the buffer", "true": "append text to the outgoing email body", "bleu": 0.19338531381761725, "rouge": 0.3315217391304348}, {"predict": "called when the instance state changed", "true": "restores the previous state of the selection on the items", "bleu": 0.1255107248036171, "rouge": 0.23921568627450981}, {"predict": "constructs a new instance , based on the supplied time and the specified time zone", "true": "constructs a new hour", "bleu": 0.15310245441182443, "rouge": 0.35260115606936415}, {"predict": "undo the last call", "true": "reverts to the last backed up version of the data set", "bleu": 0.08217262444082543, "rouge": 0.24596774193548387}, {"predict": "check whether a network is connected", "true": "checks to see if we are connected using wi fi", "bleu": 0.11341174240707227, "rouge": 0.11960784313725491}, {"predict": "flush the underlying writer", "true": "done with this response writer", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "return true if there are no extension present in this generator", "true": "return true if there are no extension present in this generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads process from process ' s process", "true": "creates a new process from the given process file", "bleu": 0.19740631366145517, "rouge": 0.3667334669338677}, {"predict": "extracts unique music id from the media id", "true": "extracts unique music id from the media id", "bleu": 1.0, "rouge": 1.0}, {"predict": "verify identity", "true": "verify identity", "bleu": 1.0, "rouge": 1.0}, {"predict": "build a list of parameters that can be provided to a method", "true": "build a list of parameters that can be provided to a method", "bleu": 1.0, "rouge": 1.0}, {"predict": "this is a fast operation ( logarithmic in the size of the cell union )", "true": "this is a fast operation ( logarithmic in the size of the cell union )", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a seeded simplex noise generator with the given random", "true": "creates a seeded simplex noise generator with the given random", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts to primitive array", "true": "converts to primitive array", "bleu": 1.0, "rouge": 1.0}, {"predict": "process all lines ( which means to be read from the line of all requested lines , append them to the first line index", "true": "processes the stats line to sum up all network stats belonging to the u id", "bleu": 0.0824055698798382, "rouge": 0.2675438596491228}, {"predict": "lazily construct the lookup table for this schema", "true": "lazily construct the lookup table for this schema", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string consisting of the presence of the elements", "true": "a printout of a user - friendly string describing the format", "bleu": 0.1434272783816789, "rouge": 0.28328173374613}, {"predict": "read all ( in t > ) of this message from the input stream", "true": "read data - - input the mod bus message from d in", "bleu": 0.1437791910008819, "rouge": 0.2340153452685422}, {"predict": "adjusts the indentation level", "true": "adjusts the current indentation level of this log stream", "bleu": 0.17035677145427366, "rouge": 0.5754716981132075}, {"predict": "retrieves the current capacity of the map", "true": "retrieves the maximum capacity of the map", "bleu": 0.5946035575013605, "rouge": 0.8571428571428571}, {"predict": "process the code as a string", "true": "<unk> up a code string", "bleu": 0.2626909894424158, "rouge": 0.3696969696969697}, {"predict": "gets the volume of the overlapping box box", "true": "returns a random number between min ( inclusive ) and max ( exclusive )", "bleu": 0.0636991580240073, "rouge": 0.0}, {"predict": "unit test for random index", "true": "test close on a new tree - should force the root to the store since a new root is dirty ( if empty )", "bleu": 0.006107491095942254, "rouge": 0.06167846309403437}, {"predict": "returns a new paths of the paths specified by p 2 path", "true": "given a relative file path and a list of \" search paths \" returns the search path where the file was located", "bleu": 0.06176367383713013, "rouge": 0.2234432234432234}, {"predict": "will return true if any extensions are present and marked as critical as we currently don ' t handle any extensions !", "true": "will return true if any extensions are present and marked as critical as we currently don ' t handle any extensions !", "bleu": 1.0, "rouge": 1.0}, {"predict": "internal method to perform the normalization", "true": "internal method to perform the normalization", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends the string associated with the range in which the specified double value fits to the specified string buffer", "true": "appends the string associated with the range in which the specified double value fits to the specified string buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "load the configuration from the jvm parameters", "true": "checks if the jvm parameters have the repository and agent information", "bleu": 0.20643565894052812, "rouge": 0.32049036777583184}, {"predict": "this is used to check that the oauth session is present", "true": "if the user can be authenticated due to an existing session id , do so", "bleu": 0.09416415673264793, "rouge": 0.14969325153374236}, {"predict": "test for bug # 1 - handle insert / command", "true": "make sure that when we change a view , that change in reflected in other sessions command cache", "bleu": 0.05664226584551703, "rouge": 0.06792873051224944}, {"predict": "tries to determine if the given lines represents a polygon", "true": "for a given amount and unit size , generate the approximate value", "bleu": 0.12273680279953825, "rouge": 0.08944281524926685}, {"predict": "creates a new element in the given xml document", "true": "creates an element in the specified namespace , with the specified tag and namespace prefix", "bleu": 0.14260771622124252, "rouge": 0.3189542483660131}, {"predict": "modifies the given string into the given file", "true": "modifies the given file in place", "bleu": 0.37531192687516973, "rouge": 0.5865384615384615}, {"predict": "the commands to execute when in state 2", "true": "the commands to execute when in state 2", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests the listing of the options", "true": "tests the listing of the options", "bleu": 1.0, "rouge": 1.0}, {"predict": "transform array points to world 2 d points in the world", "true": "ll to world that returns normalized longitude in radians , to be used for more calculations in some methods", "bleu": 0.07784269339018503, "rouge": 0.19082377476538062}, {"predict": "notifies when the size or the orientation of the view has actually changed", "true": "notifies when the size or the orientation of the view has actually changed", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove a direction direction direction changes at window layout", "true": "remove a layout turntable", "bleu": 0.19960198807747329, "rouge": 0.4959349593495934}, {"predict": "process notification of the end of an xml element being reached", "true": "process notification of the end of an xml element being reached", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert an image to an nd array", "true": "convert an buffered image to a matrix", "bleu": 0.3073940764756322, "rouge": 0.5714285714285714}, {"predict": "gets the number of elements have been scheduled queue", "true": "get the total number of scheduled requests", "bleu": 0.21105340631872635, "rouge": 0.5115303983228512}, {"predict": "constructs a new d general name choose r dialog", "true": "constructs a new d general name choose r dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears any references the scene is holding for its contents", "true": "clears any references the scene is holding for its contents", "bleu": 1.0, "rouge": 1.0}, {"predict": "attempt to match the host runtime to a capable platform implementation", "true": "attempt to match the host runtime to a capable platform implementation", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a mitre join connecting the two reflex offset", "true": "adds a limited mitre join connecting the two reflex offset segments", "bleu": 0.6651740399183245, "rouge": 0.8840579710144927}, {"predict": "discards any characters outside of the base 64 alphabet , per the requirements on page 25 of rfc 2045 - \" any characters outside of the base 64 alphabet are to be ignored in base 64 encoded data", "true": "discards any characters outside of the base 64 alphabet , per the requirements on page 25 of rfc 2045 - \" any characters outside of the base 64 alphabet are to be ignored in base 64 encoded data", "bleu": 1.0, "rouge": 1.0}, {"predict": "multiply two numbers of different scales", "true": "multiply two numbers of different scales", "bleu": 1.0, "rouge": 1.0}, {"predict": "limit lease duration by limit , and check for negative value", "true": "limit lease duration by limit , and check for negative value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a cookie - safe path by truncating everything after the last \" / \"", "true": "returns a cookie - safe path by truncating everything after the last \" / \"", "bleu": 1.0, "rouge": 1.0}, {"predict": "format returning a double value using a custom decimal", "true": "returns string from double formatted to decimal format ( \" # # #", "bleu": 0.10761866342063775, "rouge": 0.17604617604617603}, {"predict": "creates a new generator with the specified formatter", "true": "creates a label generator with the specified date formatter", "bleu": 0.46840395507819893, "rouge": 0.8148854961832059}, {"predict": "delete items if the given list of items is visible", "true": "delete items starting with s ( start position ) to e ( end position ) including s and e if s = items", "bleu": 0.05137311242532489, "rouge": 0.2263450834879406}, {"predict": "creates all - entries for all the oid for all entries of the given oid", "true": "translate an oid to a thread id", "bleu": 0.08225964699966554, "rouge": 0.09728867623604465}, {"predict": "cache an attribute value", "true": "add the values to the cache", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "reads a policy configuration into the policy object using a reader object", "true": "reads a policy configuration using a reader object", "bleu": 0.48442732379638637, "rouge": 0.8299319727891156}, {"predict": "inject volume info from provider info map to string information", "true": "extract value from provider for given volume info key , and then get its name and use that to inject to map", "bleu": 0.0706672411439943, "rouge": 0.2341650671785029}, {"predict": "implementation of adapter", "true": "implementation of adapter", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the specified file", "true": "loads the specified file into the table", "bleu": 0.4723665527410147, "rouge": 0.693181818181818}, {"predict": "updates the change status of the provided destination", "true": "responds to a change in the destination type", "bleu": 0.19070828081828378, "rouge": 0.375}, {"predict": "http for gzip stream / input stream", "true": "try to open a stream as gzip , if it starts with the gzip magic", "bleu": 0.06555660318294844, "rouge": 0.08531468531468532}, {"predict": "returns the hash code for this object", "true": "returns the hash code value for this object", "bleu": 0.5993954153807813, "rouge": 0.9222462203023757}, {"predict": "returns a new prefix query that includes prefix given in et address", "true": "create a prefix query for matching a cidr network range", "bleu": 0.14694106251955755, "rouge": 0.2772727272727273}, {"predict": "creates and adds a policy subject to this object", "true": "returns a subject for the given am identity", "bleu": 0.15619699684601276, "rouge": 0.2378167641325536}, {"predict": "makes sure the capacity and size of the vector can accomodate the given index", "true": "makes sure the capacity and size of the vector can accomodate the given index", "bleu": 1.0, "rouge": 1.0}, {"predict": "integer line con cats the command line", "true": "add \" groovy c \" parameters to the command line list , based on the ant configuration", "bleu": 0.08285234435890511, "rouge": 0.23252858958068615}, {"predict": "load the hex image for the hex", "true": "loads the image ( s ) for this hex into the tracker", "bleu": 0.11967409389919142, "rouge": 0.40197693574958815}, {"predict": "tria ngu late a point set with eventual constraints", "true": "tria ngu late a point set with eventual constraints", "bleu": 1.0, "rouge": 1.0}, {"predict": "encode the byte array into a string , while trimming off the last characters off", "true": "encodes a string with base 64 url encoding it also removes characters which must be removed according to the <unk> spec : http : / / tools", "bleu": 0.05527054627926339, "rouge": 0.1358574610244989}, {"predict": "writes out a source field / value pair object for java method parameters", "true": "writes out a source / sink specification object for java static fields", "bleu": 0.3661926362999429, "rouge": 0.6446499339498017}, {"predict": "read object is called to restore the state of the property permission from a stream", "true": "read object is called to restore the state of the file permission from a stream", "bleu": 0.8153551038173115, "rouge": 0.9333333333333336}, {"predict": "parses the data from the supplied reader", "true": "parses the data from the supplied reader , using the supplied base uri to resolve any relative uri references", "bleu": 0.18009231214795235, "rouge": 0.4970896391152503}, {"predict": "excludes from text", "true": "parses the specified string to return the portion not containing the destination statement", "bleu": 0.016117545932670774, "rouge": 0.0}, {"predict": "discards any characters outside of the base 64 alphabet , per the requirements on page 25 of rfc 2045 - \" any characters outside of the base 64 alphabet are to be ignored in base 64 encoded data", "true": "discards any characters outside of the base 64 alphabet , per the requirements on page 25 of rfc 2045 - \" any characters outside of the base 64 alphabet are to be ignored in base 64 encoded data", "bleu": 1.0, "rouge": 1.0}, {"predict": "replaces unprintable characters by their escaped ( or unicode escaped ) equivalents in the given string", "true": "replaces unprintable characters by their escaped ( or unicode escaped ) equivalents in the given string", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a file to the file , advancing the pointer", "true": "adds a file to the class path", "bleu": 0.4617366309441026, "rouge": 0.6075697211155379}, {"predict": "inserts the given items at the specified index in the array", "true": "insert new records at a specified index", "bleu": 0.16108992769687397, "rouge": 0.3472485768500949}, {"predict": "process a list of integers", "true": "process a whole collection of integer values", "bleu": 0.25880882365505126, "rouge": 0.48541114058355433}, {"predict": "return an in t buffer that accesses the major version number", "true": "return an in t buffer that accesses the major version number", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the source definition", "true": "sets the settings and mappings as a single source", "bleu": 0.11392443929712959, "rouge": 0.28773584905660377}, {"predict": "converts the data to sign or verified , and returns the signature of data", "true": "creates data to be signed from the digest", "bleu": 0.1250076305588977, "rouge": 0.28683385579937304}, {"predict": "if the value of the resource has been modified since the provider is modified for this key", "true": "set the ' if - modified - since ' request header to the given value", "bleu": 0.09880782578056979, "rouge": 0.2528497409326425}, {"predict": "create the default file to be deleted", "true": "create a t mp journal file for test cases", "bleu": 0.15447878876032708, "rouge": 0.24448897795591182}, {"predict": "generates the instruction to push the given value on the stack", "true": "generates the instruction to push the given value on the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance of a given class", "true": "allocate an array dynamically", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "see iso 16022 : 2006 , 5", "true": "see iso 16022 : 2006 , 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets up this animator set to play all of the supplied animations at the same time", "true": "sets up this animator set to play all of the supplied animations at the same time", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints the error message , as a parameter exception", "true": "print an error message for the given error", "bleu": 0.19960198807747329, "rouge": 0.2378167641325536}, {"predict": "returns a string describing the statistics", "true": "a method for other parts of the application to get stats the command processor uses this to report stats on request", "bleu": 0.020066622811880642, "rouge": 0.1346578366445916}, {"predict": "description of the method that performs a adjusted i , re = 0 as described in the same as described in the internal escape as described as described as the internal since they were high as the same as i", "true": "applies l 1 regular iz ation to the model", "bleu": 0.03011857955989304, "rouge": 0.04607250755287009}, {"predict": "this method cannot be called directly", "true": "this method cannot be called directly", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns all the text at the given url", "true": "returns all the text at the given url", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the move participants for the given element", "true": "loads the move participants for the given element", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines a preference vector with the specified initial value", "true": "determines the preference vector according to the specified neighbor ids", "bleu": 0.2187537716852318, "rouge": 0.5213675213675214}, {"predict": "paint the arrow in the foreground", "true": "paint the arrow in disabled state", "bleu": 0.6147881529512643, "rouge": 0.6666666666666666}, {"predict": "flip bit ( in t n ) inside a negative number", "true": "flip bit ( in t n ) inside a negative number", "bleu": 1.0, "rouge": 1.0}, {"predict": "called by the utility method on the passed user - normalized login , record that the clears a user", "true": "add a user to database", "bleu": 0.08475426399505566, "rouge": 0.18625954198473282}, {"predict": "true if there is another record to be processed", "true": "check if there are more events", "bleu": 0.18575057999133596, "rouge": 0.27664399092970515}, {"predict": "closes the database connection", "true": "close the jd bc connection", "bleu": 0.3096787331587729, "rouge": 0.43571428571428567}, {"predict": "extracts x mp meta from a jpeg file stream", "true": "extracts x mp meta from a jpeg image file stream", "bleu": 0.743344673640789, "rouge": 0.9384615384615386}, {"predict": "initialize a client validator", "true": "initialize and add validator", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "apply cross - over operation to bayes net calculate score and as a side effect sets bayes net parent sets", "true": "apply cross - over operation to bayes net calculate score and as a side effect sets bayes net parent sets", "bleu": 1.0, "rouge": 1.0}, {"predict": "resets the thread to its initial state", "true": "resets the digest for further use", "bleu": 0.24446151121745047, "rouge": 0.31202046035805625}, {"predict": "creates and displays a user perspective , given the name", "true": "creates a user - defined <unk> , and possibly switches to this new perspective immediately", "bleu": 0.12436651725573127, "rouge": 0.30886075949367087}, {"predict": "turn a ph red score into a probability", "true": "get a ph red - scaled quality value corresponding to the supplied error rate", "bleu": 0.1409894129706051, "rouge": 0.25994318181818177}, {"predict": "returns the descriptor representing the given type", "true": "returns the descriptor representing the given type", "bleu": 1.0, "rouge": 1.0}, {"predict": "encode the string into an url", "true": "get the string encoded version of this object", "bleu": 0.20830666398386113, "rouge": 0.2785388127853881}, {"predict": "expect the specified token type with the arguments", "true": "ensures that this token has one of the given expected types", "bleu": 0.12197601375336842, "rouge": 0.20469798657718125}, {"predict": "update functionality test # test update 3 ( )", "true": "update functionality test # test update 3 ( )", "bleu": 1.0, "rouge": 1.0}, {"predict": "this test initially was created by the subclass of the query , it will be saved to be created after copying , so", "true": "this method checks if we correctly handle assigning null values to blobs", "bleu": 0.05856458233275369, "rouge": 0.1211519364448858}, {"predict": "check if this type is assignable from the given type", "true": "check if this type is assignable from the given type", "bleu": 1.0, "rouge": 1.0}, {"predict": "method used to insert", "true": "method used to insert penalty in eg demand detail table", "bleu": 0.22313016014842982, "rouge": 0.5304347826086957}, {"predict": "reads a sample info from the input byte buffer", "true": "constructs a sample info from the given byte buffer", "bleu": 0.5814307369682193, "rouge": 0.7777777777777778}, {"predict": "performs an maintenance operations", "true": "invoked by parent during its maintenance interval", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "times and records the duration of event", "true": "times and records the duration of event", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the specified bytecode version is post", "true": "checks if the specified bytecode version string represents a j dk 1", "bleu": 0.4403288427322773, "rouge": 0.5791139240506329}, {"predict": "a specialized simplified mapping source method , takes the form of simple properties definition : ( string , string ) : \" type = string , store = true \" ) , \"", "true": "a specialized simplified mapping source method , takes the form of simple properties definition : ( \" field 1 \" , \" type = string , store = true \" )", "bleu": 0.75631634623482, "rouge": 0.848531684698609}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds a template property with the given path", "true": "try to find a template given a normalized path", "bleu": 0.2116253761537182, "rouge": 0.465648854961832}, {"predict": "initializes the disk based cache by scanning for all files currently in the specified root directory", "true": "initializes the disk based cache by scanning for all files currently in the specified root directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "register a circular progress view listener", "true": "register a circular progress view listener with this view", "bleu": 0.6065306597126334, "rouge": 0.7721518987341772}, {"predict": "creates a new site status object", "true": "constructs a site status check thread i mpl object based on the configured parameter com", "bleu": 0.07370355832749997, "rouge": 0.3536231884057971}, {"predict": "draws the scale using the", "true": "draw the t 3 glyph", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "method for bean context child interface", "true": "method for bean context child interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears the variables , having their escaped settings and returns the list of variables", "true": "replaces the list of retained var s with the specified list , returning the old list", "bleu": 0.15783291701520194, "rouge": 0.2634989200863931}, {"predict": "releases the update manager and clears it from the default one", "true": "release this applet class loader and its thread group / app context", "bleu": 0.10400927574124633, "rouge": 0.08628005657708629}, {"predict": "delete all the tables in the table", "true": "delete all tables from this database", "bleu": 0.2626909894424158, "rouge": 0.4680306905370844}, {"predict": "returns a previously created category based on the given id", "true": "get one pet category by id", "bleu": 0.13950796967929133, "rouge": 0.26180257510729615}, {"predict": "marks a default session token for a particular site", "true": "marks a default session token as removed for a particular site", "bleu": 0.6290827667794988, "rouge": 0.8840579710144927}, {"predict": "create a list of volumes for the basic block descriptors", "true": "convenience method to create a map device to cg to volume to add and remove", "bleu": 0.10062578380622589, "rouge": 0.15443037974683543}, {"predict": "constructs a new exchange with the given request and annotations", "true": "creates a new exchange with the specified request and origin", "bleu": 0.5193071778680676, "rouge": 0.7000000000000001}, {"predict": "computes the alpha value of the tab based on its discard status", "true": "computes the alpha value of the tab based on its discard status", "bleu": 1.0, "rouge": 1.0}, {"predict": "amount of unix time to file time , so that this file has been scheduled in clock time", "true": "converts \" standard unix time \" ( in seconds , utc / gmt ) to file time", "bleu": 0.1619557012853241, "rouge": 0.28719397363465166}, {"predict": "generates a random iv and encrypts this plain text with the given key", "true": "generates a random iv and encrypts this plain text with the given key", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a existing address from this user", "true": "removes the given address from this user", "bleu": 0.5410822690539396, "rouge": 0.7142857142857143}, {"predict": "measures the width and height of the view , preserving the aspect ratio of the image displayed if wrap content is used", "true": "measures the width and height of the view , preserving the aspect ratio of the image displayed if wrap content is used", "bleu": 1.0, "rouge": 1.0}, {"predict": "to fire off the end element trace event", "true": "to fire off the end element trace event", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks for individual ui", "true": "check if the product home input by the user has the locator file of the product to be migrated from", "bleu": 0.005533842072529231, "rouge": 0.0}, {"predict": "generate an array of spanned items representing the history of this connection", "true": "generate an array of spanned items representing the history of this connection", "bleu": 1.0, "rouge": 1.0}, {"predict": "format a message with the given arguments", "true": "formats the given string with the given argument", "bleu": 0.29969770769039067, "rouge": 0.3952483801295896}, {"predict": "for into prosody prosody element , insert a new element as the pro so dic settings and the pro so dic settings", "true": "for a given element , extract essential settings defined by the closest ancestor prosody element and save them into the utterance", "bleu": 0.11408424519986968, "rouge": 0.2802450229709035}, {"predict": "creates the given folder in the given work space", "true": "use to create folder in your directory", "bleu": 0.18575057999133596, "rouge": 0.2557651991614256}, {"predict": "after rotating , the matrix needs to be translated", "true": "after rotating , the matrix needs to be translated", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the ticker text for a notification having | title | and | body |", "true": "creates the ticker text for a notification having | title | and | body |", "bleu": 1.0, "rouge": 1.0}, {"predict": "add protocol to collection if it does not already exist in protocol", "true": "verify whether protocol type already exists or not", "bleu": 0.1235622127262679, "rouge": 0.2074829931972789}, {"predict": "provides detailed description of this annotation instance , including all member name - values pairs", "true": "provides detailed description of this annotation instance , including all member name - values pairs", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a key to the list", "true": "adds an object to this set", "bleu": 0.24446151121745047, "rouge": 0.3333333333333333}, {"predict": "load a configuration from a resource", "true": "build a configuration object from a resource , processing it as a properties file", "bleu": 0.12887870947273114, "rouge": 0.4663608562691131}, {"predict": "add this entry to the log file", "true": "log a message with full information ( if provided )", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "draws the title on a java 2 d graphics device ( such as the screen or a printer )", "true": "draws the title on a java 2 d graphics device ( such as the screen or a printer )", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a public key from its encoding", "true": "construct a public key from its encoding", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the result count for the given search query", "true": "return the result count for the given search query", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the right - expression is true , false otherwise", "true": "evaluates whether an expression is true or false", "bleu": 0.2044800736021839, "rouge": 0.4149659863945578}, {"predict": "adds a new header with the given name and value", "true": "adds a new header with the name and value", "bleu": 0.7016879391277371, "rouge": 0.9564459930313588}, {"predict": "perform an asynchronous max operation", "true": "perform an a sync rho nous min operation", "bleu": 0.2118947430943267, "rouge": 0.44309927360774815}, {"predict": "prints a character followed by a newline", "true": "prints a character followed by a newline", "bleu": 1.0, "rouge": 1.0}, {"predict": "test helper submits data that should be read with no record", "true": "test verifies correct rejection of a write operation when the caller supplies an empty buffer ( no bytes remaining )", "bleu": 0.05562171233991619, "rouge": 0.12261306532663319}, {"predict": "stores the given data ( in it ) in the relation", "true": "swaps the actual cache with the built - up temporary cache and creates a fresh , empty temporary cache", "bleu": 0.06091519954817571, "rouge": 0.12721584984358705}, {"predict": "update functionality test # test update 7 ( )", "true": "update functionality test # test update 7 ( )", "bleu": 1.0, "rouge": 1.0}, {"predict": "extract lines from a line of space to space special space for space and space character", "true": "returns the leading indentation string of the given line", "bleu": 0.08513012360883544, "rouge": 0.08425414364640883}, {"predict": "does the work of getting the path", "true": "does the work of getting the path", "bleu": 1.0, "rouge": 1.0}, {"predict": "pre - insert a node at the node p 1", "true": "adapts the kn n distances before insertion of entry q", "bleu": 0.12605968092174913, "rouge": 0.1}, {"predict": "adds a status line to a file if it is a match", "true": "adds files to container if they matched to template", "bleu": 0.1235622127262679, "rouge": 0.2932692307692307}, {"predict": "divide : rounding mode is round half up , result is negative ; equidistant", "true": "divide : rounding mode is round half up , result is negative ; equidistant", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes a plain text into a string using the specified char set", "true": "encodes a string to base 64 string", "bleu": 0.16261701715194898, "rouge": 0.3315217391304348}, {"predict": "slide the slide panel", "true": "slide the panel to the desired direction", "bleu": 0.24002491458061356, "rouge": 0.5198863636363635}, {"predict": "add a initial drawer item or a drawer item array for the sticky drawer footer", "true": "add a initial drawer item or a drawer item array for the sticky drawer footer", "bleu": 1.0, "rouge": 1.0}, {"predict": "test whether the status of this tree is under 1", "true": "test whether to log ' debug ' at ' finest ' level", "bleu": 0.13583060054007276, "rouge": 0.1788856304985337}, {"predict": "sorts the specified sub - array of floats into ascending order", "true": "sorts the specified sub - array of integers into ascending order", "bleu": 0.7348889200874658, "rouge": 0.9090909090909091}, {"predict": "reset , remove ( ) method", "true": "resets the iterator to its initial state", "bleu": 0.15723447135049806, "rouge": 0.0}, {"predict": "returns the closest float approximation of the cosine of the argument", "true": "returns the closest float approximation of the sine of the argument", "bleu": 0.7348889200874658, "rouge": 0.9090909090909091}, {"predict": "render the full edge and creates a full edge", "true": "method to create an icon to represent the annotation and render it", "bleu": 0.12026590852507517, "rouge": 0.1856925418569254}, {"predict": "method to read data for byte array", "true": "method to extract the message from the st <unk> data", "bleu": 0.17112717058426782, "rouge": 0.34205607476635513}, {"predict": "an anonymous session that uses the specified prototype , as an additional name having this ' as an additional '", "true": "generates encoded session id string which uses the same extensions and tail part as prototype session id , but a different encrypted id", "bleu": 0.08552025507097748, "rouge": 0.22966867469879518}, {"predict": "compute a cardinal spline , a series of cubic be zi er splines smoothly connecting a set of points", "true": "compute a cardinal spline , a series of cubic be zi er splines smoothly connecting a set of points", "bleu": 1.0, "rouge": 1.0}, {"predict": ", original br ics implementation of de serialize r and de 1", "true": "de termini ze s the given automaton", "bleu": 0.10390302174233558, "rouge": 0.11050724637681159}, {"predict": "tests if the next characters on the queue match the sequence", "true": "tests if the next characters on the queue match the sequence", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the integration into a set of cache size - value pairs , b a stub array b - value", "true": "find a root in a <unk> interval", "bleu": 0.06760229884571738, "rouge": 0.1622340425531915}, {"predict": "compares two near sets", "true": "null safe comparison of comparable s", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "returns true if the device contains superuser", "true": "returns true if the device contains superuser", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds an expression to the expression", "true": "adds a new expression to the database", "bleu": 0.36798327352994814, "rouge": 0.6069651741293532}, {"predict": "track a motion scroll", "true": "track a motion scroll", "bleu": 1.0, "rouge": 1.0}, {"predict": "en queues a sync task", "true": "recursively synchronizes on the components in the provided iterator and executes the provided task if there are no more components", "bleu": 0.0135924714044228, "rouge": 0.07218934911242604}, {"predict": "find a component that is equal to this container", "true": "finds a component with the given name , works even with ui ' s that weren ' t created with the gui builder", "bleu": 0.04213040835076459, "rouge": 0.17378917378917377}, {"predict": "checks whether the class is a sample of the algorithm", "true": "tests if a template contains methods with signatures that are required by the filter object", "bleu": 0.08461586088475063, "rouge": 0.15443037974683543}, {"predict": "writes an float field value", "true": "writes an float field value", "bleu": 1.0, "rouge": 1.0}, {"predict": "extracts the keys and value pairs from the text", "true": "extracts the column keys from a string", "bleu": 0.21105340631872635, "rouge": 0.5115303983228512}, {"predict": "draws a internal frame using the background", "true": "draws a <unk> ( aka", "bleu": 0.24446151121745047, "rouge": 0.34366197183098596}, {"predict": "this method will convert and fill list of byte buffer to byte array", "true": "this method will convert and fill list of byte buffer to list of byte array", "bleu": 0.763681169879223, "rouge": 0.9167630057803468}, {"predict": "this class must be renamed , so that it must be included", "true": "try to create an instance of a named class", "bleu": 0.10390302174233558, "rouge": 0.09775641025641024}, {"predict": "the derived key function , the it h hash of the password and the salt", "true": "the derived key function , the it h hash of the password and the salt", "bleu": 1.0, "rouge": 1.0}, {"predict": "make sure that system", "true": "make sure that system", "bleu": 1.0, "rouge": 1.0}, {"predict": "show the components of the admin is using the admin volume ( de )", "true": "show the key guard", "bleu": 0.11633270842295028, "rouge": 0.2469635627530364}, {"predict": "returns the size of the passed in string", "true": "compute the width of the string using a font with the specified \" metrics \" ( sizes )", "bleu": 0.06870470052394348, "rouge": 0.28773584905660377}, {"predict": "check if the event currently received", "true": "checks whether the event ' s reported properties match its actual properties , e", "bleu": 0.07663173913867023, "rouge": 0.18654434250764526}, {"predict": "action to be changed to add the properties to the gui", "true": "the default action performed method for layer", "bleu": 0.12605968092174913, "rouge": 0.1157495256166983}, {"predict": "converts e local date time para string", "true": "convert e local date time para string no form a to dd / mm / yyyy", "bleu": 0.23246837589676872, "rouge": 0.4873501997336884}, {"predict": "creates a new data source metadata source metadata", "true": "store the full metadata for a druid data source , mainly as a list of segments", "bleu": 0.08821858171866302, "rouge": 0.23582474226804123}, {"predict": "create email from the specified value", "true": "returns email object with the specified value", "bleu": 0.36798327352994814, "rouge": 0.6069651741293532}, {"predict": "creates a new address lookup", "true": "creates a new instance of address lookup", "bleu": 0.40505769908942735, "rouge": 0.8090185676392573}, {"predict": "adds a change listener to the panel", "true": "adds a change listener to the panel", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new node for a single node", "true": "make an immutable node instance", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "creates a new cell with this row", "true": "creates a cell which takes a custom amount of cell spaces in the table", "bleu": 0.09663861439684919, "rouge": 0.2695139911634757}, {"predict": "method to initialize local and target local site info", "true": "initialize local and target info", "bleu": 0.4111336169005197, "rouge": 0.7530864197530864}, {"predict": "puts a new element into the dom document", "true": "puts a new element into the dom document", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct this object from one of the strings in the format \" list \" parameter", "true": "construct this object from one of the strings in the \" fm t list \" parameter", "bleu": 0.7088706579891837, "rouge": 0.8980021030494217}, {"predict": "tests whether some interval is equal to another interval", "true": "determine the matching test", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "absolute value of the url", "true": "converts a relative url e", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "adds task that should be queued", "true": "start the task , to be used when a task is queued", "bleu": 0.09663861439684919, "rouge": 0.31443298969072164}, {"predict": "load from the store", "true": "load from the store", "bleu": 1.0, "rouge": 1.0}, {"predict": "break a line instruction", "true": "access break point instruction at specified line number in set of instructions ( if valid )", "bleu": 0.021273367400149224, "rouge": 0.1804733727810651}, {"predict": "close the file , checking it ' s really flush", "true": "close p log file", "bleu": 0.13950796967929133, "rouge": 0.3096446700507614}, {"predict": "advance to the next token", "true": "advance to the next token", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the first consonant", "true": "parses the first consonant", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates and initializes the object , which will be displayed on the button , button , and start the display panel , button", "true": "creates a new buddy panel controller", "bleu": 0.05856458233275369, "rouge": 0.15423514538558786}, {"predict": "this method removes the \" edge of the edge of the edge", "true": "this method removes gaps from the graph", "bleu": 0.2044800736021839, "rouge": 0.44202898550724634}, {"predict": "return the passed in value as an unsigned byte array", "true": "return the passed in value as an unsigned byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes the given path in the r that has an identical file located in the database", "true": "call java c on to compile in input dir", "bleu": 0.07692375026049747, "rouge": 0.08425414364640883}, {"predict": "convenience method to park and then check if interrupted", "true": "convenience method to park and then check if interrupted", "bleu": 1.0, "rouge": 1.0}, {"predict": "edit edit operation with world edit", "true": "list the open cl implementations that contain at least one gpu device", "bleu": 0.06833381956448398, "rouge": 0.0}, {"predict": "used in chaining requests", "true": "this request will execute after the dependency completes", "bleu": 0.11115018927487523, "rouge": 0.0}, {"predict": "checks whether this object is a date", "true": "check whether this object is a date", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "converts xml to xml", "true": "converts config to xml ,", "bleu": 0.39573418216703893, "rouge": 0.6535714285714286}, {"predict": "builds the internal list of the vertices", "true": "build the convex quadrilateral with the found corner points ( with min / max x / y coordinates )", "bleu": 0.03702100183468252, "rouge": 0.14202561117578577}, {"predict": "heap if y - up method for 2 - ary heap", "true": "heap if y - up method for 2 - ary heap", "bleu": 1.0, "rouge": 1.0}, {"predict": "branches are initially compressed , needing one node per key plus the size of the string key", "true": "branches are initially compressed , needing one node per key plus the size of the string key", "bleu": 1.0, "rouge": 1.0}, {"predict": "unlocks to allow both puts and takes", "true": "unlock to allow both puts and takes", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "checks if file is subtitle format", "true": "test if file is subtitle format", "bleu": 0.8091067115702212, "rouge": 0.8333333333333334}, {"predict": "write the constant to the output stream", "true": "write the constant to the output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "given the source properties , initialize it", "true": "initializes the properties to be used by open am", "bleu": 0.15447878876032708, "rouge": 0.24448897795591182}, {"predict": "add a network listener", "true": "register a network listener", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "appends content prefix", "true": "appends content prefix to buffer", "bleu": 0.513417119032592, "rouge": 0.7176470588235294}, {"predict": "add an error listener", "true": "add an error listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates that the class name is fully valid", "true": "do some basic checks to make sure the string representation is valid", "bleu": 0.11567041937737582, "rouge": 0.28955696202531644}, {"predict": "imports the base type of the mysql", "true": "imports the base types", "bleu": 0.345720784641941, "rouge": 0.5736677115987461}, {"predict": "builds the matrix ( old ) from the given dom node", "true": "builds the matrix ( old ) from the given dom node", "bleu": 1.0, "rouge": 1.0}, {"predict": "record file system event and audit", "true": "record filesystem related event and audit", "bleu": 0.4347208719449915, "rouge": 0.6666666666666666}, {"predict": "creates a core token service exception", "true": "creates a core token service exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d examine ssl frame dialog", "true": "creates new d examine ssl dialog", "bleu": 0.48549177170732344, "rouge": 0.8798076923076923}, {"predict": "computes the dynamic vm arguments for a java project", "true": "dynamic vm arg s common to both compute jun it dynamic <unk> rg s as list and compute compile dynamic <unk> rg s as list", "bleu": 0.03139432136293537, "rouge": 0.10844444444444444}, {"predict": "normalizes a number by a character", "true": "normalizes a string of characters representing a phone number", "bleu": 0.20034704329441452, "rouge": 0.3860759493670886}, {"predict": "skips to the bytes in the specified position", "true": "skip to the i - th point in the so bol sequence", "bleu": 0.16096450823426717, "rouge": 0.3860759493670886}, {"predict": "removes the configuration from the directory", "true": "deletes the organization ' s group configuration data", "bleu": 0.17516432701748888, "rouge": 0.2785388127853881}, {"predict": "removes a group listener", "true": "remove a group listener", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "produces a plain set : produces a set of doc keys", "true": "the change log mapping message is used to store change log partition information for a given task name", "bleu": 0.06028151701176621, "rouge": 0.06608884073672805}, {"predict": "extracts the key value for the specified key", "true": "given a filename , the un escape method returns the key which originated it", "bleu": 0.10712878727413526, "rouge": 0.25994318181818177}, {"predict": "determine the space between the first two fingers", "true": "returns the distance between two pointer touch points", "bleu": 0.19070828081828378, "rouge": 0.375}, {"predict": "maps a string map to a map", "true": "transforms all the strings key / value pairs in the original map to the given class key / value pairs and adds them to the given resulting map", "bleu": 0.013078614250991381, "rouge": 0.15469146238377007}, {"predict": "validate the button with the button", "true": "we should always grab both keyboard and pointer to control event flow on popups", "bleu": 0.048963321289052536, "rouge": 0.0}, {"predict": "create an empty component manager , with an seed sequence set seed", "true": "create a component manager , initially populated with the given sequences , which are considered seed sequences", "bleu": 0.14663139543109924, "rouge": 0.4013157894736842}, {"predict": "removes all observers from the list of observers", "true": "removes all observers from the list of observers", "bleu": 1.0, "rouge": 1.0}, {"predict": "merge a byte array as a byte array and return as a byte array", "true": "un synchronize an array of bytes , this should only be called if the decision has already been made to un synchronize the byte array in order to prevent a media player from <unk> interpreting the contents of a tag , all $ ff bytes followed by a", "bleu": 0.012675960152981811, "rouge": 0.11742059672762271}, {"predict": "calculates the general session key", "true": "determine what the general encryption key is , given a configuration", "bleu": 0.11629030063732083, "rouge": 0.35124760076775424}, {"predict": "creates a new message", "true": "builds a new message capture", "bleu": 0.5208154731870476, "rouge": 0.6535714285714286}, {"predict": "convenience method unzipping zip name into byte array", "true": "returns an g <unk> copy of the input array", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "insert a combo box with the specified item", "true": "insert the given item into the combo box , and set it as first selected item", "bleu": 0.09233266757408672, "rouge": 0.31443298969072164}, {"predict": "in the standard co routine architecture , co routines are identified by their method names and are launched and run up to their first yield by simply resuming them ; its ' s presumed that this recognizes the not - already - running case and does the right", "true": "in the standard co routine architecture , co routines are identified by their method names and are launched and run up to their first yield by simply resuming them ; its ' s presumed that this recognizes the not - already - running case and does the right", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks to see if a python error has been in a python error", "true": "checks if there is a syntax error or an exception", "bleu": 0.12011055432195765, "rouge": 0.3562043795620438}, {"predict": "encodes the number as a json string", "true": "encodes the number as a json string", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a map from a name / value pair string", "true": "creates a map from a name / value pair string", "bleu": 1.0, "rouge": 1.0}, {"predict": "stress test with the application value of a 3 ( ) and rotated into the application", "true": "a stress test for truth maintenance using an arbitrary data set", "bleu": 0.10878661088699644, "rouge": 0.15326633165829145}, {"predict": "returns an un modifiable set of the keys contained in this map", "true": "the item keys contained in the map", "bleu": 0.21401603033752975, "rouge": 0.552536231884058}, {"predict": "upload a 3 d buffer", "true": "called when the playback service starts", "bleu": 0.18796001821050234, "rouge": 0.0}, {"predict": "create a new instance", "true": "construct a new instance", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "creates a new native runner", "true": "pass it the location of the launcher file", "bleu": 0.1259933680597235, "rouge": 0.0}, {"predict": "create a string at the given height", "true": "returns a string that may be used to indent a dump of the nodes in the tree", "bleu": 0.06295416788379052, "rouge": 0.23252858958068615}, {"predict": "reduce calendar around a calendar with specific calendar instance", "true": "sets the supplied calendar object with 0 values for fields lower than days", "bleu": 0.10015045110931886, "rouge": 0.17604617604617603}, {"predict": "creates a new string with a suffix", "true": "surrounds the string with provided prefix and suffix if such missing from string", "bleu": 0.1114789227233716, "rouge": 0.2846034214618974}, {"predict": "finds a potential point between a list of points", "true": "finds a point in a list of points which is not contained in another list of points", "bleu": 0.19204616400673585, "rouge": 0.5101553166069295}, {"predict": "pad or trim the given string to the given length", "true": "trims or pads this string , so it has this exact length", "bleu": 0.12273680279953825, "rouge": 0.2683284457478006}, {"predict": "schedule a time into a timer using default values from the language and time out", "true": "schedule this cu <unk> to be run , based on the state of the session", "bleu": 0.09103526405546068, "rouge": 0.1333333333333333}, {"predict": "we call this to guarantee that we fetch a fresh policy from the server", "true": "we call this to guarantee that we fetch a fresh policy from the server", "bleu": 1.0, "rouge": 1.0}, {"predict": "decrypt bytes previously encrypted with the same key", "true": "decrypt an encapsulated session key", "bleu": 0.17747405280050269, "rouge": 0.32105263157894737}, {"predict": "log the operating system info", "true": "log system informations to the log file this have no effect on the software it ' s here for logging purpose", "bleu": 0.013234179795826943, "rouge": 0.13847900113507378}, {"predict": "inserts any necessary separators and whitespace before a literal value , inline array , or inline object", "true": "inserts any necessary separators and whitespace before a literal value , inline array , or inline object", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a salted pb kdf 2 hash of the input", "true": "created sha 256 of input", "bleu": 0.13950796967929133, "rouge": 0.2837209302325582}, {"predict": "generates the transport zone gui d format as transport", "true": "the format of this native gui d is transport type + device type + fabric ww n", "bleu": 0.09081302407530907, "rouge": 0.29151732377538825}, {"predict": "tests whether a ser v let with the web file is correctly recognized by the root file", "true": "tests whether a single ser v let can be added using the method that takes a string for the ser v let name and a string for the jsp file", "bleu": 0.09895371482896927, "rouge": 0.36478405315614615}, {"predict": "objects are considered equal if they have the same value as this objects", "true": "indicates whether some other object is \" equal to \" the value", "bleu": 0.1135935489027116, "rouge": 0.2417437252311757}, {"predict": "debug exception for logging status debug", "true": "error level debug message", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "removes a listener from this transaction", "true": "removed an event listener from this transaction", "bleu": 0.5204069361525009, "rouge": 0.6069651741293532}, {"predict": "gets new execution system", "true": "creates a new execution system for the specified uri", "bleu": 0.19159730522949137, "rouge": 0.43160377358490565}, {"predict": "checks if is a command is a command type that is a command type", "true": "return true if the given type refers to a command , false otherwise", "bleu": 0.13217947626377288, "rouge": 0.2982885085574572}, {"predict": "send a report report", "true": "en queues the provided report to be sent by the reporting thread", "bleu": 0.04862652376060361, "rouge": 0.11466165413533834}, {"predict": "sets that the ends", "true": "equivalent to string", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "determines the number of consecutive characters that are en cod able using numeric compaction", "true": "determines the number of consecutive characters that are en cod able using numeric compaction", "bleu": 1.0, "rouge": 1.0}, {"predict": "test that types with range is consistent with expected types", "true": "check types ordered by data type", "bleu": 0.12605968092174913, "rouge": 0.13090128755364808}, {"predict": "determines the height of this view", "true": "determines the height of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "handle a mouse mouse listener mouse listener", "true": "handle a mouse clicked mouse listener event", "bleu": 0.4111336169005197, "rouge": 0.7142857142857143}, {"predict": "formats the given array of sql strings into a single string", "true": "formats an array of values as a sql values like ( ' value 1 ' , ' value 2 ' ,", "bleu": 0.07182539713902784, "rouge": 0.23666343355965083}, {"predict": "emit a class including the \" archive \"", "true": "appends a class or interface", "bleu": 0.21105340631872638, "rouge": 0.32105263157894737}, {"predict": "draws the value of the top edge border around the content area", "true": "draws the top edge of the border around the content area", "bleu": 0.5543058126156657, "rouge": 0.7887931034482759}, {"predict": "analyze result files and write all the items to the supplied output directory", "true": "analyzes all iterations in terms of route choice and travel time", "bleu": 0.10571070857151538, "rouge": 0.08460471567267684}, {"predict": "executes a sql update", "true": "execute a sql insert , update or delete statement", "bleu": 0.14558246978804804, "rouge": 0.43160377358490565}, {"predict": "returns the current thread ' s current thread", "true": "returns milliseconds running in the current thread", "bleu": 0.3155984539112945, "rouge": 0.5398230088495575}, {"predict": "creates a new entry entry from the provided lines of ld if", "true": "builds an entry from the provided lines of ld if", "bleu": 0.6479121525090147, "rouge": 0.7393939393939394}, {"predict": "removes all parser highlights", "true": "removes all parser highlights", "bleu": 1.0, "rouge": 1.0}, {"predict": "read short , 16 - bits", "true": "read short , 16 - bits", "bleu": 1.0, "rouge": 1.0}, {"predict": "format a long into a byte array", "true": "format an in t into an existing array", "bleu": 0.19148978368719022, "rouge": 0.3952483801295896}, {"predict": "appends the characters of the character array of normal chars within the internal buffer handle part of the given character", "true": "method to a ppen nd a char r array to the buffer", "bleu": 0.07264339766175722, "rouge": 0.1963519313304721}, {"predict": "checks to see if this user has read permission on the specified order", "true": "checks to see if this user has read permission on the specified order", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if this model is a child annotation", "true": "sees if the class under test is actually an annotation", "bleu": 0.15019394384099988, "rouge": 0.31282051282051276}, {"predict": "compares the specified block wise operation", "true": "compare the in scope exception handlers of two blocks", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "returns a hash code for this principal", "true": "this is basically the hash code for the field name", "bleu": 0.23813694985189848, "rouge": 0.34205607476635513}, {"predict": "computes checksum in the h 2 checksum", "true": "this value is good for naming the cache file", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "returns true if for a long label is included", "true": "returns true if long labels are uses in the indicator display", "bleu": 0.22241434515868952, "rouge": 0.3929146537842191}, {"predict": "creates a secret block from a path having additional information", "true": "constructs a single secret block ( tile which generates one - ups in original game , but \" yo lo \" image in this game )", "bleu": 0.03599316441982193, "rouge": 0.1543001686340641}, {"predict": "open a data connection by the server", "true": "opens a data connection with the server according to the set mode ( active or passive ) then send the command passed as an argument", "bleu": 0.031421415796791634, "rouge": 0.2837209302325582}, {"predict": "install package normal by system intent", "true": "install package normal by system intent", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates insert list item", "true": "recursive helper method for create insert list", "bleu": 0.22336835181428535, "rouge": 0.346590909090909}, {"predict": "read a outline file and return the id of a record in a separate file , and places the current name in a separate field gets process", "true": "read the outline data", "bleu": 0.053414136238197775, "rouge": 0.14896214896214896}, {"predict": "decodes the length of a run n", "true": "more of less the opposite of the encoding function but just for getting out run lengths", "bleu": 0.06106734767839363, "rouge": 0.2436750998668442}, {"predict": "reads the contents of an input stream into a byte", "true": "reads the contents of an input stream into a byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns whether the handshake phase has is completed", "true": "returns whether the handshake phase has is completed", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new no constraint constraint", "true": "constructs a not - equal - value global parameter constraint", "bleu": 0.1255107248036171, "rouge": 0.23921568627450981}, {"predict": "inflate a single overlay from overlay configuration string according to the syntax spec", "true": "inflate a single overlay from overlay configuration string according to the syntax spec", "bleu": 1.0, "rouge": 1.0}, {"predict": "the other party has breached the contract and submitted an old channel transaction", "true": "the other party has breached the contract and submitted an old channel transaction", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct fancy loader , grabbing a reference to the dex file class if we ' re running under dal vi k", "true": "construct fancy loader , grabbing a reference to the dex file class if we ' re running under dal vi k", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if a source file is modified", "true": "how to keep track of all the modified times across the paths", "bleu": 0.09726684100532913, "rouge": 0.09651898734177215}, {"predict": "performs the native flip operation for the given buffer", "true": "flipping moves the contents of the back buffer to the front buffer , either by copying or by moving the video pointer", "bleu": 0.03959069375880177, "rouge": 0.1799410029498525}, {"predict": "load value from property string value", "true": "load value from property string value", "bleu": 1.0, "rouge": 1.0}, {"predict": "recursive recursive routine to iterate through all namespaces nodes that are met", "true": "returns a list of all namespaces below an element ( recursive )", "bleu": 0.14694106251955755, "rouge": 0.16666666666666666}, {"predict": "draws a hook with an angle that may make the chart be drawn on the print", "true": "there is some bug and it ' s not perfect", "bleu": 0.06468490584192432, "rouge": 0.0}, {"predict": "compress the bitmap to the byte array as the specified format and quality", "true": "compress the bitmap to the byte array as the specified format and quality", "bleu": 1.0, "rouge": 1.0}, {"predict": "see if the user hits on the cancel button , and the status of the event was selected", "true": "method to handle continue button in diagnostic frame", "bleu": 0.06809398432036522, "rouge": 0.08265582655826557}, {"predict": "flush object type data", "true": "wait for data in the buffer to be sent", "bleu": 0.10294235160901445, "rouge": 0.14386792452830188}, {"predict": "resets the cached cache", "true": "resets the drawer and its caches", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "copy a source directory to another destination", "true": "copy an entire directory from one location to another", "bleu": 0.20873176328735715, "rouge": 0.48897795591182364}, {"predict": "creates a new journal that omits redundant information", "true": "creates a new journal that omits redundant information", "bleu": 1.0, "rouge": 1.0}, {"predict": "record log data by recording info", "true": "save log data to file", "bleu": 0.2907153684841096, "rouge": 0.3696969696969697}, {"predict": "loads the rewrites from an uri using an preferred command", "true": "loads the rewrites from tab - separated values", "bleu": 0.35084396956386854, "rouge": 0.4535315985130111}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the connection to the peer", "true": "called by reader thread on reader end of file", "bleu": 0.1126634218241493, "rouge": 0.0}, {"predict": "creates reduce rs for this node", "true": "create plan for reduce rs", "bleu": 0.31239399369202553, "rouge": 0.3696969696969697}, {"predict": "sends the http request", "true": "invoked when an http request is received", "bleu": 0.22336835181428535, "rouge": 0.346590909090909}, {"predict": "create a negative number from an array of bytes", "true": "create a negative number from an array of bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "formats the given double value", "true": "formats the given double values", "bleu": 0.7598356856515925, "rouge": 0.8}, {"predict": "remove the positions in the list", "true": "removes all elements at the specified positions in the list", "bleu": 0.3303628065217446, "rouge": 0.5980392156862745}, {"predict": "resets the bounds to the map size", "true": "<unk> the boundaries of the shape which is drawn as the rubber band", "bleu": 0.08723697147876523, "rouge": 0.1897356143079316}, {"predict": "create a # rr gg bb output for a # rr gg bb", "true": "attempt to parse string as a colour", "bleu": 0.09552040806823771, "rouge": 0.10571923743500866}, {"predict": "removes the \" optimal \" optimal \" from the given position", "true": "return a list of all moves in move list that are not known to be non - optimal", "bleu": 0.06028151701176621, "rouge": 0.06608884073672805}, {"predict": "returns the effective numerical matrix rank , which is the number of non negligible singular values", "true": "effective numerical matrix rank", "bleu": 0.2140909265975804, "rouge": 0.4485294117647059}, {"predict": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "true": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes one variable in the given object based on the given object", "true": "picks a random modifiable variable and executes a random modification on this variable", "bleu": 0.11368272367804307, "rouge": 0.15885416666666669}, {"predict": "save string into file", "true": "saves the content to a file", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "delete the old temp file", "true": "deletes temporary files listed in the file", "bleu": 0.20252884954471367, "rouge": 0.32360742705570295}, {"predict": "proposes a node that is assumed to be processed to the tree", "true": "warning : assumes strictly bifurcating tree", "bleu": 0.10390302174233558, "rouge": 0.1182170542635659}, {"predict": "flushes this un isolated connection", "true": "flush the statement buffers to the indices without committing", "bleu": 0.1031546451143688, "rouge": 0.0}, {"predict": "converts this image to a jpeg image", "true": "convert data stream to s rgb image", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "performs the post processing", "true": "de spawn visible object , object will become invisible and object position will become invalid", "bleu": 0.01931500670555844, "rouge": 0.0}, {"predict": "get the m qt t topic for an device event", "true": "get the m qt t topic for an device event", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the result of the last matching operation", "true": "returns the result of the last matching operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "copy project constraint - creates the new project constraint", "true": "copy constraints from the exported project", "bleu": 0.16784459625186196, "rouge": 0.4149659863945578}, {"predict": "computes the value of ssl v 3 pseudo random function", "true": "computes the value of ssl v 3 pseudo random function", "bleu": 1.0, "rouge": 1.0}, {"predict": "decodes a url safe string into its original form using the default string char set", "true": "decodes a url safe string into its original form using the default string char set", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies the specified target to the right", "true": "create an operation to copy from the original clipboard to the given extent", "bleu": 0.1114789227233716, "rouge": 0.2846034214618974}, {"predict": "request a class loader", "true": "return the class in the local vm that this version is mapped to", "bleu": 0.037870374782798366, "rouge": 0.1073943661971831}, {"predict": "style a path of text", "true": "set the path style ( if any ) stroke - dash array = \" n 1 , n 2 ,", "bleu": 0.01504254234731835, "rouge": 0.07218934911242604}, {"predict": "convert a color to an angle", "true": "convert a color to an angle", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse the length of two d atom scoped size", "true": "parses an encoded compound size and sets the size fields", "bleu": 0.1397712139461423, "rouge": 0.20854700854700853}, {"predict": "encodes an encoded query parameter using utf - 8 and adds it to this url ' s query string", "true": "adds the pre - encoded query parameter to this url ' s query string", "bleu": 0.43319877589068106, "rouge": 0.6230847803881513}, {"predict": "create image link for execution , id of button in client", "true": "create image with name , id of button name and set p command onclick", "bleu": 0.27759188366995746, "rouge": 0.4698331193838254}, {"predict": "constructs a namespace declaration with the specified namespace and value", "true": "creates a new namespace object", "bleu": 0.13950796967929133, "rouge": 0.2837209302325582}, {"predict": "atomic ally decrements by one the current value", "true": "atomic ally decrements by one the current value", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the bubble in the bubble", "true": "update position of bubble", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "insert the list of elements", "true": "remove all elements on this list", "bleu": 0.24736929544091937, "rouge": 0.1788856304985337}, {"predict": "locks to prevent both puts and takes", "true": "locks to prevent both puts and takes", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears the cache", "true": "clears the cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the publication date as the last media of the g publication date", "true": "set the podcast ' s publication date to the episode ' s if it is more recent", "bleu": 0.10500490802103207, "rouge": 0.26040554962646745}, {"predict": "remove control ' s ui control for the specified ui control", "true": "use our ui delegate for the specified ui control type", "bleu": 0.43361890903486755, "rouge": 0.5763779527559055}, {"predict": "performs a single join of this query , using a single result of the specified database", "true": "get ( or create ) a pre computed kn n query for the database", "bleu": 0.09672649511413092, "rouge": 0.26991150442477874}, {"predict": "internal method to handle the position of the items in the list to accommodate for the position and returning the position of items corresponding to the positions", "true": "internal method to handle the selections if items are added / removed", "bleu": 0.17098323692758394, "rouge": 0.3306233062330623}, {"predict": "appends the given id to the given buffer , followed by \" \\ \\ \\ e \" , \" \\ n \"", "true": "appends the given id to the given buffer , followed by \" \\ \\ e \"", "bleu": 0.706807138440616, "rouge": 0.866785079928952}, {"predict": "creates a new available migration with this version", "true": "creates a new available migration with this version", "bleu": 1.0, "rouge": 1.0}, {"predict": "receive notification of a comment", "true": "receive notification of a comment", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws an image , applying a transform from image space into user space , y space and optionally a solid background color space", "true": "draw an image , applying a transform from image space into user space before drawing", "bleu": 0.5093121744590026, "rouge": 0.6565022421524663}, {"predict": "displays edit button of the url", "true": "sets the agent title and populates the agent and agent group action table", "bleu": 0.06878769894132081, "rouge": 0.09870550161812298}, {"predict": "select all the elements of the list", "true": "selects all item types", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "at - the node builder", "true": "add raw name value pair", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "return the number of objects in this set", "true": "returns the set length", "bleu": 0.17747405280050269, "rouge": 0.3546511627906977}, {"predict": "like data input stream", "true": "like data input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensure that given cart object was changed , so that it has not come from the most other cart", "true": "common address book function", "bleu": 0.05415315253510895, "rouge": 0.0}, {"predict": "adds a pause listener to the set of listeners that are sent events through the life of an animation , such as start , and end", "true": "adds a pause listener to this animator", "bleu": 0.17098323692758396, "rouge": 0.33813747228381374}, {"predict": "makes the object immutable", "true": "makes the object immutable", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the batch finished cluster by applying the current cluster er", "true": "<unk> that this batch of input to the filter is finished", "bleu": 0.1354599427337814, "rouge": 0.18181818181818182}, {"predict": "add a component to the identifier", "true": "adds a component to the composite", "bleu": 0.6147881529512643, "rouge": 0.6666666666666666}, {"predict": "opens the given url in the user", "true": "launch url in a new window", "bleu": 0.24446151121745047, "rouge": 0.31202046035805625}, {"predict": "marks a line as needing a repaint", "true": "marks a line as needing a repaint", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a byte banded raster with the given sample model", "true": "constructs a byte banded raster with the given sample model", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize all fields of this uri from another uri", "true": "initialize all fields of this uri from another uri", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets up this animator set to play all of the supplied animations at the same time", "true": "sets up this animator set to play all of the supplied animations at the same time", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes and returns last element , or null if empty", "true": "removes and returns last element , or null if empty", "bleu": 1.0, "rouge": 1.0}, {"predict": "return true if the notification is registered in the notification type", "true": "verifies a refresh notification for the specified client mbe an", "bleu": 0.12605968092174913, "rouge": 0.1921259842519685}, {"predict": "read process output from spec i fired url", "true": "reads process output line - by - line", "bleu": 0.21105340631872638, "rouge": 0.25}, {"predict": "fills the header and footer in the header with the information", "true": "fills header and footer", "bleu": 0.22416933501922287, "rouge": 0.5823389021479713}, {"predict": "add an operand to this phi instruction", "true": "adds an operand at the end of the current operands list", "bleu": 0.1380518455178974, "rouge": 0.2136602451838879}, {"predict": "decodes ' - escaped octets in the given base 64 string using the rules specified", "true": "decodes characters of a string that are percent - encoded octets using utf - 8 decoding ( if needed )", "bleu": 0.07757152471914057, "rouge": 0.22283105022831046}, {"predict": "this method calculates each total events that are to be used in the csv list", "true": "called to calculate the total receipt amount i , e the amount which has been paid for the bill from the bill receipt info the amount will be calculated", "bleu": 0.04067525902115805, "rouge": 0.08597603946441157}, {"predict": "this skips count the specified number of bytes , starting at the specified offset , and increases the count of the specified amount of bytes", "true": "discards the specified number of bytes", "bleu": 0.17797644045771208, "rouge": 0.3626634958382878}, {"predict": "unit test for concurrent modification resulting from insert ( ) and remove ( ) including ( a ) where the tuple is the index must be the insert ( ) where the index is the leaf with the leaf with the same for the same index is the", "true": "unit test for concurrent modification resulting from insert ( ) and remove ( )", "bleu": 0.28331053324249966, "rouge": 0.5011737089201879}, {"predict": "removes all ims from this user", "true": "removes all im ' s from this user", "bleu": 0.35032865403497776, "rouge": 0.6963470319634703}, {"predict": "escapes a string for use in ascii property lists", "true": "escapes a string for use in ascii property lists", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies the content by converting a reader into a char set", "true": "set the content by copying characters from the given reader and converting them into bytes using the specified encoding", "bleu": 0.12183039909635145, "rouge": 0.3180396246089677}, {"predict": "clear the dictionary cache", "true": "this method will clear the dictionary access count so that any unused column can be removed from the cache", "bleu": 0.016629557573005865, "rouge": 0.3112244897959183}, {"predict": "generates a string representation of the array of arguments", "true": "a helper method to format the arguments types as a comma - separated list", "bleu": 0.09630141125179911, "rouge": 0.2510288065843621}, {"predict": "rename existing file", "true": "renames a file in the underlying file system", "bleu": 0.10148002183214462, "rouge": 0.1680440771349862}, {"predict": "executes the run n able in the future", "true": "executes the given command , returning a future to indicate its status and allow ( interrupt i ble ) cancellation", "bleu": 0.050604055944008755, "rouge": 0.19891304347826086}, {"predict": "a set of kind name ( s ) representing a set of symbol ' s kinds", "true": "a set of kind name ( s ) representing a set of symbol ' s kinds", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the length of the text", "true": "ret runs the length of the text", "bleu": 0.6848940448305334, "rouge": 0.7587064676616916}, {"predict": "this method serializes the given map of parameters to a map", "true": "serialize a parameter map into a digest response", "bleu": 0.12605968092174913, "rouge": 0.216696269982238}, {"predict": "collect together the languages supported by the given services and call back once done", "true": "collect together the languages supported by the given services and call back once done", "bleu": 1.0, "rouge": 1.0}, {"predict": "create an encoding for the given media type", "true": "helper method to use for determining desired output encoding", "bleu": 0.15662030188557857, "rouge": 0.116412213740458}, {"predict": "converts a java buffered image to a buffered image", "true": "converts the given image into a format for quick upload to the gpu", "bleu": 0.11379288211086455, "rouge": 0.26406926406926406}, {"predict": "starts the timer", "true": "start the stop watch", "bleu": 0.38498150077635496, "rouge": 0.2785388127853881}, {"predict": "go to the next view using the animator passed in", "true": "go to the next view", "bleu": 0.4617366309441026, "rouge": 0.7093023255813954}, {"predict": "dmitri ilyin : makes sure if the string is hh encoded sign", "true": "dmitri ilyin : makes sure if the string is hh encoded sign", "bleu": 1.0, "rouge": 1.0}, {"predict": "implements the abstract method simulate method", "true": "implements the abstract method simulate method", "bleu": 1.0, "rouge": 1.0}, {"predict": "cache native test that will be used for the given method", "true": "cache a resolved ( possibly overloaded ) method based on the argument types used to invoke it , subject to class loader change", "bleu": 0.048113017180523, "rouge": 0.11060743427017225}, {"predict": "set bit ( in t n ) the leftmost bit in a positive number", "true": "set bit ( in t n ) the leftmost bit in a positive number", "bleu": 1.0, "rouge": 1.0}, {"predict": "destroy the build beans that will be started on a map", "true": "destroy the view scoped beans for the given view and context map", "bleu": 0.15553014371537452, "rouge": 0.34512022630834516}, {"predict": "closes an output stream", "true": "close given output stream , ignoring any resulting exception", "bleu": 0.1354797537848421, "rouge": 0.28773584905660377}, {"predict": "returns the node at the specified index in the list", "true": "retrieve an item from the map by 0 - based index", "bleu": 0.12623203108004888, "rouge": 0.18885448916408668}, {"predict": "returns the position of the text character", "true": "allows to answer how much width requires given char to be represented on a screen", "bleu": 0.04981224652850501, "rouge": 0.0}, {"predict": "create a directory if it does not exist", "true": "create directory if not already exists", "bleu": 0.239802967618271, "rouge": 0.5865384615384615}, {"predict": "create an encoder using the given base timestamp", "true": "create an encoder using the given timestamp as its base", "bleu": 0.6020559761878472, "rouge": 0.7624999999999998}, {"predict": "returns a string that represents the latitude / longitude between the given coordinates", "true": "encodes a sequence of lat lng s into an encoded path string", "bleu": 0.10571070857151538, "rouge": 0.16116248348745044}, {"predict": "extract the weight values of this synapse type", "true": "extracts weight values and <unk> them by synapse type ( inhibitory or ex c it a tory )", "bleu": 0.07603424986827345, "rouge": 0.28773584905660377}, {"predict": "flushes the table and close the resources", "true": "flush any buffered messages and close the current output stream", "bleu": 0.22521602211604308, "rouge": 0.34205607476635513}, {"predict": "check if the key store contains the given set of integers", "true": "check if the filter contains data with pre computed hashes", "bleu": 0.22416933501922287, "rouge": 0.384251968503937}, {"predict": "ensures that the buffer ' s data can hold at least the additional bytes", "true": "ensure that there are additional data bytes available in the buffer", "bleu": 0.1437791910008819, "rouge": 0.24530831099195713}, {"predict": "returns true if the given phone number is a valid number", "true": "tests whether a phone number matches a valid pattern", "bleu": 0.18850319022747347, "rouge": 0.4073455759599332}, {"predict": "trim a uri to a uri , if it exists or before removing null trailing \"", "true": "trim the url , by removing an extra ' / ' at the end of the url and also make it lowercase", "bleu": 0.06647908306696954, "rouge": 0.1535234899328859}, {"predict": "gets the set of set the set as set", "true": "returns the next element in the iteration", "bleu": 0.15619699684601276, "rouge": 0.2557651991614256}, {"predict": "add alpha parameter to a string", "true": "adds alpha to a hex color", "bleu": 0.31239399369202553, "rouge": 0.5}, {"predict": "stop the udp server", "true": "stop the web server", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "parses , validates and computes normalized version of g year object", "true": "parses , validates and computes normalized version of duration object", "bleu": 0.7292571723872933, "rouge": 0.8645669291338582}, {"predict": "copies the local state into the specified local state", "true": "save a shallow copy of the given local variable state into this", "bleu": 0.15122637383061946, "rouge": 0.3713850837138508}, {"predict": "load database objects from database", "true": "load objects defined in the database", "bleu": 0.2658156069371863, "rouge": 0.5366568914956013}, {"predict": "create an instance of text from the digest instance", "true": "attempts to read a response to this operation by reading it from the given connection , and returning it", "bleu": 0.061147788414399246, "rouge": 0.1342134213421342}, {"predict": "adds element to this queue , waiting for any pending elements in the queue", "true": "add method which also set whether there is a next value", "bleu": 0.07432998184513635, "rouge": 0.0}, {"predict": "inserts the specified part at the specified position", "true": "inserts the specified part at the specified position", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts the value into this builder", "true": "inserts the value into this builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the nature is nature and the current nature , or false if the current nature is set the maximum", "true": "check if this painter has the given nature an weapon", "bleu": 0.06586656967644004, "rouge": 0.20109890109890108}, {"predict": "dump storage info to storage", "true": "callers should have already verified that debug output is enabled", "bleu": 0.08445588027797912, "rouge": 0.0}, {"predict": "main deletion method", "true": "returns node holding key or null if no such , clearing out any deleted nodes seen along the way", "bleu": 0.002181272643877112, "rouge": 0.0}, {"predict": "parses the generic values in the specified state , using the sort fields", "true": "decodes a list of request into the corresponding sort", "bleu": 0.10571070857151538, "rouge": 0.18798151001540828}, {"predict": "finds a conversion of the provided type", "true": "returns conversion for converting value of source to target , or returns null if there ' s no such conversion", "bleu": 0.032092688317097204, "rouge": 0.1363128491620112}, {"predict": "advances the api to the latest time tree that is > = min time and < = max time", "true": "moves api to the latest value before time", "bleu": 0.18759202316167212, "rouge": 0.399737876802097}, {"predict": "this method calls proc update user roles and updates the values of the database", "true": "this method calls proc update user roles and updates the values", "bleu": 0.7760114635728618, "rouge": 0.8994638069705092}, {"predict": "forges and sends the options request", "true": "forges and sends the options request", "bleu": 1.0, "rouge": 1.0}, {"predict": "stress test operation with the completion of test property and tests with those error messages", "true": "setup and run a test", "bleu": 0.09103526405546068, "rouge": 0.10990990990990988}, {"predict": "prints the thread contention information", "true": "print all of the thread ' s information and stack traces", "bleu": 0.11629030063732083, "rouge": 0.35124760076775424}, {"predict": "adds the given resource to the list of resources to be deleted", "true": "adds the given resource to the list of resources to be deleted", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the maximum of two values", "true": "compute the maximum of two values", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds another image container to the list of those interested in the results of the request", "true": "adds another image container to the list of those interested in the results of the request", "bleu": 1.0, "rouge": 1.0}, {"predict": "calls the super method and writes the the the kn n distance of the specified stream", "true": "calls the super method and writes the polynomial approximation of the kn n distances of this entry to the specified stream", "bleu": 0.4359322999636333, "rouge": 0.7387543252595155}, {"predict": "add a method to the chain of methods after the dot , indicating the this segment is a property and does not need to the chain", "true": "add a method to the chain of methods after the dot", "bleu": 0.40980949787910764, "rouge": 0.6414913957934991}, {"predict": "returns the request to load the request", "true": "get the current request , which is specific to the current thread", "bleu": 0.11434175042957104, "rouge": 0.40197693574958815}, {"predict": "returns a salted pb kdf 2 hash of the password", "true": "returns a salted pb kdf 2 hash of the password", "bleu": 1.0, "rouge": 1.0}, {"predict": "schedule one of the commercial time", "true": "schedules a commercial of the given length to be run after the delay currently set in the delay input field", "bleu": 0.030293460317336256, "rouge": 0.14022988505747128}, {"predict": "calculates the hash code the exact bits of this affine transformation", "true": "returns the hash code for this transform", "bleu": 0.22416933501922287, "rouge": 0.4629981024667932}, {"predict": "the actual close message this class", "true": "the actual unsubscribe method exposed by this class", "bleu": 0.2619317629190374, "rouge": 0.5570776255707762}, {"predict": "determine if the digital unix has digital unix unix", "true": "is operating system digital unix ?", "bleu": 0.18575057999133596, "rouge": 0.27664399092970515}, {"predict": "client requests to connect to the client", "true": "called when the client has disconnected", "bleu": 0.24446151121745047, "rouge": 0.31202046035805625}, {"predict": "determines whether a new compound name is a suffix of this compound name", "true": "determines whether a compound name is a suffix of this compound name", "bleu": 0.7825422900366437, "rouge": 0.9669749009247028}, {"predict": "calculates total height to occupy based on several parameters", "true": "calculates total height to occupy based on several parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the argument is a syntactically valid regular expression with the given string", "true": "this method is a copy of regex util", "bleu": 0.1082597837309053, "rouge": 0.18401206636500753}, {"predict": "used to check whether there is a specialized handler for a given intent", "true": "used to check whether there is a specialized handler for a given intent", "bleu": 1.0, "rouge": 1.0}, {"predict": "flushes the binary output stream , padding 0 s if number of bits written so far is not a multiple of 8", "true": "flush standard output , padding 0 s if number of bits written so far is not a multiple of 8", "bleu": 0.7771475625141703, "rouge": 0.8645669291338582}, {"predict": "adds a new footer to the given text", "true": "prep ends the content of the mime part as text to the existing footer", "bleu": 0.11327490115090784, "rouge": 0.1732954545454545}, {"predict": "creates a sentence for the character compaction", "true": "<unk> a list of sentences", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "tests that internal state of the object can not be modified by modifying initial array value", "true": "tests that internal state of the object can not be modified by modifying initial array value", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the log", "true": "initialize the store", "bleu": 0.7071067811865475, "rouge": 0.6666666666666666}, {"predict": "use this function to create a histogram hash map with histogram", "true": "creates a cumulative histogram where each bin height is the sum of the previous bin ' s height and the current bin ' s height", "bleu": 0.03530512650596487, "rouge": 0.10382978723404256}, {"predict": "updates the entries related to the given package in memory and persistent db", "true": "updates the entries related to the given package in memory and persistent db", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses , validates and computes normalized version of date time object", "true": "parses , validates and computes normalized version of date time object", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the attribute values to the given attribute name", "true": "adds attributes to am sdk organization", "bleu": 0.15619699684601276, "rouge": 0.27664399092970515}, {"predict": "test the case where the thread is preemptively un parked", "true": "test the case where the thread is preemptively un parked", "bleu": 1.0, "rouge": 1.0}, {"predict": "puts the segment indices", "true": "sets the log commit index", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "finish all fragments and closing fragments", "true": "sets all the closing fragments into finished state", "bleu": 0.2238400777155271, "rouge": 0.4178082191780822}, {"predict": "write up to the output stream", "true": "method called when utf - 8 encoded ( but not yet escaped ! ) content is not guaranteed to fit in the output buffer after escaping ; as such , we just need to chunk writes", "bleu": 0.002104894172329508, "rouge": 0.12655601659751037}, {"predict": "converts the given hex string into a plain string", "true": "converts the given hex string into a plain string", "bleu": 1.0, "rouge": 1.0}, {"predict": "find phase s in the algorithm", "true": "find the scenarios that match the required tags in the feature", "bleu": 0.13576587000692578, "rouge": 0.33516483516483514}, {"predict": "traverses the tree , given the node number on the tree", "true": "traverse the tree calculating partial likelihoods", "bleu": 0.14991106946711685, "rouge": 0.2484725050916497}, {"predict": "converts an rate into a human readable and localized kb / s speed", "true": "converts an rate into a human readable and localized kb / s speed", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the next available ( i", "true": "returns the next element in the iteration", "bleu": 0.24608524656663955, "rouge": 0.3034825870646766}, {"predict": "returns true if field thread is set ( has been assigned a value ) and false otherwise", "true": "returns true if field queue size is set ( has been assigned a value ) and false otherwise", "bleu": 0.7914785567985774, "rouge": 0.9095992544268408}, {"predict": "requests a contact capabilities instance to receive a contact using the specified set", "true": "requests capabilities for a group of remote contacts", "bleu": 0.1135935489027116, "rouge": 0.2985318107667211}, {"predict": "utility method to return string", "true": "creates a string representing a coefficient , removing \"", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "creates at test index created event with one field that will hit every bulk data", "true": "creates at test index created event", "bleu": 0.37239098949398236, "rouge": 0.6192893401015228}, {"predict": "check the given rule for this grammar", "true": "determines whether the specified string is a valid boolean value", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "given a document , find the url associated with that document", "true": "given a document , find the url associated with that document", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a random number between start ( inclusive ) and end ( exclusive )", "true": "returns a random number between start ( inclusive ) and end ( inclusive )", "bleu": 0.8666415730847504, "rouge": 0.9285714285714285}, {"predict": "pops a type from the output frame stack", "true": "pops a type from the output frame stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds an event to the queue , but does not already exist", "true": "offer an event to this watch instance", "bleu": 0.19338531381761725, "rouge": 0.3315217391304348}, {"predict": "pushes a new type on to the output frame stack", "true": "pushes a new type on to the output frame stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates a random algorithm spec algorithm", "true": "create algorithm parameter spec with the block size", "bleu": 0.17516432701748888, "rouge": 0.2785388127853881}, {"predict": "read a suitable subset of the given type", "true": "reads the state from the stream", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "checks whether a character is a valid token character", "true": "checks whether a character is a valid token character", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the lines and second graph of the set of lines on the graph", "true": "draws the data points and the lines connecting the data points on the line graph", "bleu": 0.1695190920051338, "rouge": 0.548314606741573}, {"predict": "add or replace an element type for this schema", "true": "add or replace an element type for this schema", "bleu": 1.0, "rouge": 1.0}, {"predict": "don ' t use this when obfuscating class names !", "true": "don ' t use this when obfuscating class names !", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a string followed by a newline", "true": "writes a string followed by a newline", "bleu": 1.0, "rouge": 1.0}, {"predict": "internal method that can be executed by url ; i", "true": "return a new uri with a different fragment", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "paints a new paint", "true": "change the default paint to fill an expanded bounding box based on its children ' s bounds", "bleu": 0.013931732312048943, "rouge": 0.08567415730337079}, {"predict": "serializes an object as a byte array , parses it as a byte array", "true": "serialize to byte array", "bleu": 0.11633270842295028, "rouge": 0.2469635627530364}, {"predict": "adds another import source", "true": "adds another import source", "bleu": 1.0, "rouge": 1.0}, {"predict": "this function draws an arrow head from a positive linear interpolation", "true": "draws the head of a message arrow on to the diagram display", "bleu": 0.1307847403141535, "rouge": 0.25884016973125884}, {"predict": "adds a listener to the environment", "true": "handles the case where a class loader is activated", "bleu": 0.14827340167306757, "rouge": 0.12869198312236285}, {"predict": "method from org", "true": "un marshal parameters for the given method of the given instance over the given marshal input stream", "bleu": 0.005052392784929312, "rouge": 0.08879184861717612}, {"predict": "loads the data object", "true": "reloads the data from the service", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "create a localized resource name based on a resource name and locale", "true": "create a localized resource name based on a resource name and a locale", "bleu": 0.8561978028437951, "rouge": 0.9531250000000002}, {"predict": "converts an array of objects into string", "true": "converts an array of objects into string", "bleu": 1.0, "rouge": 1.0}, {"predict": "draw an icon based on the first ordered list", "true": "draws the bullet icon specified by the list - style - image argument", "bleu": 0.10761866342063775, "rouge": 0.26406926406926406}, {"predict": "synchronizes the query to be exactly the specified amount of milliseconds", "true": "synchronizes the rdf repository ' s representation of an entity to be exactly the provided statements", "bleu": 0.23929967984761058, "rouge": 0.43008225616921264}, {"predict": "full reset the stream to null", "true": "fully reset the state , not only the one related to latest test case execution", "bleu": 0.06970452184190923, "rouge": 0.26521739130434785}, {"predict": "converts an image in the graphics device , using the default layer ' s default image", "true": "convert the specified image to a buffered image , if necessary", "bleu": 0.09672649511413092, "rouge": 0.15326633165829145}, {"predict": "writes a byte array to a file creating the file if it does not exist", "true": "writes a byte array to a file creating the file if it does not exist", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the value is cancelled", "true": "returns true if this test subscriber has been cancelled", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "removes an directed edge from this directed edge", "true": "drops a member of this directed edge star", "bleu": 0.2984745896009823, "rouge": 0.375}, {"predict": "returns true if , at the current time , the named event could be generated", "true": "returns true if , at the current time , the named event could be generated", "bleu": 1.0, "rouge": 1.0}, {"predict": "receives message and batches as needed", "true": "receives message and batches as needed", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the date to the supplied date", "true": "returns <unk> generated before the given date", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "decides if given x - coordinate in screen space needs to be interpreted as \" within \" the normalized thumb x - coordinate", "true": "decides if given x - coordinate in screen space needs to be interpreted as \" within \" the normalized thumb x - coordinate", "bleu": 1.0, "rouge": 1.0}, {"predict": "cleans up all files in a directory", "true": "deletes all files in a container", "bleu": 0.5169731539571706, "rouge": 0.6240409207161125}, {"predict": "tests whether this test subscriber can be treated as a lock , or that can be as the same value", "true": "returns true if other entities should be <unk> from moving through this entity", "bleu": 0.06760229884571738, "rouge": 0.06301652892561983}, {"predict": "adds a recorded duration", "true": "adds a recorded duration", "bleu": 1.0, "rouge": 1.0}, {"predict": "open the atomic file for reading", "true": "open the atomic file for reading", "bleu": 1.0, "rouge": 1.0}, {"predict": "submits task to queue for execution", "true": "submits task to the specific queue", "bleu": 0.4347208719449915, "rouge": 0.6666666666666666}, {"predict": "creates default implementation of task distributor", "true": "creates default implementation of task distributor", "bleu": 1.0, "rouge": 1.0}, {"predict": "dumps the samples of this samples to the specified writer", "true": "dumps the wave out to the given stream", "bleu": 0.2086130724305753, "rouge": 0.4535315985130111}, {"predict": "adds field for execution", "true": "add field and label to buffer and push buffered field to panel", "bleu": 0.04862652376060361, "rouge": 0.11466165413533834}, {"predict": "adds an incomplete shape to the database", "true": "creates a new free space expansion room and adds it to the room list", "bleu": 0.09663861439684919, "rouge": 0.2695139911634757}, {"predict": "compute the desired magnitude of a unit vector projected to a given planet model", "true": "compute the desired magnitude of a unit vector projected to a given planet model", "bleu": 1.0, "rouge": 1.0}, {"predict": "trims the string , removing all whitespace at the beginning and end of the string", "true": "trims the string , removing all whitespace at the beginning and end of the string", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates virtual file system provider with given extension , which is also be removed", "true": "validates s mi - s provider attributes of the v nx file as it is a mandatory fields for indications", "bleu": 0.07240696120626869, "rouge": 0.17102803738317757}, {"predict": "parses a node in the xml structure and returns the corresponding ns object", "true": "parses a node in the xml structure and returns the corresponding ns object", "bleu": 1.0, "rouge": 1.0}, {"predict": "convenience method that creates a pair of related debits and credits for accrual based accounting", "true": "convenience method that creates a pair of related debits and credits for accrual based accounting", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the next trace until the next point in the input line", "true": "calculates the next trace trace of the connection under construction", "bleu": 0.3026643726685863, "rouge": 0.46212121212121204}, {"predict": "serialize object to a byte buffer object", "true": "serialize object to a byte buffer object", "bleu": 1.0, "rouge": 1.0}, {"predict": "executed upon sending a packet away", "true": "executed upon sending a packet away", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new sensor if all checks are passed system name is normalized to ensure uniqueness", "true": "create a new sensor if all checks are passed system name is normalized to ensure uniqueness", "bleu": 1.0, "rouge": 1.0}, {"predict": "arg s the array that are the lowest power of the internal array", "true": "returns an array that holds the maximum values of the both specified arrays in each index", "bleu": 0.13135148677740185, "rouge": 0.33851276359600446}, {"predict": "fills a shape with corners p points", "true": "fill the interior of the polygon shape represented by p points", "bleu": 0.14834636222628117, "rouge": 0.32049036777583184}, {"predict": "writes the tags from this ex if interface object into a jpeg stream , removing prior ex if tags", "true": "writes the tags from this ex if interface object into a jpeg stream , removing prior ex if tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "see iso 16022 : 2006 , 5", "true": "see iso 16022 : 2006 , 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes the calendar in the current day", "true": "move the position to today ' s date", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "accepts an ipv 4 address in the form of an integer and returns the corresponding byte array", "true": "accepts an ipv 4 address in the form of an integer and returns the corresponding byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates the set of valid template while valid", "true": "validates this template to see if its valid for plugin v 3", "bleu": 0.11567041937737582, "rouge": 0.28955696202531644}, {"predict": "this method is used by the until it gets it", "true": "it removes the first key from the queue", "bleu": 0.13950796967929133, "rouge": 0.11338289962825278}, {"predict": "normal distribution function , static version of the vector 3 d distribution with parameter a 3 b , f 8 bit 7 , f 7 bit 7", "true": "normal cumulative distribution function ( the value which results by integrating the normal distribution function from negative infinity up to y )", "bleu": 0.09251599780696446, "rouge": 0.20790729379686435}, {"predict": "destroy the connection", "true": "destroy kills the connection and drops it from the connection pool", "bleu": 0.052796005801316374, "rouge": 0.3885350318471337}, {"predict": "here : 1", "true": "absorb an atomic character string", "bleu": 0.23196236872272216, "rouge": 0.0}, {"predict": "draws an item of a plot with the orientation", "true": "draws the bar for a single ( series , category ) data item", "bleu": 0.11379288211086455, "rouge": 0.17604617604617603}, {"predict": "returns a new instance", "true": "returns a new instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if network is connected", "true": "check the current active network is available", "bleu": 0.25880882365505126, "rouge": 0.48541114058355433}, {"predict": "set up for the tab closing animation", "true": "set up for the tab closing animation", "bleu": 1.0, "rouge": 1.0}, {"predict": "for the given set of au th - bit scheme , and copies the extended scheme as the extended metadata", "true": "adds sam lv 2 au th context to the collection", "bleu": 0.08638804535733371, "rouge": 0.21279069767441858}, {"predict": "its guaran ted that close packet will be sent before closing connection , but all past and future packets wont", "true": "its guaran ted that close packet will be sent before closing connection , but all past and future packets wont", "bleu": 1.0, "rouge": 1.0}, {"predict": "replace the edges with the parent", "true": "if edges which have <unk> dimensional collapse are found , replace them with a new edge which is a l edge", "bleu": 0.021562989506891315, "rouge": 0.1346578366445916}, {"predict": "reads a value of an annotation and makes the given visitor visit it", "true": "reads a value of an annotation and makes the given visitor visit it", "bleu": 1.0, "rouge": 1.0}, {"predict": "timing target implementation : calculate and set the current car position based on the animation fraction", "true": "timing target implementation : calculate and set the current car position based on the animation fraction", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new sea glass title pane pane object", "true": "creates a new sea glass title pane object", "bleu": 0.8091067115702212, "rouge": 0.9512670565302144}, {"predict": "returns a string representation of this stack", "true": "returns a string representation of this queue", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "writes a long ( 64 bit ) to the target stream", "true": "writes a long ( 64 bit ) to the target stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will find container representation", "true": "look for the requested container xml file in the class path ( resource ) under / config /", "bleu": 0.02989501072722226, "rouge": 0.07644110275689221}, {"predict": "given a source directories and a list of module names that possibly contain wildcard s it returns a expanded list of module names", "true": "given a list of source directories and a list of module names that possibly contain wildcard s it returns a expanded list of module names of modules that were actually found in the given source directories", "bleu": 0.5351657636182553, "rouge": 0.7498663816141101}, {"predict": "returns the given char set for the given char set", "true": "safely gets char set for the specified name", "bleu": 0.35084396956386854, "rouge": 0.4535315985130111}, {"predict": "creates a new integer from the specified integer", "true": "creates an integer number", "bleu": 0.17747405280050269, "rouge": 0.3546511627906977}, {"predict": "dump a message into a trace", "true": "dumps the given message and stack to the system error console", "bleu": 0.09600096733558854, "rouge": 0.1117216117216117}, {"predict": "execute a query based on the sql string given", "true": "execute a query based on the sql string given", "bleu": 1.0, "rouge": 1.0}, {"predict": "the name of the variable to cache t", "true": "the name of the variable to cache t", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper to map the name of a jar , and return a jar file name", "true": "maps a library name into a platform - specific string representing a native library", "bleu": 0.09782375748961449, "rouge": 0.2081911262798635}, {"predict": "returns the next match er", "true": "returns the next match from the character stream", "bleu": 0.41700666580507684, "rouge": 0.5907990314769976}, {"predict": "this also defines the fragment , such that it can be reused", "true": "it is important that the dimension setting is the same while a fragment is loaded by different fragment loaders", "bleu": 0.07290792403968444, "rouge": 0.12398373983739835}, {"predict": "adds a new private field", "true": "add a private field to this", "bleu": 0.31610981104846864, "rouge": 0.5366568914956013}, {"predict": "the function scans the e & private function", "true": "function adds the new lsu br s dic ts ( only for the fd s used ) to the list", "bleu": 0.042552769240615386, "rouge": 0.13260869565217392}, {"predict": "tests if the queue matches the sequence ( as with match ) , and if they match the char sequence", "true": "tests if the queue matches the sequence ( as with match ) , and if they do , removes the matched string from the queue", "bleu": 0.6273508287328943, "rouge": 0.7407142857142858}, {"predict": "initialize a render request object with a core surface", "true": "initialize all necessary components for g les rendering , creating window surfaces for drawing the preview as well as the surface that will be used by media recorder for recording", "bleu": 0.015146730158668128, "rouge": 0.09348659003831418}, {"predict": "clears the scrap heap", "true": "clears the scrap heap", "bleu": 1.0, "rouge": 1.0}, {"predict": "starts a component request with the body of the query", "true": "allows subclasses to augment the request to the token endpoint with additional parameters", "bleu": 0.11742832364135733, "rouge": 0.16991643454039}, {"predict": "reads characters into a portion of an array", "true": "reads characters into a portion of an array", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a field with the specified value without any validation error message , and a value", "true": "add a header line without any validation", "bleu": 0.1702602472176709, "rouge": 0.4677914110429448}, {"predict": "merges given node children into this node", "true": "merge node children", "bleu": 0.24446151121745047, "rouge": 0.43109540636042404}, {"predict": "negate ( ) for a negative big decimal", "true": "negate ( ) for a negative big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the value given a parameter and bind it to the given value", "true": "creates and binds the parameters to a new item", "bleu": 0.12571192676522522, "rouge": 0.2819722650231125}, {"predict": "creates a new simple panel using the experiment", "true": "creates the setup panel with the supplied initial experiment", "bleu": 0.17795502018438056, "rouge": 0.465648854961832}, {"predict": "adds a listener to the events produced by this button", "true": "adds a listener of memory copying events", "bleu": 0.24808415001701817, "rouge": 0.48605577689243035}, {"predict": "processes the arguments passed to this interpreter and adds them to the caller ' s", "true": "parses the specified arguments and sets up the variables", "bleu": 0.10343603005129705, "rouge": 0.3490701001430615}, {"predict": "see if zoning - value see should be see if zoning is required", "true": "looks at the v array to see if zoning is disabled , and looks to make sure that there is at least one active network system registered", "bleu": 0.09055912799144498, "rouge": 0.18812644564379336}, {"predict": "initializes the xml tree", "true": "cr <unk> an in - memory xml tree based on the parsed tokens in this document", "bleu": 0.025298439872324396, "rouge": 0.1804733727810651}, {"predict": "checks whether the given name has the specified name", "true": "returns a boolean telling if this name value list has a record with this name", "bleu": 0.08617428905281956, "rouge": 0.23921568627450981}, {"predict": "check if this char seq starts with the specified prefix", "true": "tests whether this char seq starts with the specified prefix", "bleu": 0.7860753021519787, "rouge": 0.8}, {"predict": "checks if window has a special window", "true": "checks , whether an instance of the given window class is already in the window list", "bleu": 0.06106734767839363, "rouge": 0.2436750998668442}, {"predict": "fires a property change of a bound property with the given name", "true": "support for reporting bound property changes for integer properties", "bleu": 0.1367440667823257, "rouge": 0.19551282051282048}, {"predict": "starts fading to the specified layer", "true": "starts fading to the specified layer", "bleu": 1.0, "rouge": 1.0}, {"predict": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "true": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the hash code of a repeated boolean field", "true": "computes the hash code of a repeated boolean field", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new abstract surface object , assigning it a unique id and initializing its last modified time to the specified source", "true": "creates a shallow copy of the specified source shape", "bleu": 0.12259149958656422, "rouge": 0.3489702517162472}, {"predict": "parse a soot method string and return class string", "true": "parses a string in soot representation , for example : < soot", "bleu": 0.12026590852507517, "rouge": 0.1856925418569254}, {"predict": "helper method for creating new review by setting by helper out", "true": "sets up a new review on the current branch , as a task", "bleu": 0.12498879161997976, "rouge": 0.1641991924629879}, {"predict": "startup all voice s", "true": "start up the waveform synthesizer", "bleu": 0.23530495254141282, "rouge": 0.0}, {"predict": "find the index of the next column of the given column", "true": "note that the column may end of second half of wide character", "bleu": 0.1307847403141535, "rouge": 0.25884016973125884}, {"predict": "this was generated by the background thread to schedule , returning the first arrivals and connecting that are more reason", "true": "to do calculate all arrivals and departures zero - based , and then shift them at the end to maintain fixed - point stop", "bleu": 0.07827400686340633, "rouge": 0.1341642228739003}, {"predict": "decode a color from the color object", "true": "decodes an html color and turns it into a color object", "bleu": 0.17359100558362855, "rouge": 0.32049036777583184}, {"predict": "gets the dependencies for a given source", "true": "a method for determining the list of modules required to transform the given source data type into the requested target data type", "bleu": 0.03410648460133858, "rouge": 0.1892450879007239}, {"predict": "gets the distance between two vectors , defined as sqr t ( x ^ 2 + y ^ 2 + z ^ 2 )", "true": "get the distance between this vector and another", "bleu": 0.09429254736980934, "rouge": 0.2060810810810811}, {"predict": "calculate the elapsed gc", "true": "ask each gc bean for its elapsed collection time", "bleu": 0.11392443929712959, "rouge": 0.14386792452830188}, {"predict": "add all distinct entry to list 1 from list 2", "true": "add all distinct entry to list 1 from list 2", "bleu": 1.0, "rouge": 1.0}, {"predict": "defines a \" that has been registered in object that has been registered in place", "true": "start encoding a new object in the buffer", "bleu": 0.09782375748961449, "rouge": 0.2760180995475113}, {"predict": "sends a message to messages", "true": "sends messages to kafka", "bleu": 0.32466791547509893, "rouge": 0.4535315985130111}, {"predict": "creates a string of a given character", "true": "returns a string of the given length consisting entirely of the given character", "bleu": 0.1744739429575305, "rouge": 0.474339035769829}, {"predict": "adds a connection view to this implementation", "true": "add a view for the given connection to the pipeline view", "bleu": 0.1319006407505858, "rouge": 0.32049036777583184}, {"predict": "remove trailing or leading whitespace from the annotation", "true": "remove trailing or leading whitespace from the annotation", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the given listener to receive all listeners from this script", "true": "adds the given listener to its internal list", "bleu": 0.41722614486115056, "rouge": 0.5417406749555951}, {"predict": "called to notify that a consumption has finished", "true": "called to notify that a consumption has finished", "bleu": 1.0, "rouge": 1.0}, {"predict": "test bulk get ter method", "true": "test of the simple forms of the bulk get / put methods", "bleu": 0.09521044541645862, "rouge": 0.3285457809694794}, {"predict": "concatenates a list of double arrays into a single array", "true": "concatenates a list of double arrays into a single array", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures that the external array t mp has at least the specified number of elements , increasing its size if necessary", "true": "ensures that the external array t mp has at least the specified number of elements , increasing its size if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds new values to the series", "true": "adds new values to the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new element to the test elements", "true": "adds a continuation", "bleu": 0.21105340631872638, "rouge": 0.39610389610389607}, {"predict": "calculates the rotation angle in the given point in radians", "true": "calculates the angle from center pt to target pt in degrees", "bleu": 0.1705647399369684, "rouge": 0.37770897832817335}, {"predict": "count the number of characters in the sequence that match the sequence", "true": "returns the number of matching characters found in a character sequence", "bleu": 0.2224246939793677, "rouge": 0.5258620689655172}, {"predict": "create the decimal indicator with the integer value", "true": "creates a delta c rl indicator extension with the integer value", "bleu": 0.32105892380868783, "rouge": 0.511744966442953}, {"predict": "verbose log message with print f formatting", "true": "verbose log message with print f formatting", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the log value for a discrete value , given the normal value and mean value", "true": "calculate the log probability given the message ' s logarithm is normally distributed", "bleu": 0.1702602472176709, "rouge": 0.35138248847926273}, {"predict": "sets the requested pid to have the specified tolerance", "true": "sets the absolute tolerance for this controller", "bleu": 0.19960198807747329, "rouge": 0.38364779874213834}, {"predict": "signals that the drop down has finished", "true": "up call from native code via implemented class ( do )", "bleu": 0.08820727472213225, "rouge": 0.0}, {"predict": "to do need think about if multi - put is necessary , by checking if auto flush works", "true": "to do need think about if multi - put is necessary , by checking if auto flush works", "bleu": 1.0, "rouge": 1.0}, {"predict": "index = = - 1 when new", "true": "index = = - 1 when new", "bleu": 1.0, "rouge": 1.0}, {"predict": "extracts the secret key from the given uri", "true": "extracts the secret access key from the given uri", "bleu": 0.6598203338556885, "rouge": 0.931297709923664}, {"predict": "handles the dial between the dial between the given contact", "true": "dial the specified contact", "bleu": 0.14991106946711685, "rouge": 0.4644670050761421}, {"predict": "add a generated class to the list of s rc classes", "true": "denote that all methods of a class are safe", "bleu": 0.1354599427337814, "rouge": 0.2036727879799666}, {"predict": "returns true if there are any active list", "true": "check if there is room in the active list", "bleu": 0.23420197753909952, "rouge": 0.465648854961832}, {"predict": "parses the given string for a textual representation for time and returns the time value in seconds past midnight", "true": "parses the given string for a textual representation for time and returns the time value in seconds past midnight", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses a step of the input resource", "true": "parse a resource file into an rsl p stem mer description", "bleu": 0.1160873020151595, "rouge": 0.2136602451838879}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a string that is used to represent a blank line to a string , useful for the blank line arguments", "true": "converts the bet into a string", "bleu": 0.0821610732492254, "rouge": 0.16464237516869096}, {"predict": "tests whether no journal on which the configuration has been saved on the current thread", "true": "verifies exception if there are no commits on the journal ( the last commit time will be zero which does not identify a valid commit point )", "bleu": 0.06012094051841313, "rouge": 0.18114328136599847}, {"predict": "checks if the controller for a given set of regular expression", "true": "checks to see if the user matches ip information without checking for the correct ether - type ( <unk> )", "bleu": 0.07515606632432709, "rouge": 0.24522613065326637}, {"predict": "quick exp , with a max relative error of | power | , and | | power * get exponent ( value of | , 2 ) |", "true": "quick <unk> , with a max relative error of about 3", "bleu": 0.23996183022120374, "rouge": 0.4452554744525547}, {"predict": "given a class name , return the path path for the class path", "true": "utility method to get the jar entry path from a class name", "bleu": 0.19674979811155635, "rouge": 0.2417437252311757}, {"predict": "write the counter in textual representation", "true": "write an instance of pos <unk> he ev counter class to json format", "bleu": 0.07612610271614867, "rouge": 0.19741100323624597}, {"predict": "all annotations declarations nested inside of a package", "true": "all annotations defined in the package", "bleu": 0.22679164443904004, "rouge": 0.43990384615384615}, {"predict": "apply paste of any nodes in member of member", "true": "returns whatever is in the clipboard", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "updates the cursor and loads the cursor", "true": "sets the cursor to correspond the component currently under mouse", "bleu": 0.17112717058426782, "rouge": 0.34205607476635513}, {"predict": "checks whether the mouse event specifies the mouse button ( ) due to the fact that the mouse button 2 mask = event", "true": "returns true if the mouse event specifies the middle mouse button", "bleu": 0.21800193956058223, "rouge": 0.43975283213182287}, {"predict": "adds a new message to the list of success messages", "true": "adds a success message into the list", "bleu": 0.22692039365038064, "rouge": 0.6075697211155379}, {"predict": "method to handle clock events", "true": "method to handle start stopped check box change", "bleu": 0.278869164867688, "rouge": 0.44309927360774815}, {"predict": "closes the input stream and releases any system resources associated with this connection", "true": "closes the underlying file", "bleu": 0.12571192676522522, "rouge": 0.2601279317697228}, {"predict": "assign next log segment sequence number based on a decreasing list of log segments", "true": "assign next log segment sequence number based on a decreasing list of log segments", "bleu": 1.0, "rouge": 1.0}, {"predict": "read stream as binary", "true": "read stream as binary st l", "bleu": 0.6065306597126334, "rouge": 0.7721518987341772}, {"predict": "asserts that traffic string is set", "true": "asserts that a specific language is set", "bleu": 0.3094358155846605, "rouge": 0.6069651741293532}, {"predict": "returns microseconds running in nanoseconds", "true": "called when the block for of this explosive is destroy by an explosion", "bleu": 0.04635036983311895, "rouge": 0.0}, {"predict": "returns true if there are no more threads in the queue", "true": "returns whether there are threads waiting for read access to the guacamole instruction stream", "bleu": 0.13572106276731308, "rouge": 0.39152759948652116}, {"predict": "the number of inactive time that the user is activated from", "true": "returns the number of milliseconds this session has been inactive", "bleu": 0.22416933501922287, "rouge": 0.384251968503937}, {"predict": "equivalent to assert cond : value ;", "true": "equivalent to assert cond : value ;", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds definition numbers to the definition", "true": "this method adds a cos definition to the persistent store", "bleu": 0.16959011078459055, "rouge": 0.47843137254901963}, {"predict": "create a source data quality object from its xml representation", "true": "create a source data quality object from its xml representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the class name to a q name", "true": "returns the qualified name for the given class , according to the mapping rules in the j axb specification", "bleu": 0.05098496690817698, "rouge": 0.20701357466063344}, {"predict": "get the resulting y - position of the bottom edge of the crop window given the handle ' s position and the image ' s bounding box and snap radius", "true": "get the resulting y - position of the bottom edge of the crop window given the handle ' s position and the image ' s bounding box and snap radius", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate json web token", "true": "generate a new signed j wt", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "exports the symbols symbols of the given symbols", "true": "export a number of symbols with the given names so that other movies can import and use them", "bleu": 0.06870470052394348, "rouge": 0.21580188679245282}, {"predict": "returns true if m has fulfilling bit set", "true": "returns true if m has fulfilling bit set", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a data source listener", "true": "add a data source listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds the dynamic annotation in the qualifier hierarchy", "true": "when comparing types against the bounds of a type variable , we may encounter other type variables , wildcard s , and intersections in those bounds", "bleu": 0.01870562754502435, "rouge": 0.1073943661971831}, {"predict": "changes to the actual state", "true": "changes to the failed state", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "reads bytes from an input stream and writes it to the buffer", "true": "read at least the specified amount of bytes , and place them in the input buffer", "bleu": 0.0979814053847296, "rouge": 0.2785388127853881}, {"predict": "computes the squared distribution function", "true": "compute the result of the kernel evaluation on the supplied vectors", "bleu": 0.08222966016687185, "rouge": 0.11708253358925146}, {"predict": "ensure there is at least one animation for every path in group", "true": "ensure there is at least one animation for every path in group ( linking them by names ) build the \" current \" path based on the first group", "bleu": 0.24252107463564873, "rouge": 0.5446428571428571}, {"predict": "cancels included turnouts only option", "true": "cancels included only option", "bleu": 0.45180100180492244, "rouge": 0.9070631970260222}, {"predict": "issue a kill entry in a list of entry", "true": "kill all , including root or not the returned entries don ' t include the root entry though", "bleu": 0.05746166391236872, "rouge": 0.13974799541809851}, {"predict": "shows an error dialog", "true": "shows an error dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to check index bytes", "true": "expert : just reads and verifies the suffix of an index header", "bleu": 0.06732395159376953, "rouge": 0.1095152603231598}, {"predict": "internal method for printing a tag with attributes", "true": "internal method for printing a tag with attributes", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the appropriate disk string that to be searched for the given input string", "true": "get the disk name out from the input string", "bleu": 0.15911783110981517, "rouge": 0.543026706231454}, {"predict": "draws a cloud for the server with the given parameters", "true": "draws a cloud shape for the given parameters", "bleu": 0.36720562698935927, "rouge": 0.7936802973977695}, {"predict": "check if the specified object is a trusted trusted context", "true": "returns result of calling c tx", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "creates a new persistent search request control", "true": "creates a new persistent search request control", "bleu": 1.0, "rouge": 1.0}, {"predict": "connects the internal state to the synapse group", "true": "populates the synapse group with synapses by making individual <unk> connections between the neurons in the synapse group ' s source and target groups", "bleu": 0.042711606149122096, "rouge": 0.22932330827067668}, {"predict": "multiply a character by a character", "true": "multiply two characters", "bleu": 0.22089591134157885, "rouge": 0.2364341085271318}, {"predict": "this method is used for the read lock", "true": "return a string with linefeed s and carriage returns normalized to linefeed s", "bleu": 0.0721806023765632, "rouge": 0.0}, {"predict": "add a zone change listener to this zone", "true": "add a listener to be called when the player changes zone", "bleu": 0.1909027782642041, "rouge": 0.511744966442953}, {"predict": "write byte to the buffer we need to be able to efficiently handle large arrays beyond size of the blob", "true": "write a single byte this is the one place where the blob threshold is handled and its done one byte at a time so should be easy enough , we no longer store continuation addresses , instead we allocate blob allocations via a blob header block", "bleu": 0.027998084509415152, "rouge": 0.1414656771799629}, {"predict": "creates the new listener", "true": "creates the new start listener", "bleu": 0.5506953149031837, "rouge": 0.8714285714285713}, {"predict": "return a list of all the fonts , which would be used as a list of column", "true": "returns the contents of the table as a flat list", "bleu": 0.11306082351602978, "rouge": 0.3885350318471337}, {"predict": "reset any explicit or default - set hooks", "true": "reset any explicit or default - set hooks", "bleu": 1.0, "rouge": 1.0}, {"predict": "a hashing method that changes a string ( like a url ) into a hash suitable for using as a disk filename", "true": "a hashing method that changes a string ( like a url ) into a hash suitable for using as a disk filename", "bleu": 1.0, "rouge": 1.0}, {"predict": "records to the timestamp of the source", "true": "adds a value and calculates the new average of differences between the values within the window size provided at creation", "bleu": 0.034485837896937335, "rouge": 0.20446927374301674}, {"predict": "triggers test case failure if any thread assertions have failed , by re throwing , in the case of thread , any exception recorded earlier by thread record failure", "true": "extra checks that get done for all test cases", "bleu": 0.04175872565419194, "rouge": 0.058150619637750235}, {"predict": "parses the given input string", "true": "parses the given input string", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the maximum radius of the default value", "true": "returns the default max radius", "bleu": 0.2653856085536222, "rouge": 0.48157894736842105}, {"predict": "returns a copy of the receiver as a char array", "true": "returns a copy of the input data", "bleu": 0.4617366309441026, "rouge": 0.6075697211155379}, {"predict": "the size of pending workers", "true": "the size of pending workers", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts a component at the specified position", "true": "inserts the specified component into the menu at a given position", "bleu": 0.1764145494442645, "rouge": 0.4273204903677758}, {"predict": "un escapes character escape sequences from provided source and then identifier", "true": "splits the string at every split character unless escaped", "bleu": 0.11390778025531027, "rouge": 0.1018363939899833}, {"predict": "draws the chart legend", "true": "draws the chart legend", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends an http url to the given stream", "true": "curl - i - x post \" http : / / : / web hdf s / v 1 / ? op = append & buffer size = \"", "bleu": 0.011616867535193535, "rouge": 0.04903536977491961}, {"predict": "constructs a new map with the same mappings as the given map", "true": "creates a new map with the same mappings as the given map", "bleu": 0.912167909070388, "rouge": 0.9166666666666665}, {"predict": "adds a new rule to the class", "true": "adds a rule into the stylesheet", "bleu": 0.2777619034011791, "rouge": 0.6240409207161125}, {"predict": "appends data for the given byte array", "true": "appends to the underlying data", "bleu": 0.22089591134157885, "rouge": 0.34366197183098596}, {"predict": "test if the value of the facebook application is still valid", "true": "this method checks if the <unk> url is still correct", "bleu": 0.18850319022747347, "rouge": 0.384251968503937}, {"predict": "initializes this logger ' s resource bundle", "true": "initializes this logger ' s resource bundle", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a layer and set the layer information", "true": "construct an object , initializes graphic list", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "tests if a package name matches at least one package name", "true": "check whether the package name match standard java package name conventions", "bleu": 0.18850319022747347, "rouge": 0.36363636363636365}, {"predict": "remember that a new factory is added to this host", "true": "remember a successful factory for connecting to host", "bleu": 0.16590387014219712, "rouge": 0.5669144981412639}, {"predict": "adds a long value to the request", "true": "adds a long value to the request", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next available character , or the null character ' \\ 0 ' if all input has been exhausted", "true": "returns the next available character , or the null character ' \\ 0 ' if all input has been exhausted", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes first entry ; returns its snapshot", "true": "removes first entry ; returns its snapshot", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates new task cancellation exception given throw able as a cause and source of error message", "true": "creates new task cancellation exception given throw able as a cause and source of error message", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is used to convert the character array to another", "true": "normalize a string", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "remove views that don ' t start with any \" android \" namespace", "true": "removes obsolete elements from names and shared elements", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "remove an action from the list", "true": "completely remove an action", "bleu": 0.4111336169005197, "rouge": 0.6224489795918368}, {"predict": "returns the distance error - the quad tree in the location of the quad tree", "true": "computes the maximum distance error due to a given level of approximation to a true arc", "bleu": 0.11507377943540503, "rouge": 0.25657202944269186}, {"predict": "reads next record from the stream", "true": "gets next fast a record", "bleu": 0.24446151121745047, "rouge": 0.3696969696969697}, {"predict": "adds the character to self", "true": "adds the specified character to self", "bleu": 0.49473859088183875, "rouge": 0.8944281524926685}, {"predict": "returns true if the given if d is a valid if d", "true": "returns true if the given if d is a valid if d", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the specified child group", "true": "remove a child from this group", "bleu": 0.24736929544091937, "rouge": 0.3577712609970674}, {"predict": "check if the given native gui d string exists", "true": "check if port exists in db", "bleu": 0.19960198807747329, "rouge": 0.4149659863945578}, {"predict": "appends a split element to the beginning", "true": "adds a split element at the end", "bleu": 0.3655552228545123, "rouge": 0.5714285714285714}, {"predict": "compiling templates requires that we be able to list the a vt s added 9 / 5 / 2000 to support compilation experiment", "true": "compiling templates requires that we be able to list the a vt s added 9 / 5 / 2000 to support compilation experiment", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new instance of map handler", "true": "creates a new instance", "bleu": 0.345720784641941, "rouge": 0.5736677115987461}, {"predict": "flush both the stream and then flush the stream", "true": "description of the method", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "direct connection to direct connection", "true": "get the active direct connection with this endpoint ( if any )", "bleu": 0.08860330314183162, "rouge": 0.2190305206463196}, {"predict": "creates a national number string and fills it with a national number", "true": "combines the national number with any prefix ( idd / + and country code or national prefix ) that was collected", "bleu": 0.0768148398090926, "rouge": 0.23106060606060605}, {"predict": "hide all items and remove them from the list", "true": "cut to the clipboard", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "stop led resource and request a custom request with a custom request", "true": "calling this method will stop all threads", "bleu": 0.10390302174233558, "rouge": 0.11050724637681159}, {"predict": "releases any changes to the index", "true": "releases resources in the index", "bleu": 0.31239399369202553, "rouge": 0.5545454545454546}, {"predict": "configures a prefix to get tokens", "true": "configure the helper", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "writes the current transform", "true": "write the given transformation matrix to the file", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "signum ( ) for a positive big decimal", "true": "signum ( ) for a positive big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new chain based on the existing chain with the new element added at the end", "true": "creates a new chain based on the existing chain with the new element added at the beginning", "bleu": 0.9391044157537525, "rouge": 0.9411764705882352}, {"predict": "parse an operator", "true": "check for and get an operator kind", "bleu": 0.1863913238629973, "rouge": 0.3730886850152905}, {"predict": "calls the ui to move the given selector", "true": "drags this object to a destination ui object", "bleu": 0.17747405280050269, "rouge": 0.125}, {"predict": "sends local changes to the contact if remote file is already present in local file , if exists conflict with the remote contents to send a remote contact", "true": "method that hashes contacts and syncs them to server", "bleu": 0.04327969719414172, "rouge": 0.05957031249999999}, {"predict": "removes the xy series from the list", "true": "removes the xy series from the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a glue , or variable spacing , to a ui component", "true": "add a glue , or variable spacing , to a ui component", "bleu": 1.0, "rouge": 1.0}, {"predict": "write a result to a file , if possible", "true": "write result to file - - write a result ' result ' out in plain text format to file ' f name '", "bleu": 0.0659376524619725, "rouge": 0.2896486229819563}, {"predict": "this method will write metadata at the end of file file format in thrift format", "true": "this method will write metadata at the end of file file format in thrift format", "bleu": 1.0, "rouge": 1.0}, {"predict": "renders the tree as done in penn tree bank merged files", "true": "display a node , implementing penn tree bank style layout", "bleu": 0.21200626759025185, "rouge": 0.28818897637795277}, {"predict": "replaces the original regular expression with the regular expression", "true": "run regex expression against original string", "bleu": 0.15619699684601276, "rouge": 0.13832199546485258}, {"predict": "compares two characters , ignoring the same case", "true": "compare two characters in a string", "bleu": 0.21105340631872638, "rouge": 0.2932692307692307}, {"predict": "adjusts an array of length file the file in the file", "true": "helper methods which adjusts the actual length of the backing file for caching", "bleu": 0.12989958594727688, "rouge": 0.3283983849259758}, {"predict": "creates a new instance of c pin list for the given pin list of p pin list", "true": "creates a sequence of subnet s with 2 pins from p pin list", "bleu": 0.1661742929957894, "rouge": 0.40985442329227323}, {"predict": "starts a connection with a connection", "true": "run this command with the arguments supplied", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "parse a char reference", "true": "parse an entity reference", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "creates a javascript method invocation expression", "true": "creates a j sni method invocation expression", "bleu": 0.41386440336942737, "rouge": 0.7587064676616916}, {"predict": "generates a simple exemplar of this class to test serialization", "true": "generates a simple exemplar of this class to test serialization", "bleu": 1.0, "rouge": 1.0}, {"predict": "drop all table form the table form", "true": "drop the tables by the passing table name", "bleu": 0.19148978368719022, "rouge": 0.3952483801295896}, {"predict": "creates a new disk segment", "true": "creates a new segment", "bleu": 0.537284965911771, "rouge": 0.9070631970260222}, {"predict": "create create whether a new contact", "true": "given an email checks if the person exists in the manager", "bleu": 0.08072686929338534, "rouge": 0.0}, {"predict": "removes from this list all of its elements that are contained in this list", "true": "removes from this list all of its elements that are contained in the specified collection", "bleu": 0.7920859560743244, "rouge": 0.8224719101123595}, {"predict": "the function convert polar stereo graphic to geodetic converts polar stereo graphic coordinates ( east ing and north ing ) to geodetic coordinates ( latitude and longitude ) according to the current ellipsoid and polar stereo graphic projection parameters", "true": "the function convert polar stereo graphic to geodetic converts polar stereo graphic coordinates ( east ing and north ing ) to geodetic coordinates ( latitude and longitude ) according to the current ellipsoid and polar stereo graphic projection parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "asserts that the given uri matches the given path , if it in the given un in rfc likely to throw it match", "true": "asserts aspects of a uri", "bleu": 0.05856458233275369, "rouge": 0.16158940397350993}, {"predict": "a function to find the maximum of two values , but ignoring any double", "true": "a function to find the maximum of two values , but ignoring any double", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets shared lock on the directory block for update", "true": "sets exclusive lock on the directory block when crabbing down for modification", "bleu": 0.39805020134303426, "rouge": 0.6499238964992391}, {"predict": "removes a reference from the remote connection", "true": "removes the reference being stored for the given connection", "bleu": 0.1755217914979255, "rouge": 0.48897795591182364}, {"predict": "tests if queue starts with a letter or digit", "true": "test if the queue matches a word character ( letter or digit )", "bleu": 0.19372466508699207, "rouge": 0.5281385281385281}, {"predict": "creates a new environment environment", "true": "constructs a <unk> environment with two locations , in which <unk> is placed at random", "bleu": 0.040889869516541145, "rouge": 0.18345864661654135}, {"predict": "builds and builds a for a batch", "true": "generate the source files for the stub and / or skeleton classes needed by rmi for the given remote implementation class", "bleu": 0.027820442245662422, "rouge": 0.13104189044038667}, {"predict": "add long click view id", "true": "add long click view id", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a micro reference from this spawn point", "true": "remove a creature re spawn point from the zone", "bleu": 0.2116253761537182, "rouge": 0.34923664122137404}, {"predict": "creates a photo object", "true": "create a bug from an osb g px xml wp t element", "bleu": 0.04862652376060361, "rouge": 0.11466165413533834}, {"predict": "converts an array of bytes into a long", "true": "converts an array of 8 bytes into a long", "bleu": 0.6598203338556885, "rouge": 0.931297709923664}, {"predict": "decodes unicode escapes", "true": "decodes unicode escapes", "bleu": 1.0, "rouge": 1.0}, {"predict": "pass mouse event straight through to delegate", "true": "pass mouse event straight through to delegate", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove formatting from a line of irc text", "true": "remove formatting from a line of irc text", "bleu": 1.0, "rouge": 1.0}, {"predict": "xor for two negative numbers ; the first is shorter", "true": "xor for two negative numbers ; the first is shorter", "bleu": 1.0, "rouge": 1.0}, {"predict": "the state of the entity as they are readable by the gui d", "true": "just prints out sorted after the time ( starting with 0 : 00 ) note : this is not the order in which the <unk> happened", "bleu": 0.04178873129101045, "rouge": 0.14512291831879465}, {"predict": "returns true if this name is empty", "true": "determines whether this l dap name is empty", "bleu": 0.31689174383082924, "rouge": 0.5269978401727862}, {"predict": "this method writes the most recent data in to the passed stream", "true": "this method saves a file with the last record read from the device", "bleu": 0.14294845713017917, "rouge": 0.31770833333333337}, {"predict": "creates organization config instance", "true": "creates organization configuration for the default instance of the service given configuration attributes", "bleu": 0.05355679762998549, "rouge": 0.32218309859154926}, {"predict": "deletes a authentication domain domain", "true": "deletes an authentication domain ( circle of trust ) within a given realm", "bleu": 0.08242390832192466, "rouge": 0.3086003372681282}, {"predict": "create a source code remark on the given element and event listener", "true": "add a source code remark on the given element with a preset evidence element collection", "bleu": 0.5045944917355001, "rouge": 0.5809523809523809}, {"predict": "notify the change if the user is in the action", "true": "user event : single / block delete / insert / overwrite", "bleu": 0.11406351620367239, "rouge": 0.09442724458204334}, {"predict": "method retrieves the p em encoded data from the stream and returns its decoded representation", "true": "method retrieves the p em encoded data from the stream and returns its decoded representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "saves the given entity into the temporary directory", "true": "saves an entity asynchronously", "bleu": 0.17747405280050269, "rouge": 0.3546511627906977}, {"predict": "tell whether this stream supports the mark ( ) operation", "true": "tell whether this stream supports the mark ( ) operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "encode parts of the message using text compaction as described in iso / iec 15438 : 2001 ( e ) , chapter 4", "true": "encode parts of the message using text compaction as described in iso / iec 15438 : 2001 ( e ) , chapter 4", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the name of parent for a parent", "true": "follow the most conventional pattern , returns the parent name unchanged", "bleu": 0.13107175678306446, "rouge": 0.20469798657718125}, {"predict": "create a new in t column", "true": "create a new in t column", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a column from a \" select \" information \" to \"", "true": "converts a select statement ' s parse tree into a relational expression", "bleu": 0.15537125692760353, "rouge": 0.25}, {"predict": "executes the script at the specified location and returns the result", "true": "executes the script at the specified location and returns the result", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a implementation of dom test document builder factory using org", "true": "creates a implementation of dom test document builder factory using org", "bleu": 1.0, "rouge": 1.0}, {"predict": "formats a rate for the next rate", "true": "formats the rate in <unk> for display as <unk>", "bleu": 0.1755217914979255, "rouge": 0.3667334669338677}, {"predict": "checks whether this iterator has been closed", "true": "checks whether this close able iteration has been closed", "bleu": 0.375738646537643, "rouge": 0.7334669338677354}, {"predict": "start the thread that will periodically check for changes to compile time", "true": "start the network listening thread", "bleu": 0.14694106251955755, "rouge": 0.38125000000000003}, {"predict": "makes a new sim pli fier for the given package and set of types", "true": "makes a new sim pli fier for the given package and set of types", "bleu": 1.0, "rouge": 1.0}, {"predict": "escapes bytes in the string array", "true": "escapes the provided string so that it no longer contains the constants", "bleu": 0.09663861439684919, "rouge": 0.31443298969072164}, {"predict": "converts a name into the format for the correct language", "true": "human readable name of the mode , such as \" c + + \"", "bleu": 0.09351498865776114, "rouge": 0.16180371352785147}, {"predict": "the graphical representation of the series values as text", "true": "the graphical representation of the series values as text", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a xml document to a string", "true": "convert a document to a string , assuming later encoding to utf - 8", "bleu": 0.19905304276733932, "rouge": 0.4491899852724595}, {"predict": "returns client for use", "true": "obtain a client connection to the replica set or cluster", "bleu": 0.08017158404431235, "rouge": 0.13260869565217392}, {"predict": "cast a string to a boolean value ( primitive value type )", "true": "cast a string to a boolean value ( primitive value type )", "bleu": 1.0, "rouge": 1.0}, {"predict": "are there more work list items ?", "true": "are there more work list items ?", "bleu": 1.0, "rouge": 1.0}, {"predict": "changes current seed by supplementing a seed argument to the current seed , if this already set ; the argument is used as first seed otherwise", "true": "changes current seed by supplementing a seed argument to the current seed , if this already set ; the argument is used as first seed otherwise", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate a class file for the given output stream", "true": "outputs the bytecode generated as a class file", "bleu": 0.2777619034011791, "rouge": 0.35672514619883033}, {"predict": "determines whether the configuration is valid", "true": "the cff flag determines whether font information should be embedded in the compact font format using swf tag define font 4", "bleu": 0.025642860542324165, "rouge": 0.20198675496688742}, {"predict": "tests an array of generator to run", "true": "test the image generator", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "just like would run a single feature", "true": "<unk> requires the pattern", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "calculates the approximate height of a text , depending on a demo text avoid repeated calls ( e", "true": "calculates the approximate height of a text , depending on a demo text avoid repeated calls ( e", "bleu": 1.0, "rouge": 1.0}, {"predict": "check that the service is non - shutdown operation this task should be removed", "true": "checks if service is being shutdown", "bleu": 0.1250076305588977, "rouge": 0.323321554770318}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method has completed threads if any thread has completed", "true": "checks the currently queued tasks if there are ones which are no longer blocked by dependencies and executes them", "bleu": 0.05125204157936403, "rouge": 0.06531049250535333}, {"predict": "call short method v : invoke a virtual method that returns a short value", "true": "call short method v : invoke a virtual method that returns a short value", "bleu": 1.0, "rouge": 1.0}, {"predict": "draw an horizontal margin indicator", "true": "utility function to draw a vertical margin indicator", "bleu": 0.2118947430943267, "rouge": 0.44309927360774815}, {"predict": "fires a property change of a boolean property with the given name", "true": "fires a property change of a boolean property with the given name", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove all tasks from source", "true": "remove marker icons from panel", "bleu": 0.3021375397356768, "rouge": 0.4}, {"predict": "captures the string for next tag , closing it", "true": "captures string token from current position according to the current lexical state", "bleu": 0.12026590852507517, "rouge": 0.1856925418569254}, {"predict": "return a localized string representation of the integer / s / s \" : \" \" s \" a localized \"", "true": "this static method converts the passed in number into a local iz able representation of an integer , with digit grouping using locale dependant separators", "bleu": 0.07515643302540277, "rouge": 0.1712280701754386}, {"predict": "test parsing client handshake packet", "true": "tests correct parsing of client handshake packets", "bleu": 0.25880882365505126, "rouge": 0.48541114058355433}, {"predict": "initialize the layout with starting values", "true": "initialize the layout with starting values", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks a stack frame value", "true": "checks a stack frame value", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates a quantitative , linearly scaled layout", "true": "calculates a quantitative , square root scaled layout", "bleu": 0.5154486831107657, "rouge": 0.7904967602591793}, {"predict": "creates a new template with the given value", "true": "creates a new template based on the string value", "bleu": 0.4284449847620205, "rouge": 0.6984732824427481}, {"predict": "custom logic here is called when the custom focus is set to the custom area", "true": "return whether or not we should apply the workaround where we take focus for the default button or if that should be determined by the dialog", "bleu": 0.0469852692947848, "rouge": 0.13958810068649888}, {"predict": "initiate signature type by private key", "true": "initiate signature type by private key", "bleu": 1.0, "rouge": 1.0}, {"predict": "selects the zones for the initiators given in the initiators", "true": "given the map of all existing zones for a set on initiators and ports , this function selects the zones that should be used by vip r", "bleu": 0.05477256492953442, "rouge": 0.24959083469721768}, {"predict": "checks whether the extension of the filename is one of those specified", "true": "checks whether the extension of the filename is one of those specified", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a resource post resource", "true": "write jar post resource", "bleu": 0.35930411196308426, "rouge": 0.4535315985130111}, {"predict": "closes the file opened when creating the mp 4 parser", "true": "close the file", "bleu": 0.16590387014219712, "rouge": 0.34078212290502796}, {"predict": "create an event listener", "true": "constructs a new single typed event listener", "bleu": 0.22336835181428535, "rouge": 0.346590909090909}, {"predict": "return a list of node objects that have the given name and are immediate children of the given node", "true": "return a list of node objects that have the given name and are immediate children of the given element ; if name is null , all child elements will be included", "bleu": 0.5028995476955868, "rouge": 0.6901319924575738}, {"predict": "adds a job to the stage", "true": "provides a <unk> instance to work on the given context", "bleu": 0.13487005099534619, "rouge": 0.3588235294117647}, {"predict": "initialize a straight - line from the current glyph position and verifies that the change is contained", "true": "description of the method", "bleu": 0.07223943354597204, "rouge": 0.10720562390158171}, {"predict": "returns total number of events from the given array", "true": "computes entropy for an array of integers", "bleu": 0.15619699684601276, "rouge": 0.1278825995807128}, {"predict": "adds a method to this class", "true": "adds the given method to this class", "bleu": 0.5446761861605913, "rouge": 0.7587064676616916}, {"predict": "add a callback to be invoked when a swipe event is sent to this view", "true": "add a callback to be invoked when a swipe event is sent to this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "atomic ally removes all of the elements from this de que", "true": "atomic ally removes all of the elements from this de que", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a replication request", "true": "authorization related operations should take effect on all replicas , before they complete", "bleu": 0.03184506239916981, "rouge": 0.0}, {"predict": "pops and returns the initial image icon", "true": "shows the initial splash window", "bleu": 0.24446151121745047, "rouge": 0.34366197183098596}, {"predict": "in u u encoded line , encoded lines start with a character that represents the number of bytes in this line", "true": "find the end of the line for the next operation", "bleu": 0.0690889519686715, "rouge": 0.20677966101694914}, {"predict": "adds a transaction to the configured remote transaction", "true": "add a new server transaction to the set of existing transactions", "bleu": 0.21690743377623947, "rouge": 0.4093959731543625}, {"predict": "determine the space between the first two fingers", "true": "determine the space between the first two fingers", "bleu": 1.0, "rouge": 1.0}, {"predict": "return true if the method call contains a polygon", "true": "search for polymorphic containment based on inheritance of receiver and arguments", "bleu": 0.09503475972243516, "rouge": 0.0}, {"predict": "create an component", "true": "instantiate s a new jk tag mapping", "bleu": 0.11909345107359583, "rouge": 0.0}, {"predict": "takes an attribute set and set the event", "true": "filter by attribute set instance", "bleu": 0.21105340631872638, "rouge": 0.32105263157894737}, {"predict": "ensures the given file , overwriting anything already saved", "true": "opens the save file stream if necessary", "bleu": 0.15619699684601276, "rouge": 0.2557651991614256}, {"predict": "calculating the journal partial commit if no commit", "true": "test verifies that exact match and find always return the same reference for the same commit record ( at least as long as the test holds a hard reference to the commit record of interest )", "bleu": 0.005758891077680904, "rouge": 0.12232620320855614}, {"predict": "prints an object to this output stream and flushes this output stream", "true": "prints an object to standard output and flushes standard output", "bleu": 0.3541698766144061, "rouge": 0.7393939393939394}, {"predict": "stop the case of new file , and return the new file we can be loaded on the server", "true": "smart lifecycle stop implementation", "bleu": 0.06439931429457924, "rouge": 0.09854604200323101}, {"predict": "reads bytes from a given file reader until either a specified character in a specified character buffer is completely filled or the end of file is reached", "true": "reads bytes from a given file reader until either a certain character is read , the buffer is completely filled or the end of file is reached", "bleu": 0.7205743386699484, "rouge": 0.8148148148148149}, {"predict": "generate the graph file", "true": "generate the graph file", "bleu": 1.0, "rouge": 1.0}, {"predict": "close a byte array output stream passed in", "true": "close a byte array output stream passed in", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests the name of the save point", "true": "tests behavior when used for a sequence of sql statements", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "method for bean context child interface", "true": "method for bean context child interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the standard entity configuration under the realm", "true": "creates the extended entity configuration under the realm", "bleu": 0.6606328636027614, "rouge": 0.875}, {"predict": "true if the entry is expired", "true": "true if the entry is expired", "bleu": 1.0, "rouge": 1.0}, {"predict": "load user info from image view into the dialog ' s ok button", "true": "loads the user image into the action bar profile pic", "bleu": 0.14283632578659286, "rouge": 0.3562043795620438}, {"predict": "direction roots are not in the left key", "true": "returns a direction corresponding to the specified arrow key", "bleu": 0.16829946711936866, "rouge": 0.34923664122137404}, {"predict": "construct a trace graph by id a span", "true": "create a new trace graph", "bleu": 0.22679164443904004, "rouge": 0.48157894736842105}, {"predict": "create a date from separate strings for month , day , year , hour , minute , and second", "true": "makes a date from separate strings for month , day , year , hour , minute , and second", "bleu": 0.9457416090031758, "rouge": 0.9473684210526315}, {"predict": "handles an exception if the un managed number of tasks is sent", "true": "restart a failed task unless exceeding the <unk> limitation", "bleu": 0.10390302174233558, "rouge": 0.09775641025641024}, {"predict": "update the long term at i col ; reference : = 0", "true": "update the lt p buffer for next frame", "bleu": 0.1367440667823257, "rouge": 0.2074829931972789}, {"predict": "finds the index files in the directory matching the configuration directory", "true": "finds a log 4 j configuration file in the current working directory", "bleu": 0.16278331364721524, "rouge": 0.34512022630834516}, {"predict": "draws a range marker", "true": "draws a line on the chart perpendicular to the y - axis to mark a value or range of values", "bleu": 0.009306775922740032, "rouge": 0.2231707317073171}, {"predict": "adds the given word to the end of the word if it is not already at this position", "true": "attempt to add a word to the line", "bleu": 0.12673718536830808, "rouge": 0.2479674796747967}, {"predict": "this is called by the framework after a connection is useful for handling", "true": "called when m play example is clicked", "bleu": 0.10571070857151538, "rouge": 0.21143847487001732}, {"predict": "read parameters of the header - authenticate header", "true": "read the www - authenticate header", "bleu": 0.3303164318013807, "rouge": 0.7331730769230769}, {"predict": "returns the string representation of the specified boolean", "true": "returns the string value of the given boolean", "bleu": 0.3688939732334406, "rouge": 0.75}, {"predict": "test if all the messages sent are being received", "true": "sends and consumes the messages", "bleu": 0.18575057999133596, "rouge": 0.3012345679012346}, {"predict": "adds + live to the query", "true": "adds + live to the query", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the contents at the given uri", "true": "gets the contents at the given uri", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a boolean indicating whether this key is found on the map", "true": "check existence of config section element", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "creates a new allocation site", "true": "create an allocation site for a given source code line / column", "bleu": 0.09521044541645862, "rouge": 0.2190305206463196}, {"predict": "draws an image , applying a transform from image space into user space before drawing", "true": "draws an image , applying a transform from image space into user space before drawing", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse a portion of an integer into a decimal string", "true": "fast method for parsing integers that are known to fit into regular 32 - bit signed in t type", "bleu": 0.05125204157936403, "rouge": 0.06531049250535333}, {"predict": "creates new form instance of the activity monitor", "true": "creates new form activity monitor sample", "bleu": 0.3549481056010052, "rouge": 0.7331730769230769}, {"predict": "computes from lat - great circle arc", "true": "returns two locations with the most extreme latitudes on the great circle with the given starting location and azimuth", "bleu": 0.04402563878633325, "rouge": 0.14202561117578577}, {"predict": "initializes gui for gui", "true": "initialize the service activation check box", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "paint the check mark in state", "true": "paint the check mark in enabled state", "bleu": 0.7118034480382984, "rouge": 0.9104477611940297}, {"predict": "find uri characters and characters , which have equivalent starting characters", "true": "tries to find an index where the supplied uri can be split into a namespace and a local name that comply with the serialization constraints of the turtle format", "bleu": 0.026372250361614762, "rouge": 0.13874147081122062}, {"predict": "write the log file to the writer", "true": "write to file log", "bleu": 0.23356898886410002, "rouge": 0.3824451410658307}, {"predict": "create a new , copy operation to the storage system", "true": "refresh local files from in it al path", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "create a dns record with a name , type , class , and ttl", "true": "create a dns record with a name , type , class , and ttl", "bleu": 1.0, "rouge": 1.0}, {"predict": "indents the specified text , surrounds it with brackets and put the content on a separate line", "true": "indents the specified text , surrounds it with brackets and put the content on a separate line", "bleu": 1.0, "rouge": 1.0}, {"predict": "add the content of an element", "true": "adds the content spec to the given element declaration", "bleu": 0.1894765350842885, "rouge": 0.3860759493670886}, {"predict": "expands the hash \" spine \" - equivalent to increasing the number of buckets in a conventional hash table", "true": "expands the hash \" spine \" - - equivalent to increasing the number of buckets in a conventional hash table", "bleu": 0.9064567434335018, "rouge": 0.9698744769874479}, {"predict": "this is a separate on connection to close client", "true": "attempts to reconnect to a failed server", "bleu": 0.15619699684601276, "rouge": 0.1278825995807128}, {"predict": "creates a collection of all the fonts", "true": "returns un modifiable collections of records", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "returns the signature that was built by this signature writer", "true": "returns the signature that was built by this signature writer", "bleu": 1.0, "rouge": 1.0}, {"predict": "test whether the name of the list has changed for the given name", "true": "change event to do why just on var ? should it be returned for get ter / setter props ?", "bleu": 0.055750054239455914, "rouge": 0.0583732057416268}, {"predict": "reset all components before parsing and namespace context", "true": "reset all components before parsing and namespace context", "bleu": 1.0, "rouge": 1.0}, {"predict": "distance to this circle", "true": "distance between circle center", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "create a new command line with command line arguments", "true": "constructs a simple command from the given command name and the list of arguments", "bleu": 0.10182634488642418, "rouge": 0.3347050754458162}, {"predict": "grows the size of the stack", "true": "grows the size of the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the given string in lowercase", "true": "returns the given string in lowercase", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an instance with the specified secondary selection and secondary selection mechanisms", "true": "create an instance with over ides", "bleu": 0.19338531381761725, "rouge": 0.3546511627906977}, {"predict": "breadth - first search implementation on your graph", "true": "breadth - first search implementation for integers", "bleu": 0.5873949094699213, "rouge": 0.6747787610619468}, {"predict": "creates the view and analyzes the type", "true": "creates the view and analyzes the type", "bleu": 1.0, "rouge": 1.0}, {"predict": "check that the number of arguments passed to this function is correct", "true": "check that the number of arguments passed to this function is correct", "bleu": 1.0, "rouge": 1.0}, {"predict": "announce multi cast announcement to the storage", "true": "announce membership in the specified groups , and return false if interrupted , otherwise return true", "bleu": 0.056829570481990416, "rouge": 0.16245006657789615}, {"predict": "create a new drawing attributes for the source", "true": "create a drawing attributes with the default settings - clear fill paint and pattern , sold black edge line of width 1", "bleu": 0.048267781294324505, "rouge": 0.3074596774193548}, {"predict": "closes this input stream", "true": "closes this input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates policy tree from organization with configuration", "true": "creates the policy tree , ou = policy , ou = services ,", "bleu": 0.1114789227233716, "rouge": 0.2846034214618974}, {"predict": "rollback method used to rollback volume returned from source volume", "true": "roll back method to clean up stale snapshot volume on storage system", "bleu": 0.12273680279953825, "rouge": 0.2683284457478006}, {"predict": "converts a string denoting an amount of time into milliseconds", "true": "converts a string denoting an amount of time into seconds", "bleu": 0.8931539818068694, "rouge": 0.9}, {"predict": "detach this from the adapter", "true": "this method should be called in activity on destroy method", "bleu": 0.10043553373039076, "rouge": 0.12577319587628866}, {"predict": "read preferences from the preferences", "true": "update button actions from preferences settings", "bleu": 0.24736929544091937, "rouge": 0.3577712609970674}, {"predict": "tries to add a download object to the active list", "true": "tries to add a download object to the active list", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the expr to t la code next line where t is null , else = new line", "true": "adds the expression to t la code / t la code next line and its mapping to mapping vector / mapping vector next line", "bleu": 0.25701981129137863, "rouge": 0.4178082191780822}, {"predict": "checks if the word is upper case sensitive", "true": "true if hunk is longer than 1 character and all letters in the hunk are uppercase", "bleu": 0.07015765577419673, "rouge": 0.15721649484536082}, {"predict": "adds fill components to empty cells in the first row and first column of the grid", "true": "adds fill components to empty cells in the first row and first column of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the string type", "true": "simulate keyboard type to type out a string", "bleu": 0.14628187563941414, "rouge": 0.15721649484536082}, {"predict": "delete the affix and collects all points", "true": "this function ensures that prefix / suffix sets aren ' t redundant", "bleu": 0.07646493705380929, "rouge": 0.0}, {"predict": "returns a random number between 0 and n", "true": "returns the next random in t", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "positions the gesture to the correct day", "true": "updates the user preference fields", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "stores last used r to store in the last used when the last used", "true": "store current system time as the last used", "bleu": 0.17395797375642236, "rouge": 0.3824451410658307}, {"predict": "returns true if the given child element is compatible , meaning that is directly conflict for the given element p 1 , else returns false otherwise", "true": "takes into account transparency when figuring out what can be contained", "bleu": 0.03925345689749394, "rouge": 0.0}, {"predict": "extracts all - null - separated entries from the oid in the tree of week and the count of the encoded in the array", "true": "extract the arcs from an object identifier", "bleu": 0.05606668411195419, "rouge": 0.07159624413145539}, {"predict": "tests whether they are duplicate string", "true": "test case for is duplicate", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "updates the stats , given the result of prediction result", "true": "updates stats for conditional density estimator based on current test instance", "bleu": 0.12623203108004888, "rouge": 0.18885448916408668}, {"predict": "return true if this file should be shown in the directory pane , false if it shouldn ' t", "true": "return true if this file should be shown in the directory pane , false if it shouldn ' t", "bleu": 1.0, "rouge": 1.0}, {"predict": "add two numbers of the same length", "true": "add two numbers of the same length", "bleu": 1.0, "rouge": 1.0}, {"predict": "starts a new connection", "true": "adds a keep alive connection", "bleu": 0.3096787331587729, "rouge": 0.43571428571428567}, {"predict": "this method will increment the access count for a column by 1 whenever a column is getting used", "true": "this method will increment the access count for a column by 1 whenever a column is getting used in query or incremental data load", "bleu": 0.7165313105737893, "rouge": 0.8356164383561644}, {"predict": "creates a cluster policy that implements the same as the same cluster type", "true": "creating cluster policy object", "bleu": 0.12571192676522522, "rouge": 0.2601279317697228}, {"predict": "compares a double with the specified tolerance , using the epsilon for fuzzy equality with the other value , nan", "true": "compares two doubles for equality", "bleu": 0.07264339766175722, "rouge": 0.2691176470588235}, {"predict": "convert bitmap to byte array", "true": "convert bitmap to byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates new form configure coerce ive parsing dialog nb", "true": "creates new form configure coerce ive parsing dialog nb", "bleu": 1.0, "rouge": 1.0}, {"predict": "the natural log of the base", "true": "gets the log at a certain base of a number", "bleu": 0.14260771622124252, "rouge": 0.3588235294117647}, {"predict": "edit entry state , using the id as arguments", "true": "api method", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "evaluates the uf 6 problem", "true": "evaluates the uf 6 problem", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new file descriptor", "true": "constructs save dialog properties", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "reads next variable length block from input", "true": "reads next variable length block from input", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a run of this run n able to the rule list", "true": "will add the run to the list", "bleu": 0.16261701715194898, "rouge": 0.552536231884058}, {"predict": "copies the i object ' s contents of this object", "true": "copies all the converters in the set to the given array", "bleu": 0.12623203108004888, "rouge": 0.18885448916408668}, {"predict": "add an output sensor to the output sensor list , unless all other output are not normalized", "true": "add an output sensor to this route", "bleu": 0.2646015952359329, "rouge": 0.4505169867060562}, {"predict": "initializes the channel and resets it", "true": "initialize the socket stream with a new socket", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "resets the state for a new player to be saved", "true": "resets both media players , and clears the queue", "bleu": 0.13950796967929133, "rouge": 0.21254355400696867}, {"predict": "if a value is present , otherwise do nothing with the value , otherwise do nothing", "true": "if a value is present , invoke the consumer with the value", "bleu": 0.42818185319516083, "rouge": 0.6598557692307692}, {"predict": "send a dim / bright on the node", "true": "send a dim / bright commands to the x 10 hardware to reach a specific intensity", "bleu": 0.22458068077762677, "rouge": 0.47164948453608246}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the next token from standard input , parses it as a float , and returns the float", "true": "reads the next token from standard input , parses it as a float , and returns the float", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct when rotation is ed by the world", "true": "creates a new task scheduler", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates control width and creates text layouts", "true": "calculates control width and creates text layouts", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the cache and deletes all of its stored values", "true": "closes the cache and deletes all of its stored values", "bleu": 1.0, "rouge": 1.0}, {"predict": "always return true since we wanna get all var s in scope", "true": "always return true since we wanna get all var s in scope", "bleu": 1.0, "rouge": 1.0}, {"predict": "character content of character", "true": "inserts a string of characters into the document", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "human readable form as human readable string", "true": "converts the supplies iso 8601 duration into a human readable string", "bleu": 0.1952347922420459, "rouge": 0.32049036777583184}, {"predict": "sends a message to the chat message", "true": "sends a text message to the group", "bleu": 0.4111336169005197, "rouge": 0.7142857142857143}, {"predict": "returns a string object representing this double ' s value", "true": "returns a string object representing this long ' s value", "bleu": 0.7016879391277371, "rouge": 0.9}, {"predict": "remove this thread from the list of running server", "true": "remove a thread from the list", "bleu": 0.4111336169005197, "rouge": 0.6916099773242631}, {"predict": "set the property event object", "true": "creates a default dock node event handler that will help this dock pane track the current docking area", "bleu": 0.02244083618904421, "rouge": 0.07891332470892627}, {"predict": "read source text to log", "true": "reads how much of the source to log", "bleu": 0.2118947430943267, "rouge": 0.44309927360774815}, {"predict": "deletes the license file on disk", "true": "deletes current version of license file in / t mp /", "bleu": 0.13576587000692578, "rouge": 0.33516483516483514}, {"predict": "returns the network number of test that the network is generated", "true": "alias for test net 3 params", "bleu": 0.11390778025531027, "rouge": 0.12423625254582485}, {"predict": "encoding loop on private thread", "true": "encoding loop on private thread", "bleu": 1.0, "rouge": 1.0}, {"predict": "read in ( section method , of class file read , etc", "true": "de - serialize from input stream", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "updates the bounds for the fast scroller", "true": "updates the bounds for the fast scroller", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d netscape ca policy url dialog", "true": "creates a new d netscape ca policy url dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "fired when a key typed key is typed , the text box , text box into the text box", "true": "call this method from your gui screen to process the keys into the text box", "bleu": 0.18759202316167212, "rouge": 0.30049261083743845}, {"predict": "locate the best instance of ' pattern ' in ' text ' near ' loc ' using the bit ap algorithm", "true": "locate the best instance of ' pattern ' in ' text ' near ' loc ' using the bit ap algorithm", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a directory , if necessary", "true": "creates a new directory with the given parent folder and folder name", "bleu": 0.08993236413460196, "rouge": 0.20962199312714777}, {"predict": "is operating system linux ?", "true": "is operating system windows 8 or 8", "bleu": 0.3406115671352173, "rouge": 0.48541114058355433}, {"predict": "finds all function that are used for this function in the proper set of function interface", "true": "find unused functions in a unit", "bleu": 0.07692375026049747, "rouge": 0.09902597402597402}, {"predict": "adds items to list", "true": "adds the items to the list", "bleu": 0.3258798048281462, "rouge": 0.7721518987341772}, {"predict": "returns an un modifiable list containing no proxy types", "true": "gets an un modifiable proxy list that will have as it ' s only entry an direct proxy", "bleu": 0.10694820729788418, "rouge": 0.34936998854524626}, {"predict": "adds an array of files to the set of rows", "true": "adds a list of definitions to the existing list of definitions", "bleu": 0.17851905035930718, "rouge": 0.47213622291021673}, {"predict": "adds a new observation with the specified value and group", "true": "adds a new observation with the specified value and group", "bleu": 1.0, "rouge": 1.0}, {"predict": "counts the v cf record ( i", "true": "add the given v cf record to the statistics", "bleu": 0.27470644934024185, "rouge": 0.48897795591182364}, {"predict": "read some bytes from the stream", "true": "read some bytes from the stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new ld if entry reader which will read lines of ld if to the provided array of ld if", "true": "creates a new ld if entry reader which will read lines of ld if from the provided array of ld if lines", "bleu": 0.8319384302042989, "rouge": 0.926347760060744}, {"predict": "update the stats info to highlight", "true": "a person may re - appear on the same link", "bleu": 0.11341174240707227, "rouge": 0.11960784313725491}, {"predict": "remove item at the given position", "true": "remove item at the given position", "bleu": 1.0, "rouge": 1.0}, {"predict": "update page the license to populate basic metadata page used on basic metadata page", "true": "present the <unk> to the user - if the pre accept parameter is set , then simply display them through system", "bleu": 0.05933310816574454, "rouge": 0.11030741410488246}, {"predict": "add a geo tiff key to the registry", "true": "add an existing geo key to the directory", "bleu": 0.3303164318013807, "rouge": 0.625}, {"predict": "escape a string gts whose values are the same as non - buffered gts length", "true": "detect patterns in a geo time serie instance", "bleu": 0.08225964699966554, "rouge": 0.09200603318250376}, {"predict": "parse the list of debug - return", "true": "debug method : output all item sets", "bleu": 0.18575057999133598, "rouge": 0.14285714285714285}, {"predict": "flatten a boolean into an xml serialize r", "true": "flatten a boolean into an xml serialize r", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new term rule", "true": "will add the rule to the rules list", "bleu": 0.14983220973977976, "rouge": 0.1476997578692494}, {"predict": "creates a new swing spec object", "true": "builds a new skype connection without connecting to anything", "bleu": 0.17632778423526832, "rouge": 0.2573839662447257}, {"predict": "called from on touch event to end a drag operation", "true": "called from on touch event to end a drag operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the flags to this text", "true": "or new flags with existing flags", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "does the supplied certificate match the key store", "true": "check whether or not a trusted certificate in the supplied key store matches the supplied x", "bleu": 0.10619764719483066, "rouge": 0.31443298969072164}, {"predict": "remove last articles , which is not present in date and delete date", "true": "delete given amount of last updated articles from db", "bleu": 0.1135935489027116, "rouge": 0.18798151001540828}, {"predict": "move all views ( excluding headers and footers ) held by this abs list view into the supplied list", "true": "move all views ( excluding headers and footers ) held by this two way abs list view into the supplied list", "bleu": 0.821383861063855, "rouge": 0.941510966693745}, {"predict": "creates a proxy ver i fier with a proxy class that uses the proxy interface", "true": "returns a ver i fier for the smart proxies of the specified mahal o server proxy", "bleu": 0.1647360694770947, "rouge": 0.38485804416403785}, {"predict": "draw the display area of this object", "true": "displays our component in the location ( 0 , translate y )", "bleu": 0.0909326471926252, "rouge": 0.10049423393739704}, {"predict": "inserts any necessary separators and whitespace before a name", "true": "inserts any necessary separators and whitespace before a name", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies data from an input stream to an output stream using a buffer of specified size", "true": "copies data from an input stream to an output stream using a buffer of specified size", "bleu": 1.0, "rouge": 1.0}, {"predict": "test the configuration files option with copying of file as - is", "true": "test the configuration files option with copying of sub directory as - is", "bleu": 0.7003015589741095, "rouge": 0.8736979166666665}, {"predict": "adds the given number of milliseconds with the u pattern", "true": "add two long integers , checking for overflow", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "appends each of the simple qualifier to the x", "true": "serializes the general qualifier", "bleu": 0.15619699684601276, "rouge": 0.3306233062330623}, {"predict": "registers a check box with specified container", "true": "adds a pre configured j check box to the specified container , setting its alignment constraint to left and adding an empty padding border", "bleu": 0.02836453286085719, "rouge": 0.2935514918190569}, {"predict": "draws the background for the plot", "true": "draws the background for the plot", "bleu": 1.0, "rouge": 1.0}, {"predict": "push the state of this object to what it was called", "true": "push the current graphics state on to the stack", "bleu": 0.17033186037639278, "rouge": 0.4073455759599332}, {"predict": "drop a full text index for a table", "true": "drop an existing full text index for a table", "bleu": 0.662423225940787, "rouge": 0.8148854961832059}, {"predict": "gets but does not remove the head of the queue", "true": "gets but does not remove the head of the queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the provided processor to the end of the processor queue", "true": "adds a processor to the internal processor queue", "bleu": 0.2620251007173263, "rouge": 0.6500888099467139}, {"predict": "computes the instructions for a given byte array with the correct opcode prefix to be an integer , indicating the then return the correct opcode list of the bits ( out note : 2 )", "true": "adds a copy of the given byte array as a data element ( i", "bleu": 0.08202649282493453, "rouge": 0.22117476432197244}, {"predict": "initializes the resource name with configuration information , u sally set by the administrators", "true": "initializes the resource name with configuration information , u sally set by the administrators", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete an old , free pool entry to make room for a new one", "true": "delete an old , free pool entry to make room for a new one", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert less than one thousand", "true": "convert less than one thousand", "bleu": 1.0, "rouge": 1.0}, {"predict": "get true if the base 64 of an embedded base 64 string", "true": "detect if an uri represents an embedded base 64 image", "bleu": 0.3026643726685863, "rouge": 0.46212121212121204}, {"predict": "change current state", "true": "for internal use only", "bleu": 0.32372956394183194, "rouge": 0.0}, {"predict": "parses link label and returns the link", "true": "attempt to parse a link label , returning number of characters parsed", "bleu": 0.11967409389919142, "rouge": 0.20098846787479407}, {"predict": "inserts the comments into the comments of the tree from the given tree", "true": "this method try to attributes the nodes received to child of the node", "bleu": 0.1350862565735141, "rouge": 0.23076923076923084}, {"predict": "reads the given file as a string", "true": "dev uel ve el conte ni do de un file como string", "bleu": 0.10063351655856649, "rouge": 0.20098846787479407}, {"predict": "invoked when a processing exception occurs", "true": "invoked when an unexpected exception occurred during processing", "bleu": 0.236682065782701, "rouge": 0.4178082191780822}, {"predict": "checks if the user should have access to the app", "true": "checks if the user should have access to the app", "bleu": 1.0, "rouge": 1.0}, {"predict": "close the file", "true": "saves and closes the track", "bleu": 0.2758512992979459, "rouge": 0.23921568627450981}, {"predict": "returns the index of one of the available operators randomly selected using the probabilities", "true": "returns the index of one of the available operators randomly selected using the probabilities", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string list of the given string as a chunk of split points", "true": "returns a list of string chunks , derived from a given string", "bleu": 0.18207052811092128, "rouge": 0.4680306905370844}, {"predict": "this method will convert boolean to string", "true": "this method will convert boolean to string with comma separated", "bleu": 0.6514390575310556, "rouge": 0.7981308411214955}, {"predict": "208 * decode the contents of the string into a byte buffer", "true": "decode the contents of the string into a byte buffer", "bleu": 0.8242367502646054, "rouge": 0.9242424242424241}, {"predict": "removes all the instances from the model", "true": "clears the content of the panel", "bleu": 0.20556680845025982, "rouge": 0.31202046035805625}, {"predict": "tries to background color for given background", "true": "get a brighter shade of an input color", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "stops the thread pools", "true": "shuts down the network thread , this will trigger failures if you have network requests", "bleu": 0.025419978385188596, "rouge": 0.190625}, {"predict": "this ctor interprets the byte array as a sequence of characters to send", "true": "this ctor interprets the byte array as a sequence of characters to send", "bleu": 1.0, "rouge": 1.0}, {"predict": "executed when the send callback is completed", "true": "executed when the i / o has completed", "bleu": 0.31689174383082924, "rouge": 0.5269978401727862}, {"predict": "write the go lom b code of a value", "true": "write the go lom b code of a value", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new force function to the simulator", "true": "add a new force function to the simulator", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a number to a metric value ( reference type )", "true": "work around for google g son parser emitting numbers as ' lazily parsed ' numbers", "bleu": 0.06658411377036827, "rouge": 0.0}, {"predict": "gets the overlap between this range of the given sequence", "true": "test whether the specified range overlaps the current region", "bleu": 0.14991106946711685, "rouge": 0.31881533101045295}, {"predict": "generates a new pseudo random number using the given intersection", "true": "creates a new <unk> object", "bleu": 0.16590387014219712, "rouge": 0.2837209302325582}, {"predict": "prepare - e", "true": "prepare - e", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if this url is working", "true": "method to quickly indicate if the service is not configured", "bleu": 0.1255107248036171, "rouge": 0.23921568627450981}, {"predict": "convert a csv list into an array of strings", "true": "convert a csv list into an array of strings", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will be used to read the byte array from file based on offset and length ( number of bytes )", "true": "this method will be used to read the byte array from file based on offset and length ( number of bytes ) need to read", "bleu": 0.8725252928694237, "rouge": 0.9255172413793104}, {"predict": "fatal fatal error : return the fatal error occurred", "true": "fatal error : print a message and terminate the vm", "bleu": 0.24855227187657006, "rouge": 0.41709401709401706}, {"predict": "move a file to a backup", "true": "move original file to backup directory", "bleu": 0.3303164318013807, "rouge": 0.6666666666666666}, {"predict": "push a pair of nodes into the stack", "true": "push a pair of nodes into the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove storage systems with given parameters", "true": "clears storage in preparation for restore operation", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "appends the specified container config to the cloud", "true": "cloud specific container config options", "bleu": 0.22679164443904004, "rouge": 0.32105263157894737}, {"predict": "removes users from the organizational unit", "true": "removes users from the organization", "bleu": 0.6147881529512643, "rouge": 0.7393939393939394}, {"predict": "checks to see if the filename matches one of the wildcard s", "true": "checks to see if the filename matches one of the wildcard s", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the region from the model", "true": "include a region in the model", "bleu": 0.31239399369202553, "rouge": 0.5}, {"predict": "a utility function to close an input stream without raising an exception", "true": "a utility function to close an input stream without raising an exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "the start of an element", "true": "this function fetches the request id value of the batch request xml element and call the default implementation ( super )", "bleu": 0.013234179795826943, "rouge": 0.20771850170261064}, {"predict": "closes all connected clients sockets , then closes the underlying server socket channel , effectively killing the server socket selector thread , freeing the port the server was bound to and stops all internal worker threads", "true": "closes all connected clients sockets , then closes the underlying server socket channel , effectively killing the server socket selector thread , freeing the port the server was bound to and stops all internal worker threads", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new storage", "true": "creates new instance of storage for storing temporary data", "bleu": 0.12241977696855179, "rouge": 0.43160377358490565}, {"predict": "calculates the width and stores it in the render er state", "true": "calculates the bar width and stores it in the render er state", "bleu": 0.7918754728665413, "rouge": 0.949080622347949}, {"predict": "opens the camera and starts sending preview frames to the underlying detector", "true": "opens the camera and starts sending preview frames to the underlying detector", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a break point listener", "true": "adds a break point listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the peer for the internal list", "true": "updates the container", "bleu": 0.24446151121745047, "rouge": 0.43109540636042404}, {"predict": "removes and signals threads from queue for phase", "true": "removes and signals threads from queue for phase", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an initialized dateformat object", "true": "returns an initialized dateformat object", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints the stack trace to system", "true": "used in environments where full debug may not be available", "bleu": 0.09536752763778475, "rouge": 0.0}, {"predict": "looks for a type element , and return void if full", "true": "check the name of a type and its enclosed elements and type parameters", "bleu": 0.13430919728978852, "rouge": 0.24629878869448185}, {"predict": "creates a new block", "true": "create a new block with default style at ( start x , start y )", "bleu": 0.042751137399864, "rouge": 0.2859375}, {"predict": "returns a poisson distribution for a poisson distribution with mean", "true": "returns value for poisson distribution", "bleu": 0.18850319022747347, "rouge": 0.5674418604651164}, {"predict": "finds the expression expression in the given source", "true": "recursive parsing statement", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "add the given channel", "true": "adds the given channel to this set of stored states , broadcasting the contract and refund transactions when the channel expires and notifies the wallet of an update to this wallet extension", "bleu": 0.0006098122237474263, "rouge": 0.1461661341853035}, {"predict": "deletes all files in a folder", "true": "deletes all files in a folder", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads all the data from a file", "true": "convenient way of sending data from an input stream to an output file in the most efficient way possible", "bleu": 0.05002278341013454, "rouge": 0.21303841676367868}, {"predict": "releases the underlying receiver", "true": "releases the underlying receiver", "bleu": 1.0, "rouge": 1.0}, {"predict": "trim all occurrences of the supplied leading character from the given string", "true": "trim all occurrences of the supplied leading character from the given string", "bleu": 1.0, "rouge": 1.0}, {"predict": "retrieves and removes the head of this queue , waiting if necessary until an element with an expired delay is available on this queue", "true": "retrieves and removes the head of this queue , waiting if necessary until an element with an expired delay is available on this queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the thread 0 is 0 but the timer will be scheduled for blocking", "true": "schedules time out on the timer wheel in a thread - safe manner", "bleu": 0.10878661088699644, "rouge": 0.14055299539170507}, {"predict": "submits task to execution pool", "true": "submits task to execution pool", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the attribute selection ( s ) to this selector", "true": "adds the given attribute selection", "bleu": 0.2086130724305753, "rouge": 0.5674418604651164}, {"predict": "creates the buffer containing any left over bytes", "true": "creates the buffer containing any left over bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "samples the values from the action values", "true": "returns a sample point for the action , assuming a uniform distribution over the action values", "bleu": 0.10105885506947931, "rouge": 0.3249001331557923}, {"predict": "on open we manage some statistics , and remove this connection from channel", "true": "on close we manage some statistics , and remove this connection from the channel group", "bleu": 0.6773967313526669, "rouge": 0.846242774566474}, {"predict": "configure the head of the simulation", "true": "load in headless mode a specified model and create an experiment", "bleu": 0.08072686929338534, "rouge": 0.0}, {"predict": "determines if this id corresponds to the ' next ' execution window", "true": "determines if this id corresponds to the ' next ' execution window", "bleu": 1.0, "rouge": 1.0}, {"predict": "check whether the given class is visible in the given class loader", "true": "check whether the given class is visible in the given class loader", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the head of the queue", "true": "remove the event and save the response into the other path", "bleu": 0.10624253482403696, "rouge": 0.2234432234432234}, {"predict": "constructs a xml builder", "true": "returns a xml for displaying attribute in property sheet", "bleu": 0.1354797537848421, "rouge": 0.28773584905660377}, {"predict": "returns true if the specified string is an one - less than an appropriate one or more m replication mark if an an one", "true": "returns true if the at g string matches the name of the arg , or , if allow <unk> is true , returns true if the arg length is one and it matches the first letter of the arg name", "bleu": 0.08608901008736067, "rouge": 0.23921568627450981}, {"predict": "appends a string list to a list", "true": "adds all items in the specific array to the specific list", "bleu": 0.1160873020151595, "rouge": 0.2136602451838879}, {"predict": "removes the super card from the list of super card nodes", "true": "removes a supercard toast from the list", "bleu": 0.22416933501922287, "rouge": 0.4629981024667932}, {"predict": "test based on some sample", "true": "test based on some sample data", "bleu": 0.8187307530779819, "rouge": 0.8944281524926685}, {"predict": "a function that generates password - based aes & h mac keys", "true": "a function that generates password - based aes & h mac keys", "bleu": 1.0, "rouge": 1.0}, {"predict": "partially un qualifies the assertion value", "true": "escapes the provided assertion value according to the l dap standard", "bleu": 0.13576587000692578, "rouge": 0.33516483516483514}, {"predict": "filter the child view at index and remove it if appropriate", "true": "filter the child view at index and remove it if appropriate", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if a declaration has already been made for a given prefix", "true": "check if a declaration has already been made for a given prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a step ( an internally implemented ) method to be called with a step", "true": "executes one simulation step", "bleu": 0.08225964699966554, "rouge": 0.11753371868978806}, {"predict": "calculate the specific status", "true": "manage attack status rate", "bleu": 0.35930411196308426, "rouge": 0.25}, {"predict": "returns an instance of the vertexes in an array of mx d graphs", "true": "the function supplied here may be called more than once per vertex depending on the implementation", "bleu": 0.07583581624939055, "rouge": 0.06770255271920088}, {"predict": "releases any changes in the queue", "true": "changes the state of a connection desc from busy to idle and records the current time so that we will know how long it has been idle", "bleu": 0.007382097986232767, "rouge": 0.1087344028520499}, {"predict": "for each host , validates that it checks for each replica of the shard , for that they occur as a host for each replica of the shard", "true": "validate if there is less replicas than requested to remove", "bleu": 0.03639374222382004, "rouge": 0.0}, {"predict": "return this as a class declaration or throw an unsupported operation exception", "true": "return this as a class declaration or throw unsupported operation exception", "bleu": 0.7611606003349892, "rouge": 0.9640804597701149}, {"predict": "converts a partition spec to a name", "true": "converts a map of partition key - value pairs to a name", "bleu": 0.20917479021833488, "rouge": 0.6029654036243821}, {"predict": "convert the specified char sequence to an input stream , encoded as bytes using the specified character encoding", "true": "convert the specified char sequence to an input stream , encoded as bytes using the specified character encoding", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "regression test for harmony - 4396", "true": "regression test for harmony - 4396", "bleu": 1.0, "rouge": 1.0}, {"predict": "method used to delete a sync take uploaded images and delete it", "true": "method delete cheque remove cheque from db by id", "bleu": 0.11498759556447223, "rouge": 0.19551282051282048}, {"predict": "returns the correlation correlation of the reader for a subset of the texture 3", "true": "assumes that the given co variance matrix was extracted in such a way that the order of the variables ( in either direction ) is x , y , z 1 ,", "bleu": 0.0382455330797075, "rouge": 0.16245006657789615}, {"predict": "adds a column expression", "true": "add a derived column to this table , using an expression instance to dynamically calculate the column data values", "bleu": 0.01004882722400157, "rouge": 0.23341836734693874}, {"predict": "increments the put time accumulator", "true": "increments put and get time accumulators", "bleu": 0.2658156069371863, "rouge": 0.5366568914956013}, {"predict": "check whether an input is valid or not", "true": "check whether the specified saturation is valid or not", "bleu": 0.4530254148525908, "rouge": 0.6984732824427481}, {"predict": "parse a layout cell , returning a string", "true": "utility method to parse a cell definition for a particular value", "bleu": 0.16481400866629634, "rouge": 0.4093959731543625}, {"predict": "this method sends a property change to a property change", "true": "call for circuit builder to make icon color changes for its gui", "bleu": 0.10320893749383378, "rouge": 0.08944281524926685}, {"predict": "invoke the command to start command with one command", "true": "run command cm d in separate process in directory", "bleu": 0.14113991930789777, "rouge": 0.1111111111111111}, {"predict": "this method is called by the selectable channel", "true": "returns the socket channel underlying this socket com m channel", "bleu": 0.1485237584394808, "rouge": 0.21785714285714283}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "create xml from byte array", "true": "creates a mojang son string from the given byte array tag", "bleu": 0.11629030063732083, "rouge": 0.35124760076775424}, {"predict": "adds a filter to a property file", "true": "add filter ( s ) for possible types to the input file choose r", "bleu": 0.0812630644213965, "rouge": 0.2695139911634757}, {"predict": "windows reg to pool value", "true": "retries <unk> um value ex ( ) max attempts times before giving up", "bleu": 0.05512018958855254, "rouge": 0.10286677908937607}, {"predict": "parse a text in the format", "true": "parses the value as an rfc 822 date / time", "bleu": 0.11341174240707227, "rouge": 0.11960784313725491}, {"predict": "unit test for empty index fields", "true": "test sorts when there ' s nothing in the index", "bleu": 0.1255107248036171, "rouge": 0.23921568627450981}, {"predict": "creates a model instance for a particular data set", "true": "validates all resources in a given model , which is expected to be the default graph of a given data set", "bleu": 0.05822753005110547, "rouge": 0.3109072375127421}, {"predict": "adds a new annotation to the set of annotations", "true": "adds specified annotation to the end of annotations array and tagged it", "bleu": 0.23263472697663287, "rouge": 0.5570776255707762}, {"predict": "attempts to find the preferred idp using the configured config and the configured config service", "true": "finds the preferred idp from the http ser v let request", "bleu": 0.16188613565728213, "rouge": 0.3164721141374838}, {"predict": "check if the given directory exists", "true": "verify whether directory already exists or not", "bleu": 0.20693220168471366, "rouge": 0.3034825870646766}, {"predict": "assert the specified values have been received in the declared order", "true": "assert the specified values have been received in the declared order", "bleu": 1.0, "rouge": 1.0}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the event position that is closest to the given time the cell", "true": "finds the position in the cursor of the event that best matches the time and id", "bleu": 0.1275401320639038, "rouge": 0.33851276359600446}, {"predict": "prints a float followed by a newline", "true": "prints a float followed by a newline", "bleu": 1.0, "rouge": 1.0}, {"predict": "extracts a register ( either a { register ) or dh an exception if any", "true": "extracts a sub register ( like a x , al , ah ) from a parent register ( like <unk> x )", "bleu": 0.09600887809017075, "rouge": 0.36589545844044563}, {"predict": "post processing on failed authentication", "true": "post processing on failed authentication", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds a method that builds the given method", "true": "build <unk> of method", "bleu": 0.16036590969929357, "rouge": 0.17732558139534885}, {"predict": "build a qualifier regular expression based on a qualifier", "true": "just used for like and not like", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "finds a set of changes in a data object", "true": "scans the methods looking for ones annotated with the name annotation", "bleu": 0.09503475972243516, "rouge": 0.0}, {"predict": "remove all the blocks that are in the set go to the non - code", "true": "remove all phi instructions from the ir", "bleu": 0.11633270842295028, "rouge": 0.291866028708134}, {"predict": "returns the number of times the token appears in the target", "true": "returns the number of times the token appears in the target", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method initializes the coverage map from the given list of tests to properly according to the test suite", "true": "builds the name map based on coverage goal stored as covered in each of the tests", "bleu": 0.08808424865565326, "rouge": 0.23215984776403426}, {"predict": "builds interceptor join interceptor for methods of the given resource and returns any class names in the given class", "true": "build <unk> of action", "bleu": 0.06439931429457924, "rouge": 0.09854604200323101}, {"predict": "check gml footprint validity", "true": "check gml footprint validity", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a timetable ( network change events file )", "true": "creates a timetable ( network change events file )", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute pro bit ( inverse cd f ) for exp gamma distributions", "true": "compute pro bit ( inverse cd f ) for log gamma distributions", "bleu": 0.7910665071754358, "rouge": 0.9166666666666665}, {"predict": "generate a pbe based key suitable for a mac algorithm , the key size is chosen according the mac size , or the hashing algorithm , whichever is greater", "true": "generate a pbe based key suitable for a mac algorithm , the key size is chosen according the mac size , or the hashing algorithm , whichever is greater", "bleu": 1.0, "rouge": 1.0}, {"predict": "the quick assist assistant", "true": "the quick assist assistant", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a byte at the specified offset from this native object ' s base address", "true": "writes a byte at the specified offset from this native object ' s base address", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method adds an error to the validation error", "true": "add a new validation error to the accumulating validation errors", "bleu": 0.26708679784499234, "rouge": 0.41709401709401706}, {"predict": "parses a option value into a single option", "true": "parses a given option setting string to a map of settings", "bleu": 0.16481400866629634, "rouge": 0.4093959731543625}, {"predict": "processes the client credentials", "true": "generates client ' s credentials given the client ' s salt , identity and password", "bleu": 0.0324838397986111, "rouge": 0.190625}, {"predict": "builds the json blob using the given so lr core index can be used to generate the target luce ne process", "true": "build the underlying luce ne suggester", "bleu": 0.0821610732492254, "rouge": 0.2469635627530364}, {"predict": "callback when tour is being sent to the current tour", "true": "loads the given json data and start the tour", "bleu": 0.13950796967929133, "rouge": 0.21254355400696867}, {"predict": "open connection and setup j mx service", "true": "create a connection to the j mx agent and setup the m x bean proxies", "bleu": 0.102601628763616, "rouge": 0.2559440559440559}, {"predict": "runs the test case", "true": "runs a test which serializes and de serializes random word values", "bleu": 0.06909866532427987, "rouge": 0.24596774193548387}, {"predict": "adds a listener to the button , probably throw an exception", "true": "registers a listener to receive events", "bleu": 0.21200626759025185, "rouge": 0.3727087576374745}, {"predict": "creates a unique name with data loaded from the parent folder", "true": "create a name for a message according to < a href = \" http : / / cr", "bleu": 0.06671246496902901, "rouge": 0.1321776814734561}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is here to handle the fact that it is dependent on the handle", "true": "handles a ' click ' on the plot by updating the anchor values", "bleu": 0.11633270842295028, "rouge": 0.14472123368920523}, {"predict": "after writing and barrier is allowed to make sure the next code is allowed", "true": "the osr barrier instruction is not in ir , so the bc index was not adjusted in osr adjust bc index", "bleu": 0.06375757399654296, "rouge": 0.1654611211573237}, {"predict": "used to have some meaningful info on this object", "true": "used to have some meaningful info on this object mostly used for bean shell", "bleu": 0.573753420737433, "rouge": 0.7530864197530865}, {"predict": "merges the data into the array", "true": "returns a copy of the vector , with an empty bit range inserted at the specified location", "bleu": 0.03908444433970424, "rouge": 0.1601049868766404}, {"predict": "creates a unique new temporary directory under \" java", "true": "creates a unique new temporary directory under \" java", "bleu": 1.0, "rouge": 1.0}, {"predict": "synchronizes the stored data collection for all authentication data", "true": "ensures that all au th sources have au th data ( e", "bleu": 0.11192003885776355, "rouge": 0.1856925418569254}, {"predict": "creates an element in the given xml document", "true": "creates an element in the xml encryption specification namespace", "bleu": 0.5387410466197604, "rouge": 0.6984732824427481}, {"predict": "move all views remaining in m active views to m scrap views", "true": "move all views remaining in m active views to m scrap views", "bleu": 1.0, "rouge": 1.0}, {"predict": "draw wind on loading animation", "true": "draw wind on loading animation", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if we have proxy configuration settings in the properties", "true": "checks if we have proxy configuration settings in the properties", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if the expression is equal to its default value", "true": "check if the expression is equal to its default static value", "bleu": 0.8276468411070557, "rouge": 0.9442724458204335}, {"predict": "parse key - value pairs to map , ignore empty key", "true": "parse key - value pairs to map , ignore empty key", "bleu": 1.0, "rouge": 1.0}, {"predict": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "true": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes a new buffer available either by allocating a new one or re - cycling an existing one", "true": "makes a new buffer available either by allocating a new one or re - cycling an existing one", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new website address from | origin or host or pattern |", "true": "creates a new website address from | origin or host or pattern |", "bleu": 1.0, "rouge": 1.0}, {"predict": "test of a filter with one line of the file", "true": "test verifies that no files are found using a <unk> en <unk> unique base name", "bleu": 0.08461586088475063, "rouge": 0.15443037974683543}, {"predict": "clears pending ramming ramming unit for this phase", "true": "resets the pending rams list", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "add the pad bytes to the passed in block , returning the number of bytes added", "true": "add the pad bytes to the passed in block , returning the number of bytes added", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a page ( like a page )", "true": "add a collection of commands to the page list", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "returns a string representation of the matrix", "true": "returns a string representation of the system", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "adds a sequence of statements that are not equal to the end of this sequence , otherwise does nothing", "true": "adds a sequence of statements to the end of this sequence when the sequence object is not null , otherwise does nothing", "bleu": 0.5157313236960263, "rouge": 0.7221783741120757}, {"predict": "notify all listeners about the state has changed", "true": "call back from service to activity", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "sensitivity in percent to a percent change in the underlying forward price", "true": "sensitivity in percent to a percent change in the underlying spot price", "bleu": 0.842362674378975, "rouge": 0.9166666666666665}, {"predict": "reads the contents of http entity into a byte", "true": "reads the contents of http entity into a byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the first foo in the ordered set where u u id = & # 63 ;", "true": "returns the first foo in the ordered set where u u id = & # 63 ;", "bleu": 1.0, "rouge": 1.0}, {"predict": "rounds the given float to the next decimal value", "true": "static method to round a float value to the number of decimal places defined by decimal places", "bleu": 0.09081302407530907, "rouge": 0.29151732377538825}, {"predict": "creates a new instance of the specified components under the specified graphics configuration generator", "true": "this runner needs runner options ( user configurations ) and environment name ( inputted by user )", "bleu": 0.059993047481797936, "rouge": 0.0}, {"predict": "returns a string describing this result listener", "true": "returns a string describing this result producer", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "is operating system windows and : it ' s input ?", "true": "is operating system windows me ?", "bleu": 0.33180774028439425, "rouge": 0.6211812627291243}, {"predict": "converts the given date to a string", "true": "converts the input to a string with special missing value handling", "bleu": 0.23217460403031903, "rouge": 0.5341506129597198}, {"predict": "computes the size of this form component", "true": "computes and returns the pixel size of the given component using the given form specification , measures , and cell size", "bleu": 0.040889869516541145, "rouge": 0.3276047261009667}, {"predict": "start the next generated segment", "true": "start up this replica , which possibly requires heavy copying of files from the primary node , if we were down for a long time", "bleu": 0.005533842072529231, "rouge": 0.11902439024390245}, {"predict": "compares two nodes for each node", "true": "checks if i element type of both nodes are the same", "bleu": 0.09600096733558854, "rouge": 0.1117216117216117}, {"predict": "reads the next line of logs that were processed", "true": "read one log message from log file", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "appends this node ' s text content to the given builder", "true": "appends this node ' s text content to the given builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if a response message contains a body", "true": "checks if a response message contains a body", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the database from the given input stream", "true": "loads the database from the given input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "cast a long value to a string", "true": "cast a long value to a string", "bleu": 1.0, "rouge": 1.0}, {"predict": "resets this stream to the beginning of the source string", "true": "resets this stream to the beginning of the source string", "bleu": 1.0, "rouge": 1.0}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "implements input stream", "true": "implements input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a char sequence to a file creating the file if it does not exist using the default encoding for the vm", "true": "writes a char sequence to a file creating the file if it does not exist using the default encoding for the vm", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if this proxy is enabled", "true": "checks if the identity provider is configured for proxy ing the authentication requests for a requesting service provider", "bleu": 0.045890725128646594, "rouge": 0.14823815309842042}, {"predict": "this compile the specified object as the t mp", "true": "creates a copy of rules", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "remove all of the listeners", "true": "remove all of the listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a selection input dialog whose combo box can be editable", "true": "create a selection input dialog whose combo box can be editable", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method builds the json directory", "true": "build the underlying luce ne suggester", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "convert a \"", "true": "convert a \"", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new uri instance of the given un encoded component parts", "true": "creates a new uri instance of the given un encoded component parts", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the specified solution to the population , returning its assigned identifier", "true": "adds the specified solution to the population , returning its assigned identifier", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets byte array containing all remaining bytes in this byte array", "true": "creates a newly allocated byte array", "bleu": 0.14991106946711685, "rouge": 0.2484725050916497}, {"predict": "create a disk in the given project", "true": "create a disk in the specified project", "bleu": 0.7071067811865475, "rouge": 0.8571428571428571}, {"predict": "performs the given domain", "true": "performs domain - match as described in the netscape draft", "bleu": 0.09534061816653486, "rouge": 0.26521739130434785}, {"predict": "disables the attribute name", "true": "disables all the attribute change notifications the attribute name of which equals the specified attribute name to be sent to the listener", "bleu": 0.007855246784369016, "rouge": 0.273542600896861}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the instruction to push the given handle on the stack", "true": "generates the instruction to push a handle on the stack", "bleu": 0.6340466277046861, "rouge": 0.8645669291338582}, {"predict": "generate the multi - part post body providing the parameters and boundary string", "true": "generate the multi - part post body providing the parameters and boundary string", "bleu": 1.0, "rouge": 1.0}, {"predict": "look up a character for a given key", "true": "lookup a string key in the standard key sets", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "assert that the expected port change events have been re ce vied , asserting the expected ordering", "true": "assert that the expected port change events have been re ce vied , asserting the expected ordering", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method checkpoints the checkpoints", "true": "custom serialize r", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "return a toggle property property change", "true": "* public properties *", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "decode the octets in an xml - encoded octets", "true": "decodes octets to characters using the utf - 8 decoding and appends the characters to a string buffer", "bleu": 0.061746576272781344, "rouge": 0.13974799541809851}, {"predict": "construct an array from a vector of field vector", "true": "construct a vector by appending one vector to another vector", "bleu": 0.18885888592159467, "rouge": 0.41709401709401706}, {"predict": "reverses ongoing animations or starts pending animations in reverse", "true": "reverses ongoing animations or starts pending animations in reverse", "bleu": 1.0, "rouge": 1.0}, {"predict": "start listening to the end of this event", "true": "start address book monitoring", "bleu": 0.16036590969929357, "rouge": 0.17732558139534885}, {"predict": "support for reporting changes for constrained integer properties", "true": "support for reporting changes for constrained integer properties", "bleu": 1.0, "rouge": 1.0}, {"predict": "correctness test this stops this so we fetch the cart term", "true": "correctness test for the di rich let lm model", "bleu": 0.16108992769687397, "rouge": 0.3055091819699499}, {"predict": "sets the encoded oracle for the given stream , and writes the result of the given entry", "true": "called when the sinks found by the media route provider for the particular | source urn | have changed", "bleu": 0.09603363426973091, "rouge": 0.16501352569882777}, {"predict": "converts the passed entity to a user", "true": "converts the passed d to to a user", "bleu": 0.43343894987509085, "rouge": 0.7904967602591793}, {"predict": "generates the statement that are unique and foreign key without a transaction without the statement", "true": "generates the statement to drop a foreign key constraint from the database using an alter table statement", "bleu": 0.176342314149558, "rouge": 0.4326241134751773}, {"predict": "locks the file ( blocking )", "true": "locks the file , with a time out ( non - blocking )", "bleu": 0.1582341759519314, "rouge": 0.5922330097087379}, {"predict": "write a data point to data", "true": "create a header which points to the given data object", "bleu": 0.13487005099534619, "rouge": 0.3588235294117647}, {"predict": "collects all the files from log directory into the project log directory and adds them to the project ' s log", "true": "given a list of action - target files , returns all the files that should be subject to the action does not keep directories , but recursively adds directory contents", "bleu": 0.09001448351255942, "rouge": 0.19003115264797507}, {"predict": "updates a particle position", "true": "updates a particle position", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the tick label for the length of the tick label", "true": "updates the tick labels", "bleu": 0.21200626759025185, "rouge": 0.43675417661097854}, {"predict": "determines whether the position within the specified position within the specified visual position", "true": "allows to answer if particular visual position belongs to visual rectangle identified by the given visual position of its top - left and bottom - right corners", "bleu": 0.048656057995883205, "rouge": 0.18812644564379336}, {"predict": "assert that the indices are consistent for a unicode statement map calls", "true": "validates that the same statements are found in each of the statement indices", "bleu": 0.14961487835433152, "rouge": 0.31770833333333337}, {"predict": "show item for menu", "true": "request to display a new badge over the passed menu item id", "bleu": 0.0538140946637381, "rouge": 0.11466165413533834}, {"predict": "put an option boolean value", "true": "put an option integer value", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "determines the target page to be shown", "true": "figure out what the target page would be given current scroll and velocity", "bleu": 0.15513171017484098, "rouge": 0.3794712286158632}, {"predict": "converts a given cell to a string ; no alignment considered", "true": "converts a given cell to a string ; no alignment considered", "bleu": 1.0, "rouge": 1.0}, {"predict": "clone the input vector so that this vector has the same values", "true": "clone the input vector so that this vector has the same values", "bleu": 1.0, "rouge": 1.0}, {"predict": "disables bluetooth and checks to make sure that bluetooth was turned on and that the correct actions were broadcast", "true": "disables bluetooth and checks to make sure that bluetooth was turned off and that the correct actions were broadcast", "bleu": 0.8578928092681435, "rouge": 0.9473684210526315}, {"predict": "convert a limited file glob into a simple regex string", "true": "converts the given glob pattern into a regular expression", "bleu": 0.17827531042796255, "rouge": 0.31881533101045295}, {"predict": "forces the given false if colors are present", "true": "should the data of this tile be forced to case no data loss", "bleu": 0.08583768591139128, "rouge": 0.09131736526946108}, {"predict": "splits string to split into array", "true": "does not take into account escaped separators", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "finds a hash map for a basic block", "true": "find the points the ir where live ranges should be split", "bleu": 0.09268172804333874, "rouge": 0.0}, {"predict": "test split - delimited properties ( using semicolon )", "true": "test split of escaped semicolons", "bleu": 0.18575057999133596, "rouge": 0.3012345679012346}, {"predict": "remove the object at the destination array offset", "true": "removes the object at the source array offset and copies all other objects to the destination array", "bleu": 0.20141544242877732, "rouge": 0.45073891625615764}, {"predict": "create a new dictionary", "true": "open the database if it exists or create it if it doesn ' t", "bleu": 0.02949347753605095, "rouge": 0.10099337748344371}, {"predict": "check if the tab is associated with an activity that hasn ' t been destroyed", "true": "check if the tab is associated with an activity that hasn ' t been destroyed", "bleu": 1.0, "rouge": 1.0}, {"predict": "instantiate s a new wrapper on the given http stream", "true": "create a new http stream", "bleu": 0.2086130724305753, "rouge": 0.5674418604651164}, {"predict": "handles the given file", "true": "when a file is found , add it", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "description of the method supports conversion", "true": "peeks the next char , without <unk> it", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "construct the initial partial hull", "true": "construct the initial partial hull", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a callback to be invoked when a swipe event is sent to this view", "true": "add a callback to be invoked when a swipe event is sent to this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a short ( 16 bit ) from the source stream", "true": "reads a short ( 16 bit ) from the source stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints the characters to the internal string", "true": "prints the string representation of the specified integer to the target", "bleu": 0.18168644632623684, "rouge": 0.4273204903677758}, {"predict": "creates a proximity node for a given di nodes", "true": "creates a proximity browsing node", "bleu": 0.2777619034011791, "rouge": 0.6024691358024692}, {"predict": "see if zoning is required", "true": "looks at the v array to see if zoning is disabled , and looks to make sure that there is at least one active network system registered", "bleu": 0.009328760983225663, "rouge": 0.22242479489516864}, {"predict": "sends a reply to an incoming stream", "true": "sends a reply to an incoming stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes the animation and its time frame", "true": "initializes a cc animation with a name , delay and an array of cc sprite frames", "bleu": 0.06106734767839363, "rouge": 0.2436750998668442}, {"predict": "navigate to dump the path , with the root path", "true": "navigate to root node of currently active dump", "bleu": 0.18850319022747347, "rouge": 0.34014869888475835}, {"predict": "add a set of messages to the end of the list of messages", "true": "add a list of new messages to the end of the current message list", "bleu": 0.48173651810505935, "rouge": 0.7358262967430639}, {"predict": "makes a random cache entry", "true": "makes a random cache entry", "bleu": 1.0, "rouge": 1.0}, {"predict": "display the current render surface", "true": "display the current render surface", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a list of window of size window size", "true": "constructs a list of window of size window size", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the center of the center text view", "true": "draws the unit text in the center of the pie chart makes most sense when center - hole is enabled", "bleu": 0.11843106667531643, "rouge": 0.3978260869565217}, {"predict": "builds a path using the provided json path structure", "true": "creates a path using the provided json path structure", "bleu": 0.8801117367933934, "rouge": 0.8888888888888888}, {"predict": "indicates whether the list of frames has to be loaded", "true": "take the vector of frames , and group them into boundary rectangles , represented by groups", "bleu": 0.09783956479114057, "rouge": 0.22154963680387407}, {"predict": "underlying implementation of add ( array , index , element ) methods", "true": "underlying implementation of add ( array , index , element ) methods", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a double value", "true": "get the double value corresponding to the instance", "bleu": 0.1739594473063345, "rouge": 0.31443298969072164}, {"predict": "converts the matrix into a single line mat lab string : matrix is enclosed by parentheses , rows separated by semicolon and single cells", "true": "converts the matrix into a single line mat lab string : matrix is enclosed by parentheses , rows are separated by semicolon and single cells by blanks , e", "bleu": 0.7570189066950935, "rouge": 0.8905109489051095}, {"predict": "constructs a new binary file input stream with the default encoding", "true": "constructs a new binary file with the specified file as the input", "bleu": 0.4412739850976205, "rouge": 0.603960396039604}, {"predict": "create an object output stream for this file", "true": "create an object output stream for this path", "bleu": 0.8633400213704505, "rouge": 0.875}, {"predict": "get the set of keys for resident entries", "true": "get the set of keys for resident entries", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate matrix for fit center", "true": "calculate matrix for fit center", "bleu": 1.0, "rouge": 1.0}, {"predict": "add the certificate validity", "true": "this method allows to add a candidate for the signing certificate", "bleu": 0.07425134808660917, "rouge": 0.3689516129032258}, {"predict": "adds a policy listener", "true": "adds a policy listener that would be notified whenever a policy is added , removed or changed", "bleu": 0.03877420783172201, "rouge": 0.34269662921348315}, {"predict": "verifies the code against an id", "true": "verify the code associated", "bleu": 0.2907153684841096, "rouge": 0.4149659863945578}, {"predict": "returns a new scripting engine for the scripting language identified by the file name extension", "true": "returns a new scripting engine for the scripting language identified by the file name extension", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds raw module that raw modules within a raw module", "true": "returns the raw module with the given id", "bleu": 0.16590387014219712, "rouge": 0.22676579925650556}, {"predict": "extracts type light from the list of class = d list of arguments passed to the returned map", "true": "extract type - checked value from an argument list using the specified type check and extraction function", "bleu": 0.08562365224473284, "rouge": 0.2297551789077213}, {"predict": "obtains a local date in japanese calendar system from the pro lept ic - year , month - of - year and day - of - of - of - of - of - of - of - of - of - of - of - of -", "true": "obtains a local date in japanese calendar system from the pro lept ic - year and day - of - year fields", "bleu": 0.4252681592153509, "rouge": 0.6124497991967871}, {"predict": "for the user", "true": "recovers entry associated with given alias", "bleu": 0.16620830006469264, "rouge": 0.0}, {"predict": "creates a new url class loader", "true": "creates a class loader with the given base url as its class path", "bleu": 0.11914378950211951, "rouge": 0.39482200647249194}, {"predict": "min ( ) for unequal big decimals", "true": "min ( ) for unequal big decimals", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new authentic at the stage", "true": "create a new smtp server with this class as the listener", "bleu": 0.14834636222628117, "rouge": 0.32049036777583184}, {"predict": "concatenates an array of integers into an array", "true": "concatenates elements to an in t array", "bleu": 0.19070828081828378, "rouge": 0.4048672566371681}, {"predict": "solves for or down camera ( up or down )", "true": "change camera position horizontally ( left or right )", "bleu": 0.15851165692617156, "rouge": 0.42508710801393734}, {"predict": "decodes base 64 data into oct ect s", "true": "decodes base 64 data into oct ect s", "bleu": 1.0, "rouge": 1.0}, {"predict": "shuts down the associated reporting service provided by the given implementation", "true": "shut down the health checker", "bleu": 0.14991106946711685, "rouge": 0.2681318681318681}, {"predict": "resets the builder to its initial , empty state", "true": "resets the builder to its initial , empty state", "bleu": 1.0, "rouge": 1.0}, {"predict": "deflate current sam line by replacing all fields that equal over shorter of both previous line by replacing them", "true": "deflate current sam line by replacing all fields that equal over shorter of both previous line by an ampersand", "bleu": 0.8914703664390793, "rouge": 0.8947368421052632}, {"predict": "the list of the pairs in the list of longs : s , for a list of items", "true": "determines which index to use as the splitting index for the vp radius", "bleu": 0.08097785064266204, "rouge": 0.13289760348583876}, {"predict": "send an error log message", "true": "send an error log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an address listener", "true": "register for notification on changes to specific types", "bleu": 0.11115018927487523, "rouge": 0.0}, {"predict": "cleans a directory without deleting it", "true": "recursive remove all from directory", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "finds minimum version if it is owner or not", "true": "go through all candidates for entries involved in transaction and find their min version", "bleu": 0.08097951150551161, "rouge": 0.08367626886145405}, {"predict": "constructs a new instance of type - value pair", "true": "la string a conti <unk> il value del field di cui b is og na <unk> il parsing per est <unk> re valore e unit a ' di mi <unk>", "bleu": 0.015146730158668128, "rouge": 0.09348659003831418}, {"predict": "receives a portion of an array of characters", "true": "characters read from xml are assigned to a variable , based on the current m context", "bleu": 0.06528905536667998, "rouge": 0.07860824742268041}, {"predict": "compute the standard deviation ( d for the given instance ) in the standard deviation", "true": "computes standard deviation for given instance , without transforming target back into original space", "bleu": 0.14247788801610148, "rouge": 0.3469852104664391}, {"predict": "initialization - initialize the config file", "true": "sub - classes can override to initialize other properties", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "adds the specified element at the specified position in this list", "true": "inserts the specified element at the specified position in this list", "bleu": 0.9036020036098448, "rouge": 0.9090909090909091}, {"predict": "initiate a new multiplexed positive component data store", "true": "create a single data store to handle provided managers within a single transaction", "bleu": 0.12139281957861149, "rouge": 0.2739520958083832}, {"predict": "returns true if the given item matches the suffix", "true": "general method for matching raw name pattern", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "get the value of the field if it is not null", "true": "returns a value if that value is not null , or a specified default value otherwise", "bleu": 0.14892408222374315, "rouge": 0.3584018801410106}, {"predict": "compare key value with the last key in the list of received bytes", "true": "compare the incoming tuple with the last received message in kafka", "bleu": 0.21142141714303078, "rouge": 0.42302357836338417}, {"predict": "render the track and car", "true": "render the track and car", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a time string into a java", "true": "converts a time string into a java", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the menu at index at which there is a choice", "true": "called internally to fill the given menu", "bleu": 0.12605968092174913, "rouge": 0.2314990512333966}, {"predict": "compute the cross - track distance", "true": "compute the cross - track distance", "bleu": 1.0, "rouge": 1.0}, {"predict": "choose an alias to authenticate the client side of a secure socket given the public key type and the list of certificate issuer authorities recognized by the peer ( if any )", "true": "returns an alias to authenticate the server side of a secure socket given the public key type and the list of certificate issuer authorities recognized by the peer ( if any )", "bleu": 0.8866029039778043, "rouge": 0.9375000000000001}, {"predict": "pdf of the pdf function", "true": "probability density function of the gamma distribution", "bleu": 0.25880882365505126, "rouge": 0.32360742705570295}, {"predict": "order line - charge", "true": "in voice batch line - charge", "bleu": 0.4056114983537769, "rouge": 0.5791139240506329}, {"predict": "does the actual parsing method", "true": "does the actual parsing", "bleu": 0.7598356856515925, "rouge": 0.9070631970260222}, {"predict": "broker a broker b broker c", "true": "broker a - > broker b < - broker c", "bleu": 0.21937646382401524, "rouge": 0.7176470588235294}, {"predict": "clear body method signature test , and write the body of the client", "true": "writes the wb xml to stream", "bleu": 0.09552040806823771, "rouge": 0.11275415896487984}, {"predict": "discards any active baggage currently in this thread", "true": "discards any active baggage currently in this thread", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts to is to is as an output of is probably a string", "true": "produces either one or two tokens from the given leaf which represents a location where the production parser inserted a semicolon", "bleu": 0.05162238035793421, "rouge": 0.05642923219241442}, {"predict": "write packet from buffer", "true": "writes this packet to the given buffer", "bleu": 0.1878296463217631, "rouge": 0.346590909090909}, {"predict": "register file type from the list of files for a given file type , creating a default associated file type", "true": "registers a file type", "bleu": 0.08638804535733371, "rouge": 0.28416149068322977}, {"predict": "parse integer value from integer formatted as an integer", "true": "parses an integer based on locale conventions", "bleu": 0.18575057999133596, "rouge": 0.2557651991614256}, {"predict": "returns request security token response object based on the data in the j wt document", "true": "returns request security token response object based on the xml document received from server", "bleu": 0.5968774175634496, "rouge": 0.6939704209328782}, {"predict": "submitted a resource offering", "true": "request resources for running container processes", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "filters out a collection based on the given player , splitting each full path in the order", "true": "add to result collection only items <unk> suits player ' s level", "bleu": 0.07994607499472013, "rouge": 0.1423570595099183}, {"predict": "utility method for formatting using the d conversion character", "true": "utility method for formatting using the d conversion character", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a host to estimate", "true": "visualize node ' s location , radio ranges and connections", "bleu": 0.08445588027797912, "rouge": 0.0}, {"predict": "returns the index of the largest value in an array that is less than ( or optionally equal to ) a specified key", "true": "returns the index of the largest value in an array that is less than ( or optionally equal to ) a specified key", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a single symbol if it is a ?", "true": "add a single symbol to the set", "bleu": 0.392814650900513, "rouge": 0.5115303983228512}, {"predict": "replaces unprintable characters by their escaped ( or unicode escaped ) equivalents in the given string", "true": "replaces unprintable characters by their escaped ( or unicode escaped ) equivalents in the given string", "bleu": 1.0, "rouge": 1.0}, {"predict": "insert the list of elements at the beginning of the list", "true": "return the list size", "bleu": 0.14991106946711685, "rouge": 0.2911694510739857}, {"predict": "returns true if this group has the additional bounds and the set of bounds are identical to the given set of bounds", "true": "determine whether the plane intersects another plane within the bounds provided", "bleu": 0.06586656967644004, "rouge": 0.19344608879492597}, {"predict": "decode a base 64 string into a long value", "true": "decode a base 64 string into a long value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the smallest ( \" bottom \" ) n values in the column", "true": "returns the smallest ( \" bottom \" ) n values in the column", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the sum of any authentication score , depending on a node and any authentication score of the user", "true": "calculate the hub score of a page by summing the authority scores of that page ' s out links", "bleu": 0.10475041522097171, "rouge": 0.21052631578947367}, {"predict": "generates a new move to our own our graphics", "true": "ends the print job and does any necessary cleanup", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "given a file , infer the files for a file in the file system", "true": "<unk> the files for the specific path", "bleu": 0.17395797375642236, "rouge": 0.4053156146179402}, {"predict": "append a string to the end of the buffer", "true": "add a string to the end of the buffer", "bleu": 0.8801117367933934, "rouge": 0.8888888888888888}, {"predict": "create an additional model creation page", "true": "pass in the selection", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "unwraps user data to the application buffer", "true": "unwraps user data to the application buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "5", "true": "5", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks that the current context is permission to check whether the current context has permission to be permission manager", "true": "checks whether the provider may be changed using permission ' current time", "bleu": 0.10475041522097171, "rouge": 0.33627342888643885}, {"predict": "stores password , stored in shared storage", "true": "stores password into shared state map", "bleu": 0.2626909894424158, "rouge": 0.4680306905370844}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a child node from the tree", "true": "deletes the specified child node of this node , if it exists", "bleu": 0.1285981829222983, "rouge": 0.20098846787479407}, {"predict": "adds fill components to empty cells in the first row and first column of the grid", "true": "adds fill components to empty cells in the first row and first column of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "float value of a small positive big decimal", "true": "float value of a small positive big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "wait for the process to complete and the completion of the process", "true": "awaits for successful process termination , as well as successful termination of reader threads , throws an exception otherwise ( and destroys the process )", "bleu": 0.05720276204912898, "rouge": 0.25416666666666665}, {"predict": "re pack from classes in \" s to s dm", "true": "called from expand o meta class creation handle in the registry if it exists to set up inheritance handling", "bleu": 0.06094929250459501, "rouge": 0.19593147751605994}, {"predict": "parses a placeholder column of the correct delimiter into a list of java indexes", "true": "parses a string to find placeholder s of format $ { placeholder }", "bleu": 0.13217947626377288, "rouge": 0.2982885085574572}, {"predict": "override this to stop any operation and doesn ' t have failed", "true": "marks the relation as canceled and invokes the the handler ' s failed ( ) method", "bleu": 0.08853619422215007, "rouge": 0.2089041095890411}, {"predict": "opens a request in a single uri", "true": "routes a single get request", "bleu": 0.2626909894424158, "rouge": 0.34366197183098596}, {"predict": "this translates all annotation document state and updates the relevant text document state to the annotation document state and updates the current entity state for all annotation", "true": "change the state of an annotation document", "bleu": 0.06716472052354858, "rouge": 0.26321467098166124}, {"predict": "removes an edge from the list of tracked edges , and returns true if the ring is set or not", "true": "disconnects this vertex from an edge", "bleu": 0.08638804535733371, "rouge": 0.17039106145251398}, {"predict": "press a long key press", "true": "if this component is focused this method is invoked when the user presses and holds the key", "bleu": 0.02476709768976917, "rouge": 0.08276797829036635}, {"predict": "returns true if at least one of the variables given as argument is a descendant of this node , and false if it is a descendant class", "true": "returns true if at there exists at least one descendant whose identifier matches the regular expression pattern , and false otherwise", "bleu": 0.2102369368326755, "rouge": 0.42627533193570927}, {"predict": "writes a given number of bytes to a file", "true": "writes a given number of bytes to a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the data files for the specific source", "true": "generate data files whose names are included in sun", "bleu": 0.1862539773562041, "rouge": 0.232824427480916}, {"predict": "check whether the specified object is a c glib - generated class", "true": "check whether the given object is a c glib proxy", "bleu": 0.48442732379638637, "rouge": 0.7393939393939394}, {"predict": "first , un - rotate image and crop rectangles ( make image rectangle axis - aligned )", "true": "first , un - rotate image and crop rectangles ( make image rectangle axis - aligned )", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests fix for bug # 32246 - consistent with prepared statement and prepared statement", "true": "tests fix for bug # <unk> , statement", "bleu": 0.33649324423301513, "rouge": 0.5736677115987461}, {"predict": "checks repeated in t field equality ; null - value and 0 - length fields are considered equal", "true": "checks repeated boolean field equality ; null - value and 0 - length fields are considered equal", "bleu": 0.8086627571031982, "rouge": 0.9190207156308852}, {"predict": "bring the given annotation to the front", "true": "bring the given annotation to the front", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a frame to a frame", "true": "adds an image to the animation with the specified duration ( time to display the image )", "bleu": 0.03908444433970424, "rouge": 0.1601049868766404}, {"predict": "print code point", "true": "builds a string denoting an ascii - encoded ion string , with double - quotes surrounding a single unicode code point", "bleu": 0.001752742473001697, "rouge": 0.14681107099879662}, {"predict": "cleans up the mini dump that started will find all mini dumps , and try to upload them", "true": "mark file we just uploaded for cleanup later", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "start ssl shutdown process", "true": "start ssl shutdown process", "bleu": 1.0, "rouge": 1.0}, {"predict": "extracts thumbnail from source bitmap to linear ize r", "true": "creates a centered bitmap of the desired size", "bleu": 0.14113991930789777, "rouge": 0.1189083820662768}, {"predict": "writes the contents of the memory into a file", "true": "write the p <unk> info file into the application bundle", "bleu": 0.15881076016027915, "rouge": 0.20854700854700853}, {"predict": "return an array containing all of the elements in the array", "true": "returns an array holding the collected events", "bleu": 0.16108992769687397, "rouge": 0.3472485768500949}, {"predict": "returns the pkcs # 1 pkcs 8 encoded form and returns an array in der form", "true": "decode this set of pkcs 9 attributes from the contents of its der encoding", "bleu": 0.09147827112247602, "rouge": 0.13495575221238937}, {"predict": "process an attribute string of type t prefix list into a vector of prefixes that may be resolved to urls", "true": "process an attribute string of type t prefix list into a vector of prefixes that may be resolved to urls", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new samples with the given interval and the associated samples", "true": "creates a deep clone of this", "bleu": 0.10390302174233558, "rouge": 0.1182170542635659}, {"predict": "dump a long value into a string builder", "true": "dump a long value into a string builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines if necessary chars to use as a special character", "true": "simulate keyboard to type out a special character", "bleu": 0.24808415001701817, "rouge": 0.4535315985130111}, {"predict": "test for equality , coping with nulls", "true": "helper method to check for equality between two object , including null checks", "bleu": 0.1114789227233716, "rouge": 0.2846034214618974}, {"predict": "returns true if the given mime type has an entry in the map", "true": "returns true if the given mime type has an entry in the map", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the minimum notification or s in the minimum and ending range", "true": "returns an it er able that skips forward to a given notification id then only returns count more notifications", "bleu": 0.05798153788393259, "rouge": 0.06199186991869918}, {"predict": "serialize the given object to the given object", "true": "using the given pd x writer , write out the relevant fields for the object instance passed in", "bleu": 0.06870470052394348, "rouge": 0.28773584905660377}, {"predict": "write an integer value to backed buffer", "true": "write byte to buffer", "bleu": 0.22089591134157885, "rouge": 0.5736677115987461}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "is queue is empty", "true": "is queue is empty", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new instance of this item", "true": "creates a viterbi point for the given item", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "draws the content border of the border around the content area", "true": "draws the bottom edge of the border around the content area", "bleu": 0.670422683816333, "rouge": 0.8181818181818181}, {"predict": "emits an add method to add to a list", "true": "emits an add method to add to a list", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses a p em encoded public key and returns an instance of the signed in t as an rsa", "true": "parse a pkcs 1 p em encoded rsa public key into the modulus / exponent components and construct a new rsa public key", "bleu": 0.13120966411271084, "rouge": 0.37452033768227166}, {"predict": "take a publisher and prepare to consume it on a publisher with a specified point , convert it to the specified order to the state", "true": "take a publisher and prepare to consume it on par all all is m number of ' rails ' , possibly ordered and round - robin fashion", "bleu": 0.3254611377045071, "rouge": 0.38196618659987475}, {"predict": "returns the next recurrence of this rule", "true": "returns the next recurrence of this rule", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the given variable to the queue", "true": "add a single var to the queue", "bleu": 0.345720784641941, "rouge": 0.42857142857142855}, {"predict": "canonical ize s simple url", "true": "given a possibly abbreviated url ( missing a protocol name , typically ) , this method ' s job is to transform that url into a canonical form , by including a protocol name and additional syntax , if necessary", "bleu": 0.00029605881691592074, "rouge": 0.07795527156549521}, {"predict": "read the contents of a file in / proc / pid / filename", "true": "read the contents of a file in / proc / pid / filename", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the animation duration given the | initial velocity | and a desired | displacement |", "true": "calculates the animation duration given the | initial velocity | and a desired | displacement |", "bleu": 1.0, "rouge": 1.0}, {"predict": "shows user home points page", "true": "shows user home points page", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the norm in a range of all distinct values", "true": "returns the norm l 2", "bleu": 0.16590387014219712, "rouge": 0.2837209302325582}, {"predict": "determines the height of this view", "true": "determines the height of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "arranges the components of the specified container according to this layout", "true": "arranges the components of the specified container according to this layout", "bleu": 1.0, "rouge": 1.0}, {"predict": "unlocks to allow both puts and takes", "true": "unlocks to allow both puts and takes", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts a byte array", "true": "inserts a byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "solution an array of vectors in the range min , 1 , 1 )", "true": "the mean of the values in the double array", "bleu": 0.13217947626377288, "rouge": 0.271513353115727}, {"predict": "creates a visual sprite that is being drawn", "true": "used internally to create common functions between motion and stationary sprite", "bleu": 0.11021777041988566, "rouge": 0.10234899328859062}, {"predict": "closes the written file", "true": "closes the output stream", "bleu": 0.47287080450158786, "rouge": 0.5}, {"predict": "create a sync token", "true": "creates a sync token , and converts any thrown exceptions to runtime exceptions so it can be used for static fields", "bleu": 0.009539068134559183, "rouge": 0.21378504672897194}, {"predict": "returns true if a and b are equal , whether or not either of them as a null", "true": "returns true if a and b are equal or are both null", "bleu": 0.4464617303464354, "rouge": 0.6916099773242631}, {"predict": "handles watch issues with given name", "true": "in it performs the initial read of values from etc d", "bleu": 0.08072686929338534, "rouge": 0.0}, {"predict": "close input stream without a exception", "true": "close input stream without a exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate the y axis dimension", "true": "throws a bunch of random numbers between 0 , 1 at the monitor", "bleu": 0.05512018958855254, "rouge": 0.10286677908937607}, {"predict": "replaces all occurrences of old character in given string with another character", "true": "returns a string with all occurrences of old char replaced by new str", "bleu": 0.3060090678676363, "rouge": 0.31770833333333337}, {"predict": "dense : this is the following swf tag", "true": "this method is invoked when the user clicks on create chall an from menu tree", "bleu": 0.07949903911132591, "rouge": 0.24729729729729732}, {"predict": "canonical ize a type declaration into canonical canonical representation", "true": "apply the <unk> rule x & ( y | z ) = = x & y | x & z to simplify the intersection to a canonical form with no par ens", "bleu": 0.012128553369933612, "rouge": 0.08859840232389252}, {"predict": "open view activity to open first intent", "true": "start the application in browser to see the url or choose by other application to view this uri", "bleu": 0.04270613179243733, "rouge": 0.07411907654921021}, {"predict": "for all dbs vc , except for non - received state are for a z state reader and that all jvm are non - security", "true": "wait to see * all * cores live and active", "bleu": 0.05377336385080629, "rouge": 0.12385786802030457}, {"predict": "adds the specified object at the end of this vector", "true": "adds the specified object at the end of this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate matrix for fit center", "true": "calculate matrix for fit center", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the passed - source is associated with this method", "true": "uses a field in the volume to determine if the volume is an rp volume", "bleu": 0.1119806851646963, "rouge": 0.22453987730061348}, {"predict": "create an external problem with process the process over std err and process", "true": "constructs an external problem using the specified process", "bleu": 0.19674979811155635, "rouge": 0.4975530179445351}, {"predict": "splits file into path", "true": "split a file into a list of directories ending with the file name", "bleu": 0.04984021611241231, "rouge": 0.2147887323943662}, {"predict": "parse a term using some rules", "true": "parses a sts d atom ( defined in 14496 - 12 )", "bleu": 0.0812630644213965, "rouge": 0.10481099656357389}, {"predict": "returns true if taxon list is compatible with the taxa in this taxa", "true": "returns true if taxa are all found in available taxa", "bleu": 0.2044800736021839, "rouge": 0.5343065693430658}, {"predict": "draws the text of a label", "true": "draws the text of a label", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns whether this map contains the contain map objects", "true": "indicates whether this map layer has any map objects", "bleu": 0.31239399369202553, "rouge": 0.5555555555555556}, {"predict": "perform all actions , in the executor they do not yet exist", "true": "runs the commands that have been queued up", "bleu": 0.10390302174233558, "rouge": 0.10374149659863945}, {"predict": "returns a collection of the thread ' s sub - info s", "true": "print the thread roots and return them for processing", "bleu": 0.1367440667823257, "rouge": 0.19551282051282048}, {"predict": "add a new field and return its position", "true": "internal : process an attribute override for either an embedded object mapping , or an element collection mapping containing embed d able objects", "bleu": 0.020680088821143392, "rouge": 0.0}, {"predict": "returns the minimum dimensions for this layout given the components in the specified target container", "true": "returns the minimum dimensions needed to layout the components contained in the specified target container", "bleu": 0.5035337887555859, "rouge": 0.8}, {"predict": "checks a resource change", "true": "will check if a given resource was changed and will invoke the appropriate callback", "bleu": 0.032639898338235177, "rouge": 0.20198675496688742}, {"predict": "creates a tel url based on given uri string", "true": "creates a tel url based on given uri string", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an example model", "true": "creates a classification model", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "method to in it aliz e a restart it", "true": "restart the cfm l engine", "bleu": 0.14113991930789777, "rouge": 0.1506172839506173}, {"predict": "creates a new instance", "true": "constructs a new sorter", "bleu": 0.47287080450158786, "rouge": 0.5}, {"predict": "obtains the string representation of this object", "true": "obtains the string representation of this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "log pdf of non - integer ' , but not throw a normal number", "true": "probability density function of the wald distribution", "bleu": 0.08839374326825923, "rouge": 0.10132890365448505}, {"predict": "read short , 16 - bits", "true": "read short , 16 - bits", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate a format for an codec for encoding", "true": "generate the format associated to the codec name", "bleu": 0.19070828081828378, "rouge": 0.375}, {"predict": "receive notification of an xml comment anywhere in the document", "true": "receive notification of an xml comment anywhere in the document", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the maximum element of this stream according to the provided key extractor function", "true": "returns the maximum element of this stream according to the provided key extractor function", "bleu": 1.0, "rouge": 1.0}, {"predict": "find node by commit that next commit targets", "true": "find the oldest entry whose commit counter is <unk> the specified commit counter", "bleu": 0.10207878682119532, "rouge": 0.2739520958083832}, {"predict": "starts the underlying animator for a set of properties", "true": "starts the underlying animator for a set of properties", "bleu": 1.0, "rouge": 1.0}, {"predict": "tuple out one exception", "true": "write exception throw in log", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "splits a variable name and its children , starting with the variable name", "true": "splits a qualified var name into two parts , a left and a right left will be the text before the first instance of '", "bleu": 0.06172817896022016, "rouge": 0.24897959183673474}, {"predict": "end housekeeping for a child thread managed by the launcher ' s housekeeping , but not spawned by the launcher itself , e", "true": "end housekeeping for a child thread managed by the launcher ' s housekeeping , but not spawned by the launcher itself , e", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to register an transport if the transport protocol is only in the transport", "true": "create management bean for j space container", "bleu": 0.07432998184513635, "rouge": 0.0}, {"predict": "update ( table ) to be used for testing", "true": "update the data using values", "bleu": 0.14113991930789777, "rouge": 0.1506172839506173}, {"predict": "stops video ( if you want to cancel the video at one fading ( )", "true": "stop the video fading timer", "bleu": 0.11633270842295028, "rouge": 0.32972972972972975}, {"predict": "removes a listener from the event listening to this time out", "true": "de registers a time out event listener for time out notification", "bleu": 0.17827531042796255, "rouge": 0.36363636363636365}, {"predict": "process the generic properties from the properties file", "true": "process a package ' s generic properties creator", "bleu": 0.22679164443904004, "rouge": 0.375}, {"predict": "add a table lock to the list of blocks that are not already present in the default table", "true": "method to add table level lock if lock is not present for the table", "bleu": 0.09917720727091439, "rouge": 0.44758909853249473}, {"predict": "utility to grab a random element from an array of strings", "true": "utility to grab a random element from an array of strings", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates a map mapping", "true": "see <unk>", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "join a sync rho nous ly into a certain resource", "true": "wait for a thread to join", "bleu": 0.13950796967929133, "rouge": 0.13090128755364808}, {"predict": "initializes this log with a specified field", "true": "define a new local variable", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "gets connection from db", "true": "gets connection from a pool", "bleu": 0.5208154731870476, "rouge": 0.6535714285714286}, {"predict": "tell the user of an error , and probably throw an exception", "true": "tell the user of an error , and probably throw an exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "invoked when the mouse event is pressed", "true": "if button 1 is pressed , this is implemented to request focus on the associated text component , and to set the caret position", "bleu": 0.023159544100502027, "rouge": 0.11742059672762271}, {"predict": "decode the base 64 - encoded data in input and return the data in a new byte array", "true": "decode the base 64 - encoded data in input and return the data in a new byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "this is an implementation of the b sf apply ( ) method", "true": "allow an anonymous function to be declared and invoked", "bleu": 0.10390302174233558, "rouge": 0.09775641025641024}, {"predict": "return the set of keys that have been fetched as : 1", "true": "returns the total key set of all scopes", "bleu": 0.14694106251955755, "rouge": 0.3112244897959184}, {"predict": "writes a list of content objects to the given output stream", "true": "this will handle printing out a list of nodes", "bleu": 0.21200626759025185, "rouge": 0.3055091819699499}, {"predict": "consume details for which are unique as we have been located in the cluster and in cluster assignments", "true": "this api is to check whether the planning budget is available or not", "bleu": 0.06809398432036522, "rouge": 0.06644880174291938}, {"predict": "override method to return in t a random instance", "true": "reduce a polynomial modulo another polynomial", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends each java variable representation into the given string builder", "true": "returns a javascript representation of the character in a hex escaped format", "bleu": 0.11421946507590645, "rouge": 0.1788856304985337}, {"predict": "this function prints out the bootstrap map , print the public state map", "true": "just a small method to show how many times each activity chain index was sampled", "bleu": 0.06886905670533619, "rouge": 0.0}, {"predict": "constructs a vector representation in the current enumeration value", "true": "convenience method", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "add the specified in t token", "true": "add the specified in t token", "bleu": 1.0, "rouge": 1.0}, {"predict": "filter a set of ( ) configurations , then removes all elements from the specified root", "true": "split filters with two many value <unk>", "bleu": 0.06468490584192432, "rouge": 0.0}, {"predict": "adds the given tag for the given data", "true": "adds needed tags related to the data to the builder", "bleu": 0.157044754112095, "rouge": 0.3267857142857143}, {"predict": "compares two characters by index", "true": "sorts on the following : 1", "bleu": 0.18796001821050234, "rouge": 0.0}, {"predict": "load the build number for a package", "true": "helper method to load the build number from the android manifest", "bleu": 0.2919441086311216, "rouge": 0.4273204903677758}, {"predict": "build a random regular expression nodes based on a left edge of the left edge stack", "true": "build a random left - regular bipartite graph of given left and right sizes", "bleu": 0.1702602472176709, "rouge": 0.4048672566371681}, {"predict": "we only want the current page that is being shown to be focus able", "true": "we only want the current page that is being shown to be focus able", "bleu": 1.0, "rouge": 1.0}, {"predict": "configure the http url connection", "true": "configure request with standard headers", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "converts the specified number to a title", "true": "get the remainder in each loop it should be the last digit note that the map shall have 1 offset", "bleu": 0.0289990174645553, "rouge": 0.0681564245810056}, {"predict": "un escapes the character identified by the character or characters that immediately follow a backslash", "true": "un escapes the character identified by the character or characters that immediately follow a backslash", "bleu": 1.0, "rouge": 1.0}, {"predict": "process the input in the given input string , including any pending file ( but not including the output )", "true": "packs using defaults settings", "bleu": 0.051366639095059514, "rouge": 0.0}, {"predict": "construct and return replica tor conf", "true": "creates a new instance", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "converts the given double to a localized string version", "true": "converts the given double to a localized string version", "bleu": 1.0, "rouge": 1.0}, {"predict": "implements the abstract method simulate method", "true": "implements the abstract method simulate method", "bleu": 1.0, "rouge": 1.0}, {"predict": "re - measure the loading views height , and adjust internal padding as necessary", "true": "re - measure the loading views height , and adjust internal padding as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a list of long objects to a long array", "true": "return list of boxed longs as a primitive array", "bleu": 0.18850319022747347, "rouge": 0.42508710801393734}, {"predict": "updates the menu state of a criterium", "true": "updates the state of the context menu depending on the state of the criterium tree", "bleu": 0.10663283420190642, "rouge": 0.5118881118881118}, {"predict": "tests that cache would keep values if underlying store fails", "true": "this test performs complex set of operations on store from multiple threads", "bleu": 0.10320893749383378, "rouge": 0.08944281524926685}, {"predict": "converts a list of strings to a comma - separated list of strings", "true": "formats the list objects from the poke model into formatted strings that are easily readable", "bleu": 0.09063677582644454, "rouge": 0.14104046242774565}, {"predict": "removes the notification listener object from the database", "true": "removes the specified listener from this communicator server", "bleu": 0.239802967618271, "rouge": 0.5}, {"predict": "compare the length of two numeric values", "true": "determines if a file is newer than another by comparing the time stamps and sizes", "bleu": 0.059237077985967744, "rouge": 0.08531468531468532}, {"predict": "colm in / col sums up to / u acm in / u ac max", "true": "cum prod , opcode : u cum * , dense input", "bleu": 0.08225964699966554, "rouge": 0.07911802853437094}, {"predict": "given a source directory and a list of module specs that possibly contain wildcard s it returns a expanded list of module names of modules that were actually found in the given source directory", "true": "given a source directory and a list of module specs that possibly contain wildcard s it returns a expanded list of module specs of modules that were actually found in the given source directory", "bleu": 0.9234732618882052, "rouge": 0.9705882352941176}, {"predict": "method generated by intel lij idea gui designer > > > important ! ! < < < do not edit this method or call it in a code !", "true": "method generated by intel lij idea gui designer > > > important ! ! < < < do not edit this method or call it in your code !", "bleu": 0.9193227152249185, "rouge": 0.9655172413793103}, {"predict": "issue a issue list of issue joins and return a list of error messages", "true": "this helper function will dump the actual error reports", "bleu": 0.08839374326825923, "rouge": 0.09050445103857567}, {"predict": "parses the arguments of the given argument and adds the information of this parser accordingly", "true": "parses the provided set of arguments and updates the information associated with this parser accordingly", "bleu": 0.22401521369401356, "rouge": 0.6}, {"predict": "get issuer names ( ) method testing", "true": "get issuer names ( ) method testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "here we have the initial is user to begin the checkpoint record", "true": "generates initial checkpoint and instantiate s iterators for shards", "bleu": 0.11498759556447223, "rouge": 0.19551282051282048}, {"predict": "creates a pooled data source", "true": "creates a pooled x a data source", "bleu": 0.40505769908942735, "rouge": 0.8090185676392573}, {"predict": "convert degrees to radians , with error of less than 0", "true": "convert radians to degrees , with error of less than 0", "bleu": 0.6786502681586727, "rouge": 0.8181818181818181}, {"predict": "add a fixed view to appear at the top of the grid", "true": "add a fixed view to appear at the top of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "return true if the local path is an absolute path", "true": "return true if the local path is an absolute path", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the stats and collection to a collection of as collection names", "true": "method called internally to prepare the map with field names dynamically ( i", "bleu": 0.11368272367804307, "rouge": 0.15885416666666669}, {"predict": "return a new instance of the set of specifiers ( if necessary )", "true": "get the template at the given position", "bleu": 0.09552040806823771, "rouge": 0.10571923743500866}, {"predict": "set the names of an ingredient from the specified set to the maximum output", "true": "defines an advanced crafting recipe , using a format string", "bleu": 0.08839374326825923, "rouge": 0.08591549295774649}, {"predict": "write a tag", "true": "writes & lt ; tag & gt ; value & lt ; / tag & gt ; to output stream", "bleu": 0.001858671434298421, "rouge": 0.07672955974842767}, {"predict": "write the given bytes to the encoder / decoder", "true": "write the given bytes to the encoder / decoder", "bleu": 1.0, "rouge": 1.0}, {"predict": "connects to a port string", "true": "a general connection method that returns a socket for a host and port", "bleu": 0.061000517228105004, "rouge": 0.20573355817875214}, {"predict": "batch tasks by moving or removes them from the history", "true": "<unk> that this batch of input to the filter is finished", "bleu": 0.12623203108004888, "rouge": 0.18885448916408668}, {"predict": "compute the parameters of mercator projection", "true": "called when some <unk> parameters change", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "configures client and sets the default client to fit the specified format", "true": "configures the http client", "bleu": 0.1235622127262679, "rouge": 0.4121621621621622}, {"predict": "parses file data from filename and returns in i zed format", "true": "read and parse file", "bleu": 0.12605968092174913, "rouge": 0.14558472553699284}, {"predict": "suite running test suite", "true": "skip the data set tests for now until we can figure out what is wrong with them", "bleu": 0.011715143759476299, "rouge": 0.0}, {"predict": "load from some xml element", "true": "update static data from xml file", "bleu": 0.24736929544091937, "rouge": 0.3577712609970674}, {"predict": "create an om raster , lat / lon placement with an image icon", "true": "create an om raster , lat / lon with x / y placement with an image icon", "bleu": 0.6357837389341354, "rouge": 0.8463180362860192}, {"predict": "starts queue and discards all threads in this queue", "true": "starts de queuing the queue into the running pool and launch them", "bleu": 0.12026590852507517, "rouge": 0.2785388127853881}, {"predict": "this method gets called when a bound property is changed on the monitored vm", "true": "property change listener change method", "bleu": 0.09782375748961449, "rouge": 0.11509433962264153}, {"predict": "returns common pool queue for a thread that has submitted at least one task", "true": "returns common pool queue for a thread that has submitted at least one task", "bleu": 1.0, "rouge": 1.0}, {"predict": "null safe compare", "true": "asserts that given object 1 equals object 2", "bleu": 0.08533418657851909, "rouge": 0.0}, {"predict": "re - measure the loading views height , and adjust internal padding as necessary", "true": "re - measure the loading views height , and adjust internal padding as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "return flags as a string , separated by \"", "true": "return flags as a string , separated by \" \"", "bleu": 0.8948393168143697, "rouge": 0.9384615384615386}, {"predict": "formats the given object into a sql string", "true": "this method attempts to return a sql statement", "bleu": 0.21105340631872638, "rouge": 0.25}, {"predict": "indent text by two spaces", "true": "indent text by two spaces", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a fake view to the bottom of the recycle r view", "true": "add a view for the dummy view to draw", "bleu": 0.16261701715194898, "rouge": 0.39102564102564097}, {"predict": "compile a list of projects", "true": "compile a list of projects", "bleu": 1.0, "rouge": 1.0}, {"predict": "print a contact info object to a formatted d window", "true": "internal function used in the implementation of print info", "bleu": 0.13950796967929133, "rouge": 0.21254355400696867}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "resolves the result set or up the new promise , returning the result as ready for the caller", "true": "resolves the promise , triggers any done / always callback s", "bleu": 0.11268706361337427, "rouge": 0.28841607565011823}, {"predict": "adjusts the name to avoid name conflicts in the new session and , if the name is adjusted , adjusts the position so the user can see the two nodes", "true": "adjusts the name to avoid name conflicts in the new session and , if the name is adjusted , adjusts the position so the user can see the two nodes", "bleu": 1.0, "rouge": 1.0}, {"predict": "create snapshot from sync", "true": "create the block snapshot in db", "bleu": 0.24117803988461298, "rouge": 0.3860759493670886}, {"predict": "save the current configuration properties to a file", "true": "saves the currently known settings", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "returns count of items in the list", "true": "returns count of items in the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "force buffered operations to the filesystem", "true": "force buffered operations to the filesystem", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a uri from the template , substituting in the provided arguments", "true": "constructs a uri from the template , substituting in the provided arguments", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the native resources associated with the given native graphics config info pointer on the given remote repository", "true": "disposes the native resources associated with the given o gl surface data ( referenced by the p data parameter )", "bleu": 0.3378405349427353, "rouge": 0.41709401709401706}, {"predict": "handle japanese encoding - by toshi mm", "true": "handle japanese encoding - by toshi mm", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new scanner exception for a file with a message only", "true": "creates a new scanner exception for a file with a message only", "bleu": 1.0, "rouge": 1.0}, {"predict": "render the normal s into a texture", "true": "render the normal s into a texture", "bleu": 1.0, "rouge": 1.0}, {"predict": "find one resource by type", "true": "find all resources by type", "bleu": 0.3860973950960897, "rouge": 0.6}, {"predict": "calculates the sum of all y - values", "true": "calculates the sum of all y - values", "bleu": 1.0, "rouge": 1.0}, {"predict": "releases the balance by the al locator", "true": "release the provided number of reference counts", "bleu": 0.18575057999133598, "rouge": 0.14285714285714285}, {"predict": "ensures the truth of an expression involving one or more parameters to the calling method", "true": "checks the truth of an expression", "bleu": 0.30130404892785684, "rouge": 0.5160744500846023}, {"predict": "returns the number of elements in the list", "true": "returns an estimate of the memory footprint in bytes of this node list and all its subtree s", "bleu": 0.060467813303997864, "rouge": 0.28773584905660377}, {"predict": "finds the tcp connection given the thread id", "true": "finds the tcp connection given the thread id", "bleu": 1.0, "rouge": 1.0}, {"predict": "estimates distribution given the given number of distribution", "true": "estimate from simple characteristics", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "reads data for a stream", "true": "reads repository metadata from stream input", "bleu": 0.24736929544091937, "rouge": 0.3577712609970674}, {"predict": "checks if the xml document is a primitive type", "true": "checks whether the supplied data type is a primitive xml schema data type", "bleu": 0.20030090221863772, "rouge": 0.5281385281385281}, {"predict": "add a line to the contents of this window", "true": "handle gui layout details during construction", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "applies a regex to the text of a text view turning the matches of the view turning on to the text view", "true": "applies a regex to the text of a text view turning the matches into links", "bleu": 0.5798442808829942, "rouge": 0.7275229357798165}, {"predict": "makes the foreign keys , if any", "true": "process the settings when we are going to consume them", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "tell if the table contains the given node", "true": "tell if the table contains the given node", "bleu": 1.0, "rouge": 1.0}, {"predict": "update the new temp file to disk", "true": "creates file with temporary files list", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "clamp a value to be within the provided range", "true": "clamp a value to be within the provided range", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds an already writ te value to the set of bytes", "true": "add a value that shall be written to the write set", "bleu": 0.17033186037639278, "rouge": 0.36363636363636365}, {"predict": "load the given unit", "true": "load the given unit", "bleu": 1.0, "rouge": 1.0}, {"predict": "performs cleanup and bookkeeping for a dying worker", "true": "performs cleanup and bookkeeping for a dying worker", "bleu": 1.0, "rouge": 1.0}, {"predict": "finishes writing compressed data to the output stream without closing the underlying stream", "true": "finishes writing compressed data to the output stream without closing the underlying stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "frees the object", "true": "frees the object", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if a given injector has the given injector", "true": "returns true if a binding exists for the given key", "bleu": 0.403527863746399, "rouge": 0.6}, {"predict": "create an rmi service service", "true": "creates a replication service that will run as a thread internal to the replication service manager", "bleu": 0.03347779366253814, "rouge": 0.17403708987161198}, {"predict": "checks that the index with the given directory exists , and returns it ' s index", "true": "this runs the check index tool on the index in", "bleu": 0.11502783619900048, "rouge": 0.32105263157894737}, {"predict": "change a policy change on an existing policy type", "true": "handles policy changed notifications - clears the cached resource names for the service type name", "bleu": 0.08019421212222273, "rouge": 0.15947712418300655}, {"predict": "starts a drag animation from the button", "true": "start all animations about dismissing", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "creates a tagging decorator for the given output stream", "true": "creates a tagging decorator for the given output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds the list of messages from the builder and returns them", "true": "builds the list of messages from the builder and returns them", "bleu": 1.0, "rouge": 1.0}, {"predict": "stores given short value", "true": "stores given short value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the sha - 256 hash of the given byte range , starting at the given offset", "true": "calculates the sha - 256 hash of the given byte range , and then hashes the resulting hash again", "bleu": 0.5751988395787252, "rouge": 0.6600541027953111}, {"predict": "constructs a default us token processor", "true": "constructs a pronounceable fsm with information in the given url", "bleu": 0.14925824694560996, "rouge": 0.23921568627450981}, {"predict": "apply zero or blank , left or right padding", "true": "apply zero or blank , left or right padding", "bleu": 1.0, "rouge": 1.0}, {"predict": "put an object into the trie for lookup", "true": "put an object into the trie for lookup", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes the unique object immutable aut hn statement and generate a list of unique aut hn statement for each of the items , separated by the category , separated by generate the rest of the rest - separated list , none of the rest - separated , as", "true": "makes the object immutable", "bleu": 0.04144284514022945, "rouge": 0.181547619047619}, {"predict": "returns the specified library , or its path name", "true": "returns the full library path for the name", "bleu": 0.2208959113415788, "rouge": 0.594541910331384}, {"predict": "removes a component listener from this instance", "true": "removes a component listener from this instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the string is null or 0 - length", "true": "returns true if the string is null or 0 - length", "bleu": 1.0, "rouge": 1.0}, {"predict": "assert the multi cast header and file", "true": "verify that we can encode and decode a record", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "checks to see if the given term contains a single term , meaning it only if it full term may conflict with a valid terms", "true": "checks a term if it can be processed indexed", "bleu": 0.07604702045223338, "rouge": 0.321390937829294}, {"predict": "sends given response to the socket", "true": "sends given response to the socket", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the text associated with the specified url to recover point , using the specified uri to recover point", "true": "decode an encoded string", "bleu": 0.05415315253510895, "rouge": 0.0}, {"predict": "causes the current thread to block until signal shutdown is called", "true": "causes the current thread to block until signal shutdown is called", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the specified connection to the list of connections associated with this object ' s default list", "true": "allows the remote end of the specified connection to access objects registered in this object space", "bleu": 0.24623953025272619, "rouge": 0.36563436563436563}, {"predict": "calculates the distance between the rectangle between this turn point", "true": "returns the euclidean distance between a specified point and this point", "bleu": 0.17851905035930718, "rouge": 0.47213622291021673}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a in t to an in t", "true": "convert a string to an in t treating empty strings as the default value", "bleu": 0.22066035619387875, "rouge": 0.43323863636363635}, {"predict": "adds an item to the graph", "true": "convenience : add an item wrapping it into a sing <unk> able behind the scenes", "bleu": 0.06970452184190923, "rouge": 0.26521739130434785}, {"predict": "caution : while the background thread should be slowed down , updates of the gui have to be done in the gui thread !", "true": "caution : while the background thread should be slowed down , updates of the gui have to be done in the gui thread !", "bleu": 1.0, "rouge": 1.0}, {"predict": "main loop of the sockets", "true": "poll er main loop", "bleu": 0.35930411196308426, "rouge": 0.4535315985130111}, {"predict": "get all the keys in a file", "true": "retrieve the names from all files in dir", "bleu": 0.19148978368719022, "rouge": 0.2634989200863931}, {"predict": "creates a new dialogue with the specified system", "true": "creates a new dialogue recorder for the dialogue system", "bleu": 0.4284449847620205, "rouge": 0.6984732824427481}, {"predict": "generates unique id for request future", "true": "generates unique id for request future", "bleu": 1.0, "rouge": 1.0}, {"predict": "reschedules s for a previously declared certificate", "true": "searches the calendar alerts table for alarms that should have fired but have not and then reschedules them", "bleu": 0.04270613179243733, "rouge": 0.07411907654921021}, {"predict": "add a column name to this projection", "true": "add a column name to this projection", "bleu": 1.0, "rouge": 1.0}, {"predict": "perform an asynchronous min operation", "true": "perform an asynchronous min operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "changes to the target state", "true": "changes to the next state", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "read dialog to display", "true": "read fields to display", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "converts g month day object representation to string", "true": "converts month object representation to string", "bleu": 0.48549177170732344, "rouge": 0.8798076923076923}, {"predict": "adds a new test rule", "true": "adds the given test to the list", "bleu": 0.20252884954471367, "rouge": 0.32360742705570295}, {"predict": "generate a random value with the generators parameters", "true": "returns a random number from the distribution ; bypasses the internal state", "bleu": 0.13755608571892394, "rouge": 0.28955696202531644}, {"predict": "swaps the values with the specified index", "true": "swaps in place the elements at the specified positions in the specified list", "bleu": 0.11787460936700446, "rouge": 0.3794712286158632}, {"predict": "builds a list of type arguments in the specified device", "true": "populate a list of name value pairs used in the common ws requests for ip t registrations and updates", "bleu": 0.11343941552722257, "rouge": 0.3265524625267666}, {"predict": "allows this input to be used within the closure , ensuring that it is closed before this method returns", "true": "allows this close able to be used within the closure , ensuring that it is closed once the closure has been executed and before this method returns", "bleu": 0.5132338768907073, "rouge": 0.7588113337940566}, {"predict": "returns true if the given string is a match between two strings", "true": "check whether the string matches the pattern", "bleu": 0.11498759556447223, "rouge": 0.22101449275362317}, {"predict": "add a server to load a cache", "true": "add a new server to the load snapshot", "bleu": 0.2789001430384383, "rouge": 0.6587473002159828}, {"predict": "adds the leaf to this index", "true": "append leaf to the end of the leaves list", "bleu": 0.1894765350842885, "rouge": 0.2573839662447257}, {"predict": "convert a component timestamp to a string", "true": "convenience method for converting component time longs to strings", "bleu": 0.15447878876032708, "rouge": 0.24448897795591182}, {"predict": "set the ' content - length ' request header to the given value", "true": "set the ' content - length ' request header to the given value", "bleu": 1.0, "rouge": 1.0}, {"predict": "draw into the provided canvas", "true": "draw into the provided canvas", "bleu": 1.0, "rouge": 1.0}, {"predict": "modify lun so export", "true": "modify lun ( export / un export / expand etc ) in a sync mode", "bleu": 0.0324838397986111, "rouge": 0.2859375}, {"predict": "replaces this string replacing occurrences of another character sequence with another sequence", "true": "copies this string replacing occurrences of the specified target sequence with another sequence", "bleu": 0.5321141152259715, "rouge": 0.71484375}, {"predict": "closes the cache and deletes all of its stored values", "true": "closes the cache and deletes all of its stored values", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the scene returning true if this object is a via the scene as an instance of this scene", "true": "semantic concepts are similar if they share a syn set or a concept", "bleu": 0.0712695567709093, "rouge": 0.1293743372216331}, {"predict": "collect google analytics immediately to track", "true": "google analytics usage tracking", "bleu": 0.2907153684841096, "rouge": 0.4149659863945578}, {"predict": "adds a tuple without firing a notification", "true": "adds a tuple without firing a notification", "bleu": 1.0, "rouge": 1.0}, {"predict": "a sync entity that has the provided entity", "true": "adds a song to the adapter", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "filter siblings by name", "true": "filter children by name and class", "bleu": 0.3081980909598119, "rouge": 0.5791139240506329}, {"predict": "emits a put method to put a value into a map", "true": "emits a put method to put a value into a map", "bleu": 1.0, "rouge": 1.0}, {"predict": "since these hash code is equal to map", "true": "returns true if the object is a complex effect with an identical content", "bleu": 0.08583768591139128, "rouge": 0.09131736526946108}, {"predict": "provides the right name of the node for display", "true": "provides the right name of the node for display", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse the event text from the queue", "true": "parse json - formatted list of events / <unk> / <unk> from wikipedia , extract list of events and split the events into a string array of individual events", "bleu": 0.009533714952181622, "rouge": 0.1501230516817063}, {"predict": "removes a listener from the list that is notified each time a change to the data model occurs", "true": "removes a listener from the list that is notified each time a change to the data model occurs", "bleu": 1.0, "rouge": 1.0}, {"predict": "replaces character / s - > l string builder", "true": "replaces a portion of the string builder with another string", "bleu": 0.17861170664603615, "rouge": 0.31282051282051276}, {"predict": "recursively adds a permission to a file or directory", "true": "recursively adds a permission to a directory", "bleu": 0.6606328636027614, "rouge": 0.8951781970649895}, {"predict": "handle live - in - inclusive transactions to handle - out of - effects", "true": "running process accepting connections", "bleu": 0.07432998184513635, "rouge": 0.0}, {"predict": "learn a device using the given characteristics", "true": "learn a device using the given characteristics", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the given type signature is valid , false if it is not", "true": "returns true if the given type signature is valid , false if it is not", "bleu": 1.0, "rouge": 1.0}, {"predict": "remainder of division of a negative numbers", "true": "remainder of division of two numbers of different signs", "bleu": 0.40661103887968814, "rouge": 0.6112224448897796}, {"predict": "show the show tree presentation", "true": "returns true if action group has visible children", "bleu": 0.1259933680597235, "rouge": 0.0}, {"predict": "this method validates the argument references", "true": "check that all d references in the given type snippet are within bounds", "bleu": 0.07612610271614867, "rouge": 0.09870550161812298}, {"predict": "this will use the unit set , so that it can be directly be directly fully used in order", "true": "randomize and normalize weights", "bleu": 0.05415315253510895, "rouge": 0.0}, {"predict": "saves the pixels from the buffer on the sd card", "true": "saves the pixels from the buffer on the sd card", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks to see if a file is valid for a method", "true": "check if the file is valid or not", "bleu": 0.22416933501922287, "rouge": 0.433392539964476}, {"predict": "remove a class from the list of s rc classes", "true": "remove a class from the list of s rc classes", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the values range", "true": "updates the values range", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the current scope by appending any necessary whitespace and the given bracket", "true": "closes the current scope by appending any necessary whitespace and the given bracket", "bleu": 1.0, "rouge": 1.0}, {"predict": "append a byte array to this output stream", "true": "append specified bytes to the buffer", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "checks if has enough space on sd card", "true": "checks if there is enough space on phone self", "bleu": 0.313240603771157, "rouge": 0.5820610687022901}, {"predict": "method to handle cancel button", "true": "method to handle cancel button", "bleu": 1.0, "rouge": 1.0}, {"predict": "applies a given attribute to this string", "true": "applies a given attribute to this string", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a string to a value", "true": "converts string back to correct ( previous ) data type", "bleu": 0.13487005099534619, "rouge": 0.3588235294117647}, {"predict": "copy nodelist members into this nodelist , adding in document order", "true": "copy nodelist members into this nodelist , adding in document order", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a z string representation of this vector", "true": "returns the string representation ( in ion format ) of this timestamp in utc", "bleu": 0.1312054327923977, "rouge": 0.43323863636363635}, {"predict": "the function builds the dictionary using the given base id", "true": "flatten the trie into a byte array for a minimized memory footprint", "bleu": 0.10320893749383378, "rouge": 0.08944281524926685}, {"predict": "records a new dialogue state with the given name", "true": "records a dialogue state in the component and makes it available for display in the network selection list on the left side", "bleu": 0.05766286816824823, "rouge": 0.2999016715830875}, {"predict": "writes utf - 8 encoding of the given char sequence format", "true": "returns the number of octets written", "bleu": 0.12605968092174913, "rouge": 0.12423625254582485}, {"predict": "geo key : for v plex connection", "true": "instantiate s a new geo server wp s client", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "creates the instance of tls v 1 connection state", "true": "creates the instance of ssl v 3 connection state", "bleu": 0.4671379777282001, "rouge": 0.7777777777777778}, {"predict": "returns true if the file is a valid zip file", "true": "returns whether the file is a valid zip file", "bleu": 0.6989307622784944, "rouge": 0.8501742160278747}, {"predict": "performs maintenance on this pool , evicting the connection that has been idle the longest if either it has exceeded the keep alive limit or the idle connections limit", "true": "performs maintenance on this pool , evicting the connection that has been idle the longest if either it has exceeded the keep alive limit or the idle connections limit", "bleu": 1.0, "rouge": 1.0}, {"predict": "used for testing equality", "true": "this is used to compare the expected and current versions of the class", "bleu": 0.037870374782798366, "rouge": 0.1073943661971831}, {"predict": "generates a device - and invocation - specific seed to be mixed into the linux prng", "true": "generates a device - and invocation - specific seed to be mixed into the linux prng", "bleu": 1.0, "rouge": 1.0}, {"predict": "decodes the two byte array", "true": "decodes back a string to a byte array", "bleu": 0.2118947430943267, "rouge": 0.44309927360774815}, {"predict": ", a shallow copy of the user entity permission object , from a delegates to a single namespace", "true": "creates a list of user namespace <unk> from the list of persisted entities", "bleu": 0.0931377532902409, "rouge": 0.2657952069716775}, {"predict": "method to read data header for config", "true": "method to read header data from the input stream", "bleu": 0.28751742289713444, "rouge": 0.48897795591182364}, {"predict": "resets this stream to the beginning of the source string", "true": "resets this stream to the beginning of the source string", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method returns a specification for the supplied key", "true": "this method returns a specification for the supplied key", "bleu": 1.0, "rouge": 1.0}, {"predict": "draw a text string", "true": "draw the text under the graphics", "bleu": 0.24117803988461298, "rouge": 0.3860759493670886}, {"predict": "compares two percent objects", "true": "compares two percent objects", "bleu": 1.0, "rouge": 1.0}, {"predict": "get a cloned pr dic a ted node test", "true": "get a cloned pr dic a ted node test", "bleu": 1.0, "rouge": 1.0}, {"predict": "tell if the point is outside the table", "true": "returns true if the given point is outside the preferred size of the item at the given row of the table", "bleu": 0.1093891234132634, "rouge": 0.4466527196652719}, {"predict": "adds a source folder to the internal list", "true": "root folder for labels - > documents", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "create pre - able method to apply the given list of uris", "true": "returns a work flow", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "performs a ball from the offense , since it was to go for it in the extra blocks", "true": "attempt a field goal using the offense ' s <unk>", "bleu": 0.09629943614188137, "rouge": 0.2259259259259259}, {"predict": "convenience method unzipping zip name into byte array", "true": "returns an g <unk> copy of the input array", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "calculates the exact confidence value of the given double using the epsilon for method", "true": "calculates the m - value needed for the gs s algorithm", "bleu": 0.13834368456410945, "rouge": 0.3270777479892761}, {"predict": "create a server socket on a given port", "true": "create a secure server socket", "bleu": 0.2653856085536222, "rouge": 0.6421052631578947}, {"predict": "prints a byte array to the stream using the offset specified in base byte array", "true": "prints a byte array to the stream , properly encoded in base 64", "bleu": 0.48415247130346006, "rouge": 0.6512455516014234}, {"predict": "delete or remove v v v v set or v v set", "true": "delete a v v set or consistency group", "bleu": 0.3026643726685863, "rouge": 0.5187074829931972}, {"predict": "makes the given visitor visit this annotation", "true": "makes the given visitor visit this annotation", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds the key comment which are related to the key , which can be a key / key , return the key comment", "true": "finds the index of the specified key within the array containing key / value comments", "bleu": 0.09849349468888721, "rouge": 0.32825112107623317}, {"predict": "returns true if this cookie has expired", "true": "returns true if this cookie has expired", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes ' close able ' , ignoring any checked exceptions", "true": "closes ' close able ' , ignoring any checked exceptions", "bleu": 1.0, "rouge": 1.0}, {"predict": "utility method to check if a shortcut can be added to the home screen", "true": "utility method to check if a shortcut can be added to the home screen", "bleu": 1.0, "rouge": 1.0}, {"predict": "create the rounded icon generator to draw the rounded to latitude / longitude color space to menu items", "true": "constructs the generator and initializes the common members ignoring display density", "bleu": 0.08097785064266204, "rouge": 0.21631205673758863}, {"predict": "create a new in memory entry", "true": "creates a new in memory entry store which provides constant time storage and retrieval of entries by id or parent id", "bleu": 0.0664155233058289, "rouge": 0.33664459161147897}, {"predict": "persist a connection to the database", "true": "persist a connection to the database", "bleu": 1.0, "rouge": 1.0}, {"predict": "new instance , based on the supplied url", "true": "constructs a new class an not at or for the specified code base urls", "bleu": 0.08383280652235028, "rouge": 0.1732954545454545}, {"predict": "self mix of self", "true": "produce the next identifier", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "c hole sky algorithm for symmetric and positive definite matrix", "true": "c hole sky algorithm for symmetric and positive definite matrix", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an http url value to the serialize server", "true": "create stream that will be cached after it is read", "bleu": 0.10620315618312248, "rouge": 0.0}, {"predict": "parse the title of the pattern", "true": "return a 2 element array", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "get a string representation of the selection", "true": "returns the selection produced by this object", "bleu": 0.24446151121745047, "rouge": 0.2857142857142857}, {"predict": "calculates the list containing k 1 entry list that stores trim internal top k", "true": "if a randomize operation changes the ratio of ex c it a tory to inhibitory synapses , this method can be called to change the ex c it a tory ratio to reflect this value", "bleu": 0.019723310091565874, "rouge": 0.03788819875776397}, {"predict": "a repository root has been removed", "true": "a repository root has been removed", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts the priority of the priority queue", "true": "insert the object passed with the priority value passed", "bleu": 0.19740631366145517, "rouge": 0.3667334669338677}, {"predict": "wrap program in dictionary for given command line", "true": "wrap the given command into a command with ch own", "bleu": 0.176625510283176, "rouge": 0.3267857142857143}, {"predict": "parse the query query", "true": "the main method to handle the query", "bleu": 0.22336835181428535, "rouge": 0.346590909090909}, {"predict": "finds the index of an element in the tree", "true": "returns the index of an element in a level", "bleu": 0.6389431042462724, "rouge": 0.6666666666666666}, {"predict": "returns the number of attributes", "true": "get the number of attributes in the attribute set", "bleu": 0.34141618153312897, "rouge": 0.5434298440979956}, {"predict": "consume an tag name off the queue ( letter , digit , - , _ , - , _ )", "true": "consume an tag name off the queue ( word or : , _ , - )", "bleu": 0.5097960527136183, "rouge": 0.7369888475836432}, {"predict": "re calculates a vector that is merged and its children", "true": "launches a deep sort on the array of feature vectors", "bleu": 0.12605968092174913, "rouge": 0.1}, {"predict": "remove all listeners from this dispatcher", "true": "remove all existing listeners", "bleu": 0.31239399369202553, "rouge": 0.6224489795918368}, {"predict": "decrypt s a hex bin string ( handling is case sensitive )", "true": "decrypt s a hex bin string ( handling is case sensitive )", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the huber loss loss between two sets of integers", "true": "rank loss - the average fraction of labels which are not correctly ordered", "bleu": 0.11105685174312292, "rouge": 0.16991643454039}, {"predict": "override , also for non - infinite points , also also for non - infinite points", "true": "recursively add a cluster and its children", "bleu": 0.06468490584192432, "rouge": 0.0}, {"predict": "writes an attribute to the output service", "true": "print service attribute listener", "bleu": 0.20556680845025982, "rouge": 0.19122257053291536}, {"predict": "convenience method for decoding data to a file", "true": "convenience method for decoding data to a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "evicts and removes the total count of - to - be used when the pool is , and it also sets it to read", "true": "make one pass of the idle object e <unk>", "bleu": 0.05606668411195419, "rouge": 0.132034632034632}, {"predict": "generates the population for all individuals", "true": "generate random population of given size", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "creates a session that can be customized by adding tracks", "true": "creates a streaming session that can be customized by adding tracks", "bleu": 0.7702121719547294, "rouge": 0.9442724458204335}, {"predict": "consul tar todos loc a is b de dados", "true": "consul tar todos visit antes cad as tr dos na base de dados", "bleu": 0.20030090221863772, "rouge": 0.4401154401154401}, {"predict": "asserts that the expected values can be selected from the test table", "true": "asserts that the expected values can be selected from the test table", "bleu": 1.0, "rouge": 1.0}, {"predict": "append a single character to this writer", "true": "append a single character to this writer", "bleu": 1.0, "rouge": 1.0}, {"predict": "insert a list of instruction s before instruction s", "true": "inserts each instruction in a list before another instruction", "bleu": 0.2208959113415788, "rouge": 0.4444444444444444}, {"predict": "creates a new stream access - control - list builder", "true": "creates a new persistent subscription settings builder", "bleu": 0.24808415001701817, "rouge": 0.48605577689243035}, {"predict": "counts the number of values in an array", "true": "counts the size of an array", "bleu": 0.2777619034011791, "rouge": 0.7331730769230769}, {"predict": "we decode out the scanner for whether to catch mode ( for whether active threads )", "true": "run recovery of stopped scanners", "bleu": 0.06468490584192432, "rouge": 0.0}, {"predict": "merge two vectors by returning the internal vector", "true": "forward pass - given input x , get output y", "bleu": 0.10502215675986959, "rouge": 0.0}, {"predict": "goto the frame frame", "true": "description of the method", "bleu": 0.35930411196308426, "rouge": 0.25}, {"predict": "pops a type from the output frame stack", "true": "pops a type from the output frame stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete the attribute value", "true": "delete the attribute value", "bleu": 1.0, "rouge": 1.0}, {"predict": "push an executing attribute set , so we can check for recursive attribute definitions", "true": "push an executing attribute set , so we can check for recursive attribute definitions", "bleu": 1.0, "rouge": 1.0}, {"predict": "animate to the final position of the stack", "true": "animate to the final position of the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new range with no lower bound", "true": "add a new range with no upper bound", "bleu": 0.7506238537503395, "rouge": 0.875}, {"predict": "send a reply to a soap response", "true": "send a response back to the client", "bleu": 0.2777619034011791, "rouge": 0.42857142857142855}, {"predict": "this method is used to reduce chars of the named chars", "true": "like string", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "returns the text matched by the current regular expression", "true": "returns the text matched by the current regular expression", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the path will relative path segments like \"", "true": "returns the path will relative path segments like \"", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new in memory message with the given arguments", "true": "creates a new store for configuration values", "bleu": 0.23462350320528, "rouge": 0.36454183266932266}, {"predict": "attempt to next record", "true": "changes to the next track", "bleu": 0.3096787331587729, "rouge": 0.43571428571428567}, {"predict": "the inverse of pending bits in the process", "true": "the address of the start ( i", "bleu": 0.19070828081828378, "rouge": 0.4048672566371681}, {"predict": "draws a bitmap with a theme listening to a theme like a teeth shaped like : a teeth a teeth shaped", "true": "draw single bitmap with the giving center x , center y and radius", "bleu": 0.07645949399477267, "rouge": 0.1228600201409869}, {"predict": "spins / blocks until node s is matched by a fulfill operation", "true": "spins / blocks until node s is matched by a fulfill operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "the device specific device instance", "true": "get the application ' s m qt t device", "bleu": 0.13575914775035755, "rouge": 0.2717149220489978}, {"predict": "start collecting profiling data", "true": "start collecting locking data", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "add a callback to be invoked when a swipe event is sent to this view", "true": "add a callback to be invoked when a swipe event is sent to this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to be overridden by subclasses to read the next object from the source stream", "true": "method to be overridden by subclasses to read the next object from the source stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert the pixels to make suggestions based on 0", "true": "converts pixels to meters", "bleu": 0.18575057999133596, "rouge": 0.3306233062330623}, {"predict": "removes the results of a search from the specified category", "true": "removes the results of a search from the specified category", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a char to the buffer", "true": "checks if a character is part of an open html tag or close html tag , and if so adds it to the buffer , otherwise returns false", "bleu": 0.011630347828723677, "rouge": 0.21070811744386875}, {"predict": "computes the length of a vector", "true": "computes the length of a vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts given json string to a object", "true": "converts given json string in to a object", "bleu": 0.5993954153807813, "rouge": 0.9222462203023757}, {"predict": "create cache for properties", "true": "creates the cache instance for the test", "bleu": 0.1878296463217631, "rouge": 0.346590909090909}, {"predict": "creates a new attribute list panel", "true": "creates the attribute selection panel with no initial instances", "bleu": 0.1593301391270729, "rouge": 0.3860759493670886}, {"predict": "returns an array of values as strings", "true": "returns a 2 - dimensional array with the prepared data", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "construct a new environment environment backed by the normal source", "true": "make sure nobody can instantiate the class", "bleu": 0.12605968092174913, "rouge": 0.12151394422310759}, {"predict": "removes a photo from this user", "true": "removes the given photo from this user", "bleu": 0.5446761861605913, "rouge": 0.7587064676616916}, {"predict": "performs a binary search for the specified element in a part of the specified sorted array", "true": "performs a binary search for the specified element in a part of the specified sorted array", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the next match for the classification", "true": "get the set of matches active for the given read", "bleu": 0.17112717058426782, "rouge": 0.34205607476635513}, {"predict": "returns a array to an array", "true": "copies the content of the underlying atomic array to a normal one", "bleu": 0.11492332782473744, "rouge": 0.20962199312714777}, {"predict": "fail exception and appends output - defined error message to local processing", "true": "add a failure object to the list of objects to be evaluated at every potential failure point", "bleu": 0.06849709353314773, "rouge": 0.06688596491228069}, {"predict": "dump the parse stack for debugging purposes", "true": "dump the parse stack for debugging purposes", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a set of categories that each line is lower case", "true": "creates a new set with the given categories , making them all lowercase in the process", "bleu": 0.10811583508674764, "rouge": 0.28672150411280845}, {"predict": "load a j ms message listener", "true": "load a j ms message listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method uploads a content to the remote server", "true": "this method uploads a file to the remote server", "bleu": 0.6580370064762462, "rouge": 0.8888888888888888}, {"predict": "create ssl socket that is connected to a given socket", "true": "create a ssl socket that wraps the existing socket", "bleu": 0.26985534666825095, "rouge": 0.5313588850174217}, {"predict": "format a node , recursively", "true": "format the node , recursively", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "server helper method to register a j mx mbe an", "true": "server helper method to register a j mx mbe an", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the tags from this ex if interface object into a jpeg stream , removing prior ex if tags", "true": "writes the tags from this ex if interface object into a jpeg stream , removing prior ex if tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "sorts the content of this adapter using the specified comparator", "true": "sorts the content of this adapter using the specified comparator", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if general exceptions have been thrown by the file", "true": "return true if <unk> was caused by a region destroyed exception", "bleu": 0.12623203108004888, "rouge": 0.18885448916408668}, {"predict": "appends the json representation of the specified string to the end of this array", "true": "appends the json representation of the specified string to the end of this array", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new bundle settings with the given map of arguments", "true": "create a new simple arguments bundle implementation from provided key - & gt ; value map", "bleu": 0.11315783212651204, "rouge": 0.28672150411280845}, {"predict": "( unknown the event capture for video capture", "true": "set ups the parameters for video capture ( with more options )", "bleu": 0.20034704329441452, "rouge": 0.3860759493670886}, {"predict": "reads all available rows from the given cursor and returns a list of new image to objects", "true": "reads all available rows from the given cursor and returns a list of new image to objects", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert internal date string into a java", "true": "method that converts a an iso 8601 string to java date", "bleu": 0.1319006407505858, "rouge": 0.2136602451838879}, {"predict": "create dom from stream", "true": "create dom from io stream", "bleu": 0.5506953149031837, "rouge": 0.8714285714285713}, {"predict": "obtains the string representation of this object", "true": "obtains the string representation of this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears the count of messages", "true": "resets counter to zero", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "schedule a task for repeated fixed - rate execution after a specific time has been reached", "true": "schedule a task for repeated fixed - rate execution after a specific time has been reached", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies the value of the attribute from the specified attribute value", "true": "copies the value of the realm attribute from the specified attribute value", "bleu": 0.7619389834488071, "rouge": 0.949080622347949}, {"predict": "copy project file in assets into given file", "true": "copy file in assets into destination file", "bleu": 0.48549177170732344, "rouge": 0.8097345132743362}, {"predict": "returns true if the object is identical to the same object", "true": "check if address are content identical if number are equals and street ( if number is null , we look at the name )", "bleu": 0.043932030450036325, "rouge": 0.16066725197541704}, {"predict": "replacement for the math", "true": "replacement for the math", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the three of the blocks in a given row of encoded entries", "true": "compares the distance of two keys relative to this one using the xor metric", "bleu": 0.10518320506876351, "rouge": 0.2207478890229192}, {"predict": "discards any whitespace from a base - 64 encoded block", "true": "discards any whitespace from a base - 64 encoded block", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new selector instance", "true": "construct a syncs elector with brand new selector", "bleu": 0.2118947430943267, "rouge": 0.44309927360774815}, {"predict": "removes the child at the specified index", "true": "removes the child at the given index", "bleu": 0.7071067811865475, "rouge": 0.8571428571428571}, {"predict": "given the location of the ' middle snake ' , split the diff in two parts and re curse", "true": "given the location of the ' middle snake ' , split the diff in two parts and re curse", "bleu": 1.0, "rouge": 1.0}, {"predict": "paint the provided painter using the provided transform at the specified position and size", "true": "paint the provided painter using the provided transform at the specified position and size", "bleu": 1.0, "rouge": 1.0}, {"predict": "load a directory recursively", "true": "load a module candidate from a directory", "bleu": 0.26563123324397914, "rouge": 0.5198863636363635}, {"predict": "returns true if the given throw able has been suppressed , by means of the given exception", "true": "checks if passed throw able has given class in one of the suppressed exceptions", "bleu": 0.17694975149532557, "rouge": 0.39397201291711514}, {"predict": "write a variable size long", "true": "write a variable size long value", "bleu": 0.8187307530779819, "rouge": 0.8944281524926685}, {"predict": "updates the data to be signed or verified , using the specified byte value", "true": "updates the data to be signed or verified using the specified byte", "bleu": 0.7241577342575828, "rouge": 0.9360613810741688}, {"predict": "save the state of this de que to a stream ( that is , serialize it )", "true": "saves this de que to a stream ( that is , serializes it )", "bleu": 0.611904949990603, "rouge": 0.7879440258342303}, {"predict": "checks if the initiator is before auto - migration", "true": "check if the passed in initiator is for rp", "bleu": 0.23356898886410005, "rouge": 0.4444444444444444}, {"predict": "this method initializes the serial iz able fields to the collection of the messages currently using", "true": "initializes the meter command class", "bleu": 0.10123734869668824, "rouge": 0.21034482758620687}, {"predict": "sorts an array of strings , returning a new array with the sorted items", "true": "sorts an array of strings , returning a new array with the sorted items", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads config file matches property matches with expected values", "true": "start with the internal default settings , then merge in the settings from any specified configuration file , if available", "bleu": 0.04601170352846859, "rouge": 0.06455026455026455}, {"predict": "if there is no field with the specified key , then associate the given value with the specified key", "true": "if there is no field with the specified key , then associate the given value with the specified key", "bleu": 1.0, "rouge": 1.0}, {"predict": "combines the source buffer of the given buffer and returns the last element", "true": "for multi line records this method combines the current result with the result from previous read ( s )", "bleu": 0.08514664884627378, "rouge": 0.18136769078295345}, {"predict": "is the web browser on the specified screen", "true": "checks that at least one <unk> device is present", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "check if the given source code is contained in the javascript", "true": "creates a change from each compilation unit and stores it in the changes list", "bleu": 0.11412735515545797, "rouge": 0.15661103979460847}, {"predict": "indents out ; writes object ; ends current line", "true": "indent out ; write object ; end current line", "bleu": 0.2730120862709067, "rouge": 0.6666666666666666}, {"predict": "draws an horizontal unit by the amount", "true": "draw the combat indicators", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "build an activity", "true": "creates a new instance", "bleu": 0.32372956394183194, "rouge": 0.0}, {"predict": ", + / - , l sr # ! 0 b 01 / l sr / if shift i mm = = 0 then / l sr # 32 / index = = 0 / index = rm logical shift i mm = 0 / u = 1", "true": "operation : , + / - , l sr # address = rn 0 b 01 / l sr / if shift i mm = = 0 then / l sr # 32 / index = 0 else index = rm logical shift right shift i mm if", "bleu": 0.7190351905456404, "rouge": 0.8125000000000001}, {"predict": "ends the formal type parameters section of the signature", "true": "ends the formal type parameters section of the signature", "bleu": 1.0, "rouge": 1.0}, {"predict": "tells if there is a digit or a letter character ahead", "true": "tells if there is a digit or a letter character ahead", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets project name from uri", "true": "gets project name from uri", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a reference to this ref", "true": "adds the given object to the set of hard references , which will prevent that object from being disposed until the queue has been flushed completely", "bleu": 0.007880239271634741, "rouge": 0.0561694290976059}, {"predict": "reset the second line of notes area", "true": "reset the second line of notes area", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an require property to the requirements of the header builder", "true": "add a required property of type object", "bleu": 0.1354599427337814, "rouge": 0.3472485768500949}, {"predict": "determines whether the point x , y will add a new point to the current pattern ( in addition to finding the cell , also makes heuristic choices such as filling in gaps based on current pattern )", "true": "determines whether the point x , y will add a new point to the current pattern ( in addition to finding the cell , also makes heuristic choices such as filling in gaps based on current pattern )", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a head rule from the specified directory", "true": "constructs a new head rule by decoding the specific head tag sets", "bleu": 0.16847111051295394, "rouge": 0.4825949367088607}, {"predict": "or for two negative numbers ; the first is shorter", "true": "or for two negative numbers ; the first is shorter", "bleu": 1.0, "rouge": 1.0}, {"predict": "submit a task to the executor", "true": "this is a thread safe way to avoid rejection exception", "bleu": 0.1255107248036171, "rouge": 0.23921568627450981}, {"predict": "subtract two numbers of different scales using math context ; the first is positive", "true": "subtract two numbers of different scales using math context ; the first is positive", "bleu": 1.0, "rouge": 1.0}, {"predict": "allocate a random sql instance as two column descriptors", "true": "creates an xs <unk> a , populates type information and allocates memory for the sql data fields", "bleu": 0.06421450514370824, "rouge": 0.14575866188769412}, {"predict": "compute the minimum of the specified sub array", "true": "overwrites a bit range within the vector", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "checks whether the provided string is empty", "true": "check if the given string is empty or null", "bleu": 0.27470644934024185, "rouge": 0.48897795591182364}, {"predict": "add listener for scroll view", "true": "add listener for scroll view", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the upc / e an checksum on a string of digits , and reports whether the checksum is correct or not", "true": "computes the upc / e an checksum on a string of digits , and reports whether the checksum is correct or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the callback s object", "true": "gets the callback s object", "bleu": 1.0, "rouge": 1.0}, {"predict": "if there is a sync memory used for oom handling", "true": "called at the beginning of update memory used", "bleu": 0.16590387014219712, "rouge": 0.22676579925650556}, {"predict": "translates a java 2 d point on the chart to a screen location", "true": "translates a java 2 d point on the chart to a screen location", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads in the list of properties from the properties", "true": "reads all declared properties in the component span tag", "bleu": 0.21105340631872635, "rouge": 0.3333333333333333}, {"predict": "when some quick and fix a quick p max string", "true": "update all the traffic projections based on their heading and ground speed", "bleu": 0.10320893749383378, "rouge": 0.08944281524926685}, {"predict": "log a throw able to the level", "true": "logs the stack trace for the given throw able if logger is initialized else prints the stack trace using system", "bleu": 0.04101080379386835, "rouge": 0.20446927374301674}, {"predict": "computes the colors between 2 colors for the given color", "true": "calculates the con <unk> st between two colors , using the algorithm provided by the wc ag v 2", "bleu": 0.06745148003336161, "rouge": 0.2612419700214133}, {"predict": "reads a single byte from the pro xie d input stream and writes it to the associated output stream", "true": "reads a single byte from the pro xie d input stream and writes it to the associated output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a index at at index at a specified index", "true": "adds an item to the menu", "bleu": 0.12605968092174913, "rouge": 0.13090128755364808}, {"predict": "many fields in gsm sim ' s are stored in the input field - that may be locked )", "true": "decodes a binary - coded decimal into a string and returns it", "bleu": 0.06439931429457924, "rouge": 0.06725468577728776}, {"predict": "draw the background image", "true": "assume that the graphics has been set with the paint / color needed , just render the shape of the background", "bleu": 0.006745139764147308, "rouge": 0.1425233644859813}, {"predict": "adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one", "true": "adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an individual expression / edge from the list of panel", "true": "keeps track of layout editor panels that are using this layout block", "bleu": 0.10400927574124633, "rouge": 0.08628005657708629}, {"predict": "lists all files in the set of files ( ) wildcard thread wildcard ( )", "true": "uses the wildcard expand er handler to process all found files and directories", "bleu": 0.10343603005129705, "rouge": 0.14472123368920523}, {"predict": "creates a new ip interface", "true": "creates a new ip interface for a host", "bleu": 0.5488116360940264, "rouge": 0.7384987893462469}, {"predict": "syntax - based proposal - based proposal based for the current selected edit except", "true": "collects all edit proposals from contained <unk> pos al providers", "bleu": 0.08839374326825923, "rouge": 0.08591549295774649}, {"predict": "create a new instance", "true": "create a new instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures that the image exists in the specified namespace", "true": "ensures that an image name has a namespace prefix", "bleu": 0.21105340631872635, "rouge": 0.4444444444444444}, {"predict": "returns map containing the given entries", "true": "returns map containing the given entries", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests the current class i fier for the cross - class i fier", "true": "tests the filter in conjunction with the filtered class i fier", "bleu": 0.21972813874997157, "rouge": 0.507628294036061}, {"predict": "changes the first letter of the passed string to upper case", "true": "changes the first letter of the passed string to upper case", "bleu": 1.0, "rouge": 1.0}, {"predict": "find out of random ratio", "true": "returns a random index based on the given proportions", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "check the bounds of the page", "true": "track actual size of shape", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "gets a copy of the provider", "true": "partitions the given list of components into a map where each value is a list of siblings , in the same order as in the original list , and where the keys are the parents ( or null for the components that do not have a parent )", "bleu": 0.0002395431757862108, "rouge": 0.09744408945686901}, {"predict": "count the occurrences of newline characters to indicate that the given character is at the given position", "true": "count the number of non - newline characters before first newline in the string", "bleu": 0.13003841178614525, "rouge": 0.39397201291711514}, {"predict": "spanning is specified in the uncompressed grid number", "true": "spanning is specified in the uncompressed grid number", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if this set of rules equals another", "true": "checks if this set of rules equals another", "bleu": 1.0, "rouge": 1.0}, {"predict": "description of the method i ties vector d by d * log * ( d * log ) - d i * i * i", "true": "returns a text description that can be used for display", "bleu": 0.048589719316429775, "rouge": 0.06192893401015229}, {"predict": "add custom list of recognized possible recognized by custom recognized possible recognized possible namespaces", "true": "adds a claimed signer role", "bleu": 0.07432998184513635, "rouge": 0.0}, {"predict": "writes map to output stream", "true": "stores the contents of a map in an output stream , as part of serialization", "bleu": 0.05225260032224766, "rouge": 0.27518796992481204}, {"predict": "sleep for the specified number of milliseconds", "true": "sub classes ( tests basically ) can use this to override how the sleep is being done", "bleu": 0.04926429870313275, "rouge": 0.0775095298602287}, {"predict": "was last output stream we currently being drawn", "true": "allow again printing to previous streams that were muted", "bleu": 0.11900569447018795, "rouge": 0.0}, {"predict": "creates a number from the list of big integer with the given key and creates it with all the key", "true": "computes chinese reminder theorem : x = = <unk> s i mod mod <unk> i", "bleu": 0.051366639095059514, "rouge": 0.0}, {"predict": "determines the height of this view", "true": "determines the height of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "puts an array of bytes into this byte vector", "true": "puts an array of bytes into this byte vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "remainder of division of equal in absolute value numbers", "true": "remainder of division of two positive numbers", "bleu": 0.4111336169005197, "rouge": 0.639412997903564}, {"predict": "waits until the task stage matches the given document", "true": "waits until the given task completes and returns its final state", "bleu": 0.25014555519576226, "rouge": 0.3929146537842191}, {"predict": "creates a new action object with specified content and line number", "true": "creates a new action object with specified content and line number", "bleu": 1.0, "rouge": 1.0}, {"predict": "find and merge loading", "true": "returns a list of all <unk> that might be touching a chunk - area", "bleu": 0.0248009595334312, "rouge": 0.0}, {"predict": "4 b base sec | 2 b window id | 3 b operator id | 3 b tuple id", "true": "4 b base sec | 3 b operator id | 2 b window id | 3 b tuple id", "bleu": 0.9079992234951468, "rouge": 0.7894736842105263}, {"predict": "calculates the distance between two widget s ( assumed to be rectangles )", "true": "calculate the gap rectangle between two rectangles", "bleu": 0.14283632578659286, "rouge": 0.42287694974003465}, {"predict": "moves the current tile position to the next available tile", "true": "moves the current tile position to the next available tile", "bleu": 1.0, "rouge": 1.0}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests if this unit has a unit set , and if they are the unit tests to operate on this unit ' s unit tests", "true": "does this ba mount a my <unk> <unk> ?", "bleu": 0.05377336385080629, "rouge": 0.1285563751317176}, {"predict": "checks if an intent is available for ad", "true": "indicates whether the specified action can be used as an intent", "bleu": 0.14505474341517546, "rouge": 0.20469798657718125}, {"predict": "java x", "true": "java x", "bleu": 1.0, "rouge": 1.0}, {"predict": "send an http connection request", "true": "send a connect request for establishing a tunnel to proxy server", "bleu": 0.0910020781697788, "rouge": 0.2341650671785029}, {"predict": "return true if the given certificate is self - signed or signed signed signed certificate", "true": "returns true if the certificate is self - signed , false otherwise", "bleu": 0.38351936242338275, "rouge": 0.6047087980173481}, {"predict": "this method calls proc insert user roles and adds a record in the database", "true": "this method calls proc insert user roles and adds a record in user roles table", "bleu": 0.7920859560743244, "rouge": 0.8224719101123595}, {"predict": "find the nearest neighbours within - nearest neighbours to the nearest neighbours of the token", "true": "find the nearest neighbours within dependency distance links of the provided start dependencies", "bleu": 0.3388714363186176, "rouge": 0.5065243179122182}, {"predict": "base construct er from a java", "true": "base construct er from a java", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new value to the series", "true": "adds a new value to the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "draw the current selection according to the get list of parameters", "true": "rewind the configuration to the initial situation", "bleu": 0.16108992769687397, "rouge": 0.3472485768500949}, {"predict": "recursively merge with range", "true": "sort and merge , o ( n log n ) time", "bleu": 0.06243769243378541, "rouge": 0.12298387096774194}, {"predict": "format a field name from the token ize r , containing the special characters as a literal", "true": "outputs the simple name of the type", "bleu": 0.0859076483566362, "rouge": 0.18020679468242246}, {"predict": "returns an sha 1 hash of the given file key store file but contains the given key", "true": "get the sha 1 hash of the first signing certificate inside a key store , encoded as base 16 ( each byte separated by ' : ' )", "bleu": 0.16047098111753125, "rouge": 0.29797627355198886}, {"predict": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "true": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "bleu": 1.0, "rouge": 1.0}, {"predict": "when a subplot was sent , forward the listeners to a remote event", "true": "pans all domain axes by the specified percentage", "bleu": 0.09552040806823771, "rouge": 0.09951060358890701}, {"predict": "initialize view , and do all controllers", "true": "basic animations to build the liquid button", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "create a new icon for the specified check box", "true": "creates an image of the check box and puts it in a label", "bleu": 0.135323305042906, "rouge": 0.26406926406926406}, {"predict": "close an window close dialog", "true": "closes the window ( and open dial )", "bleu": 0.14983220973977976, "rouge": 0.1476997578692494}, {"predict": "populates the host data for the given host", "true": "populate an instance of host with the provided host parameter", "bleu": 0.1485237584394808, "rouge": 0.3267857142857143}, {"predict": "creates a new part of the r and update it with the required information", "true": "update the given a <unk> with the new settings or create one if no a <unk> is specified", "bleu": 0.10804679725389725, "rouge": 0.18336673346693386}, {"predict": "deletes the entry identified by the given alias from this key store", "true": "deletes the entry identified by the given alias from this key store", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new origin positive in the set of elements", "true": "construct a disjoint sets object", "bleu": 0.12605968092174913, "rouge": 0.1418604651162791}, {"predict": "outputs the clusters using the passed cluster data", "true": "prints out the cluster information", "bleu": 0.17747405280050269, "rouge": 0.32105263157894737}, {"predict": "adds a feature to the gui attribute of the e 00 layer object", "true": "adds a feature to the gui attribute of the e 00 layer object", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes an existing value from the series", "true": "removes an existing value from the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "wrap the given field with the given name", "true": "note : the caller must remember to close the token stream eventually", "bleu": 0.10764345432696364, "rouge": 0.1930379746835443}, {"predict": "checks , if p poly line is p shape for p shapes in p net tree at a given position and clearance class", "true": "checks , if a trace poly line with the input parameters can be inserted while <unk> aside obstacle traces and vi as", "bleu": 0.12586347848916266, "rouge": 0.2677395757132407}, {"predict": "a method that will delete a file or folder only if it is within the ' target ' directory '", "true": "a method that will delete a file or folder", "bleu": 0.4328015276270854, "rouge": 0.6662621359223301}, {"predict": "expands the given buffer size", "true": "create an array to hold double data for 3 d polygons and lines", "bleu": 0.04635036983311895, "rouge": 0.0}, {"predict": "post - process the j in j mx bean", "true": "adds the annotated classes and the mapping resources to the existing session factory configuration", "bleu": 0.08097951150551161, "rouge": 0.08367626886145405}, {"predict": "encode value from an n bits unsigned integer", "true": "encode value as an n bits unsigned integer", "bleu": 0.6606328636027614, "rouge": 0.875}, {"predict": "skip from the file", "true": "skip over n bytes in the input file", "bleu": 0.1571901051328651, "rouge": 0.47164948453608246}, {"predict": "creates the lock file", "true": "creates the lock file", "bleu": 1.0, "rouge": 1.0}, {"predict": "handles add l dap attribute mapping request", "true": "handles edit l dap attribute mapping request", "bleu": 0.7071067811865475, "rouge": 0.8571428571428571}, {"predict": "main entry for get", "true": "gets value for key", "bleu": 0.35930411196308426, "rouge": 0.25}, {"predict": "handles the tasks for the swf has been loaded", "true": "called when a swf has been loaded by the player", "bleu": 0.36789852486668184, "rouge": 0.41709401709401706}, {"predict": "quick reply , with a reply error", "true": "show the quick reply dialog , resetting the text in the edit text and storing the current sms mm s message ( in case another message comes in )", "bleu": 0.01133756165354221, "rouge": 0.1501230516817063}, {"predict": "write a number of bytes to the r rd file on the disk", "true": "writes bytes to the underlying r rd file on the disk", "bleu": 0.5316967153331754, "rouge": 0.7614424410540915}, {"predict": "returns true if there are any changes in the directory", "true": "checks if the config has changed since it was loaded", "bleu": 0.13950796967929133, "rouge": 0.2}, {"predict": "throws receiver if view is not already assigned to our receiver", "true": "iterate through each view in the view <unk> arch y and implement <unk> specific compatibility workaround s", "bleu": 0.06601847522057104, "rouge": 0.06877113866967305}, {"predict": "starts the acceptor , and register the given addresses", "true": "starts the acceptor , and register the given addresses", "bleu": 1.0, "rouge": 1.0}, {"predict": "applies header for a given state", "true": "use this method to replace the header text from the xml file with new text", "bleu": 0.04928854007377984, "rouge": 0.08840579710144927}, {"predict": "create", "true": "creates a gt fs - lib service object based on the information in the given pattern timetable , which is usually part of a modification de serialized from json", "bleu": 5.814294263555917e-13, "rouge": 0.0}, {"predict": "removes the first occurrence of the specified object from the data", "true": "removes the first occurrence of the specified object from the data", "bleu": 1.0, "rouge": 1.0}, {"predict": "set the users of the property list", "true": "allow a list of users to use this menu", "bleu": 0.16599826150636804, "rouge": 0.12224448897795591}, {"predict": "finds the v plex distributed device info associated with the passed name", "true": "finds the distributed device with the passed name", "bleu": 0.3706866381788037, "rouge": 0.8299319727891156}, {"predict": "register a listener for an incoming packet type", "true": "register a listener for an incoming packet type", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads all the content from the given input stream and returns the copy of the specified input", "true": "pulls copy state off the wire", "bleu": 0.07994607499472013, "rouge": 0.19032761310452417}, {"predict": "notifies the tasks that a sync task has been completed", "true": "interrupts currently running tasks", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "constructs a new request params instance and populate it with multiple initial key / value string param", "true": "constructs a new request params instance and populate it with multiple initial key / value string param", "bleu": 1.0, "rouge": 1.0}, {"predict": "will prompt for a single file to prompt for changes", "true": "ask user whether to overwrite the give existing file", "bleu": 0.13950796967929133, "rouge": 0.10627177700348434}, {"predict": "instantiate s a new tv show data source task", "true": "instantiate s a new scrape task - to update a single data source", "bleu": 0.2995197100101508, "rouge": 0.5281385281385281}, {"predict": "finds the index within the line of the line", "true": "line in the original source file for the given offset", "bleu": 0.15019394384099988, "rouge": 0.20854700854700853}, {"predict": "clears this sensor selection model", "true": "clear this sensor selection model", "bleu": 0.7598356856515925, "rouge": 0.8}, {"predict": "returns an array allocated in an area of the java heap where it will never be moved", "true": "returns an array allocated in an area of the java heap where it will never be moved", "bleu": 1.0, "rouge": 1.0}, {"predict": "load the contents of a file and directory into its parent directory", "true": "loads and parses a thrift file and all files included ( both directly and transitively ) by it", "bleu": 0.08912425958886255, "rouge": 0.1930379746835443}, {"predict": "assures that the proxy has been started", "true": "<unk> that proxy is in a stable status", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "adds a message to the message", "true": "this adds a message object to the internal message cache", "bleu": 0.2608840516436559, "rouge": 0.7176470588235294}, {"predict": "create a new key instance with the given hash", "true": "creates a key with this hash", "bleu": 0.17747405280050263, "rouge": 0.5532879818594103}, {"predict": "concatenates a list of in t arrays into a single array", "true": "concatenates a list of in t arrays into a single array", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a road with spaces", "true": "makes com parisi on of way with os m way tags and new tag with new value and compares forward and backward permissions with expected permissions copy of os m way is made since otherwise tags would be changed", "bleu": 0.00030407407674979705, "rouge": 0.03989535644211903}, {"predict": "displays the profile of a display", "true": "sets the values to ui model", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "reads the bytes of data from the stream", "true": "read a byte array", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "how big should the nth chunk be ?", "true": "how big should the nth chunk be ?", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the tip text for this property", "true": "tip text suitable for displaying in t the gui", "bleu": 0.20873176328735715, "rouge": 0.3667334669338677}, {"predict": "execute a query not related to a previous query", "true": "starts a new query not related to a previous class query", "bleu": 0.5448016571140474, "rouge": 0.7858293075684382}, {"predict": "return list of interfaces for the device", "true": "issues the \" show interface \" command and collects in information into a list of interfaces", "bleu": 0.10105885506947931, "rouge": 0.2436750998668442}, {"predict": "clear data set for further phase", "true": "clear data lists for selected service", "bleu": 0.31239399369202553, "rouge": 0.5}, {"predict": "makes a path for a triangle which is used to represent the edge of the top - level edges", "true": "creates a new quad edge , recording it in the edges list", "bleu": 0.08097785064266201, "rouge": 0.269018743109151}, {"predict": "this should be used to sort this list of those interested in both strings", "true": "sort n string sequence list", "bleu": 0.09782375748961449, "rouge": 0.23018867924528305}, {"predict": "associate the given value with the specified key", "true": "associate the given value with the specified key", "bleu": 1.0, "rouge": 1.0}, {"predict": "insert all files in sub directory sub directory of directory directory which match file kinds into result list", "true": "insert all files in sub directory sub directory of directory directory which match file kinds into result list", "bleu": 1.0, "rouge": 1.0}, {"predict": "create an edge shape", "true": "create the button edge shape", "bleu": 0.39573418216703893, "rouge": 0.6535714285714286}, {"predict": "dispose of object , releasing resources", "true": "dispose of object , releasing resources", "bleu": 1.0, "rouge": 1.0}, {"predict": "the test that the specified method can be restored", "true": "load an element with default configuration and call to string", "bleu": 0.10620315618312248, "rouge": 0.0}, {"predict": "creates reserve disk cache folder which will be used if primary disk cache folder becomes unavailable", "true": "creates reserve disk cache folder which will be used if primary disk cache folder becomes unavailable", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the given resource name has been set in all currently collected warnings", "true": "checks if a resource has been requested using the short name of the resource", "bleu": 0.13380161378318955, "rouge": 0.27758816837315126}, {"predict": "calls the super method and reads the id of this node , and the methods of data input for primitive types", "true": "reads the id of this node , the num entries and the entries array from the specified stream", "bleu": 0.35018262078091933, "rouge": 0.4680306905370844}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new connection factory that is capable to fail over to the servers defined in case there is an error", "true": "creates a new connection pool that is capable to fail over to the servers defined in case there is an error", "bleu": 0.8725129388059689, "rouge": 0.9523809523809522}, {"predict": "format a string for the specified format", "true": "constructs an array of control specifications possibly preceded , separated , or followed by ordinary strings", "bleu": 0.043181135652468706, "rouge": 0.0}, {"predict": "if we ' re running on j dk 1", "true": "if we ' re running on j dk 1", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new property property property listener", "true": "creates a parameterized instance", "bleu": 0.24446151121745047, "rouge": 0.3824451410658307}, {"predict": "creates and en queues node for current thread and given mode", "true": "creates and en queues node for current thread and given mode", "bleu": 1.0, "rouge": 1.0}, {"predict": "regrettably , serializing a tree set causes it to forget its bounds", "true": "regrettably , serializing a tree set causes it to forget its bounds", "bleu": 1.0, "rouge": 1.0}, {"predict": "paints the border of the component", "true": "paints the border for the specified component with the specified position and size", "bleu": 0.14168664218430702, "rouge": 0.4935275080906149}, {"predict": "this method checkpoints the checkpoints", "true": "restores the check pointed operator", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "reads the bytecode of a class", "true": "reads the bytecode of a class", "bleu": 1.0, "rouge": 1.0}, {"predict": "return true if the host headers", "true": "find out if the http caller info supports <unk> protocol", "bleu": 0.14925824694560996, "rouge": 0.23921568627450981}, {"predict": "creates a new project configuration", "true": "creates a new configuration object", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "converts a shape in the map coordinate space to a screen coordinate space", "true": "converts a screen coordinate spaced shape to the same shape in the chart coordinate space", "bleu": 0.26848939080846707, "rouge": 0.49364161849710986}, {"predict": "adds a new window to the end of the window", "true": "add a latch that will be released when the game shuts down", "bleu": 0.11421946507590645, "rouge": 0.1788856304985337}, {"predict": "instantiate s a new performance logger", "true": "instantiate s a new performance logger", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a suitable selector for use in case insensitive manner", "true": "builds a authentication request message for the user specified in the discovery information provided as a parameter", "bleu": 0.07444363397302332, "rouge": 0.21229698375870074}, {"predict": "create a hash from a hexadecimal representation of the digest note that this is in the reverse order of the internal binary representation", "true": "create a hash from a hexadecimal representation of the digest note that this is in the reverse byte order of the internal binary representation", "bleu": 0.8896239653156021, "rouge": 0.9749826268241835}, {"predict": "does a substring of short text exist within long text such that the substring is at least half the length of long text ?", "true": "does a substring of short text exist within long text such that the substring is at least half the length of long text ?", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the pin is up , punctuation , false if the pin is zeroes", "true": "tests the string to see if it contains a numeric run", "bleu": 0.08513012360883544, "rouge": 0.15326633165829145}, {"predict": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "true": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the uri of the uri", "true": "returns the type of a uri : abs uri root rel uri no root rel uri", "bleu": 0.0652982216127215, "rouge": 0.3360881542699724}, {"predict": "internal conversion", "true": "internal conversion", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a glue , or variable spacing , to a ui component", "true": "add a glue , or variable spacing , to a ui component", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the given string represents a resource reference", "true": "return the str is resource reference or not", "bleu": 0.19960198807747329, "rouge": 0.35672514619883033}, {"predict": "waits until required path is acquired in which all the root", "true": "wait until all nodes leave barrier", "bleu": 0.12605968092174913, "rouge": 0.2484725050916497}, {"predict": "returns an enumeration which contains the subnet mask", "true": "returns an enumeration which contains the subnet mask", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds property to be a select name", "true": "adds a single property name and an \" as \" - as name for the column", "bleu": 0.06457085856966725, "rouge": 0.2436750998668442}, {"predict": "this method will add an interface to the list of interfaces of the specified interface", "true": "add an interface implemented by this class", "bleu": 0.16188613565728213, "rouge": 0.291866028708134}, {"predict": "cuts the string from beginning to the first index of provided substring", "true": "cuts the string from the first index of provided substring to the end", "bleu": 0.6471303894309438, "rouge": 0.7942708333333333}, {"predict": "sends http get request from url", "true": "executes an http get request against the gb if registry", "bleu": 0.21108303712651422, "rouge": 0.3588235294117647}, {"predict": "iterator ordering is empty", "true": "iterator iterates through all elements", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "creates a new stream access - control - list builder", "true": "creates a new tcp settings builder", "bleu": 0.24808415001701817, "rouge": 0.5236051502145923}, {"predict": "method to initialize current user ' s current user , storing the current user ' s current user", "true": "creates a new shared connection directory which exposes share keys as connections", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "call the object finalize method on the given object", "true": "call the object finalize method on the given object", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the tv show", "true": "removes the tv show", "bleu": 1.0, "rouge": 1.0}, {"predict": "check the device policy configuration", "true": "checks device encrypt policy on the device ( device external storage encryption )", "bleu": 0.07795171967670728, "rouge": 0.20573355817875214}, {"predict": "helper function for simple type , returning - null if the object is assignable to the given object", "true": "replacement function for the java instance of instruction , which returns a distance integer", "bleu": 0.101824256461955, "rouge": 0.19182389937106917}, {"predict": "adds the specified object into this vector at the specified location", "true": "adds the specified object into this vector at the specified location", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the current age of the response , in milliseconds", "true": "returns the current age of the response , in milliseconds", "bleu": 1.0, "rouge": 1.0}, {"predict": "performs a receive progress receive sends to the remote server", "true": "listens for ganglia messages", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "returns the array element holding the bit value for the given integer", "true": "returns the array element holding the bit value for the given integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "invalidates the switch points", "true": "callback for constant meta class update change", "bleu": 0.142719668098593, "rouge": 0.0}, {"predict": "maps v dc v dc to config , if one is available on this v dc", "true": "build v dc config for a v dc for sync v dc config call", "bleu": 0.15384750052099497, "rouge": 0.4048672566371681}, {"predict": "initiate an existing adapter", "true": "each os x adapter has the name of the <unk> wt method it <unk> to listen for ( handle about , for example ) , the object that will ultimately perform the task , and the method to be called on that object", "bleu": 2.0945512384006433e-05, "rouge": 0.037014563106796114}, {"predict": "returns the normalized kernel function that matches the given instance", "true": "output the prediction made by this perce ptr on on the given instance", "bleu": 0.1837852585949438, "rouge": 0.33983286908078}, {"predict": "finish loading data", "true": "instantiate whatever object ( if any ) the wizard creates from its gathered data", "bleu": 0.013733827497510927, "rouge": 0.10535405872193437}, {"predict": "check whether the given attachment point is valid given the current topology", "true": "check whether the given attachment point is valid given the current topology", "bleu": 1.0, "rouge": 1.0}, {"predict": "fire a cluster change event to listeners for the cluster", "true": "fire a cluster change event to all registered listeners", "bleu": 0.5900468726392808, "rouge": 0.7439024390243903}, {"predict": "constructs a new batched image request object", "true": "constructs a new batched image request object", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the cache and deletes all of its stored values", "true": "closes the cache and deletes all of its stored values", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the rgb color representing the specified pixel data", "true": "returns the a rgb representation for the specified integer value which is packed in the format of the associated color model", "bleu": 0.06697116909821788, "rouge": 0.3109072375127421}, {"predict": "check to see if the digits that are going to be truncated because of the precision should force a round in the preceding digits", "true": "check to see if the digits that are going to be truncated because of the precision should force a round in the preceding digits", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a component to the user", "true": "subclasses might add an additional component here which is seen during all steps , e", "bleu": 0.054546736148076896, "rouge": 0.17681159420289855}, {"predict": "this method will delete all files in this directory and returns true if this file has delete this value in list", "true": "this is a quiet method", "bleu": 0.06429451441231726, "rouge": 0.17304964539007092}, {"predict": "create a temporary directory that is optionally cleaned up after the jvm should be cleaned up after the test shutdown", "true": "create directory that is automatically cleaned up after the jvm shuts down through use of a runtime shutdown hook", "bleu": 0.30603689509300896, "rouge": 0.5152027027027026}, {"predict": "emit declaration of decoded member and open first chunk", "true": "emit declaration of decoded member and open first chunk", "bleu": 1.0, "rouge": 1.0}, {"predict": "read cookie from \" http : / / \" -", "true": "read all cookies from the request ' s ' cookie ' header , and parse it based on cookie version 1", "bleu": 0.049901060151857274, "rouge": 0.12127236580516898}, {"predict": "merge or nodes once the resource has been created", "true": "if this repository has not already been visited , merge its items of the given type into result", "bleu": 0.06528905536667996, "rouge": 0.13974799541809851}, {"predict": "translate the transferable string representing the unicode map while parsing the flavor map", "true": "translation function for converting string into a byte array", "bleu": 0.09552040806823771, "rouge": 0.09399075500770414}, {"predict": "creates one buffer for the camera preview callback", "true": "creates one buffer for the camera preview callback", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts the given box at the given position in the list of child boxes", "true": "inserts the given box at the given position in the list of child boxes", "bleu": 1.0, "rouge": 1.0}, {"predict": "create position within the circular buffer given by the position of the size that should be used to find the position", "true": "creates a position within the content that will track change as the content is <unk>", "bleu": 0.1196655750514248, "rouge": 0.28638497652582157}, {"predict": "returns a string with the given number of spaces and with the given character", "true": "pad a string", "bleu": 0.11633270842295028, "rouge": 0.2663755458515284}, {"predict": "resets the internal representation of the internal array using the inverse supplied as an internal indexed byte - value and the internal array", "true": "change the d tx for the strike refs we use", "bleu": 0.05856458233275369, "rouge": 0.1304812834224599}, {"predict": "adds a listener to the events", "true": "adds a listener that will be informed one time about user activity , then removed", "bleu": 0.09173630978141616, "rouge": 0.26521739130434785}, {"predict": "mute the given username", "true": "mute the given username", "bleu": 1.0, "rouge": 1.0}, {"predict": "the real guts of parse network response", "true": "the real guts of parse network response", "bleu": 1.0, "rouge": 1.0}, {"predict": "overridden to ensure that the cursor for this component is appropriate for the orientation", "true": "overridden to ensure that the cursor for this component is appropriate for the orientation", "bleu": 1.0, "rouge": 1.0}, {"predict": "determine whether the selection is empty", "true": "check if the selection is empty", "bleu": 0.6147881529512643, "rouge": 0.6666666666666666}, {"predict": "writes remaining compressed data to the output stream and closes the underlying stream", "true": "writes any remaining uncompressed data to the output stream and closes the underlying output stream", "bleu": 0.6196088421025032, "rouge": 0.846242774566474}, {"predict": "factory functions that creates new adapter instance adapter based on adapter", "true": "create a new instance of your parcel able adapter using the provided list of items", "bleu": 0.09416415673264793, "rouge": 0.22453987730061348}, {"predict": "fill a specified byte array with given bytes", "true": "replacement function for next bytes", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "draws a triangle to indicate the presence of far - out values", "true": "draws a triangle to indicate the presence of far out values", "bleu": 0.7910665071754358, "rouge": 0.9640804597701149}, {"predict": "sometimes we need to know which class is a j dk class", "true": "sometimes we need to know which class is a j dk class", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the set of named objects that match the specified set of named objects", "true": "applies the specified queries to the set of named objects", "bleu": 0.3641410562218426, "rouge": 0.5154929577464789}, {"predict": "check if we ' ve crossed a reasonable touch slop for the given child view", "true": "check if we ' ve crossed a reasonable touch slop for the given child view", "bleu": 1.0, "rouge": 1.0}, {"predict": "create element of tag type", "true": "create end point element in dom", "bleu": 0.24736929544091937, "rouge": 0.3577712609970674}, {"predict": "add the de st file into the merged code base", "true": "put file from c into this writer", "bleu": 0.13950796967929133, "rouge": 0.24302788844621517}, {"predict": "provide a string representation of this date", "true": "provide a string representation of this number converter", "bleu": 0.7289545183625967, "rouge": 0.7904967602591793}, {"predict": "test where each operation locks one or more resources", "true": "test where each operation locks one or more resources", "bleu": 1.0, "rouge": 1.0}, {"predict": "the spec notes that \" the xml - stylesheet processing instruction is allowed only in the prolog of an xml document", "true": "the spec notes that \" the xml - stylesheet processing instruction is allowed only in the prolog of an xml document", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the contents of this byte array output stream as a byte array", "true": "returns the contents of this byte array output stream as a byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse a string value to a calendar", "true": "parse a string value to a calendar", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts bitmap to byte array", "true": "converts the specified bitmap to a byte array", "bleu": 0.2595169998796149, "rouge": 0.7384987893462469}, {"predict": "save template file to file", "true": "save template to file", "bleu": 0.45180100180492244, "rouge": 0.9070631970260222}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a transform tree node to this node", "true": "adds a composite operation to the transform node", "bleu": 0.20164945583740668, "rouge": 0.375}, {"predict": "set or if the type can be downloaded by the actual list", "true": "<unk> negative hex levels <unk> / salt <unk> effect works best with more elevation", "bleu": 0.07395852913779274, "rouge": 0.0}, {"predict": "a method that creates a module handle new module", "true": "add a module that was loaded in this browser tab", "bleu": 0.17861170664603615, "rouge": 0.20854700854700853}, {"predict": "expands a two - digit string into a list of english words", "true": "expands a two - digit string into a list of english words", "bleu": 1.0, "rouge": 1.0}, {"predict": "searches for the index of the character starting at the specified position in the given buffer", "true": "computes index of given char within string buffer", "bleu": 0.11502783619900048, "rouge": 0.3546511627906977}, {"predict": "create a new factory", "true": "create a new diagnostic factory", "bleu": 0.5506953149031837, "rouge": 0.8714285714285713}, {"predict": "pops nodes of already explored states from the head of the frontier and checks whether there are still some nodes left", "true": "pops nodes of already explored states from the head of the frontier and checks whether there are still some nodes left", "bleu": 1.0, "rouge": 1.0}, {"predict": "this test doesn ' t pass on ri", "true": "this test doesn ' t pass on ri ; fails for types", "bleu": 0.6065306597126334, "rouge": 0.7721518987341772}, {"predict": "checks if the bounding box is enabled", "true": "checks if is enabled", "bleu": 0.3073940764756322, "rouge": 0.7648902821316614}, {"predict": "initializes the disk based cache by scanning for all files currently in the specified root directory", "true": "initializes the disk based cache by scanning for all files currently in the specified root directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the variance in the array", "true": "compute variance ( ml estimator )", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "set a user to the user", "true": "<unk> user information in the request and response to reduce the number of queries and transactions", "bleu": 0.04961591899093189, "rouge": 0.25206611570247933}, {"predict": "send this location list from the list of locations", "true": "send a list of locations known by operations to the client", "bleu": 0.23278666914796883, "rouge": 0.3929146537842191}, {"predict": "serializes an text node", "true": "serializes an text node", "bleu": 1.0, "rouge": 1.0}, {"predict": "verifies that this visual position is within a given visual position", "true": "allows to answer if given visual position points to soft wrap - introduced virtual space", "bleu": 0.14737486969787153, "rouge": 0.22453987730061348}, {"predict": "this method returns the input stream that contains the cluster ' s schema and its schema", "true": "look for the requested cluster xml file in the resource bundle ( class path ) under / config / - cluster", "bleu": 0.0669269328622217, "rouge": 0.15830449826989618}, {"predict": "tests whether a world is valid", "true": "used to determine if a task is valid", "bleu": 0.2238400777155271, "rouge": 0.4178082191780822}, {"predict": "clear both rendering and picking queues", "true": "clear both rendering and picking queues", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next position in the specified position", "true": "convenience method to advance parse position by 1", "bleu": 0.16036590969929357, "rouge": 0.125}, {"predict": "specifies the current row / column ' s grow priority", "true": "specifies the current row / column ' s grow priority", "bleu": 1.0, "rouge": 1.0}, {"predict": "flushes this output stream", "true": "flush the buffer and set the offset to zero", "bleu": 0.08656385444580769, "rouge": 0.0}, {"predict": "generates a section for the specified data set", "true": "generates a label for a pie section", "bleu": 0.239802967618271, "rouge": 0.4048672566371681}, {"predict": "remove a graph listener", "true": "remove a graph listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "execute this command in a separate thread", "true": "convenience method to execute command without providing input or output", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "increment the numeric badge label", "true": "increment the numeric badge label", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a service configuration from an input stream , and initializes it with the properties of the given properties", "true": "creates service configuration and loads it with populated attribute values loaded from provided input stream property file", "bleu": 0.1361879686407304, "rouge": 0.33670653173873044}, {"predict": "ensures there is enough space in the buffer for the given number of additional bytes", "true": "ensures there is enough space in the buffer for the given number of additional bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "splits a sentence into an array of sentence", "true": "splits a sentence ( on white space ) , then looks up the integer representations of each word using the supplied symbol table", "bleu": 0.04839859043587725, "rouge": 0.23735408560311283}, {"predict": "checks if a list of objects are actually pointed to this action", "true": "checks whether a list of actions is empty", "bleu": 0.2044800736021839, "rouge": 0.4149659863945578}, {"predict": "add a string to the list of keys to null", "true": "adds the specified string to the underlying dictionary", "bleu": 0.23462350320528, "rouge": 0.34014869888475835}, {"predict": "create a deep copy of an array", "true": "deep copy - make a deep copy of m", "bleu": 0.38849358632832764, "rouge": 0.48897795591182364}, {"predict": "tests whether one of choice alternatives has the same identifier or not", "true": "tests whether one of choice alternatives has the same identifier or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "test if the message to download the test data to signal the data array", "true": "use to wait for a single message to arrive", "bleu": 0.1250076305588977, "rouge": 0.18100890207715134}, {"predict": "creates a date object from a given date / time and day", "true": "initializes new date specified as a string in form mm / dd / yyyy", "bleu": 0.10459315495983224, "rouge": 0.22761194029850743}, {"predict": "copy a file or directory to a directory", "true": "copy file object from one place to another", "bleu": 0.19070828081828378, "rouge": 0.375}, {"predict": "instantiate s a new map", "true": "instantiate s a new map objects", "bleu": 0.8187307530779819, "rouge": 0.8944281524926685}, {"predict": "reads vector of opaque values", "true": "reads vector of opaque values", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes a string into its url safe form using the default string char set", "true": "encodes a string into its url safe form using the default string char set", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests comparison of different number of attributes", "true": "tests comparison of different number of attributes", "bleu": 1.0, "rouge": 1.0}, {"predict": "increments the keep alive count , clearing all alive refs and the list of waiting to be keep alive", "true": "increments the \" keep - alive count \"", "bleu": 0.11154288433080788, "rouge": 0.399737876802097}, {"predict": "this method is used to s can the method invocation handler", "true": "factory method : collect or filter selected argument ( s )", "bleu": 0.12605968092174913, "rouge": 0.18181818181818182}, {"predict": "construct an object in the set of values", "true": "creates an in predicate using the specified values", "bleu": 0.20164945583740668, "rouge": 0.5}, {"predict": "recursively deletes a file that may represent a directory", "true": "recursively deletes a file that may represent a directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method sorts the sort keys by sorting the sort keys", "true": "loops through sort keys constructing the key statements", "bleu": 0.16108992769687397, "rouge": 0.32504440497335696}, {"predict": "convert an of instruction experimenter to string form", "true": "convert an of instruction experimenter to string form", "bleu": 1.0, "rouge": 1.0}, {"predict": "add or replace an element type for this schema", "true": "add or replace an element type for this schema", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints the relative magnitudes of the collected timer data to the standard output stream", "true": "prints the relative magnitudes of the collected timer data to the standard output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a client with the specified url , optionally resetting the remaining values", "true": "creates a zookeeper client", "bleu": 0.1350862565735141, "rouge": 0.39019189765458434}, {"predict": "adds a scheme to the current update context", "true": "optionally add cv numbers and bit numbers to tool tip text based on roster preferences setting", "bleu": 0.0589953212431261, "rouge": 0.07860824742268041}, {"predict": "reads characters until the end character is encountered , ignoring escape sequences", "true": "reads characters until the end character is encountered , ignoring escape sequences", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a key into a string", "true": "copies the given attribute set to a new set , converting any css attributes found to arguments of an html style attribute", "bleu": 0.015348610281018882, "rouge": 0.06475583864118895}, {"predict": "closes this stream", "true": "closes this input stream and releases any system resources associated with the stream", "bleu": 0.027106373194939883, "rouge": 0.3370165745856354}, {"predict": "this function will install a trust manager that will blindly trust all ssl certificates", "true": "this function will install a trust manager that will blindly trust all ssl certificates", "bleu": 1.0, "rouge": 1.0}, {"predict": "update amount in this component by setting the amount of available threads to the total list", "true": "updates the amount on the document", "bleu": 0.10878661088699644, "rouge": 0.2970779220779221}, {"predict": "test for creation of an attribute", "true": "tests the creation of a data set ( unique attribute names )", "bleu": 0.11492332782473744, "rouge": 0.31443298969072164}, {"predict": "updates the set of meta - set as a notification", "true": "redraw the panel with the legend entries", "bleu": 0.12605968092174913, "rouge": 0.12151394422310759}, {"predict": "evaluate the a vt and return a string", "true": "evaluate the a vt and return a string", "bleu": 1.0, "rouge": 1.0}, {"predict": "fills a dex file", "true": "read the dex file from file , if the file is a zip file , it will return the content of classes", "bleu": 0.005644844940217165, "rouge": 0.1367713004484305}, {"predict": "adds a listener to the set of listeners that are sent update events through the life of an animation", "true": "adds a listener to the set of listeners that are sent update events through the life of an animation", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs one of the given stream", "true": "tries to run a commercial on the given stream with the given length", "bleu": 0.12802833376249098, "rouge": 0.29611650485436897}, {"predict": "adds a sub - tree rooted at the given position in the root of the tree", "true": "imports a list of subtree s at the given position in the root of the tree", "bleu": 0.6236362995619311, "rouge": 0.6875}, {"predict": "generates missing log statements for the specified statement", "true": "generates js code for a while statement", "bleu": 0.19070828081828378, "rouge": 0.4048672566371681}, {"predict": "description of the method", "true": "calculates the incomplete gamma function for two doubles", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "initializes the use in it info instance", "true": "add slots to list where slot activated item can be activated when equipped", "bleu": 0.06628576403773602, "rouge": 0.0}, {"predict": "converts an action type to a final string", "true": "attempts to convert the http verb into a textual representation of intent based on rest conventions", "bleu": 0.06528905536667998, "rouge": 0.15721649484536082}, {"predict": "hide a hidden key into an non - hidden key", "true": "turn the provided key into a hidden key", "bleu": 0.27901593935858265, "rouge": 0.4535315985130111}, {"predict": "removes the specified m qt t token", "true": "get a token identified by a string , and remove it from our map", "bleu": 0.06833381956448398, "rouge": 0.08983799705449189}, {"predict": "returns true if the array of types are an explicit or null if the array are the same", "true": "identifies whether the array containing type names given as argument explicitly refers to all types the empty or null array doesn ' t explicitly map to all types", "bleu": 0.0727158936397009, "rouge": 0.2510288065843621}, {"predict": "continued fraction expansion # 2 for incomplete beta integral", "true": "continued fraction expansion # 2 for incomplete beta integral", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an element or attribute", "true": "reads text until the specified delimiter is encountered", "bleu": 0.1259933680597235, "rouge": 0.0}, {"predict": "returns a boolean indicating whether this key is found on the map", "true": "check existence of config section element", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "determines whether this node is a leaf", "true": "true , if the node is a leaf", "bleu": 0.44815260192961937, "rouge": 0.5269978401727862}, {"predict": "draws a shadow for the given rectangle", "true": "draws a shadow around the given rectangle", "bleu": 0.5, "rouge": 0.8571428571428571}, {"predict": "we only want the current page that is being shown to be focus able", "true": "we only want the current page that is being shown to be focus able", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if all of the characters in the text are permitted for use in xml documents", "true": "returns true if all of the characters in the text are permitted for use in xml documents", "bleu": 1.0, "rouge": 1.0}, {"predict": "a new thread that interrupts the specified thread", "true": "interrupts the specified thread , guarding against null", "bleu": 0.44632361378533286, "rouge": 0.5}, {"predict": "save the instance to a stream ( ie serialize it )", "true": "overridden to avoid exposing implementation details", "bleu": 0.11390778025531027, "rouge": 0.12423625254582485}, {"predict": "convenience method that creates a border layout container and places the given component in the south", "true": "convenience method that creates a border layout container and places the given component in the east", "bleu": 0.9351334836242398, "rouge": 0.9375000000000001}, {"predict": "does an update and return the event id generated", "true": "does an update and return the event id generated", "bleu": 1.0, "rouge": 1.0}, {"predict": "load a file into the layout", "true": "load a layout from a file", "bleu": 0.3655552228545124, "rouge": 0.5}, {"predict": "adds a marker to the end of the file", "true": "track the specified file , using the provided marker , deleting the file when the marker instance is garbage collected", "bleu": 0.06217102093060214, "rouge": 0.19365079365079363}, {"predict": "evaluates the cf 5 problem", "true": "evaluates the cf 5 problem", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts all separators to the unix separator of forward slash", "true": "converts all separators to the unix separator of forward slash", "bleu": 1.0, "rouge": 1.0}, {"predict": "indicates whether this parameter has the given name", "true": "checks if the extension contains a parameter", "bleu": 0.17747405280050269, "rouge": 0.13495575221238937}, {"predict": "free a memory in memory", "true": "free memory up to the given window id this method will be called by another thread", "bleu": 0.03347779366253814, "rouge": 0.17403708987161198}, {"predict": "returns true if the given identifier is reserved than reserved keyword", "true": "returns true if the given identifier is a sql - 99 non - reserved keyword", "bleu": 0.466040258115805, "rouge": 0.6736196319018404}, {"predict": "sorts the specified list using the given comparator", "true": "sorts the specified list using the specified comparator", "bleu": 0.7506238537503395, "rouge": 0.875}, {"predict": "called by the halo g writer to close the log file with the committing root block", "true": "write the current root block to the journal and return its address to be stored in the commit record", "bleu": 0.1037300874121511, "rouge": 0.2250922509225092}, {"predict": "convert string to string", "true": "provides a java string literal representing the parameter string", "bleu": 0.11392443929712959, "rouge": 0.28773584905660377}, {"predict": "makes a random cache entry", "true": "makes a random cache entry", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the maximum value in the given array of all elements that are nan", "true": "find the maximum of all elements in the array , ignoring elements that are nan", "bleu": 0.36432023827749077, "rouge": 0.6168539325842697}, {"predict": "this method determines if the start of an element is a start and end of the line", "true": "tries to find out if the line finishes with an element start", "bleu": 0.13973536728747976, "rouge": 0.35589264877479576}, {"predict": "parses a long ( 64 bit ) from the input stream", "true": "parses a 64 - bit in t", "bleu": 0.17033186037639278, "rouge": 0.4629981024667932}, {"predict": "removes an instance at the given position from this set", "true": "removes the instance at the given position", "bleu": 0.47987820666906633, "rouge": 0.7290836653386453}, {"predict": "extracts the access key from the given uri", "true": "extracts the access key from the given uri", "bleu": 1.0, "rouge": 1.0}, {"predict": "do one transaction operation", "true": "do one transaction operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds an unnamed value to the formatted output", "true": "adds an unnamed value to the formatted output", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies a source , from source to another", "true": "copy the elements of an array , and remove one element", "bleu": 0.11021777041988566, "rouge": 0.10234899328859062}, {"predict": "creates a new monitor context object", "true": "constructs a web top naming $ site monitor object with the provided site urls", "bleu": 0.06924459302580939, "rouge": 0.2798165137614679}, {"predict": "calculates the union if two ip ranges", "true": "calculates the union if two ip ranges", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns vertex , by id )", "true": "lookup a vertex by id", "bleu": 0.31239399369202553, "rouge": 0.5545454545454546}, {"predict": "atomic ally adds the given value to the current value", "true": "concurrent addition bound to long", "bleu": 0.12605968092174913, "rouge": 0.1418604651162791}, {"predict": "for example : / coverage debug client goes to the url , which is to be called on or about the entity", "true": "start a monitor by providing a summary label and optionally a detail string", "bleu": 0.04657469807170698, "rouge": 0.0}, {"predict": "returns the norm of the vector", "true": "computes the norm of a vector", "bleu": 0.4347208719449915, "rouge": 0.6666666666666666}, {"predict": "called when resizing event occurs to relevant and relevant", "true": "harmonic accuracy - - average over all labels", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "write entry point", "true": "writes the entry ' s data fields in fcc format to an output stream", "bleu": 0.013733827497510927, "rouge": 0.10535405872193437}, {"predict": "creates a new instance of a close able static bitmap", "true": "creates a new instance of a close able static bitmap", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a label file and returns the internal representation", "true": "this reads in a label file and returns a string of the phonetic symbols , separated by the entry separator character entry separator", "bleu": 0.11725556971942801, "rouge": 0.4055080721747389}, {"predict": "adds an object to a converter set of another converter", "true": "returns a copy of this set , with the given converter added", "bleu": 0.12977836824680314, "rouge": 0.2683284457478006}, {"predict": "parses the xml - serialized object from the given source object", "true": "serializes the java objects of the configured list into a flow of sax events", "bleu": 0.09596928383261212, "rouge": 0.15661103979460847}, {"predict": "creates a new map with data u id has been added to the existing map", "true": "sorts the given map and returns a subset which is <unk> by a lower and an upper limit", "bleu": 0.08009131863838995, "rouge": 0.11925708699902247}, {"predict": "dumps the spatial index for the s sx file", "true": "displays the contents of this index", "bleu": 0.15619699684601276, "rouge": 0.27664399092970515}, {"predict": "compares two parameter to other param", "true": "compares the parameter from the api and the parameter from reflection", "bleu": 0.10624253482403696, "rouge": 0.2234432234432234}, {"predict": "generate random number of size n directly into num", "true": "generate random number of size n directly into num", "bleu": 1.0, "rouge": 1.0}, {"predict": "escape a string to create a valid json string", "true": "escape a string to create a valid json string", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the complete contents of this byte array output stream to the specified output stream argument", "true": "writes the complete contents of this byte array output stream to the specified output stream argument", "bleu": 1.0, "rouge": 1.0}, {"predict": "this is a unit test for checking the type of the post annotations", "true": "this methods checks whether the headings hierarchy is well - structured", "bleu": 0.1135935489027116, "rouge": 0.16920943134535368}, {"predict": "returns an iterator over the elements in this array", "true": "returns an iterator to navigate the elements of the array", "bleu": 0.29052561567528307, "rouge": 0.6256410256410255}, {"predict": "if the mouse wheel is moved enough to the given mouse wheel", "true": "zoom the display in or out , depending on the direction of the mouse wheel motion", "bleu": 0.14651637512439772, "rouge": 0.2785388127853881}, {"predict": "creates a new folder with a default folder name", "true": "creates a new folder with a default folder name", "bleu": 1.0, "rouge": 1.0}, {"predict": "the function name for val parser coverage checking is extracted from the first input", "true": "the function name for val parser coverage checking is extracted from the first input", "bleu": 1.0, "rouge": 1.0}, {"predict": "handle a start element", "true": "if a new tag is encountered , check if it is of interest or not by seeing if it matches against our node tree", "bleu": 0.002420972062960732, "rouge": 0.06327800829875518}, {"predict": "tests if this expression is equivalent to a c mid or not", "true": "a method to determine the equivalence of any two markers", "bleu": 0.11498759556447223, "rouge": 0.09242424242424242}, {"predict": "disc ret ize a vector in b ? order", "true": "disc ret ize s the continuous data in the given column using the specified <unk> and category names", "bleu": 0.10218289380194193, "rouge": 0.27949599083619703}, {"predict": "loads the work space screen ids in an ordered list", "true": "loads the work space screen ids in an ordered list", "bleu": 1.0, "rouge": 1.0}, {"predict": "renders an output node to the current loader", "true": "does the actual rendering of the included file", "bleu": 0.16036590969929357, "rouge": 0.125}, {"predict": "macro : expected : parses s , f mts", "true": "macro : expected : parses s , f mts", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks repeated in t field equality ; null - value and 0 - length fields are considered equal", "true": "checks repeated boolean field equality ; null - value and 0 - length fields are considered equal", "bleu": 0.8086627571031982, "rouge": 0.9190207156308852}, {"predict": "multiply a 4 x , y by a specified scale factor", "true": "multiplies this matrix by a scale matrix with specified values", "bleu": 0.17033186037639278, "rouge": 0.28818897637795277}, {"predict": "lock the lock on the keyboard", "true": "changes the lock icon ' s image to whatever it currently is not", "bleu": 0.09052970298747198, "rouge": 0.19741100323624597}, {"predict": "returns the position to write the segments sorted from the list of segments", "true": "buffer polygons by buffering the individual boundary segments and either union ing or differ enc ing them", "bleu": 0.07771232681365989, "rouge": 0.13020277481323372}, {"predict": "records the end time", "true": "computes the response time of the request that just finished for the local thread and updates the request response average in the last minute , and <unk> to the request response per minute per hour counter", "bleu": 0.00013339180428307028, "rouge": 0.08739255014326647}, {"predict": "returns true if an current user is fully parsed", "true": "check if an user has au th to <unk> na", "bleu": 0.17861170664603615, "rouge": 0.31282051282051276}, {"predict": "clears the list and sub - listeners", "true": "remove all entries from the table list", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "returns an index for accessing arrays in this class", "true": "returns an index for accessing arrays in this class", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the serialized data from the given file", "true": "load a file", "bleu": 0.16036590969929357, "rouge": 0.19805194805194803}, {"predict": "format the given parameter object into string", "true": "format the given parameter object into string", "bleu": 1.0, "rouge": 1.0}, {"predict": "test for bug # 575 , in t does not affect second statement", "true": "tests fix for bug # <unk> ( <unk> ) - calling server prepared statement", "bleu": 0.1740651048538728, "rouge": 0.2943305186972256}, {"predict": "using the trigonometric unit circle , calculate the positions that the text will need to be drawn at based on the specified circle radius", "true": "using the trigonometric unit circle , calculate the positions that the text will need to be drawn at based on the specified circle radius", "bleu": 1.0, "rouge": 1.0}, {"predict": "force buffered operations to the filesystem", "true": "force buffered operations to the filesystem", "bleu": 1.0, "rouge": 1.0}, {"predict": "method called to try to expand shared name area to fit one more potentially shared string", "true": "method called to try to expand shared name area to fit one more potentially shared string", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a request property to this handler", "true": "adds a general request property specified by a key - value pair", "bleu": 0.15048220633585796, "rouge": 0.40197693574958815}, {"predict": "updates the member name", "true": "updates the member client address", "bleu": 0.5208154731870476, "rouge": 0.6535714285714286}, {"predict": "is this client instance of table ?", "true": "is table org level only", "bleu": 0.20556680845025982, "rouge": 0.34366197183098596}, {"predict": "convenience method to dec re ment this trigger as a run n able", "true": "convenience method to dec re ment this trigger as a run n able", "bleu": 1.0, "rouge": 1.0}, {"predict": "handles actions from within the property panel", "true": "handles user <unk> with the panel", "bleu": 0.22089591134157885, "rouge": 0.4680306905370844}, {"predict": "serializes the given object to a buffer", "true": "serializes the object into a byte buffer", "bleu": 0.29071536848410967, "rouge": 0.7142857142857143}, {"predict": "resolve a module name from the module", "true": "find the module pointer that the string mod name resolves to ; return null if either mod name is not found in the context or if it is found and resolves to null , i", "bleu": 0.0048113533019515705, "rouge": 0.12752613240418118}, {"predict": "creates the instance of tls v 1 connection state", "true": "creates the instance of tls v 1 connection state", "bleu": 1.0, "rouge": 1.0}, {"predict": "receive notification of the beginning of an element", "true": "receive notification of the beginning of an element", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a certificate store to the list of certificate stores that are used to find certificates and cr ls", "true": "adds a certificate store to the list of certificate stores that are used to find certificates and cr ls", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new nar class loader", "true": "construct a nar class loader", "bleu": 0.4347208719449915, "rouge": 0.7393939393939394}, {"predict": "returns the basic block indicated by this node", "true": "returns the basic block indicated by this node", "bleu": 1.0, "rouge": 1.0}, {"predict": "names for the type of the given type , where the matches of its super classes of the given type", "true": "returns an array of types , where original types got substituted given a substitution", "bleu": 0.09134423666564473, "rouge": 0.24302788844621517}, {"predict": "checks if the last point is scrolling", "true": "checks to see if the user is currently scrolling the menu", "bleu": 0.16417223692914015, "rouge": 0.5341506129597198}, {"predict": "tests whether a single filter is correctly merged into a descriptor that already contains the same filter", "true": "tests whether a single filter in the merge descriptor is ignored because a filter with the same name already exists in the source descriptor", "bleu": 0.22259154070499268, "rouge": 0.4259115593483321}, {"predict": "construct an edge from source object", "true": "edge which <unk> to another non - accepting state", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "push the field", "true": "generates the instruction to push the given value on the stack", "bleu": 0.04913221953988765, "rouge": 0.2590233545647558}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an extended text label", "true": "create an extended glyph array for the text between start and limit", "bleu": 0.09521044541645862, "rouge": 0.3285457809694794}, {"predict": "pads the string at the left with the specified character until it reaches the desired length", "true": "pads the string at the right with the specified character until it reaches the desired length", "bleu": 0.8282477531331041, "rouge": 0.9375000000000001}, {"predict": "ask whether we support a given dom feature", "true": "ask whether we support a given dom feature", "bleu": 1.0, "rouge": 1.0}, {"predict": "atomic ally removes all of the elements from this queue", "true": "atomic ally removes all of the elements from this queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a quoted char descriptor from the reader", "true": "reads the value of a string enclosed in single quotes , skipping over the quotes and any leading spaces", "bleu": 0.048218604638712956, "rouge": 0.20701357466063344}, {"predict": "returns a string representation of the matrix contents", "true": "outputs the confusion matrix as comma - separated values for easy import into <unk>", "bleu": 0.08383280652235028, "rouge": 0.1732954545454545}, {"predict": "add two positive numbers of different length", "true": "subtract two positive numbers of different length", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "assigns the id of the data cache objects of the given object cache", "true": "assign an id value to this field", "bleu": 0.09552040806823771, "rouge": 0.10571923743500866}, {"predict": "writes a \" in t \" value to an output stream", "true": "writes a \" in t \" value to an output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether this iterator has been open", "true": "returns true if this lock is still open ie", "bleu": 0.15447878876032708, "rouge": 0.24448897795591182}, {"predict": "same as perform find but now returning a list instead of an iterator extra parameters view", "true": "same as perform find but now returning a list instead of an iterator extra parameters view index : startpage of the partial list ( 0 = first page ) view size : the length of the page ( number of records ) extra output parameter : list size", "bleu": 0.1353352832366127, "rouge": 0.45864661654135336}, {"predict": "converts soap element to string", "true": "converts a java x", "bleu": 0.2730120862709067, "rouge": 0.22676579925650556}, {"predict": "close the file", "true": "closes the file writer and deletes the lock file ( if possible )", "bleu": 0.02522532260784596, "rouge": 0.2246777163904236}, {"predict": "initializes this static object with the context of the calling activity", "true": "initializes this static object with the context of the calling activity", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests whether the instance x , y - value is equal to the other vector", "true": "compare two instances of the class mapped by this type for persistence \" equality \"", "bleu": 0.08225964699966554, "rouge": 0.06666666666666665}, {"predict": "writes a boolean to the stream", "true": "write a boolean s as one byte", "bleu": 0.24608524656663955, "rouge": 0.3034825870646766}, {"predict": "train this to train", "true": "train the statistics of the c <unk> from a given file set", "bleu": 0.04862652376060361, "rouge": 0.11466165413533834}, {"predict": "test de bus queda open l dap con atri but os", "true": "test de bus queda open l dap con limit e", "bleu": 0.7102992180127422, "rouge": 0.768503937007874}, {"predict": "format a string for the specified format", "true": "constructs an array of control specifications possibly preceded , separated , or followed by ordinary strings", "bleu": 0.043181135652468706, "rouge": 0.0}, {"predict": "returns the larger of two double precision numbers", "true": "fun t ions used - - - - - - - - - - - - - utility d max , dm in", "bleu": 0.020680088821143392, "rouge": 0.0}, {"predict": "append the contents of another fast string buffer on to this fast string buffer , growing the storage if necessary", "true": "append the contents of another fast string buffer on to this fast string buffer , growing the storage if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "write a in t value to an output stream", "true": "write a fixed - width 32 bit integer in network byte order ( big - endian )", "bleu": 0.08205883050831836, "rouge": 0.2186379928315412}, {"predict": "queue the specified cube as the the specified load task", "true": "queue a cube load , running the specified callback when the load has finished", "bleu": 0.1374462580533874, "rouge": 0.40450928381962864}, {"predict": "checks if the current state is available or not", "true": "check availability of an object", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "responds to the button", "true": "invoked when the button part is clicked", "bleu": 0.22336835181428535, "rouge": 0.346590909090909}, {"predict": "returns the next z message id", "true": "find largest message id as the current start point", "bleu": 0.1894765350842885, "rouge": 0.2573839662447257}, {"predict": "remove a change listener", "true": "removes a change listener from this loader", "bleu": 0.3158905525406873, "rouge": 0.5198863636363635}, {"predict": "dump a snapshot of the request log of the current thread without resetting the request log of the request thread", "true": "exports a snapshot of the request log of the current thread and also resets the request log for that thread", "bleu": 0.5626933387118171, "rouge": 0.7000000000000001}, {"predict": "url decodes an url with query string", "true": "description of the method", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "then accept both result completes exceptionally if either source cancelled", "true": "then accept both result completes exceptionally after exceptional completion of either source", "bleu": 0.5170736949462367, "rouge": 0.7155425219941348}, {"predict": "converts a string to model", "true": "transforms the given , comma - separated string into a default list model", "bleu": 0.06554932163900559, "rouge": 0.20573355817875214}, {"predict": "test method used to correctly get index", "true": "test for bug <unk> exception with sy base and metadata", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "adds the specified collection at the end of the array", "true": "adds the specified collection at the end of the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "reset the current file list", "true": "reset the current file list for the logger", "bleu": 0.5488116360940264, "rouge": 0.7384987893462469}, {"predict": "initialize a new compose state", "true": "initialize a new compose state", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates and returns a sorted bar tool bar", "true": "creates <unk> for the application", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "parses a date value", "true": "parses a date value", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new regular expression filter with the specified flags case sensitivity", "true": "construct a new regular expression filter with the specified flags case sensitivity", "bleu": 1.0, "rouge": 1.0}, {"predict": "execute a sql query", "true": "this method is a thin wrapper for jd bc execute query ( )", "bleu": 0.045035719139523436, "rouge": 0.2147887323943662}, {"predict": "counts the written bytes", "true": "counts the written bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes a string using utf - 8", "true": "url - encodes a null able string , catching the useless exception that never happens", "bleu": 0.08858009236942327, "rouge": 0.2559440559440559}, {"predict": "checks to see if a raw modules has raw colour pattern", "true": "checks the existence of all necessary raw module tables", "bleu": 0.12605968092174913, "rouge": 0.2036727879799666}, {"predict": "constructs a new currency", "true": "this method is used to convert the string value given to an appropriate representation", "bleu": 0.0248009595334312, "rouge": 0.0}, {"predict": "parses a string using the specified values", "true": "parses the supplied x sd : float string and returns its value", "bleu": 0.1081377510275021, "rouge": 0.20098846787479407}, {"predict": "create an instance of the specified java content interface", "true": "create an instance of the specified java content interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "requests a password for share the share share button", "true": "starts a dialog that requests a password to the user to protect a share link", "bleu": 0.14925824694560996, "rouge": 0.3986928104575163}, {"predict": "force out the ( in memory ) to be generated by the memory", "true": "allocate objects until death", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "puts the entry with the specified key into the cache", "true": "puts the entry with the specified key into the cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the enlargement obtained by adding an object to an existing object", "true": "compute the enlargement obtained by adding an object to an existing object", "bleu": 1.0, "rouge": 1.0}, {"predict": "intersect this clip with another region", "true": "intersect this clip with another region", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new waiter to wait queue", "true": "adds a new waiter to wait queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "the code - units at the front of the xml string that form code - points in the xml string production", "true": "returns the portion of its input that consists of xml safe chars", "bleu": 0.07305267243289862, "rouge": 0.2549634273772205}, {"predict": "assert that two lines are equal , and then passing each line", "true": "compares a string line wise , i", "bleu": 0.11498759556447223, "rouge": 0.11050724637681159}, {"predict": "recursively prints a warning message", "true": "used internally to log a message about the class at level warning , in case an exception was thrown", "bleu": 0.019743076272439736, "rouge": 0.1508034610630408}, {"predict": "adds fill components to empty cells in the first row and first column of the grid", "true": "adds fill components to empty cells in the first row and first column of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the prefix for the prefix if they exist", "true": "prefix one of the registered <unk> with an expression like \" piece of \"", "bleu": 0.08961856124931385, "rouge": 0.1673525377229081}, {"predict": "clears the password expiration warned time", "true": "clears the password expiration warned time", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a locale with the most - specific field removed , or null if this locale had an empty language , country and variant", "true": "returns a locale with the most - specific field removed , or null if this locale had an empty language , country and variant", "bleu": 1.0, "rouge": 1.0}, {"predict": "append a representation of the time zone of ' calendar ' to ' buffer '", "true": "append a representation of the time zone of ' calendar ' to ' buffer '", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the listeners for the call", "true": "remove listeners , <unk> that our <unk> ld flags are accurate and it removes only as declared", "bleu": 0.03908444433970424, "rouge": 0.0800524934383202}, {"predict": "pads spaces on to the left of the given string to the string with the given length", "true": "pads the given string to the left with spaces to ensure that it ' s at least total chars long", "bleu": 0.2856179047509544, "rouge": 0.37292576419213974}, {"predict": "show as in the list of flags", "true": "set whether to show scores on the plot lines", "bleu": 0.15447878876032708, "rouge": 0.24448897795591182}, {"predict": "writes a char sequence to a file creating the file if it does not exist using the default encoding for the vm", "true": "writes a char sequence to a file creating the file if it does not exist using the default encoding for the vm", "bleu": 1.0, "rouge": 1.0}, {"predict": "the method generates a real kernel based on the type or return the number of characters used to type a method", "true": "the kernel helper function , called k ' in 1 and 2", "bleu": 0.06429451441231726, "rouge": 0.12748171368861025}, {"predict": "gets connection from db", "true": "gets connection from a pool", "bleu": 0.5208154731870476, "rouge": 0.6535714285714286}, {"predict": "emits a method to clear a list or map", "true": "emits a method to clear a list or map", "bleu": 1.0, "rouge": 1.0}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "starts up to any internal state", "true": "start recording the gesture", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "adds an input method listener", "true": "add input method listener", "bleu": 0.5081327481546147, "rouge": 0.6802973977695167}, {"predict": "add a fixed view to appear at the bottom of the list", "true": "add a fixed view to appear at the bottom of the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the class from the specified url", "true": "load the driver class for the given url , if the database url is known", "bleu": 0.07448668213629092, "rouge": 0.3412587412587413}, {"predict": "add a document to the luce ne search index", "true": "add a document to the luce ne search index", "bleu": 1.0, "rouge": 1.0}, {"predict": "add command in the command class i fier", "true": "add a command in the hash map", "bleu": 0.3155984539112945, "rouge": 0.5398230088495575}, {"predict": "prints that the column is an auto increment column", "true": "prints that the column is an auto increment column", "bleu": 1.0, "rouge": 1.0}, {"predict": "stores g cm messaging structure with an b - > block", "true": "save the g cm info to the preferences", "bleu": 0.14991106946711685, "rouge": 0.216696269982238}, {"predict": "main worker run loop", "true": "main worker run loop", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the block light to a buffer", "true": "write the block light to a buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "cas wait status field of a node", "true": "cas wait status field of a node", "bleu": 1.0, "rouge": 1.0}, {"predict": "execute a full text search from the request parameters", "true": "execute a full text search from the request parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next token if it matches the specified pattern", "true": "returns the next token if it matches the specified pattern", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new operation duration to this class", "true": "add a new operation duration to this class", "bleu": 1.0, "rouge": 1.0}, {"predict": "paints a solid background of a given component , using the background of the background", "true": "paint the background of an un editable control , e", "bleu": 0.16188613565728213, "rouge": 0.2489795918367347}, {"predict": "adds a default values to a service", "true": "adds default values to an existing attribute", "bleu": 0.3655552228545123, "rouge": 0.5714285714285714}, {"predict": "return canonical form", "true": "return canonical form", "bleu": 1.0, "rouge": 1.0}, {"predict": "add all resources recursively", "true": "sets the list of directories where the resources come from", "bleu": 0.08017158404431235, "rouge": 0.13260869565217392}, {"predict": "helper method used to decode short unicode string , length for which actual length ( in bytes ) is known", "true": "helper method used to decode short unicode string , length for which actual length ( in bytes ) is known", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a class node instance and key type", "true": "wrap type in class & lt ; & gt ; if using class = = true", "bleu": 0.06528905536667998, "rouge": 0.07860824742268041}, {"predict": "push an import href on to the stylesheet stack", "true": "push an import href on to the stylesheet stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "internal conversion", "true": "returns a formatted string of the results", "bleu": 0.0524476438328049, "rouge": 0.0}, {"predict": "sorts the list of in place in this list in document order", "true": "sorts the encapsulated test suites by their name in alphabetic order , then returns with the current ( sorted ) instance", "bleu": 0.07339218502993058, "rouge": 0.23106060606060605}, {"predict": "returns an array containing all of the elements in the array", "true": "expand the array passed in by the multiple elements to add", "bleu": 0.17827531042796255, "rouge": 0.2727272727272727}, {"predict": "adds a marker to this log with the specified name", "true": "adds a marker to this log with the specified name", "bleu": 1.0, "rouge": 1.0}, {"predict": "replaces a with b in c", "true": "replaces a with b in c", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "true": "this method will be invoked when the current page is scrolled , either as part of a pro grammatically initiated smooth scroll or a user initiated touch scroll", "bleu": 1.0, "rouge": 1.0}, {"predict": "enables or disables the popup that , so that it matches the current member variables", "true": "enables or disables the final button , so that it matches the current member variables", "bleu": 0.7447819789879647, "rouge": 0.8666666666666667}, {"predict": "w sp type decoder test , decode app id test", "true": "w sp type decoder test , decode string app id test", "bleu": 0.7358936681622166, "rouge": 0.9442724458204335}, {"predict": "removes all children actions ( separators as well ) from the group", "true": "removes all children actions ( separators as well ) from the group", "bleu": 1.0, "rouge": 1.0}, {"predict": "check whether a file is writable", "true": "check is a file is writable", "bleu": 0.6434588841607617, "rouge": 0.8333333333333334}, {"predict": "handle a ngc for ngc", "true": "this method validates the relying party", "bleu": 0.18796001821050234, "rouge": 0.0}, {"predict": "rotate transformation about the x axis", "true": "rotate transformation about the z axis", "bleu": 0.6434588841607617, "rouge": 0.8333333333333334}, {"predict": "start a factory service", "true": "starts a default factory service for the given instance service", "bleu": 0.11337974147240094, "rouge": 0.3978260869565217}, {"predict": "sends the reader of available data to credits", "true": "notify the reader of available space in the pipe", "bleu": 0.3938792067159195, "rouge": 0.465648854961832}, {"predict": "method to line up with types and user to be assigned", "true": "the first half of step 6", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "generate number of columns and return the number of characters", "true": "allows to answer how many columns are necessary for representation of the given char on a screen", "bleu": 0.07444363397302332, "rouge": 0.14153132250580047}, {"predict": "constructs an instance with the value present", "true": "constructs an instance with the value present", "bleu": 1.0, "rouge": 1.0}, {"predict": "create new messages container for given consumer", "true": "construct an instance with the supplied configuration properties and specific topics / partitions / initial offsets", "bleu": 0.043181135652468706, "rouge": 0.0}, {"predict": "this is not quite complete - we should follow up on the chain , a bit tricky if a certificate appears in more than one chain", "true": "this is not quite complete - we should follow up on the chain , a bit tricky if a certificate appears in more than one chain", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a match er to a string", "true": "captures the group passed in by matching against a pattern", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "p i should return a new line by adding this vector to an in t", "true": "translates the line by p vector", "bleu": 0.12300686288463772, "rouge": 0.3096446700507614}, {"predict": "reject the task r in the caller ' s thread , as well as the caller has been rejected by the task , in the task might be rejected", "true": "invokes the rejected execution handler for the given command", "bleu": 0.04965977366141172, "rouge": 0.1744518589132507}, {"predict": "calculate the menu item of the window", "true": "method that calculates space left for edit text when format text panel is visible", "bleu": 0.057461663912368725, "rouge": 0.0}, {"predict": "adds a new run n able to the list for this phase", "true": "adds a pending ramming attack to the list for this phase", "bleu": 0.5205510363053438, "rouge": 0.7011494252873562}, {"predict": "turn an array of resource - colors ( contains resource - id integers ) into an array list of actual color integers", "true": "turn an array of resource - colors ( contains resource - id integers ) into an array list of actual color integers", "bleu": 1.0, "rouge": 1.0}, {"predict": "test the configuration files option", "true": "test configuration file property", "bleu": 0.3021375397356768, "rouge": 0.4535315985130111}, {"predict": "generate the salt for the header", "true": "generate the random salt bytes if required", "bleu": 0.2644358066258934, "rouge": 0.45522388059701485}, {"predict": "adds a listener to be notified if it is added", "true": "add a <unk> listener", "bleu": 0.13950796967929133, "rouge": 0.3096446700507614}, {"predict": "select the tuple expression where the given map owner , the operator ' s internal - call parameter", "true": "selects from a list of tuple expressions the next tuple expression that should be evaluated", "bleu": 0.09629943614188137, "rouge": 0.18484848484848485}, {"predict": "the default fully - read number of fields , in the default number of characters , the minimum and the specified output stream", "true": "writes the given phone number to the stream ( bcd coded )", "bleu": 0.0665422126355551, "rouge": 0.2423038728897716}, {"predict": "add a message to the list of messages in the list", "true": "add a message to the history", "bleu": 0.41722614486115056, "rouge": 0.6211812627291243}, {"predict": "start container , this method will only be used by the http response", "true": "start the executor for the given container", "bleu": 0.1135935489027116, "rouge": 0.21143847487001732}, {"predict": "convert a string to a date object", "true": "convert a date time string ( e", "bleu": 0.3073940764756322, "rouge": 0.42857142857142855}, {"predict": "call this when you are to accept the way", "true": "implementation of visitor pattern", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "returns the latest version of the available version", "true": "reload the list of registered extensions , loading only the latest extension versions", "bleu": 0.1283572790104489, "rouge": 0.2739520958083832}, {"predict": "start processing given node", "true": "start processing given node", "bleu": 1.0, "rouge": 1.0}, {"predict": "produces a string representation of the date in sql format", "true": "produces a string representation of the date in sql format", "bleu": 1.0, "rouge": 1.0}, {"predict": "clear bit ( in t n ) inside a negative number", "true": "clear bit ( in t n ) inside a negative number", "bleu": 1.0, "rouge": 1.0}, {"predict": "compare to a number of an greater scale", "true": "compare to a number of an greater scale", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads bytes into an integer", "true": "reads a single character", "bleu": 0.2730120862709067, "rouge": 0.22676579925650556}, {"predict": "cancels the current action", "true": "cancels the current completion , which means the state of the text is returned to what it was before completion and the info popup is closed if necessary", "bleu": 0.0016576414865848304, "rouge": 0.1651624548736462}, {"predict": "after rotating , the matrix needs to be translated", "true": "after rotating , the matrix needs to be translated", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "specify a client proxy name", "true": "if a proxy is used to access the o data web service this specifies it ' s host name / ip address", "bleu": 0.010835229990606801, "rouge": 0.1995637949836423}, {"predict": "verifies that the given setter ' s setter method will have the naming convention", "true": "verifies that the setter methods are compliant with the naming convention", "bleu": 0.24601372576927547, "rouge": 0.5723860589812332}, {"predict": "extracts element at current take position , advances , and signals", "true": "extracts element at current take position , advances , and signals", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a random float of the specified width and value", "true": "get a random , positive float", "bleu": 0.17827531042796255, "rouge": 0.3927038626609442}, {"predict": "returns the variation ( produced ) coordinates", "true": "attempt to parse string as a variation", "bleu": 0.18575057999133598, "rouge": 0.14285714285714285}, {"predict": "resets the indexes text indexes", "true": "resets all text box indexes except those which are contained in the excluded list", "bleu": 0.05674620314719988, "rouge": 0.2909379968203497}, {"predict": "learn a device using the given characteristics", "true": "learn a device using the given characteristics", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the level zero for an element", "true": "returns a fresh copy of all data from level 0 buffers", "bleu": 0.10489671869455933, "rouge": 0.10683012259194395}, {"predict": "adds a forward reference to this label", "true": "adds a forward reference to this label", "bleu": 1.0, "rouge": 1.0}, {"predict": "return list of ' s peer devices", "true": "returns the device type and software version", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "counts the number of matches field based on the given string", "true": "counts the amount of times a certain character is part of a string", "bleu": 0.1420146856299917, "rouge": 0.3283983849259758}, {"predict": "given an icon , add it to an image icon and return a new icon with the color icon", "true": "adds a background color to the given icon , if an icon and color is actually given , otherwise the original icon is returned", "bleu": 0.10955848851071687, "rouge": 0.3644510828976848}, {"predict": "reads all bytes from given input stream and returns it as a byte array", "true": "read from in str up to a maximum number of bytes , throwing an exception if more the maximum amount of requested data is available", "bleu": 0.04791236911996935, "rouge": 0.0976}, {"predict": "perform a search for the given target string , starting at the given start position", "true": "searches for the given target directory starting in the \" plugins \" sub directory of the given location", "bleu": 0.22290676886720054, "rouge": 0.41739980449657876}, {"predict": "validates pre balance in pre order clause for i gfs configuration", "true": "checks that pre load - order - dependant caches has sync or a sync pre loading mode", "bleu": 0.07850964045393388, "rouge": 0.1375422773393461}, {"predict": "execute the thread loop", "true": "creates a new thread , and starts execution of the player", "bleu": 0.06909866532427987, "rouge": 0.12298387096774194}, {"predict": "removes the environment variable", "true": "removes the environment variable", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the minin al number of instances required to achieve a score as high as the given score threshold for the given lambda", "true": "calculates the minimal number of instances required to achieve a score as high as the given score threshold for the given lambda", "bleu": 0.8318180062062374, "rouge": 0.8924652523774688}, {"predict": "returns the value on the top of the stack", "true": "returns the value on the top of the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests fail : always returns false", "true": "tests fail : always returns false", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the index of the last directory separator character", "true": "returns the index of the last directory separator character", "bleu": 1.0, "rouge": 1.0}, {"predict": "utility method to determine whether the given point , in local coordinates , is inside the view , where the area of the view is expanded by the slop factor", "true": "utility method to determine whether the given point , in local coordinates , is inside the view , where the area of the view is expanded by the slop factor", "bleu": 1.0, "rouge": 1.0}, {"predict": "test for bug # 1 , & amp ; commit & servers ;", "true": "this test will check to see if all the partition attributes are sent to the client", "bleu": 0.07583581624939055, "rouge": 0.06770255271920088}, {"predict": "reconstructs a extended type for the flattened , the extended attributes", "true": "local helper method to unroll variables in a type bounds array", "bleu": 0.12605968092174913, "rouge": 0.18181818181818182}, {"predict": "delete q is greater than block id", "true": "delete a smart quota", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a map of basic authentication header from basic au th header", "true": "method to create a basic http base 64 encrypted authentication header", "bleu": 0.17996531271765898, "rouge": 0.43821839080459773}, {"predict": "add a new entry", "true": "adds a new extent entry", "bleu": 0.39573418216703893, "rouge": 0.6535714285714286}, {"predict": "checks a copy of a network directory", "true": "if this transport network is already built and cached , fetch it quick", "bleu": 0.07882750221706718, "rouge": 0.0948678071539658}, {"predict": "returns the number of un processed tokens remaining in the string", "true": "returns the number of un processed tokens remaining in the string", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct this entry from xml file", "true": "ask sax to read and verify a file", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "has denied permission", "true": "is all granted boolean", "bleu": 0.32372956394183194, "rouge": 0.0}, {"predict": "execute a run n able into the current thread", "true": "fires a event on the executor thread", "bleu": 0.16784459625186196, "rouge": 0.38364779874213834}, {"predict": "send next message over network reply", "true": "get the next message from the outgoing queue and send it over the network", "bleu": 0.09113100941873914, "rouge": 0.3730886850152905}, {"predict": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "true": "use on size changed instead of on attached to window to get the dimensions of the view , because this method is called after measuring the dimensions of match parent & wrap content", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds an attribute for the key in this schema", "true": "tells this mapper to use an attribute for this field", "bleu": 0.24855227187657006, "rouge": 0.41709401709401706}, {"predict": "returns true if token is a session token", "true": "checks if is session token", "bleu": 0.239802967618271, "rouge": 0.6421052631578947}, {"predict": "returns the root error for a given sphere", "true": "this returns the root mean squared error of two data sets", "bleu": 0.21690743377623947, "rouge": 0.4093959731543625}, {"predict": "write data to given byte buffer , like serialize", "true": "write data to given buffer , like serialize", "bleu": 0.6580370064762462, "rouge": 0.9512670565302144}, {"predict": "creates a map of text in the input amount of distinct parts of in the case of distinct", "true": "creates account details map", "bleu": 0.07535838128770536, "rouge": 0.2053872053872054}, {"predict": "rotates the subtree so that its root ' s left child is the new root", "true": "rotates the subtree so that its root ' s left child is the new root", "bleu": 1.0, "rouge": 1.0}, {"predict": "byte compaction mode ( see 5", "true": "byte compaction mode ( see 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the remote experiment when a radio button is clicked", "true": "updates the primary loop iteration control of the experiment", "bleu": 0.17827531042796255, "rouge": 0.31881533101045295}, {"predict": "adds a recorded value", "true": "adds a recorded value", "bleu": 1.0, "rouge": 1.0}, {"predict": "the graphical representation of a series", "true": "the graphical representation of a series", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks a class signature", "true": "checks a class signature", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds the select command line from the card ' s structural card names : - - - f 1 ) : f 2 , aid : - > command line filter : - > 3 )", "true": "builds the select command ap du from a card let ' s app id : - builds the card let ' s aid appending the <unk> s mo prefix and a suffix - builds the command concatenating the header , aid lenght and aid", "bleu": 0.12061459371282507, "rouge": 0.31924315619967797}, {"predict": "finds the contents of the found urls as a properties object", "true": "finds the corresponding resources and reads them in as a properties files any url that cannot be read in as a properties file will be added to the ' resources not loaded ' collection", "bleu": 0.03237968475886221, "rouge": 0.20346897931954638}, {"predict": "adds the given root entry to the list of entries", "true": "should only be invoked from project comparison entry", "bleu": 0.12605968092174913, "rouge": 0.11338289962825278}, {"predict": "creates a new source object from a url", "true": "creates a new source object from a url", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new zoom listener", "true": "adds a new zoom listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests whether a single ser v let is correctly merged into a descriptor that already contains another ser v let", "true": "tests whether a single ser v let is correctly merged into a descriptor that already contains the definition of an other ser v let", "bleu": 0.7086958412948493, "rouge": 0.8497067448680353}, {"predict": "extract the re q is ation , i", "true": "extract the regular expression associated with this recursive production", "bleu": 0.1862539773562041, "rouge": 0.232824427480916}, {"predict": "sets the flag that indicates whether all objects are finalized when the vm is about to exit", "true": "sets the flag that indicates whether all objects are finalized when the vm is about to exit", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the specified id to this object", "true": "adds an am identity object to this search result", "bleu": 0.20873176328735715, "rouge": 0.3667334669338677}, {"predict": "registers a batch fix for the annotation which is either available on the annotation", "true": "registers a quick fix which would be available during batch mode only , in particular during com", "bleu": 0.11604673670688934, "rouge": 0.3170478170478171}, {"predict": "creates a file , including parent if it has not been created", "true": "creates a new file zip entry with the specified name", "bleu": 0.14694106251955755, "rouge": 0.2772727272727273}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "the start of the document", "true": "the start of the document", "bleu": 1.0, "rouge": 1.0}, {"predict": "dumps other application hierarchy and logs information to the corresponding package and updates the information to db", "true": "helper method used for debugging to dump the current window ' s layout hierarchy", "bleu": 0.0859076483566362, "rouge": 0.13132400430570507}, {"predict": "registers a change observer", "true": "registers an observer to be notified on routing rules changes", "bleu": 0.08872444253557525, "rouge": 0.26521739130434785}, {"predict": "transforms a heartbeat list into its local nodes", "true": "send a heartbeat with the updated pods to other servers in the cluster", "bleu": 0.11296874775996037, "rouge": 0.18263473053892215}, {"predict": "writes message to to to the output stream", "true": "writes message to to the output stream", "bleu": 0.816496580927726, "rouge": 0.9446902654867256}, {"predict": "initializes ssl engine key by https", "true": "initializes an ssl engine", "bleu": 0.31239399369202553, "rouge": 0.6224489795918368}, {"predict": "creates a new access source source", "true": "constructs a new offset random access source", "bleu": 0.3094358155846605, "rouge": 0.6069651741293532}, {"predict": "create a new argument parser", "true": "create a parser for the named program", "bleu": 0.25880882365505126, "rouge": 0.48541114058355433}, {"predict": "set bit ( in t n ) outside zero", "true": "set bit ( in t n ) outside zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will convert boolean to string", "true": "this method will convert boolean to string with comma separated", "bleu": 0.6514390575310556, "rouge": 0.7981308411214955}, {"predict": "draws an axis line at the specified cursor position and edge", "true": "draws an axis line at the current cursor position and edge", "bleu": 0.7348889200874658, "rouge": 0.9090909090909091}, {"predict": "save a model to the file", "true": "save a model in x stream deep object serialized xml form", "bleu": 0.17867793336200125, "rouge": 0.33516483516483514}, {"predict": "ensures that the span contains a span", "true": "sort the spans in ascending order by their start position", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "split the data set by the data set", "true": "split the data set randomly", "bleu": 0.44632361378533286, "rouge": 0.6421052631578947}, {"predict": "drops a prefix from a path if it exists or returns original path if prefix does not match", "true": "drops a prefix from a path if it exists or returns original path if prefix does not match", "bleu": 1.0, "rouge": 1.0}, {"predict": "publish / send a message to an m qt t server once the server has messages supplied to the server", "true": "publish / send a message to an m qt t server", "bleu": 0.5362721716524186, "rouge": 0.7488839285714286}, {"predict": "removes the given adaptable object from this list", "true": "adds the given adaptable object to this list", "bleu": 0.5133450480401704, "rouge": 0.75}, {"predict": "creates a lazily concatenated stream whose elements are all the elements of the first stream followed by all the elements of the second stream", "true": "creates a lazily concatenated stream whose elements are all the elements of the first stream followed by all the elements of the second stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "compares the values of actual and expected", "true": "compares the values of actual and expected", "bleu": 1.0, "rouge": 1.0}, {"predict": "force authentication connection to the server", "true": "sets the request ' s for ceau th parameter", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "fetch the user details for the user", "true": "fetch the user details for the user credentials", "bleu": 0.8668778997501817, "rouge": 0.9222462203023757}, {"predict": "detaches and waits for the event to zero", "true": "stop replica tor node manager j mx service", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "dispose of object , releasing resources", "true": "dispose of object , releasing resources", "bleu": 1.0, "rouge": 1.0}, {"predict": "the implementation for push message a sync ( ) function", "true": "the implementation for push message a sync ( ) function", "bleu": 1.0, "rouge": 1.0}, {"predict": "write data to characteristic , and send to remote bluetooth le device", "true": "write data to characteristic , and send to remote bluetooth le device", "bleu": 1.0, "rouge": 1.0}, {"predict": "links the element name to the stack , and return the result", "true": "returns the js doc format of link to the element", "bleu": 0.17194656088289215, "rouge": 0.2772727272727273}, {"predict": "read a file into a list", "true": "this function reads an input stream line - by - line and converts each line into an object using a transformer that is passed as a parameter", "bleu": 0.007932580529780851, "rouge": 0.1087344028520499}, {"predict": "removes the specified element from the stack", "true": "removes the first occurrence of the specified element from this array , if it is present", "bleu": 0.1643799650080285, "rouge": 0.40612516644474045}, {"predict": "send a stream ' s bytes from a stream", "true": "send a stream ' s byte tuples in a web socket binary message", "bleu": 0.34449658314088427, "rouge": 0.5281385281385281}, {"predict": "sorts the given items", "true": "perform sorting according to sort type", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "this is used to determine if the host + amp ; entity id = ' ' , ' , ' t escape entity", "true": "decides whether it needs to escape xml special characters for attribute values or not", "bleu": 0.05856458233275369, "rouge": 0.11306765523632993}, {"predict": "update the path constraints object", "true": "calculate and store path constraints for an individual", "bleu": 0.1971902775417715, "rouge": 0.2953995157384988}, {"predict": "test of a journal on which a single index has been registered on the index", "true": "test of a journal on which a single index has been register ( and the journal committed ) but no data was written on to the index", "bleu": 0.3506489241021294, "rouge": 0.6340014847809947}, {"predict": "returns true if classes has been initialized", "true": "checks if class loader is an internal p 2 p class loader", "bleu": 0.0909326471926252, "rouge": 0.10049423393739704}, {"predict": "removes the sub level from the decoded java scheme", "true": "remove the remove sub j trailers sub j - trailer = \" ( fwd ) \" / w sp", "bleu": 0.051418956078360945, "rouge": 0.1342134213421342}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "moves the source to the next source", "true": "step to the next input stream", "bleu": 0.345720784641941, "rouge": 0.4680306905370844}, {"predict": "create the regular bitmap", "true": "bitmap transfer to bytes", "bleu": 0.35930411196308426, "rouge": 0.25}, {"predict": "inflate an individual xml name from one of the provided name", "true": "inflate a short name into a full g data uri using g prefix ( ending in \" # \" )", "bleu": 0.05562171233991619, "rouge": 0.12261306532663319}, {"predict": "add a warning handler to the priority queue", "true": "add a warning event handler", "bleu": 0.3155984539112945, "rouge": 0.6421052631578947}, {"predict": "read object is called to restore the state of the property permission from a stream", "true": "read object is called to restore the state of the service permission from a stream", "bleu": 0.8153551038173115, "rouge": 0.9333333333333336}, {"predict": "prints a string to the stream , encoded as utf - 8", "true": "prints a string to the stream , encoded as utf - 8 with preceeding length", "bleu": 0.7788007830714049, "rouge": 0.8714285714285713}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes an attribute value", "true": "writes the xml attribute name / val", "bleu": 0.1878296463217631, "rouge": 0.346590909090909}, {"predict": "produces a constant descriptor string that is a valid type description as the string description as the string description", "true": "translate attributes that describe an attribute syntax definition into the string description as defined in rfc 2252", "bleu": 0.18759202316167212, "rouge": 0.2805887764489421}, {"predict": "writes bytes to the socket", "true": "writes an nio buffer to the socket", "bleu": 0.36015288308423526, "rouge": 0.6472148541114059}, {"predict": "skips the annotation value at the current position in the specified byte buffer", "true": "skips the annotation member value at the current position in the specified byte buffer", "bleu": 0.8008131934180451, "rouge": 0.9565741857659832}, {"predict": "finds all nested elements that match the specified join node", "true": "recursive method to run through all child nodes and , for each result set tuple returned by a child node , execute the inner child of the child node until there are no inner child nodes", "bleu": 0.011134431543260347, "rouge": 0.1183699870633894}, {"predict": "generates the red is used for the entity - config ( ) for the inverse and test network panel", "true": "generates the external mats im config file with the specified parameter settings", "bleu": 0.09629943614188137, "rouge": 0.269018743109151}, {"predict": "awaits the next http request , removes it , and returns it", "true": "awaits the next http request , removes it , and returns it", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert the location , in a column to the column object", "true": "returns the closest column to the passed in location", "bleu": 0.24384183193426084, "rouge": 0.4073455759599332}, {"predict": "returns all files in a directory", "true": "given a java", "bleu": 0.22089591134157885, "rouge": 0.2364341085271318}, {"predict": "generate a drop source string for a table", "true": "generate the drop statement for a table", "bleu": 0.3303164318013807, "rouge": 0.6747787610619468}, {"predict": "register all child listeners", "true": "register the child listeners on the child preference stores", "bleu": 0.14558246978804804, "rouge": 0.43160377358490565}, {"predict": "returns whether the specified scroll is out of bounds", "true": "returns whether the specified scroll is out of bounds", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method updates the index for the dimension key", "true": "this method updates the store to allow point lookups using the non - key field ( s )", "bleu": 0.1571901051328651, "rouge": 0.41924398625429554}, {"predict": "de queues the instructions for all the instructions in the stack", "true": "returns all instructions which are somewhat \" relevant \" for the returned object of the method", "bleu": 0.09515401539306559, "rouge": 0.28672150411280845}, {"predict": "checks if a new node is in v map", "true": "checks if latest call to acquire / release was called on this node", "bleu": 0.1279808802469055, "rouge": 0.26406926406926406}, {"predict": "if delta y > 0 , try to move the content down", "true": "if delta y > 0 , try to move the content down", "bleu": 1.0, "rouge": 1.0}, {"predict": "compare to ( big integer a )", "true": "compare to ( big integer a )", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete a point at a certain position in the polygon coordinate list", "true": "delete a point at a certain point in the polygon coordinate list", "bleu": 0.7611606003349892, "rouge": 0.9166666666666665}, {"predict": "deletes the content will be ignored if none", "true": "deletes all characters up to the leftmost whitespace from the cursor ( including the whitespace )", "bleu": 0.06528905536667998, "rouge": 0.15721649484536082}, {"predict": "cumulative density function , static version", "true": "cumulative density , static version", "bleu": 0.488923022434901, "rouge": 0.9242424242424241}, {"predict": "reads an engine from the given file", "true": "read in continuous data set", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "generates the native gui d format object for storage system specific port", "true": "fc port value from indication source instance system name : sym me <unk> + <unk> + fa - 1 e is csi port value from indication source instance system name : sym me <unk> + <unk> + se - 1 g", "bleu": 0.010259022796717823, "rouge": 0.0686936936936937}, {"predict": "to check if all paths in cl are to be valid or not", "true": "returns true if the paths are contiguous , or this object has no row mapper", "bleu": 0.10298326000817958, "rouge": 0.2820809248554913}, {"predict": "creates new fast string reader", "true": "creates a new string reader", "bleu": 0.408248290463863, "rouge": 0.8}, {"predict": "returns the array element holding the bit value for the given integer", "true": "returns the array element holding the bit value for the given integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "update a color in the given text component", "true": "private method to update styles", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "ensures correct size of the widget", "true": "each row or line at least show one child horizontal only show child can show or partly show in parent", "bleu": 0.018012599273714434, "rouge": 0.0}, {"predict": "blocks the object , waiting for example waiting for this object to become available", "true": "causes current thread to wait until another thread invokes the method or the method for this object", "bleu": 0.14695235444496824, "rouge": 0.25363825363825365}, {"predict": "adds a field to run the query against with a specific field", "true": "adds a field to run the query string against with a specific boost", "bleu": 0.7003015589741095, "rouge": 0.8736979166666665}, {"predict": "return a string formatted as format", "true": "return a string formatted as format", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize r for stream size", "true": "initialize r for property stream buffer size", "bleu": 0.3769486629893372, "rouge": 0.8090185676392573}, {"predict": "register a sensor if max sensors are not 1 to max sensors", "true": "the numbers here are 0 to max sensors , not 1 to max sensors", "bleu": 0.37314877217644393, "rouge": 0.5310945273631842}, {"predict": "convert a string to a number object", "true": "parse the supplied string as a number", "bleu": 0.2626909894424158, "rouge": 0.42857142857142855}, {"predict": "return the probe ' s next sample", "true": "return the probe ' s next sample", "bleu": 1.0, "rouge": 1.0}, {"predict": "json a json template and produce a new json string", "true": "perform the keyword substitution", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "obtains all versions of the specified key of the specified principal", "true": "constructs a key i mpl from a password", "bleu": 0.11390778025531027, "rouge": 0.108348134991119}, {"predict": "adds an array of annotations", "true": "add the standard annotations encoded in the tag bits to the recorded annotations", "bleu": 0.05512018958855254, "rouge": 0.10286677908937607}, {"predict": "gets a text desc rp tion of the result producer", "true": "gets a text desc rp tion of the result producer", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method performs the temporary work of the temporary directory in the temporary directory", "true": "process main logic for create file", "bleu": 0.07432998184513635, "rouge": 0.0}, {"predict": "checks if the directory has expired", "true": "check if a new direction matches the existing one , and if so , reset the expiration point", "bleu": 0.03308426786106403, "rouge": 0.15288220551378442}, {"predict": "parses the string representation of the specified path", "true": "this method is used to parse the provided x path expression", "bleu": 0.12197601375336842, "rouge": 0.20469798657718125}, {"predict": "makes the given variable name available", "true": "makes the given variable name available", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method for reading and decrypting the records of the file", "true": "reads magic + share key version without verification", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "this can be used to determine whether a media type is supported", "true": "returns true if the specified css media type is unsupported , false otherwise", "bleu": 0.17792307784923767, "rouge": 0.23828125000000006}, {"predict": "exports all dependencies", "true": "traverse the dependency structure beginning from all \" roots \" , i", "bleu": 0.02674984333087479, "rouge": 0.12031558185404337}, {"predict": "to do this is a temporary workaround for https : / / / bugs", "true": "to do this is a temporary workaround for https : / / bugs", "bleu": 0.9036020036098449, "rouge": 0.9694376528117359}, {"predict": "returns network availability status", "true": "returns network availability status", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is not get string s so that you get a string that you get a string that s environment names were get a string s \" s \" s", "true": "returns a string that s \" regexp ish \" ( contains lots of operators typically found in regular expressions ) if you call this enough times , you might get a valid regex !", "bleu": 0.1357796570049324, "rouge": 0.18309154577288644}, {"predict": "creates a list of expected partition key entities", "true": "creates and persists specified partition value entities", "bleu": 0.19070828081828378, "rouge": 0.4048672566371681}, {"predict": "returns a description of the class i fier", "true": "returns the text of this g path result", "bleu": 0.19070828081828378, "rouge": 0.25}, {"predict": "creates a new - d - program that should be able from low - the given run n able", "true": "registers a run n able to run on low memory events", "bleu": 0.1326475916741222, "rouge": 0.2801377726750861}, {"predict": "write data - - output this mod bus message to d out", "true": "write data - - output the completed mod bus message to d out", "bleu": 0.7003015589741095, "rouge": 0.8736979166666665}, {"predict": "extracts the hard reference from the soft / weak reference given", "true": "extracts the hard reference from the soft / weak reference given", "bleu": 1.0, "rouge": 1.0}, {"predict": "formats a long value", "true": "formats a long value", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the contribution of the given addon", "true": "removes the contribution of the given addon", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies the page to the specified output stream", "true": "copy the next page to the output stream", "bleu": 0.3688939732334406, "rouge": 0.75}, {"predict": "write part of an array of bytes", "true": "write part of an array of bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "asserts that the given backup status has been created from a backup db", "true": "used to confirm valid backup status data", "bleu": 0.12571192676522522, "rouge": 0.21143847487001732}, {"predict": "handle request sent error sent with the given id and tenant", "true": "handle request sent with a wrong binding", "bleu": 0.24088562704853508, "rouge": 0.4629981024667932}, {"predict": "checks that the machine is in the given set of states", "true": "checks that the machine is in one of the given states", "bleu": 0.6000342906130847, "rouge": 0.8181818181818181}, {"predict": "sort movies in movies", "true": "sort movies inside this movie set by using either the sort title , release date or year", "bleu": 0.018335190851298155, "rouge": 0.17134831460674158}, {"predict": "creates a key value list parser", "true": "create a parser that uses the given regex es to parse a list of key value pairs", "bleu": 0.05527375126302609, "rouge": 0.24015748031496065}, {"predict": "poll a statistics for statistics", "true": "poll the statistics broker plugin", "bleu": 0.3021375397356768, "rouge": 0.4}, {"predict": "built a file to run n able s so it can be built", "true": "appends the extension to the filename , in case it is missing", "bleu": 0.10571070857151538, "rouge": 0.16116248348745044}, {"predict": "calculates icon that is closest to the vertical axis in reference to the current icon", "true": "calculates icon that is closest to the vertical axis in reference to the current icon", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the edge and the cell ( including boundary ) intersect", "true": "returns true if the edge and the cell ( including boundary ) intersect", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a tree for deciding what keys can legally be typed", "true": "create a tree for deciding what keys can legally be typed", "bleu": 1.0, "rouge": 1.0}, {"predict": "displays navigator state information in the status overlay views", "true": "displays navigator state information in the status overlay views", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates a js type name for a type reference", "true": "returns the name of js type for the given type ref", "bleu": 0.1768796183625973, "rouge": 0.3929146537842191}, {"predict": "puts the entry with the specified key into the cache", "true": "puts the entry with the specified key into the cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "create the states which are dependant on all states which are met ( and set ) in all states", "true": "converts state machine definition to state machine domain object and saves in db", "bleu": 0.0712695567709093, "rouge": 0.1293743372216331}, {"predict": "calculates a quantitative , linearly scaled layout", "true": "calculates a quantitative , square root scaled layout", "bleu": 0.5154486831107657, "rouge": 0.7904967602591793}, {"predict": "removes all the listeners from this object", "true": "method called when layer detects that it has been removed from map handler , assumes it ' s being thrown away", "bleu": 0.02513860735449254, "rouge": 0.06552094522019333}, {"predict": "reads the default serial iz able field value for this instance , followed by the registrar ' s service id encoded as specified by the service id", "true": "reads the default serial iz able field value for this instance , followed by the registrar ' s service id encoded as specified by the service id", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a right - pointing triangle of the given di men is ions", "true": "returns a right - pointing triangle of the given di men is ions", "bleu": 1.0, "rouge": 1.0}, {"predict": "lookup a terminal by name", "true": "lookup a terminal by name string", "bleu": 0.8187307530779819, "rouge": 0.8944281524926685}, {"predict": "create a layout block for the passed system name and block id", "true": "method to create a new layout block if the layout block does not exist returns null if a layout block with the same system name or username already exists , or if there is trouble creating a new layout block", "bleu": 0.026096214616793175, "rouge": 0.28045977011494255}, {"predict": "so routine that it is so sure it in your own code", "true": "allow user to alter certain values in software such as colour , please note all color and text highlighting values are static and common across the jvm", "bleu": 0.02976871413744777, "rouge": 0.04795597484276729}, {"predict": "escape some characters in a regular expression", "true": "this function will escape special characters within a string to ensure that the string will not be parsed as a regular expression", "bleu": 0.04488665805698605, "rouge": 0.3154084798345398}, {"predict": "constructs a char buffer with the given string", "true": "constructs a char buffer with the given initial string", "bleu": 0.7846630356446556, "rouge": 0.931297709923664}, {"predict": "updates the ui state for opt out promo", "true": "updates the ui state for opt out promo", "bleu": 1.0, "rouge": 1.0}, {"predict": "create an instance of value geometry", "true": "create a new geometry objects", "bleu": 0.24446151121745047, "rouge": 0.3696969696969697}, {"predict": "after the previous loaded has been loaded , the number of in turn", "true": "remember to clean the is new flag", "bleu": 0.09552040806823771, "rouge": 0.10571923743500866}, {"predict": "tell whether the so is extracted", "true": "tell whether the so is extracted", "bleu": 1.0, "rouge": 1.0}, {"predict": "finalize the repository at the new statement", "true": "perform all mung e completion tasks that are required no matter the configuration", "bleu": 0.07882750221706718, "rouge": 0.0948678071539658}, {"predict": "display the image message in the user to display the icon", "true": "display message if in gui mode", "bleu": 0.1354599427337814, "rouge": 0.3727087576374745}, {"predict": "executes the given command", "true": "recursively walks the file tree of a directory", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "lays out springs that have a baseline", "true": "lays out springs that have a baseline along the baseline", "bleu": 0.6514390575310556, "rouge": 0.7981308411214955}, {"predict": "reads the in t value from the json array for specified index", "true": "reads the in t value from the json array for specified index", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a property change listener", "true": "add a property change listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a dependent preference on this preference", "true": "removes a dependent preference on this preference", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates the storage policy selection", "true": "validates the storage policy selection", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns string for in ongoing document", "true": "returns a description of the cluster er as a string", "bleu": 0.1255107248036171, "rouge": 0.23921568627450981}, {"predict": "copy the objects in the specified collection to an array", "true": "returns a new array of the given component type ( possibly a java primitive ) that is a copy of the content of the given collection", "bleu": 0.03349541370354708, "rouge": 0.20573355817875214}, {"predict": "formats the g radle um fallback for the specified formatter", "true": "returns an exception which indicates problem files nicely", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "computes the distances of the node from the graph", "true": "computes the distances of all the node from the specified root node", "bleu": 0.47150411865647773, "rouge": 0.7427701674277016}, {"predict": "creates a string representation of the double argument", "true": "returns a string representation for the specified float value", "bleu": 0.2785146580372046, "rouge": 0.465648854961832}, {"predict": "returns the position of the buffer , or null if it exists", "true": "gets the current column position of this log stream", "bleu": 0.14694106251955755, "rouge": 0.2932692307692307}, {"predict": "constructs a new batched image request object", "true": "constructs a new batched image request object", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new frequency", "true": "adds a new frequency", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses an element with the given parser", "true": "parses an element with the given parser", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes a string list , starting at static time , to long ( long time , long , and makes it makes it makes it matches ) , defaulting for both first time interval", "true": "slices the intervals into smaller intervals of the time grain duration", "bleu": 0.03551851328486764, "rouge": 0.048956661316211875}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "check the verb for gerund form , e", "true": "determine if the expression contains a verb in gerund form", "bleu": 0.1867587389639562, "rouge": 0.43571428571428567}, {"predict": "tell the user of an error , and probably throw an exception", "true": "tell the user of an error , and probably throw an exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a request to get request with a get method and payload from json object", "true": "creates a new request with the given parameters", "bleu": 0.11633270842295028, "rouge": 0.2760180995475113}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "download the file files , if no longer exist", "true": "download all the t log files to the temp t log directory", "bleu": 0.12026590852507517, "rouge": 0.2785388127853881}, {"predict": "parse the attributes of the windows - - > e b - > a - - - - - > a parse - - - - - - - - - - - - - - - - - - - - - - - - -", "true": "reads the attributes of an open file", "bleu": 0.04761298946116124, "rouge": 0.12824106517168885}, {"predict": "set all pending participants", "true": "utility method for subclasses", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "create a panel to create a radio button", "true": "create a panel containing a check box", "bleu": 0.3155984539112945, "rouge": 0.5398230088495575}, {"predict": "this method will clear the average outline of a ck method", "true": "this is a utility method which copies the given s rc event to the given destination event", "bleu": 0.08301383771904051, "rouge": 0.20631341600901915}, {"predict": "assigns the language to the set of nodes", "true": "assigns the current probability values to the instances in the database and compute the expectation value of the current <unk> of distributions", "bleu": 0.048267781294324505, "rouge": 0.3074596774193548}, {"predict": "converts all separators to the unix separator of forward slash", "true": "converts all separators to the unix separator of forward slash", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the string representation of the given uri", "true": "gets the value of the uri as a string , returns null if the uri is null", "bleu": 0.08468476175754991, "rouge": 0.3004926108374384}, {"predict": "initializes this kernel using the specified array of values", "true": "creates a new kernel object with the specified offset and values", "bleu": 0.1689983564524028, "rouge": 0.3929146537842191}, {"predict": "initialize the work list for all nodes with the same label", "true": "initialize the work list", "bleu": 0.317023313852343, "rouge": 0.5823389021479713}, {"predict": "traverses the model tree associated with the given model , as root notification", "true": "removes the imported names before linking and cleans other caches attached to the a st", "bleu": 0.09063677582644454, "rouge": 0.14104046242774565}, {"predict": "this method is used to add the file to the end of this file", "true": "runs the d vc s command for adding a new file , e", "bleu": 0.09782375748961449, "rouge": 0.1491442542787286}, {"predict": "gets called when the main visible state is expanded", "true": "called whenever an item in the tree has been expanded", "bleu": 0.15019394384099988, "rouge": 0.31282051282051276}, {"predict": "accumulate the accumulate string into be used", "true": "converts a string containing a mathematical expression in infix form to postfix form", "bleu": 0.07882750221706718, "rouge": 0.0948678071539658}, {"predict": "returns whether this object has the specified object", "true": "determine if the object provide is in this adapter", "bleu": 0.16829946711936866, "rouge": 0.232824427480916}, {"predict": "determines whether two integers are equal , or both as nulls", "true": "determines if a kv no matches another kv no", "bleu": 0.11390778025531027, "rouge": 0.1018363939899833}, {"predict": "method called when closing connection connection connection", "true": "override if you want to get notified if the url connection fails to close", "bleu": 0.06833381956448398, "rouge": 0.08983799705449189}, {"predict": "called by type when they are required to type the corresponding schema type", "true": "processes an xml schema & lt ; complex type gt ; tag", "bleu": 0.10571070857151538, "rouge": 0.16116248348745044}, {"predict": "adds a reference to the index at the index of this index at the index is not already present", "true": "pushes a new level of an not at or s references and base the new one on the given values", "bleu": 0.08356812342471648, "rouge": 0.20418410041841006}, {"predict": "returns the version of the directory server , including the directory server", "true": "returns the compact version string for this product , suitable for use in path names and similar cases", "bleu": 0.09423743096468044, "rouge": 0.2573839662447257}, {"predict": "sequences the given query", "true": "sequences the given query", "bleu": 1.0, "rouge": 1.0}, {"predict": "expunge stale entries from the table", "true": "expunge stale entries from the table", "bleu": 1.0, "rouge": 1.0}, {"predict": "convenience method for reducing repeated calls", "true": "get a sublist of all of the elements in the list except for first", "bleu": 0.05822753005110548, "rouge": 0.09327217125382263}, {"predict": "create a list of integers consisting of the ranges defined by the provided argument e", "true": "create a list of integers consisting of the ranges defined by the provided argument e", "bleu": 1.0, "rouge": 1.0}, {"predict": "tear down after testing", "true": "tear down after testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "search that an object reference passed from the list of bean context", "true": "look at the object received in a map handler status message and disconnect from it if necessary", "bleu": 0.08145723098662616, "rouge": 0.13377192982456138}, {"predict": "call re calculate estimated completion date , estimated start date info , ge fa if any , ending at or position , repeat , else call clear the worker", "true": "recalculated the estimated completion date property", "bleu": 0.08218074077265651, "rouge": 0.19447396386822527}, {"predict": "adds the given document type to the list of documents", "true": "add a document type to the document type list", "bleu": 0.3672056269893592, "rouge": 0.5313588850174217}, {"predict": "checks database metadata to see if a table exists", "true": "checks database metadata to see if a table exists", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next token from the specified position", "true": "returns the position of the next token after position pos in specification spec if that token exists and is in the plus cal algorithm ; otherwise , it returns null", "bleu": 0.023582602720858287, "rouge": 0.23828125}, {"predict": "update the task for execution", "true": "method is called from update cycle , perform all tasks in gl thread", "bleu": 0.05512018958855254, "rouge": 0.10286677908937607}, {"predict": "shifts the ratio of the ratio", "true": "determine the highest posterior density for a list of values", "bleu": 0.1255107248036171, "rouge": 0.23921568627450981}, {"predict": "checks if the given disk exists in the file or if it does not", "true": "checks if directories exist", "bleu": 0.11633270842295028, "rouge": 0.2469635627530364}, {"predict": "reads the bytecode of a class", "true": "reads the bytecode of a class", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new port to use of the", "true": "allocates existing ports to the already allocated context ( only )", "bleu": 0.12197601375336842, "rouge": 0.20469798657718125}, {"predict": "the graphical representation of a series", "true": "the graphical representation of a series", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts internal representation into an actual string", "true": "converts internal representation into an actual string", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes list of long objects to data output", "true": "write a set of long objects", "bleu": 0.2984745896009823, "rouge": 0.43990384615384615}, {"predict": "checks if an attribute is defined", "true": "tells whether a given attribute is defined", "bleu": 0.34801709319446883, "rouge": 0.45522388059701485}, {"predict": "show the stage", "true": "shows pre loading stage with scene while fx gl is being configured", "bleu": 0.02674984333087479, "rouge": 0.12031558185404337}, {"predict": "removes all mappings from this map , leaving it empty", "true": "removes all mappings from this map , leaving it empty", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the key ( and its corresponding value ) from this map", "true": "removes the key ( and its corresponding value ) from this map", "bleu": 1.0, "rouge": 1.0}, {"predict": "test copy of an stream containing exactly one byte more than a full block of data", "true": "test copy of an stream containing exactly one block ' s data", "bleu": 0.5043545474510804, "rouge": 0.7331730769230769}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts an ip string to an integer", "true": "fill out a given four - byte array with the ipv 4 address specified in the given string", "bleu": 0.038589346254072475, "rouge": 0.07411907654921021}, {"predict": "evaluates the cf 2 problem", "true": "evaluates the cf 2 problem", "bleu": 1.0, "rouge": 1.0}, {"predict": "emits a reply to a remote request", "true": "emits an \" end \" line for a successful reply", "bleu": 0.14390022429682173, "rouge": 0.34205607476635513}, {"predict": "adds the headers for the tenant to the tenant", "true": "add the header values to the supplied connection", "bleu": 0.19960198807747329, "rouge": 0.35672514619883033}, {"predict": "adds a selection listener to the list of listeners", "true": "adds a long selection listener", "bleu": 0.23356898886410005, "rouge": 0.6024691358024692}, {"predict": "output a blank line", "true": "output a blank line", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of the class i fier", "true": "convert to string for debugging", "bleu": 0.14113991930789777, "rouge": 0.1506172839506173}, {"predict": "re - measure the loading views height , and adjust internal padding as necessary", "true": "re - measure the loading views height , and adjust internal padding as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a debug debug client that is used in the m client being used", "true": "set the debug facility up for a specific client", "bleu": 0.11114924776032006, "rouge": 0.18100890207715134}, {"predict": "converts the given string value to the first case", "true": "alter the case of this element so that it is rendered according to whatever the value of case type is", "bleu": 0.05471744520945065, "rouge": 0.2582010582010582}, {"predict": "returns the string representation of this vector", "true": "returns the string representation of this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "to add ( but bound ) all layout components that have been set or false", "true": "add a reporter icon to the panel", "bleu": 0.09103526405546068, "rouge": 0.09728867623604465}, {"predict": "draws the selection rectangle", "true": "draws zoom rectangle ( if present )", "bleu": 0.1878296463217631, "rouge": 0.346590909090909}, {"predict": "determines the height of this view", "true": "determines the height of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new exception with the specified cause", "true": "construct a new exception with the specified root cause", "bleu": 0.7846630356446556, "rouge": 0.931297709923664}, {"predict": "checks whether the storage group contains all hosts in the initiator", "true": "checks if an initiator has connectivity to a storage system in a v array", "bleu": 0.10904215887663019, "rouge": 0.2349165596919127}, {"predict": "handles thumb selection and movement", "true": "handles thumb selection and movement", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct the tree ' s children", "true": "construct a new derivation from a node of interest", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "plus ( math context ) for a positive big decimal", "true": "plus ( math context ) for a positive big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "test negative number of radix 24", "true": "test negative number of radix 24", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts an or two - ary comparable nodes into a st", "true": "converts an an trl or a st into a filter or a st", "bleu": 0.18370575619328847, "rouge": 0.4925975773889637}, {"predict": "display a dialog in the window", "true": "a copy of display panel except returning a subclass of window", "bleu": 0.1141650334026257, "rouge": 0.33516483516483514}, {"predict": "construct a json token er from a reader", "true": "construct a json token er from a reader", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a sequence of 8 - bit bytes from standard input ; compresses them using ttt codes with an 8 - bit alphabet ; and writes the results to standard output", "true": "reads a sequence of 8 - bit bytes from standard input ; compresses them using huffman codes with an 8 - bit alphabet ; and writes the results to standard output", "bleu": 0.9157103753711766, "rouge": 0.9677419354838711}, {"predict": "uses the given token ize r", "true": "uses the given token ize r", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the azimuth angle in radians from the origin to the maximum axis", "true": "compute an angular offset to apply to a azimuth label", "bleu": 0.10571070857151538, "rouge": 0.08905109489051095}, {"predict": "adds the all keys / values from the given named resource bundle to the defaults", "true": "adds the all keys / values from the given named resource bundle to the defaults", "bleu": 1.0, "rouge": 1.0}, {"predict": "displays the display panel based on the panel , or display the icon if the panel is changed", "true": "from the display changed listener interface ; called from x 11 graphics device when the display mode has been changed", "bleu": 0.09536557168150936, "rouge": 0.2606837606837607}, {"predict": "formats the value as a string", "true": "formats the value as an xs : date or xs : date time string", "bleu": 0.1696139203599157, "rouge": 0.4663608562691131}, {"predict": "extract the methods from a class", "true": "extract a set of methods from a given class", "bleu": 0.2759678961451082, "rouge": 0.6434599156118143}, {"predict": "update server address with server and server service get server format", "true": "update the server address", "bleu": 0.16108992769687397, "rouge": 0.43675417661097854}, {"predict": "removes the item with the specified position from the list", "true": "remove an item from the adapter ' s list", "bleu": 0.18850319022747347, "rouge": 0.42508710801393734}, {"predict": "choose an enemy having current operand by the current device", "true": "function for choosing random enemy from map", "bleu": 0.12605968092174913, "rouge": 0.12151394422310759}, {"predict": "looks f beans reachable from a graph", "true": "is the route to the destination block , going via our <unk> block valid", "bleu": 0.057461663912368725, "rouge": 0.0}, {"predict": "sort the storage pools in a list of storage pools", "true": "sort list of storage pools based on its storage system ' s average usage port metrics usage", "bleu": 0.1895133844991882, "rouge": 0.3538283062645011}, {"predict": "convenience method to add a collection to cycle according to the spec", "true": "add multiple rhythm overlays to this group", "bleu": 0.11498759556447223, "rouge": 0.22101449275362317}, {"predict": "returns a resource object relative to this file", "true": "creates an instance for a path prefixed by either class path : or file :", "bleu": 0.0739821920909478, "rouge": 0.16486486486486487}, {"predict": "checks if is less than 2 version ?", "true": "determines if this is running a mac os x lower than <unk>", "bleu": 0.11567041937737582, "rouge": 0.28955696202531644}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "escape a string for use inside as xml single - quoted attributes", "true": "escape a string for use inside as xml element content", "bleu": 0.6479121525090147, "rouge": 0.7393939393939394}, {"predict": "collect all the elements , but not all its elements in the stack", "true": "feeds a vector through the network to get an output", "bleu": 0.09552040806823771, "rouge": 0.08905109489051095}, {"predict": "finds a file or directory", "true": "finds the named file in the named directory", "bleu": 0.1781815298791261, "rouge": 0.44309927360774815}, {"predict": "compares the results of the control and cloud clients", "true": "compares the results of the control and cloud clients", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the text for the selected element", "true": "retrieves the text elements for a given x path expression", "bleu": 0.17112717058426782, "rouge": 0.34205607476635513}, {"predict": "create a context from the current board", "true": "creates an open cl context able to share entities with the current opengl context", "bleu": 0.09663861439684919, "rouge": 0.2695139911634757}, {"predict": "collapses all the tree", "true": "collapse the tree so that only the root node is visible", "bleu": 0.08217262444082543, "rouge": 0.24596774193548387}, {"predict": "queue a player ' s cape with the test mod 3 mod 3 client 3", "true": "queue the replacement of a player ' s cape with the test mod 3 cape", "bleu": 0.6668954865619205, "rouge": 0.7333333333333334}, {"predict": "removes a veto able change listener from the listener list", "true": "removes a veto able change listener from the listener list", "bleu": 1.0, "rouge": 1.0}, {"predict": "starts a new stream", "true": "construct a new stream throughput", "bleu": 0.5208154731870476, "rouge": 0.6535714285714286}, {"predict": "iterates the list of arguments in search of the target server launcher command", "true": "iterates the list of arguments in search of the target locator launcher command", "bleu": 0.8091067115702212, "rouge": 0.9230769230769234}, {"predict": "edits a bookmark from service to edit bookmarks", "true": "a method to edit a bookmark", "bleu": 0.2653856085536222, "rouge": 0.43990384615384615}, {"predict": "calculate the bounds for a view ' s title", "true": "calculate the bounds for a view ' s title", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a unicode character in a string to a utf 32 string", "true": "/ converts a utf 32 code point sequence to a string with the corresponding character ( s )", "bleu": 0.17083599325607537, "rouge": 0.32172995780590713}, {"predict": "create the bounds for the bottom of the receiver", "true": "if the selection has more than one element , it will create a temporary element object as the bounds of the entire selection", "bleu": 0.053626320014009396, "rouge": 0.2896486229819563}, {"predict": "records the size of successive runs of white and black pixels in a row , starting at a given point", "true": "records the size of successive runs of white and black pixels in a row , starting at a given point", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method finds all method arguments in the given service name", "true": "returns ( method , params ) for the given service or ( null , null ) if no method was found", "bleu": 0.09452753864466681, "rouge": 0.23666343355965083}, {"predict": "a utility method that looks up a character in a source string , and returns the first character in the first character", "true": "utility method to find the first invalid character as per rfc 2396 section 2", "bleu": 0.0959330328254962, "rouge": 0.2893738140417458}, {"predict": "converts the contents of the input buffer to a character buffer", "true": "decodes contents of the byte buffer to the character buffer", "bleu": 0.29502343631964045, "rouge": 0.6724409448818898}, {"predict": "create fast clock", "true": "handle activity that is triggered by the fast clock", "bleu": 0.09569649651041093, "rouge": 0.30576441102756885}, {"predict": "adds a new point to this spawn", "true": "add a creature re spawn point to the zone", "bleu": 0.20873176328735715, "rouge": 0.3667334669338677}, {"predict": "load org access add role to list", "true": "load org access role", "bleu": 0.3655552228545123, "rouge": 0.7648902821316614}, {"predict": "test similar to above , but instead reads a sequence of bytes", "true": "simple unit test that verifies that passing in a byte array as source works as expected", "bleu": 0.08239221254954013, "rouge": 0.13926940639269406}, {"predict": "generates a certificate object and initializes it with the data read from the input stream in stream", "true": "generates a certificate object and initializes it with the data read from the input stream in stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts an object to a string", "true": "returns pretty string representation of the object", "bleu": 0.20693220168471366, "rouge": 0.1517412935323383}, {"predict": "generates the last 6 bi - months where the last one is the bi - month which the given date is inside", "true": "generates the last 12 months where the last one is the month which the given date is inside", "bleu": 0.6086209927462802, "rouge": 0.8656093489148581}, {"predict": "get the counter from the passed in num value", "true": "returns the counter associated with the key", "bleu": 0.19960198807747329, "rouge": 0.38364779874213834}, {"predict": "add sms to given uri", "true": "add an sms to the given uri with the specified thread id", "bleu": 0.11660850472671651, "rouge": 0.5475763016157988}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "should never be called", "true": "should never be called", "bleu": 1.0, "rouge": 1.0}, {"predict": "called once when a new sound file is added or called once", "true": "called once when a new sound file is added", "bleu": 0.7361703354503866, "rouge": 0.8798076923076923}, {"predict": "poll stale entries from the queue", "true": "expunge stale entries from the list", "bleu": 0.6147881529512643, "rouge": 0.6666666666666666}, {"predict": "work flow find bugs find bugs for a given resource", "true": "run a find bugs analysis on the given resource as build job but not delaying the current java build", "bleu": 0.08877114000709116, "rouge": 0.2612419700214133}, {"predict": "report a veto able property update to any registered listeners", "true": "report a veto able property update to any registered listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "implements the on backup on the given output stream", "true": "full backup of the shared - storage filesystem", "bleu": 0.15619699684601276, "rouge": 0.2378167641325536}, {"predict": "removes the given connection list from the list", "true": "remove the list of connections at the supplied index", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "paints an range in range of coordinates on the given graphics", "true": "paints the circles and their labels on the given graphics", "bleu": 0.33180774028439425, "rouge": 0.4803149606299213}, {"predict": "converts all separators to the windows separator of backslash", "true": "converts all separators to the windows separator of backslash", "bleu": 1.0, "rouge": 1.0}, {"predict": "append an operation to the output buffer", "true": "translate pending bytes using selected character set", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "return a trie with infrequent values occurring in the given trie removed", "true": "optimize ( eliminate rows with no content ) the given trie and return the reduced trie", "bleu": 0.15937425748101036, "rouge": 0.2785388127853881}, {"predict": "installs any existing handler that starts at the given buffer , and returns the result handler", "true": "this handler is called after the self request ( original request ) is performed successfully", "bleu": 0.08513012360883544, "rouge": 0.12978723404255318}, {"predict": "blocks till the connection is closing", "true": "close was signaled in close a sync ( ) but there were pending messages at that time", "bleu": 0.02969775556317068, "rouge": 0.0}, {"predict": "creates a new storage entity", "true": "creates and persists a new storage entity", "bleu": 0.5330859115179258, "rouge": 0.8090185676392573}, {"predict": "display an information line for the info line", "true": "display a line of text in a designated info line", "bleu": 0.1867587389639562, "rouge": 0.43571428571428567}, {"predict": "writes a formatted string to the console using the specified format string and arguments", "true": "writes a formatted string to the console using the specified format string and arguments", "bleu": 1.0, "rouge": 1.0}, {"predict": "tear down after testing", "true": "tear down after testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "verify signer ( string ) creates instance", "true": "verify signer ( string , identity scope ) creates instance", "bleu": 0.45043204423208616, "rouge": 0.7981308411214955}, {"predict": "see iso 16022 : 2006 , 5", "true": "see iso 16022 : 2006 , 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a stream ' s bytes from a stream", "true": "send a stream ' s byte tuples in a web socket binary message", "bleu": 0.34449658314088427, "rouge": 0.5281385281385281}, {"predict": "invokes the correct source for the class", "true": "invoke a method known to be static", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "true": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "bleu": 1.0, "rouge": 1.0}, {"predict": "new instance , based on the supplied pattern", "true": "new instance , based on the supplied pattern", "bleu": 1.0, "rouge": 1.0}, {"predict": "safe method for the abstract loop with the style", "true": "remove the safe point from the first loop in the test method , so only the safe points on monitor enter and monitor exit remain in the loop", "bleu": 0.022495014230758798, "rouge": 0.19789132197891324}, {"predict": "adds the data of this frame into the list of available - source data , which is already in a body", "true": "override this method to handle binding your items into views", "bleu": 0.06429451441231726, "rouge": 0.13785310734463277}, {"predict": "add two positive numbers of different length", "true": "add two positive numbers of different length", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds new values to the series", "true": "adds new values to the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to return a date instance which is exactly num days before the point in time", "true": "method to return a date instance which is exactly num days days before the point in time designated by the input date", "bleu": 0.6499980683744063, "rouge": 0.818791946308725}, {"predict": "how much available space in the cache", "true": "gets the number of entries that can be added to this cache without the need for removing stale entries", "bleu": 0.03702100183468252, "rouge": 0.14202561117578577}, {"predict": "decodes base 64 data into oct ect s", "true": "decodes base 64 data into oct ect s", "bleu": 1.0, "rouge": 1.0}, {"predict": "calls the super method and writes the the conservative approximation of the kn n distances of this entry to the specified stream", "true": "calls the super method and writes the conservative approximation of the kn n distances of this entry to the specified stream", "bleu": 0.9154005576595379, "rouge": 0.9808575803981624}, {"predict": "add data to an object", "true": "add some data to the heap", "bleu": 0.31610981104846864, "rouge": 0.5366568914956013}, {"predict": "paints the native area of the area as a native edge", "true": "paints the table & a focused row border", "bleu": 0.16108992769687397, "rouge": 0.32504440497335696}, {"predict": "add a new component to the layout", "true": "adds a label and a field combination", "bleu": 0.18575057999133598, "rouge": 0.14285714285714285}, {"predict": "called by the track point", "true": "on track point start", "bleu": 0.35930411196308426, "rouge": 0.4535315985130111}, {"predict": "combines data into one byte array", "true": "combines a list of byte arrays into one big byte array", "bleu": 0.16627855300099953, "rouge": 0.5586080586080586}, {"predict": "commits the given resources", "true": "commit the given resources to their associated providers", "bleu": 0.24601580968354606, "rouge": 0.47164948453608246}, {"predict": "returns true if service can run", "true": "check if this worker can spawn any worker", "bleu": 0.17516432701748888, "rouge": 0.2785388127853881}, {"predict": "this function returns true if the object passed matches the session represented in this map", "true": "compares this session id to the specified object", "bleu": 0.10343603005129705, "rouge": 0.2760180995475113}, {"predict": "determine if the player received from this player as well as if this player was decoded to string", "true": "returns whether a given ident matches that of another offline player", "bleu": 0.06809398432036522, "rouge": 0.07210401891252956}, {"predict": "add a field with the specified value without any validation", "true": "add a field with the specified value without any validation", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a description of the header text", "true": "returns the instances in the data set as a string in arf f format", "bleu": 0.0812630644213965, "rouge": 0.17967599410898377}, {"predict": "this can be overridden by sub lasses to mark a certain value as constantly non - null", "true": "this can be overwritten by sub lasses to mark a certain value as constantly non - null", "bleu": 0.8394327083733336, "rouge": 0.9411764705882352}, {"predict": "remove a item for the given position", "true": "remove a item of the list of the adapter", "bleu": 0.27470644934024185, "rouge": 0.48897795591182364}, {"predict": "creates a new entity object bean object", "true": "creates an instance of base view bean object", "bleu": 0.22772101321113858, "rouge": 0.3952483801295896}, {"predict": "fills and initial state with neurons nodes for the specified node type", "true": "helper method to initialize a layer by adding the desired number of neurons with the desired neuron update rule", "bleu": 0.06895205739037245, "rouge": 0.12398373983739835}, {"predict": "returns an angle between two coordinates", "true": "returns the angle that the vector from ( 0 , 0 ) to p , relative to the positive x - axis", "bleu": 0.016986029490530064, "rouge": 0.1295116772823779}, {"predict": "fire a neuron , if the neuron has been moved", "true": "fire a network changed event to all registered model listeners", "bleu": 0.16590387014219712, "rouge": 0.2}, {"predict": "creates a new certificate from its 12 certificate", "true": "creates an x 509 certificate for a given byte array", "bleu": 0.1485237584394808, "rouge": 0.21785714285714283}, {"predict": "handles a change in the current selection", "true": "handles a change in the current selection", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse the terms request information", "true": "parse the terms a ck information", "bleu": 0.43989172475842214, "rouge": 0.7155425219941348}, {"predict": "formats a string into a string", "true": "formats a string using parameters", "bleu": 0.4111336169005197, "rouge": 0.5545454545454546}, {"predict": "appending the provided string to the ' new ' server ' s default ' server ' s default '", "true": "set the server url to be used by parse", "bleu": 0.07658412276041004, "rouge": 0.15269086357947434}, {"predict": "execute a count of operations using the database u id and return the result", "true": "handle read query - check if it is a read query or a read multiple and execute it", "bleu": 0.07899414209772945, "rouge": 0.12224448897795591}, {"predict": "derives the number of documents , given the number of documents", "true": "back fit confidence value ( does nothing if the confidence value is already set )", "bleu": 0.07918230184187261, "rouge": 0.07484662576687118}, {"predict": "helper method to add a string to this schema", "true": "add the given values to any existing name", "bleu": 0.15619699684601276, "rouge": 0.2378167641325536}, {"predict": "recursive jumper as described by jps algorithm", "true": "recursive jumper as described by jps algorithm", "bleu": 1.0, "rouge": 1.0}, {"predict": "attempt to create the given bytes to the given stream", "true": "create a data source from an input stream", "bleu": 0.13950796967929133, "rouge": 0.22676579925650556}, {"predict": "parse a string value to the required type", "true": "parse a string value to the required type", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new limit line to this axis", "true": "adds a new limit line to this axis", "bleu": 1.0, "rouge": 1.0}, {"predict": "read data - - input the function code and data value", "true": "read data - - read the function code and data value", "bleu": 0.7348889200874658, "rouge": 0.9090909090909091}, {"predict": "extracts buffered data into the provided byte array , starting at position bpo s , up to a maximum of b avail bytes", "true": "extracts buffered data into the provided byte array , starting at position bpo s , up to a maximum of b avail bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an individual sam line by replacing all fields that equal over shorter of both previous line by an ampersand", "true": "inflate the current sam line by replacing all & by the corresponding field in the previous sam line", "bleu": 0.2476165058078653, "rouge": 0.3719512195121952}, {"predict": "returns an array containing all of the elements in this queue , in proper sequence", "true": "returns an array containing all of the elements in this queue , in proper sequence", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds another image container to the list of those interested in the results of the request", "true": "adds another image container to the list of those interested in the results of the request", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "set the models as a set of certificates on the set of text", "true": "this function calculates the position for each legend", "bleu": 0.09552040806823771, "rouge": 0.09951060358890701}, {"predict": "fetches the metadata for a table", "true": "fetches metadata for the table from the cache or from the database if needed", "bleu": 0.09113100941873914, "rouge": 0.3730886850152905}, {"predict": "encode the string into an url", "true": "returns the encoded string representing the object type signature", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "reads bytes from the socket", "true": "reads more data from the input stream", "bleu": 0.25880882365505126, "rouge": 0.48541114058355433}, {"predict": "flush the task manager to flush the file", "true": "flushes the buffered log records", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "images 6 - button pressed in the background list", "true": "creates the button pages for a category", "bleu": 0.15619699684601276, "rouge": 0.1278825995807128}, {"predict": "and for two positive numbers ; the first is longer", "true": "and for two positive numbers ; the first is longer", "bleu": 1.0, "rouge": 1.0}, {"predict": "overridden implementation of create new export mask work flow for initiators for v nx", "true": "creates a new export mask for host for the given initiators", "bleu": 0.1892240568795935, "rouge": 0.40884718498659517}, {"predict": "compares two percent objects", "true": "compares two percent objects", "bleu": 1.0, "rouge": 1.0}, {"predict": "override to allow for colons in the id without url encoding", "true": "override to allow for colons in the id without url encoding them", "bleu": 0.9131007162822622, "rouge": 0.949080622347949}, {"predict": "reads a signed 16 - bit integer , byte - swapping if necessary", "true": "reads a signed 16 - bit integer , byte - swapping if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the projects from the database", "true": "loads the projects of a database", "bleu": 0.4347208719449915, "rouge": 0.6666666666666666}, {"predict": "merge a phonetic string into two phone strings", "true": "<unk> a phonetic string , marking syllable boundaries with dash characters in the output", "bleu": 0.1409894129706051, "rouge": 0.25994318181818177}, {"predict": "removes the node at the head of the frontier if the corresponding state is not yet explored", "true": "cleans up the head of the frontier , removes the first node of a non - explored state from the head of the frontier , adds it to the corresponding explored map , and returns the node", "bleu": 0.11133604626435296, "rouge": 0.38190096755833813}, {"predict": "checks if is file path", "true": "checks if the given path is a file", "bleu": 0.23450008106203596, "rouge": 0.5907990314769976}, {"predict": "compare this object with the specified object", "true": "compares the current object instance with another object instance", "bleu": 0.1755217914979255, "rouge": 0.3667334669338677}, {"predict": "create a new zookeeper session instance", "true": "create zookeeper testing server", "bleu": 0.24446151121745047, "rouge": 0.4149659863945578}, {"predict": "create an appropriate condition", "true": "creates a new basic condition , given a variable label , an expected value , and a relation to hold between the variable and its value", "bleu": 0.001625044850085843, "rouge": 0.05888030888030889}, {"predict": "read a b / b path ( using case = - insensitive )", "true": "read a file containing stop words ( one per line )", "bleu": 0.14283632578659286, "rouge": 0.33841886269070737}, {"predict": "returns a string representation of the component", "true": "returns the string representation of this object", "bleu": 0.38260294162784475, "rouge": 0.5714285714285714}, {"predict": "sets current barrier generation as broken and wakes up everyone", "true": "sets current barrier generation as broken and wakes up everyone", "bleu": 1.0, "rouge": 1.0}, {"predict": "filters according to type", "true": "filters according to type", "bleu": 1.0, "rouge": 1.0}, {"predict": "send a log event to the log", "true": "create properly formatted message to send over udp that acts like a sy slog message sy slog format : \" & lt ; priority & gt ; timestamp <unk> link blue link : message \" details : http : / / en", "bleu": 0.0014883849429342406, "rouge": 0.07231772377000592}, {"predict": "writes the stack trace of the trace trace to the output stream", "true": "serializes the given exceptions stack trace elements as well as it ' s suppressed exceptions to the given output stream", "bleu": 0.10669118016346142, "rouge": 0.41862745098039217}, {"predict": "builds a new instance with the specified time u id and round - round - round - round trip", "true": "build the multi stream writer", "bleu": 0.06439931429457924, "rouge": 0.09312977099236641}, {"predict": "produce a string from a number", "true": "produce a string from a number", "bleu": 1.0, "rouge": 1.0}, {"predict": "create image element", "true": "create image from attachment", "bleu": 0.5066641486392105, "rouge": 0.5570776255707762}, {"predict": "creates a new thread register values", "true": "creates a new thread register values object", "bleu": 0.846481724890614, "rouge": 0.9104477611940297}, {"predict": "performs a configuration parameter bundle on a given map", "true": "add all of the supplied configuration parameters to the request", "bleu": 0.1262975489687145, "rouge": 0.10427350427350426}, {"predict": "see if this ap pod should be triggered", "true": "see if this anti - ba pod should be triggered", "bleu": 0.4649044882163224, "rouge": 0.7624999999999998}, {"predict": "appends all of the elements in the specified array to the end of this list", "true": "appends all of the elements in the specified array at the specified position in this list", "bleu": 0.597735737060173, "rouge": 0.7697160883280757}, {"predict": "read from the byte array", "true": "reads some number of bytes from the input stream and stores them into the buffer array b", "bleu": 0.03502596545349091, "rouge": 0.24830393487109909}, {"predict": "send an error log message", "true": "send an error log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the score of the song given the play counts", "true": "calculates the score of the song given the play counts", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove a scanning callback", "true": "remove a scanning callback", "bleu": 1.0, "rouge": 1.0}, {"predict": "paint a rectangle for the given component", "true": "paint / copy background to component rectangle", "bleu": 0.22089591134157885, "rouge": 0.2857142857142857}, {"predict": "sample the sample count", "true": "return the probe ' s next average", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "is this is a chunk", "true": "check for for page break", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "shut down the executor service by letting current tasks run to completion but accepting no new tasks", "true": "shuts down the internal thread pool", "bleu": 0.09507244120026236, "rouge": 0.19032761310452417}, {"predict": "determine if the given character can be at the beginning of a proposition symbol", "true": "determine if the given character is part of a proposition symbol", "bleu": 0.49202745153855076, "rouge": 0.7359249329758714}, {"predict": "prints a number of type in default e format", "true": "prints a z dia <unk> at in default format", "bleu": 0.24446151121745052, "rouge": 0.5555555555555556}, {"predict": "returns the index of the first occur r rence of the pattern string in the text string", "true": "returns the index of the first occurrence of the pattern string in the text string", "bleu": 0.7160350546947922, "rouge": 0.8849740932642487}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of the in t array", "true": "returns the characters corresponding to the argument indices", "bleu": 0.15619699684601276, "rouge": 0.2378167641325536}, {"predict": "returns the part of a string", "true": "truncate string to a given length", "bleu": 0.24446151121745047, "rouge": 0.16666666666666666}, {"predict": "deletes transactions which appeared after the un spent map", "true": "deletes transactions which appeared above the given block height from the wallet , but does not touch the keys", "bleu": 0.1353423037357529, "rouge": 0.3355335533553355}, {"predict": "if a player exists , otherwise run a file , otherwise do a list , otherwise do not set it , otherwise do not set it and if it does not consume it does not consume it and if it does not set a collision", "true": "initial load of this script", "bleu": 0.022479007417262973, "rouge": 0.0}, {"predict": "starts the underlying animator for a set of properties", "true": "starts the underlying animator for a set of properties", "bleu": 1.0, "rouge": 1.0}, {"predict": "retrieve the region needing to be redrawn", "true": "retrieve the region needing to be redrawn", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new sort specification that sorts on the given fields , all in ascending order", "true": "creates a new sort specification that sorts on the given fields , all in ascending order", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the current path is part of the audio data", "true": "the attack is only successful if the x sw message is accepted", "bleu": 0.15537125692760353, "rouge": 0.25}, {"predict": "start an intent to start a phone", "true": "starts the geo location service", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "deletes a resource configuration from the local drive", "true": "delete a specific resource configuration", "bleu": 0.22679164443904004, "rouge": 0.48157894736842105}, {"predict": "create a new movement", "true": "create a new instance from a prototype", "bleu": 0.3158905525406873, "rouge": 0.5198863636363635}, {"predict": "remove next file and returns it ' s size", "true": "remove next file and returns it ' s size", "bleu": 1.0, "rouge": 1.0}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the gui of the dialog", "true": "creates the sub - components of the panel", "bleu": 0.2619317629190374, "rouge": 0.5570776255707762}, {"predict": "generates a random float between two limits", "true": "generates a random float between two limits", "bleu": 1.0, "rouge": 1.0}, {"predict": "this constructs an instance", "true": "this constructs an instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "perform a kn n search on the k - tree rooted at the specified index", "true": "perform a kn n search on the k d - tree", "bleu": 0.5554570250728591, "rouge": 0.7911802853437093}, {"predict": "handle a start element", "true": "if a new tag is encountered , check if it is of interest or not by seeing if it matches against our node tree", "bleu": 0.002420972062960732, "rouge": 0.06327800829875518}, {"predict": "connect to the client client side", "true": "connects to the broker", "bleu": 0.2907153684841096, "rouge": 0.4149659863945578}, {"predict": "checks the reference to a type in a type annotation", "true": "checks the reference to a type in a type annotation", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new label", "true": "add a new tracer", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "grows all of the entries in this list", "true": "expands capacity of internal arrays", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "moves damage to a given value", "true": "damage component by given value", "bleu": 0.31239399369202553, "rouge": 0.5545454545454546}, {"predict": "test for empty cluster event", "true": "this tests the concurrency version ing system to ensure that event con flat ion happens correctly and that the statistic is being updated properly", "bleu": 0.006107491095942254, "rouge": 0.06167846309403437}, {"predict": "creates a new graph from a cl node", "true": "constructs an empty graph", "bleu": 0.16036590969929357, "rouge": 0.17732558139534885}, {"predict": "trim the given version number by removing any trailing whitespace version", "true": "separates api version for api group / api version combination", "bleu": 0.12605968092174913, "rouge": 0.1921259842519685}, {"predict": "queries the inventory", "true": "queries the inventory", "bleu": 1.0, "rouge": 1.0}, {"predict": "for an analyzed interval , which means to an analyzed interval match greater than the score object", "true": "if we do not use empty intervals to compute percentiles and there are no unique messages for this interval then we simply return", "bleu": 0.06036030497379183, "rouge": 0.09736632083000799}, {"predict": "read file as a string", "true": "new nio based method to read a file as a string with the given encoding", "bleu": 0.1076281893274762, "rouge": 0.45864661654135336}, {"predict": "constructs a new bayes im editor from a bayes estimator wrapper", "true": "constructs a new bayes im editor from a bayes estimator wrapper", "bleu": 1.0, "rouge": 1.0}, {"predict": "saves data and writes it to disk", "true": "saves data and writes it to disk", "bleu": 1.0, "rouge": 1.0}, {"predict": "flatten a map into an xml serialize r", "true": "flatten a map into an xml serialize r", "bleu": 1.0, "rouge": 1.0}, {"predict": "last added key load", "true": "checks whether entry info should be sent to primary node from backup", "bleu": 0.040889869516541145, "rouge": 0.0}, {"predict": "generates a challenge token for an ip address", "true": "generate a new token", "bleu": 0.17747405280050269, "rouge": 0.3546511627906977}, {"predict": "performs any branches from entry and split this to any equivalent variables in the ir", "true": "main routine : perform the transformation", "bleu": 0.08225964699966554, "rouge": 0.10321489001692045}, {"predict": "adds fill components to empty cells in the first row and first column of the grid", "true": "adds fill components to empty cells in the first row and first column of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "run the task in reader", "true": "run a task , retrying a fixed number of times if there is a failure", "bleu": 0.040889869516541145, "rouge": 0.18345864661654135}, {"predict": "if the value is an object of the set then return an object with the same type", "true": "based on accumulated value , produce a value for this property", "bleu": 0.07223943354597204, "rouge": 0.07429963459196103}, {"predict": "remove a request to be queue", "true": "this is the way to remove a specific request object", "bleu": 0.16959011078459055, "rouge": 0.3588235294117647}, {"predict": "callback function when heat map generation has failed", "true": "callback function when heat map generation has failed", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an individual handler based on the given resources", "true": "inflate a draw able from a vector xml resource", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "returns the object field offset", "true": "returns object field offset", "bleu": 0.537284965911771, "rouge": 0.9070631970260222}, {"predict": "add an string at ( x , y ) coordinates", "true": "add an string at ( x , y ) coordinates", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a number of bytes to the r rd file on the disk", "true": "writes bytes to the underlying r rd file on the disk", "bleu": 0.5445178846139404, "rouge": 0.8460471567267683}, {"predict": "con cat in ate the iv to the ciphertext using array copy", "true": "con cat in ate the iv to the ciphertext using array copy", "bleu": 1.0, "rouge": 1.0}, {"predict": "return timestamp value", "true": "returns an updated executor timestamp", "bleu": 0.2758512992979459, "rouge": 0.23921568627450981}, {"predict": "creates a material package wrapping a material", "true": "instantiate s a new material package object", "bleu": 0.2626909894424158, "rouge": 0.42857142857142855}, {"predict": "returns the edge whose first two coordinates are the same length as the left and p 1", "true": "returns the edge which starts at p 0 and whose first segment is parallel to p 1", "bleu": 0.18710158230410626, "rouge": 0.4117647058823529}, {"predict": "acquire the language probabilities for the target sequence that has not been stored in the target sequence", "true": "parses the specified string to determine the probability of a character appearing after the previous two characters beginning with the third character in the string and ending with the last", "bleu": 0.05028162305615221, "rouge": 0.16212624584717605}, {"predict": "marks as resolved as being active", "true": "marks as resolved the specified issue", "bleu": 0.4111336169005197, "rouge": 0.5}, {"predict": "decodes data from base 64 notation , automatically detecting gzip - compressed data and decompressing it", "true": "decodes data from base 64 notation , automatically detecting gzip - compressed data and decompressing it", "bleu": 1.0, "rouge": 1.0}, {"predict": "test if the given pool is the same as a database", "true": "perform a basic access on the db for a rudimentary test", "bleu": 0.1354599427337814, "rouge": 0.18181818181818182}, {"predict": "distinct aggregate function which update the distinct set", "true": "distinct count aggregate function which update the distinct count", "bleu": 0.662423225940787, "rouge": 0.8148854961832059}, {"predict": "display a shell con script in the console", "true": "<unk> egg ; run it and you ' ll see what all this mess is about !", "bleu": 0.043779748377912146, "rouge": 0.0}, {"predict": "checks whether an entity given by name is present in the dtd", "true": "checks whether an entity given by name is un parsed", "bleu": 0.6479121525090147, "rouge": 0.7393939393939394}, {"predict": "flushes this output stream and forces any buffered output bytes to be written by the stream", "true": "flush any buffered messages", "bleu": 0.10123734869668824, "rouge": 0.22426470588235295}, {"predict": "encode text as utf - 8", "true": "encode text as utf - 8", "bleu": 1.0, "rouge": 1.0}, {"predict": "forwards mouse event to this component", "true": "ensures that if we lose focus , the popup goes away", "bleu": 0.08072686929338534, "rouge": 0.0}, {"predict": "adds a request property to the header", "true": "adds a general request property specified by a key - value pair", "bleu": 0.15048220633585796, "rouge": 0.40197693574958815}, {"predict": "execute up or hit able to catch all tasks , or inline time out , or inline active", "true": "executes the task using the embedded executor", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "serializes the given value to the byte buffer", "true": "serialize to a byte buffer", "bleu": 0.22679164443904004, "rouge": 0.48157894736842105}, {"predict": "all submission with no modification", "true": "used to <unk> the vector containing all <unk>", "bleu": 0.14983220973977976, "rouge": 0.1476997578692494}, {"predict": "formats the number of characters in the calendar instance", "true": "private member function that does the real date / time formatting", "bleu": 0.11301601243449393, "rouge": 0.09822866344605477}, {"predict": "process incoming touch events", "true": "process incoming touch events", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a bit string to a bit integer , or null if none is present", "true": "method to construct a bit for a given string expression", "bleu": 0.12874330508144843, "rouge": 0.2489795918367347}, {"predict": "moves the binary file", "true": "steps forward to the next record if there ' s one available", "bleu": 0.04862652376060361, "rouge": 0.11466165413533834}, {"predict": "returns a new component with the given b", "true": "apply composition to an individual color component of a pixel", "bleu": 0.13821693129588736, "rouge": 0.10892857142857142}, {"predict": "writes the entire contents of this byte stream to the specified output stream", "true": "writes the entire contents of this byte stream to the specified output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the listener for the tree model event posted after the tree changes", "true": "removes a listener previously added with add tree model listener ( )", "bleu": 0.14283632578659286, "rouge": 0.3223249669749009}, {"predict": "flush underlying uri", "true": "create the uri name object with the specified name", "bleu": 0.07271361304044333, "rouge": 0.15288220551378442}, {"predict": "adds an additional name / value pair to the stream", "true": "adds a parameterized view to the stream", "bleu": 0.24808415001701817, "rouge": 0.48605577689243035}, {"predict": "copy data from the given recorder into the given buffer , and append to the complete recording", "true": "copy data from the given recorder into the given buffer , and append to the complete recording", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a zone rules to a rules", "true": "completes the build converting the builder to a set of time - zone rules", "bleu": 0.1130839610732672, "rouge": 0.2695139911634757}, {"predict": "applies a supplemental hash function to a given object", "true": "gets hash code for a given object", "bleu": 0.2777619034011791, "rouge": 0.5115303983228512}, {"predict": "adds a template string to the parse", "true": "adds a template which should be \" parsed \" while the parsing process", "bleu": 0.15513171017484098, "rouge": 0.3794712286158632}, {"predict": "attach image from the camera path to be used on the camera of this image by ex if the image is incomplete )", "true": "return the taken image from the camera to the calling activity", "bleu": 0.16564565321939206, "rouge": 0.3769309989701339}, {"predict": "a function to find the minimum of two values , but ignoring any double", "true": "a function to find the minimum of two values , but ignoring any double", "bleu": 1.0, "rouge": 1.0}, {"predict": "registers the client name and register it", "true": "allows the m - let to perform any operations it needs before being registered in the mbe an server", "bleu": 0.03702100183468252, "rouge": 0.14202561117578577}, {"predict": "if a string matches one or more characters , then advance to the given e num", "true": "match the pattern , or if not possible throw an exception", "bleu": 0.09672649511413092, "rouge": 0.07663316582914573}, {"predict": "returns a string representation of the given annotation value , suitable for inclusion in a java source file as the initialize r of a variable of the appropriate type", "true": "returns a string representation of the given annotation value , suitable for inclusion in a java source file as the initialize r of a variable of the appropriate type", "bleu": 1.0, "rouge": 1.0}, {"predict": "produces a new byte buffer that is using the specified capacity", "true": "create a ` byte buffer ` with a given capacity", "bleu": 0.17033186037639278, "rouge": 0.384251968503937}, {"predict": "adds a new value to the series", "true": "adds a new value to the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates a collection attribute", "true": "validates if the collection does not contain same named elements ( methods and resources )", "bleu": 0.025419978385188596, "rouge": 0.190625}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "put a string in the buffer", "true": "put a string in the buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "an external entity declaration", "true": "an external entity declaration", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the alpha value of the poly range", "true": "alpha controls the smoothing of the data", "bleu": 0.239802967618271, "rouge": 0.4048672566371681}, {"predict": "creates the class descriptor from a field signature", "true": "create a class descriptor from a field signature", "bleu": 0.7259795291154771, "rouge": 0.75}, {"predict": "check if service is accessible from the service ticket or not", "true": "this method validates a service ticket response object , raising an exception if the response reflects an operation failure", "bleu": 0.0823086270595964, "rouge": 0.12721584984358705}, {"predict": "schedule the specified task for execution at the specified time", "true": "schedules the specified task for execution after the specified delay", "bleu": 0.5193071778680676, "rouge": 0.7000000000000001}, {"predict": "draws a filled ellipse of given semimajor and semi minor axes , centered on ( x , y )", "true": "draws an ellipse with given semimajor and semi minor axes , centered on ( x , y )", "bleu": 0.751707932251438, "rouge": 0.8691006233303651}, {"predict": "discards any whitespace from a base - 64 encoded block", "true": "discards any whitespace from a base - 64 encoded block", "bleu": 1.0, "rouge": 1.0}, {"predict": "swap a cursor to the data of the list", "true": "overrides swap cursor to move the new cursor into the alphabet index as well as the cursor adapter", "bleu": 0.08126306442139648, "rouge": 0.34936998854524626}, {"predict": "we should be able to write a buffer to be able to store the buffer", "true": "lock the flushing mechanism in order to prevent a thread flushing this buffer while another thread is doing a <unk> operation", "bleu": 0.0693352444257292, "rouge": 0.16180371352785147}, {"predict": "determines whether an instance can be in two instances", "true": "checks if the class is supported to be randomized without recursion", "bleu": 0.11301601243449393, "rouge": 0.09822866344605477}, {"predict": "generates the native gui d format as storage system + serial number + serial number + serial number + serial number + serial number + serial number + 0000 to be native + 001 f + 9", "true": "the format of this native gui d using the given device type & serial number", "bleu": 0.0775275441607937, "rouge": 0.24982935153583624}, {"predict": "an aes key derived from a base 64 encoded key", "true": "an aes key derived from a base 64 encoded key", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a writable sub raster given a region of the raster", "true": "creates a writable sub raster given a region of the raster", "bleu": 1.0, "rouge": 1.0}, {"predict": "sorts the specified tree of tree nodes for a given tree", "true": "sorts visible tree nodes", "bleu": 0.16108992769687397, "rouge": 0.43675417661097854}, {"predict": "returns a random integer from a poisson distribution with mean & lambda ;", "true": "return an integer with a poisson distribution with mean lambda", "bleu": 0.3759663529467017, "rouge": 0.6233576642335765}, {"predict": "escapes any input string that is not either a char - line and put the result to generate a single string", "true": "build a string for parsing", "bleu": 0.06429451441231726, "rouge": 0.17304964539007092}, {"predict": "returns whether the sound defined by the player is available in the sound", "true": "indicates whether a user installed or system sound is available", "bleu": 0.14283632578659286, "rouge": 0.3562043795620438}, {"predict": "method called by access a file to a file", "true": "iterate over view serialize rs", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "checks whether this map ' s key is a key in the underlying array", "true": "check if the supplied key is a valid key", "bleu": 0.18207052811092136, "rouge": 0.3620178041543027}, {"predict": "this method clones an arc , create an intent from a pending graph", "true": "draw the arc around the ring only for the download mode", "bleu": 0.09552040806823771, "rouge": 0.08460471567267684}, {"predict": "formats a date and time in a format", "true": "formats a date using a format string", "bleu": 0.3549481056010052, "rouge": 0.6747787610619468}, {"predict": "decode the base 64 - encoded data in input and return the data in a new byte array", "true": "decode the base 64 - encoded data in input and return the data in a new byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs and anim game item in st ace based on a md 5 model an md 5 animation", "true": "constructs and anim game item in st ace based on a md 5 model an md 5 animation", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new message digest based on the specified algorithm", "true": "creates a message digest with the specified algorithm name", "bleu": 0.31702331385234306, "rouge": 0.7439024390243903}, {"predict": "creates the gui of the component", "true": "creates the elements of this component", "bleu": 0.3303164318013807, "rouge": 0.6666666666666666}, {"predict": "merge sort", "true": "merge sort", "bleu": 1.0, "rouge": 1.0}, {"predict": "copy all access control variables for the given access control", "true": "copy a cls for new configuration", "bleu": 0.13950796967929133, "rouge": 0.26180257510729615}, {"predict": "put a byte buffer ' s content to the buffer", "true": "appends content from the specified byte buffer to this byte array", "bleu": 0.17851905035930718, "rouge": 0.28328173374613}, {"predict": "initiate an byte to the queue", "true": "handle the response sent back from alexa ' s parsing of the intent , these can be any of the a vs item types ( play , speak , stop , clear , listen )", "bleu": 0.0017583190506878057, "rouge": 0.043262411347517724}, {"predict": "called when a request was sent to this application", "true": "checks if there is info already cached and whether it is old enough to be updated , in which case it requests the data from the api", "bleu": 0.019101210955527005, "rouge": 0.050960735171261484}, {"predict": "removes the provided view if it is not already hidden", "true": "removes a view from the view group if it is hidden", "bleu": 0.25246406216009776, "rouge": 0.6609907120743034}, {"predict": "consume a css identifier ( id or class ) off the queue", "true": "consume a css identifier ( id or class ) off the queue ( letter , digit , - , _ ) http : / / www", "bleu": 0.31140322391459774, "rouge": 0.5922330097087379}, {"predict": "test for bug # 575 , and different signs", "true": "currently not being executed for <unk> but after transition to j dk 1", "bleu": 0.09049614828481034, "rouge": 0.08802308802308802}, {"predict": "serialize a key into the api serialize r", "true": "serialize this object and all its contents to xml", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "build an activity", "true": "creates a new instance", "bleu": 0.32372956394183194, "rouge": 0.0}, {"predict": "rolls back the given exception", "true": "rollback the download ( delete the temporary file )", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "parse a geometry graphic", "true": "parse x - like geometry string", "bleu": 0.24117803988461298, "rouge": 0.3860759493670886}, {"predict": "writes one packet to this packet", "true": "this method will be called by dispatcher , and will be repeated till return false", "bleu": 0.04928854007377984, "rouge": 0.08840579710144927}, {"predict": "position the om graphics is on the data array", "true": "since the image doesn ' t necessarily need to be <unk> when it is merely moved , raster objects have this function , called from generate ( ) and when a placement attribute is changed", "bleu": 0.008690488241522675, "rouge": 0.08215488215488215}, {"predict": "searches in this vector for the index of the specified object", "true": "searches in this vector for the index of the specified object", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns whether an undo is possible , i", "true": "returns whether an undo is possible , i", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts the string representation of the char argument into this string buffer", "true": "inserts the string representation of the char argument into this string buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "return true if the local path is an absolute path", "true": "return true if the local path is an absolute path", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate destination for file", "true": "calculate the destination of the given um let diagram", "bleu": 0.11392443929712959, "rouge": 0.28773584905660377}, {"predict": "receives the given event", "true": "there is a change on the project that we ' re monitoring , whatever the type of event is , we need to updated the runner", "bleu": 0.001625044850085843, "rouge": 0.11776061776061778}, {"predict": "mouse event is not currently clicked on the mouse event", "true": "called on left mouse single click", "bleu": 0.13950796967929133, "rouge": 0.26180257510729615}, {"predict": "figures out the initial heights for all figures and space when the view is being set up", "true": "measures the space needed for various parts of the view after loading new events", "bleu": 0.11306082351602978, "rouge": 0.26264800861141013}, {"predict": "update the priority - ordered list of visible tabs", "true": "update the priority - ordered list of visible tabs", "bleu": 1.0, "rouge": 1.0}, {"predict": "walk graph , level data to string , and to string methods to implement explore node interface", "true": "to string , level data to string , and walk graph methods to implement explore node interface", "bleu": 0.7238348098810832, "rouge": 0.7647058823529411}, {"predict": "request i gfs entry", "true": "starts file fragmenting", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "shows the previous notification item", "true": "scrolls to the previous notification", "bleu": 0.5081327481546147, "rouge": 0.6}, {"predict": "calls the super method and writes the state of this node , the num entries and the specified stream", "true": "calls the super method and writes the id of this node , the num entries and the entries array to the specified stream", "bleu": 0.6552003756882968, "rouge": 0.8426707597851113}, {"predict": "adds an input node to the input node", "true": "adds a new incoming relation to the node", "bleu": 0.239802967618271, "rouge": 0.5}, {"predict": "parses the database to create the database using the given database post configuration", "true": "initializes a new post gre sql database", "bleu": 0.10571070857151538, "rouge": 0.10571923743500866}, {"predict": "show up the drop network in the device", "true": "generates a set of fc port connection entries for the specified vs an id ( or all v <unk> if vs an id is null )", "bleu": 0.0169024425284635, "rouge": 0.05369718309859155}, {"predict": "associates a read object with the its serialization handle", "true": "associates a read object with the its serialization handle", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an extension header to this map", "true": "add an extension header to this map", "bleu": 1.0, "rouge": 1.0}, {"predict": "merges this frame with the given frame", "true": "merges this frame with the given frame", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the given command to the body", "true": "submit command to key tool", "bleu": 0.24446151121745047, "rouge": 0.34366197183098596}, {"predict": "snaps the given position to the given position when the current scroll was created , when the given position is end , and the screen method will be exceeded", "true": "smoothly snaps to a given position", "bleu": 0.062443859512347225, "rouge": 0.259298618490967}, {"predict": "update property name to - tag", "true": "updates the key in the persistent property store to \" value 2 \"", "bleu": 0.07612610271614867, "rouge": 0.19741100323624597}, {"predict": "removes an entities from the api", "true": "un assigns services from an entity", "bleu": 0.24446151121745047, "rouge": 0.16666666666666666}, {"predict": "expands the cluster to include density - reachable items", "true": "expands the cluster to include density - reachable items", "bleu": 1.0, "rouge": 1.0}, {"predict": "get float array elements : get all the elements of a float array", "true": "get float array elements : get all the elements of a float array", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses a text , returning the index", "true": "this implementation looks for the longest matching string", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "prepares ( allocates ) a set of transfer buffers for use in transferring data from the tuner via the bulk interface", "true": "prepares ( allocates ) a set of transfer buffers for use in transferring data from the tuner via the bulk interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the full text buffer to the output stream", "true": "outputs to the final destination as many full line pairs as there are in the pending output , removing those lines from their respective buffers", "bleu": 0.03733435033548467, "rouge": 0.21688888888888888}, {"predict": "add payment rule to the payment message for set of payment type - > enable or full", "true": "positive amount", "bleu": 0.06074588070876682, "rouge": 0.0}, {"predict": "attempt to register any unregistered extension namespaces", "true": "attempt to register any unregistered extension namespaces", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all objects , which are used to highlight the text", "true": "remove all map objects", "bleu": 0.12605968092174913, "rouge": 0.2911694510739857}, {"predict": "deletes the display name of a existing user", "true": "deletes the display name of a existing user", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the new type node corresponding to the type of the given declaration including the extra dimensions", "true": "returns the new type node corresponding to the type of the given declaration including the extra dimensions", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the cache and deletes all of its stored values", "true": "closes the cache and deletes all of its stored values", "bleu": 1.0, "rouge": 1.0}, {"predict": "as if : this function becomes the as well as the x sd - value pairs that hold the same as described in client", "true": "checks iterators are cleared", "bleu": 0.042601467364417965, "rouge": 0.0}, {"predict": "binds a callback to lifecycle events", "true": "adds a listener for all of this controller ' s lifecycle events", "bleu": 0.11492332782473744, "rouge": 0.31443298969072164}, {"predict": "returns paths list index of given path or - 1 if not found", "true": "returns paths list index of given path or - 1 if not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "force an old volume", "true": "destroys a volume , releasing all storage blocks assigned to it", "bleu": 0.06243769243378541, "rouge": 0.12298387096774194}, {"predict": "computes a set of curves using the cardinal spline approach , but using straight lines for completely horizontal or vertical segments", "true": "computes a set of curves using the cardinal spline approach , but using straight lines for completely horizontal or vertical segments", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the supplied ui manager is force according to min sd max updates", "true": "checks if the app should be scaled in / out according to cool down settings", "bleu": 0.1361294711534851, "rouge": 0.2666666666666666}, {"predict": "converts the given encoded bytes into bytes", "true": "takes an in t which is supposed to be in megabytes and converts it to a long", "bleu": 0.04451531901458464, "rouge": 0.0775095298602287}, {"predict": "calculates the approximate height of a text , depending on a demo text avoid repeated calls ( e", "true": "calculates the approximate height of a text , depending on a demo text avoid repeated calls ( e", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates a \" zone set \" vs", "true": "generate a unique name for the zone set clone", "bleu": 0.19740631366145517, "rouge": 0.3667334669338677}, {"predict": "writes a \" block \" in \" encryption \"", "true": "write a", "bleu": 0.14113991930789777, "rouge": 0.2053872053872054}, {"predict": "calls invoke and throws a runtime exception if it fails", "true": "calls invoke and throws a runtime exception if it fails", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds a sql select query from the database", "true": "constructs a sql statement template later used for prepared statement", "bleu": 0.1643685581109115, "rouge": 0.21785714285714283}, {"predict": "starts the animation given as parameter", "true": "starts the animation given as parameter", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the key is a uri key", "true": "this method determines if the supplied key relates to a uri", "bleu": 0.1957494756053795, "rouge": 0.4911433172302737}, {"predict": "receives data from the device", "true": "receives data from the device", "bleu": 1.0, "rouge": 1.0}, {"predict": "add of channel handler and send a channel to the handler", "true": "add a newly connected of channel handler", "bleu": 0.23462350320527994, "rouge": 0.4629981024667932}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "send an array of bytes to the connected stream", "true": "send array of bytes to bluetooth output stream", "bleu": 0.42728700639623407, "rouge": 0.7134502923976607}, {"predict": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "true": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a list containing the elements of the specified collection , in the order they are returned by the collection ' s iterator", "true": "creates a list containing the elements of the specified collection , in the order they are returned by the collection ' s iterator", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the contents of http entity into a byte", "true": "reads the contents of http entity into a byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a tail argument to the command line", "true": "adds an arg after the command and any options", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "this method is called for data flavor and returns the result buffer for the data while drawing", "true": "translating either a byte array or an input stream into an string", "bleu": 0.06074588070876682, "rouge": 0.0}, {"predict": "creates an inline uri handler object", "true": "create a handler for the supplied namespace prefix - the handler will be invoked iff it is the registered handler having the longest prefix <unk> to the actual uri", "bleu": 0.005289504344859496, "rouge": 0.05108877721943048}, {"predict": "calculates the n sga algorithm ( see j i ogram )", "true": "calculates the d matrix for k rig ing system", "bleu": 0.14991106946711685, "rouge": 0.2036727879799666}, {"predict": "de serialization object from file", "true": "de serialization object from file", "bleu": 1.0, "rouge": 1.0}, {"predict": "to check if the segment is merged or not", "true": "to check if the segment is merged or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate a pbe based key suitable for a mac algorithm , the key size is chosen according the mac size , or the hashing algorithm , whichever is greater", "true": "generate a pbe based key suitable for a mac algorithm , the key size is chosen according the mac size , or the hashing algorithm , whichever is greater", "bleu": 1.0, "rouge": 1.0}, {"predict": "add emo j icon group list", "true": "add emo j icon group list", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the end of the master", "true": "register a throughput measurement end point", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "test whether the given path should be included in this model", "true": "check whether a path should be included", "bleu": 0.33180774028439425, "rouge": 0.5787476280834916}, {"predict": "adds view to specified cache", "true": "adds view to specified cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate the units from the table", "true": "selects a number of units from the table with a filter", "bleu": 0.26718582988399503, "rouge": 0.4468864468864468}, {"predict": "returns an automaton that accepts the given automaton", "true": "returns an automaton that accepts the concatenation of the languages of the given automata", "bleu": 0.36850059848140043, "rouge": 0.6065340909090908}, {"predict": "list the contents of the list", "true": "this method is public as an implementation side effect", "bleu": 0.1126634218241493, "rouge": 0.0}, {"predict": "adjust the filters of this cluster er that has been through the filters", "true": "adjust the final number of canopies to match the user - requested number ( if possible )", "bleu": 0.10500490802103207, "rouge": 0.26040554962646745}, {"predict": "creates the requested quan tile for given partitions", "true": "create a hilbert curve partition er from a list of points", "bleu": 0.09268172804333874, "rouge": 0.0}, {"predict": "reads the property from a safe serialization format", "true": "reads the property from a safe serialization format", "bleu": 1.0, "rouge": 1.0}, {"predict": "java x", "true": "java x", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the user input directory , or null if it ' s not found", "true": "if the user input starts with a <unk> character ( ~ ) , replace the <unk> character with the user ' s home directory", "bleu": 0.10599534838180841, "rouge": 0.30148270181219106}, {"predict": "returns the stamp bits for resizing a table of size n", "true": "returns the stamp bits for resizing a table of size n", "bleu": 1.0, "rouge": 1.0}, {"predict": "read a byte from the input stream", "true": "read a byte from the input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "divides the byte array using the b crypt ' s algorithm", "true": "convenience method for computing the h mac key derivation function", "bleu": 0.11390778025531027, "rouge": 0.09606299212598425}, {"predict": "return true if the given emote is ignored , false otherwise", "true": "check if the given emote is on the list of ignored emotes", "bleu": 0.3959377364332706, "rouge": 0.5176803394625177}, {"predict": "returns true if the property is allowed for this property", "true": "is the given word the name of an allowed css property ?", "bleu": 0.12977836824680314, "rouge": 0.2683284457478006}, {"predict": "reads a file as an xml file", "true": "read all consists from a file", "bleu": 0.24446151121745047, "rouge": 0.31202046035805625}, {"predict": "create a zero number from a sign and an array of zero bytes", "true": "create a zero number from a sign and an array of zero length", "bleu": 0.9193227152249185, "rouge": 0.9230769230769234}, {"predict": "accept the accept operation", "true": "accept a connection on a socket", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "function that takes as a series of files values , vector values that handling of the vector prefix value , hash of the vector of the actual encoding that node hash = value", "true": "trans code a document into a file using the given trans code r", "bleu": 0.0405185766962521, "rouge": 0.09435421500386698}, {"predict": "send a fatal error log message", "true": "send a fatal error log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "report download progress through the database if necessary", "true": "report download progress through the database if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "dom level 3 document", "true": "non - preferred : use the get dom implementation ( ) method instead of this one to get a dom level 2 dom implementation object and then use dom level 2 methods to create a dom document object", "bleu": 0.00010338894150791587, "rouge": 0.12465940054495911}, {"predict": "makes a call object set object to v", "true": "set the number of samples generated by one s ces a score call", "bleu": 0.10207878682119532, "rouge": 0.18263473053892215}, {"predict": "handles add request handler request", "true": "handles add request handler request", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws an chart data point", "true": "draws a data point at a given set of panel coordinates at a given size and connects a line to the previous point", "bleu": 0.010549618061228205, "rouge": 0.19202518363064006}, {"predict": "generates the instructions for a switch statement", "true": "generates the instructions for a switch statement", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks the non - null non - null bytes of the client objects", "true": "serialize the given set ' s elm ents into byte chunks , calling proc for each one", "bleu": 0.07022101421400616, "rouge": 0.06510138740661686}, {"predict": "parses the current meta data", "true": "goes once through the metadata , checks which columns are removed and checks that the remaining columns have unique names", "bleu": 0.0135924714044228, "rouge": 0.07218934911242604}, {"predict": "locates a given field anywhere in the class inheritance hierarchy", "true": "locates a given field anywhere in the class inheritance hierarchy", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a session from the given bytes", "true": "creates a session from the given bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "add the dump file for this recovery", "true": "add the set dump file stream to the tree", "bleu": 0.23099966849728554, "rouge": 0.48897795591182364}, {"predict": "serialize a date to the ordinal date", "true": "creates a date using the ordinal date format", "bleu": 0.3564026463354183, "rouge": 0.6587473002159828}, {"predict": "writes an attribute value", "true": "writes the xml attribute name / val", "bleu": 0.1878296463217631, "rouge": 0.346590909090909}, {"predict": "this method returns true if the specified page number is in this page", "true": "checks if a given page is present in the range built so far", "bleu": 0.12571192676522522, "rouge": 0.30769230769230765}, {"predict": "dispose of object , releasing resources", "true": "dispose of object , releasing resources", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets a list of objects within a given collection of rows", "true": "returns a list typed with the desired erasure based on the given collection", "bleu": 0.15716508491863684, "rouge": 0.3283983849259758}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the aliases that will be associated with the index when it gets created", "true": "sets the aliases that will be associated with the index when it gets created", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new table updater to the given table", "true": "adds a newly created table to the relevant internal database structures", "bleu": 0.1957494756053795, "rouge": 0.4911433172302737}, {"predict": "returns a plaintext ( a plaintext b ) class", "true": "hash a password using the <unk> b crypt scheme", "bleu": 0.15619699684601276, "rouge": 0.2222222222222222}, {"predict": "removes a listener from the set listening to this component", "true": "removes a listener such that it is no longer notified of changes", "bleu": 0.1920934774690532, "rouge": 0.2683284457478006}, {"predict": "puts all views in the scrap heap into the supplied list", "true": "puts all views in the scrap heap into the supplied list", "bleu": 1.0, "rouge": 1.0}, {"predict": "schedule a task , but do not wake the scheduler", "true": "schedules a new task", "bleu": 0.13950796967929133, "rouge": 0.3096446700507614}, {"predict": "returns an interval for this interval", "true": "utility method to combine a base hash with the identity hash of one or more objects", "bleu": 0.03508375277329034, "rouge": 0.0}, {"predict": "parse a string containing space values into an array of strings , separated by a vector of the values", "true": "converts a string representation of a vector ( e", "bleu": 0.11154288433080788, "rouge": 0.3817271589486859}, {"predict": "returns a string describing this filter", "true": "returns a string describing this filter", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a lazily concatenated stream whose elements are all the elements of the first stream followed by all the elements of the second stream", "true": "creates a lazily concatenated stream whose elements are all the elements of the first stream followed by all the elements of the second stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "test the test case", "true": "below test is disabled intentionally 1 > in this release 8", "bleu": 0.06243769243378541, "rouge": 0.12298387096774194}, {"predict": "called when the tool panel is added to the bean context , and when new objects are added to the bean context", "true": "the method called by bean context membership listener methods to find components in the map handler", "bleu": 0.0900911347430732, "rouge": 0.27087033747779754}, {"predict": "decode the data source properties from xml", "true": "decode the data source properties from xml", "bleu": 1.0, "rouge": 1.0}, {"predict": "advance to the next character , or return the next character", "true": "increments the iterator ' s index by one and returns the character at the new index", "bleu": 0.08598135896069606, "rouge": 0.21504112808460632}, {"predict": "adjust the cell values of the table horizontally to the supplied table , this method assumes that the cell render er i", "true": "adjust the row heights of a table based on the table contents", "bleu": 0.09970222994544457, "rouge": 0.3727087576374745}, {"predict": "tests if a volume is derived from order to store", "true": "validates a list of volumes", "bleu": 0.12605968092174913, "rouge": 0.1418604651162791}, {"predict": "returns an array of strings in a string containing the given string", "true": "finds format specifiers in the format string", "bleu": 0.1235622127262679, "rouge": 0.3315217391304348}, {"predict": "returns the number of elements in this de que", "true": "returns the number of elements in this de que", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the index buttons based on whether there is any of the field buttons", "true": "updates status of index column up / down buttons", "bleu": 0.11114924776032006, "rouge": 0.271513353115727}, {"predict": "get the url for the search results", "true": "build the url to search for elements having a specific os m tag ( key = value ) , within a bounding box", "bleu": 0.028248772304972077, "rouge": 0.18245264207377865}, {"predict": "blocks until the given number of characters , and then the decoding request as a valid for the server", "true": "wait for decoding to finish", "bleu": 0.0712695567709093, "rouge": 0.09312977099236641}, {"predict": "returns a string with some text that may be used as plain text , at the end of content", "true": "extract plain text from wikipedia article content", "bleu": 0.09107438368292149, "rouge": 0.2517193947730399}, {"predict": "continues a multi - part transformation ( encryption or decryption )", "true": "continues a multi - part transformation ( encryption or decryption )", "bleu": 1.0, "rouge": 1.0}, {"predict": "send an error log message", "true": "send an error log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method creates 4 d nt types for each chart", "true": "packs the given parameters into a single in t value in order to save space on the rendering queue", "bleu": 0.043097658038521544, "rouge": 0.0}, {"predict": "update a sql statement", "true": "update the data using the sql sentence", "bleu": 0.1878296463217631, "rouge": 0.346590909090909}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a hash code for this object", "true": "returns a hash code for this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new action view to the quick action view", "true": "adds an action to the quick action view", "bleu": 0.49616830003403634, "rouge": 0.7936802973977695}, {"predict": "add distinct entry to list", "true": "add distinct entry to list", "bleu": 1.0, "rouge": 1.0}, {"predict": "load the given help file", "true": "displays the requested help file if it is found", "bleu": 0.17348474258688365, "rouge": 0.40757238307349664}, {"predict": "store the location in the app preferences", "true": "store the location in the app preferences", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next individual", "true": "returns one of the points in the closest pair of points", "bleu": 0.06909866532427987, "rouge": 0.24596774193548387}, {"predict": "compares the specified object to this list and return true if they are equal", "true": "compares the specified object to this list and return true if they are equal", "bleu": 1.0, "rouge": 1.0}, {"predict": "produce a comma delimited text row from a json array", "true": "produce a comma delimited text row from a json array", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a table with the given name", "true": "remove a table from the memory database", "bleu": 0.2626909894424158, "rouge": 0.42857142857142855}, {"predict": "returns whether the given category is contained in this set of hidden category", "true": "returns false if the given category is hidden in the project filter settings", "bleu": 0.29899503549981366, "rouge": 0.4615384615384617}, {"predict": "determine if the passed volume is a full copy", "true": "determine if the passed volume is a source volume for any full copies", "bleu": 0.5017507694885613, "rouge": 0.7041847041847041}, {"predict": "asserts that two matrices for equality", "true": "tests two linear regression models by comparing all values", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "performs an entity maintenance security check", "true": "performs an entity maintenance security check", "bleu": 1.0, "rouge": 1.0}, {"predict": "path note : this is correctly when debugging is correct", "true": "tests a successful quorum", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "to be called when explanation is presented to the user", "true": "to be called when explanation is presented to the user", "bleu": 1.0, "rouge": 1.0}, {"predict": "simple puts the thread to sleep for the passed duration", "true": "simple puts the thread to sleep for the passed duration", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints a string followed by a newline", "true": "writes a string followed by a newline", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "reads characters into a portion of an array", "true": "reads characters into a portion of an array", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a byte from the underlying stream", "true": "reads a single character", "bleu": 0.24446151121745047, "rouge": 0.3824451410658307}, {"predict": "call non virtual boolean method v : invoke a virtual method that returns a boolean value", "true": "call non virtual boolean method v : invoke a virtual method that returns a boolean value", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks to see if the specified program exists in the argument , either a static program in the argument", "true": "determines if the given program block includes a rm var or rm file var instruction for the given var name", "bleu": 0.095622798897227, "rouge": 0.25523012552301255}, {"predict": "creates a new project importer", "true": "creates a project importer with the root folder of all projects that has to be imported for the test", "bleu": 0.027474047213893543, "rouge": 0.3016069221260816}, {"predict": "test sort - keep alive numbers of random doubles", "true": "check various sorted values of doubles ( including extreme values ) check for correct ordering of the encoded bytes and that values round - trip", "bleu": 0.028367971685519765, "rouge": 0.10844444444444444}, {"predict": "check whether the module is registered by the user", "true": "has this class already been registered", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": ", + / - , as r # ! 0 b 10 / as r / if shift i mm = = = = = 0 then / as r = = = = = = = = = 0 xff ffffff else index = 0 xff ffffff", "true": "operation : , + / - , as r # 0 b 10 / as r / if shift i mm = = 0 then / as r # 32 / if rm 31 = = 1 then index = 0 xff ffffff else index = 0 else", "bleu": 0.652301685483627, "rouge": 0.75}, {"predict": "loads a class from the name", "true": "return the class with the given name", "bleu": 0.22236312185643822, "rouge": 0.45522388059701485}, {"predict": "wait for the operator to be sent to the next non - listeners", "true": "wait for the bucket operator to complete any pending asynchronous operations", "bleu": 0.21142141714303078, "rouge": 0.42302357836338417}, {"predict": "byte compaction mode ( see 5", "true": "byte compaction mode ( see 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests whether all components of the test geometry intersects the area of the target geometry", "true": "tests whether all components of the test geometry are contained in the target geometry", "bleu": 0.6026080978557137, "rouge": 0.7633674630261661}, {"predict": "creates an inner raw object from a simple object", "true": "accepts a submitted form instance", "bleu": 0.14113991930789777, "rouge": 0.1506172839506173}, {"predict": "creates a new endpoint and endpoint for the passed host desired component parts", "true": "create a new endpoint", "bleu": 0.1777835117834348, "rouge": 0.39019189765458434}, {"predict": "parses value and parses characters , which have equivalent starting characters", "true": "parses an rdf value", "bleu": 0.12605968092174913, "rouge": 0.2911694510739857}, {"predict": "creates a new time series", "true": "constructs an empty data set , tied to the default timezone", "bleu": 0.0691466264618537, "rouge": 0.0}, {"predict": "special purpose function to see if we can optimize the pattern for a descendant iterator", "true": "special purpose function to see if we can optimize the pattern for a descendant iterator", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a e num to a list , containing only the elements", "true": "returns a list of the given elements , in order", "bleu": 0.16261701715194898, "rouge": 0.3696969696969697}, {"predict": "this is to implement memory allocation in the array", "true": "this is to implement memory allocation in the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds an attribute to current element of the dom document", "true": "adds an attribute to current element of the dom document", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a directory response", "true": "create resources ( files and folders ) into a container for a path", "bleu": 0.041910459064397936, "rouge": 0.2147887323943662}, {"predict": "draws an ellipse of the ellipse", "true": "draws the in teri our of an array of ellipses", "bleu": 0.14260771622124252, "rouge": 0.3588235294117647}, {"predict": "this method does nothing", "true": "multiplies the range on the domain axis / axes by the specified factor", "bleu": 0.03184506239916981, "rouge": 0.0}, {"predict": "refreshes the challenge counts", "true": "reloads the due challenge counts from the database", "bleu": 0.18693159143202892, "rouge": 0.47164948453608246}, {"predict": "construct an identity with given parameters", "true": "creates an identity matrix", "bleu": 0.2907153684841096, "rouge": 0.4149659863945578}, {"predict": "this is a wt search wt by means the mouse pointer just means the in the bounds", "true": "transform a java 2 d buffered image to a s wt image", "bleu": 0.07994607499472013, "rouge": 0.1423570595099183}, {"predict": "is abstract signal cipher and call this method must be called whenever the cipher is running", "true": "helper method to check whether the jvm has the unlimited strength policy installed", "bleu": 0.08513012360883544, "rouge": 0.14055299539170507}, {"predict": "current soft limit in bytes on the rss of the process ; see the description of r limit rss in get r limit ( 2 )", "true": "current soft limit in bytes on the rss of the process ; see the description of r limit rss in get r limit ( 2 )", "bleu": 1.0, "rouge": 1.0}, {"predict": "adding a new row with the totals", "true": "adding a new row with the totals", "bleu": 1.0, "rouge": 1.0}, {"predict": "fills the stack trace elements with the specified buffer in the specified buffer , starting at the specified index", "true": "creates a printing stack trace from the given elements", "bleu": 0.09629943614188137, "rouge": 0.2290362953692115}, {"predict": "indicates whether a midi file of the file type specified by the midi file type", "true": "indicates whether file writing support for the specified midi file type is provided by the system", "bleu": 0.2095677971641002, "rouge": 0.5131440588853837}, {"predict": "return real number uniformly in 0 , 1 )", "true": "returns a random real number uniformly in 0 , 1 )", "bleu": 0.7047383863965433, "rouge": 0.7858293075684382}, {"predict": "modifies the configuration object and all the files below it", "true": "modify the attributes for the given configuration object", "bleu": 0.18850319022747347, "rouge": 0.34014869888475835}, {"predict": "creates configuration object variables", "true": "constructs a new instance", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "attempts to cas - increment the worker count field of c tl", "true": "attempts to cas - increment the worker count field of c tl", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes the items that implement the given positions", "true": "calculates every icon ' s height needed and start animation", "bleu": 0.10502215675986959, "rouge": 0.0}, {"predict": "a : a path is a windows path", "true": "returns true if the path is on windows", "bleu": 0.22679164443904004, "rouge": 0.375}, {"predict": "process an attribute string of type t char into a character value", "true": "process an attribute string of type t char into a character value", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a child element with the given name and appends it to the element child node list", "true": "creates a child element with the given name and appends it to the element child node list", "bleu": 1.0, "rouge": 1.0}, {"predict": "is the cost function for a join group in the stack trace", "true": "are all segments balanced", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "attribute : : = \" ) pairs", "true": "attributes : : = ( s attribute ) * s ?", "bleu": 0.21606281467072083, "rouge": 0.4273204903677758}, {"predict": "reads a key file", "true": "reads a binary input file into a byte array", "bleu": 0.14558246978804804, "rouge": 0.43160377358490565}, {"predict": "test the solutions in an input stream , and then reading all solutions", "true": "unit test of the stream - oriented api", "bleu": 0.1135935489027116, "rouge": 0.2985318107667211}, {"predict": "add the given term to this compound condition", "true": "this method adds a condition to the conjunction in the rule ' s head", "bleu": 0.09525245831601728, "rouge": 0.1732954545454545}, {"predict": "switches the underlying output stream from a memory based stream to one that is backed by disk", "true": "switches the underlying output stream from a memory based stream to one that is backed by disk", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove the indices in the interval index 0 , index 1 ( inclusive ) from the selection model", "true": "remove the indices in the interval index 0 , index 1 ( inclusive ) from the selection model", "bleu": 1.0, "rouge": 1.0}, {"predict": "the event list - button - start event", "true": "this is the method that rebuilds the list of visible events", "bleu": 0.12197601375336842, "rouge": 0.20469798657718125}, {"predict": "creates a new disk store factory factory factory factory", "true": "create disk store factory with default attributes", "bleu": 0.2626909894424158, "rouge": 0.38364779874213834}, {"predict": "delete all files in a directory and returns true if all files in this directory", "true": "this is a quiet method", "bleu": 0.09103526405546068, "rouge": 0.10990990990990988}, {"predict": "inserts the specified byte array into this buffer", "true": "puts content from the specified byte array to this byte array", "bleu": 0.32105892380868783, "rouge": 0.511744966442953}, {"predict": "reserved reserved than a certain r op registers", "true": "marks a range of r op registers as \" reserved for a local variable", "bleu": 0.15603043420373067, "rouge": 0.346590909090909}, {"predict": "register a new default template variables", "true": "this method registers the default resolver s", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "processes a response that requires authentication", "true": "processes a response that requires authentication", "bleu": 1.0, "rouge": 1.0}, {"predict": "releases a byte array", "true": "releases specified byte array", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "returns true if , at this time , the object will accept a connection according to the supplied event set descriptor", "true": "returns true if , at this time , the object will accept a connection according to the supplied event set descriptor", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a range marker", "true": "draws a marker for the range axis", "bleu": 0.25379544718731684, "rouge": 0.5198863636363635}, {"predict": "this is the default implementation only called in order to get executed in this class", "true": "constructs a socks 5 instance without any parameter", "bleu": 0.06917184228205472, "rouge": 0.0}, {"predict": "lock to lock in order", "true": "attempts the lock the order", "bleu": 0.3021375397356768, "rouge": 0.4}, {"predict": "generate complete ( ) that has been called and returns true", "true": "add the buffer ( which contains a fragment ) to the assembler", "bleu": 0.11510518494396255, "rouge": 0.17256011315417258}, {"predict": "flatten a string into an xml serialize r", "true": "flatten a string into an xml serialize r", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to check whether there is a specialized handler for a given intent", "true": "used to check whether there is a specialized handler for a given intent", "bleu": 1.0, "rouge": 1.0}, {"predict": "treat different names for the same name", "true": "treat similar name aliases", "bleu": 0.20556680845025982, "rouge": 0.3824451410658307}, {"predict": "create a new data object", "true": "initializes a new instance to query the data from a specified table using a specified jd bc connection", "bleu": 0.028676835073019998, "rouge": 0.2367399741267788}, {"predict": "stores the stack for the given exception", "true": "stores the stack for the given exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a elf formatter", "true": "returns a elf formatter", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the data at the given url", "true": "reads all the data from the supplied url into a byte array", "bleu": 0.1423172839464222, "rouge": 0.5024711696869852}, {"predict": "checks the current recurrence validity for check time", "true": "checks the current recurrence validity for check time", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new network and get an id", "true": "create a new network and get an id", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new port from the given long", "true": "this static method converts the passed in number of bytes into a <unk> string grouping digits with locale - dependant thousand separator and with \" kb \" locale - dependant unit at the end", "bleu": 0.006881415808024697, "rouge": 0.08567415730337079}, {"predict": "create an intent to create an pending intent from pending intent", "true": "create a pending intent from the stor able fence", "bleu": 0.22416933501922287, "rouge": 0.4073455759599332}, {"predict": "returns true for a static method", "true": "returns true for a static method", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests if string is ok", "true": "test one string operation using the string cache", "bleu": 0.14983220973977976, "rouge": 0.1476997578692494}, {"predict": "writes a char sequence to a file creating the file if it does not exist", "true": "writes a char sequence to a file creating the file if it does not exist", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the given string and replaces all occurrences of ' \\ n ' , ' \\ r ' and ' \\ r \\ n ' with the system line separator", "true": "parses the given string and replaces all occurrences of ' \\ n ' , ' \\ r ' and ' \\ r \\ n ' with the system line separator", "bleu": 1.0, "rouge": 1.0}, {"predict": "decrypt key ( does not use salting , so the encryption result is the same for the same input )", "true": "decrypt key ( does not use salting , so the encryption result is the same for the same input )", "bleu": 1.0, "rouge": 1.0}, {"predict": "produces a configuration with world edit", "true": "adds the given location to be the target for artifacts", "bleu": 0.09536752763778475, "rouge": 0.0}, {"predict": "checks what type of ip range is in ip range", "true": "check to see if the ip address is within the ranges specified range can be in the form of : x", "bleu": 0.05522460104393862, "rouge": 0.18190854870775347}, {"predict": "fills the grid based on positioning the new selection at a specific location", "true": "fills the grid based on positioning the new selection at a specific location", "bleu": 1.0, "rouge": 1.0}, {"predict": "locates a given field anywhere in the class inheritance hierarchy", "true": "locates a given field anywhere in the class inheritance hierarchy", "bleu": 1.0, "rouge": 1.0}, {"predict": "this is called by the nested wrapped line views to determine the break location", "true": "this is called by the nested wrapped line views to determine the break location", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the box to simplex", "true": "returns an object of class simplex defining the same shape", "bleu": 0.11115018927487523, "rouge": 0.12577319587628866}, {"predict": "inject content from j file", "true": "injects the configured content files into the destination file", "bleu": 0.13575914775035755, "rouge": 0.2717149220489978}, {"predict": "check whether char sequence c is empty", "true": "check whether char sequence c is empty", "bleu": 1.0, "rouge": 1.0}, {"predict": "turns a settings string value into a boolean value", "true": "turns a settings string value into a boolean value", "bleu": 1.0, "rouge": 1.0}, {"predict": "notify this object that it has been de registered as a listener with a source for named event", "true": "notify this object that it has been de registered as a listener with a source for named event", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "the code that does the real work of lookup", "true": "the code that does the real work of lookup", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the current instance of this task must be run after at least one task in the task manager queue", "true": "returns true if the current instance of this task must be run after at least one task in the task manager queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate key from data , in the key is unique", "true": "generate a u u id key string", "bleu": 0.13950796967929133, "rouge": 0.24302788844621517}, {"predict": "returns a copy of this vector", "true": "creates a new array that contains all the values of this vector in the appropriate indices", "bleu": 0.0821081667546808, "rouge": 0.3360881542699724}, {"predict": "deletes the given path from the file ' s path and all files that are not be located", "true": "a method that will delete a file or folder only if it is within the ' target ' directory ( for safety )", "bleu": 0.06485693074137376, "rouge": 0.09546165884194052}, {"predict": "parse the content of the given url as a provider - configuration file", "true": "parse the content of the given url as a provider - configuration file", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the pattern field", "true": "initialize the pattern to match files", "bleu": 0.4056114983537769, "rouge": 0.5791139240506329}, {"predict": "fill line with output", "true": "writes a string to a file", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "update ( sw , port ) and update the known list of attachment points", "true": "update the known attachment points", "bleu": 0.195647514979229, "rouge": 0.5754716981132075}, {"predict": "removes part from storage", "true": "removes soft wraps with offsets equal or larger than a given offset from storage", "bleu": 0.041710075933029465, "rouge": 0.3029801324503311}, {"predict": "formats the weighted weave dps that are no weave dps , but no weave dps", "true": "formats given dps ( = damage per second ) to a readable string", "bleu": 0.09103526405546068, "rouge": 0.14472123368920523}, {"predict": "truncates a string to a desired length", "true": "sets the maximum length of the string", "bleu": 0.20556680845025982, "rouge": 0.14285714285714285}, {"predict": "escape a string to create a valid json string", "true": "escape a string to create a valid json string", "bleu": 1.0, "rouge": 1.0}, {"predict": "answers a sorted set of the specified portion of this tree set which contains elements less than the end element", "true": "answers a sorted set of the specified portion of this tree set which contains elements greater or equal to the start element but less than the end element", "bleu": 0.6149525789340045, "rouge": 0.8090185676392573}, {"predict": "this method will checks a new legion and checks if it is identical to the new legion", "true": "method that checks if a legion is <unk>", "bleu": 0.11750296943620289, "rouge": 0.4277699859747546}, {"predict": "indexes the given field of the provided tuple instance", "true": "indexes the given field of the provided tuple instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "iterates from this number down to the given number , inclusive , dec re men ting by one each time", "true": "iterates from this number down to the given number , inclusive , dec re men ting by one each time", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses attributes for the do cue m nt element for this object", "true": "parses attributes of the do cue m nt element for this object", "bleu": 0.7910665071754358, "rouge": 0.9166666666666665}, {"predict": "this method works around the bizarre semantics of buffered input stream ' s read method", "true": "this method works around the bizarre semantics of buffered input stream ' s read method", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts full screen information into a list", "true": "inserts full screen information into a list", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the string from a string", "true": "get an input string corresponding to the given location string", "bleu": 0.13487005099534619, "rouge": 0.23921568627450981}, {"predict": "adds the specified item to the end of the list", "true": "adds the specified item at the end of the array", "bleu": 0.587728372510532, "rouge": 0.8}, {"predict": "copies the information from the param list to perform share param", "true": "copy un managed cifs share into new cifs share a cls", "bleu": 0.11390778025531027, "rouge": 0.09090909090909091}, {"predict": "parse the xml list parser into an xml list", "true": "parse the resource list", "bleu": 0.19960198807747329, "rouge": 0.4959349593495934}, {"predict": "deletes the entitlement to delete a existing user", "true": "deletes all entitlements of a existing user", "bleu": 0.3155984539112945, "rouge": 0.5398230088495575}, {"predict": "this method incorporates the signed properties object", "true": "creates the signed properties dom object element", "bleu": 0.3655552228545123, "rouge": 0.5714285714285714}, {"predict": "creates the channel selection object", "true": "creates the channel selection object", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute the mean of all elements in the array with given indices", "true": "compute the mean of all elements in the array with given indices", "bleu": 1.0, "rouge": 1.0}, {"predict": "setup with the test environment", "true": "setup and run a test", "bleu": 0.3021375397356768, "rouge": 0.4}, {"predict": "import text from file", "true": "import text from file", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns list of file cos ids", "true": "returns list of file cos ids", "bleu": 1.0, "rouge": 1.0}, {"predict": "start the monitor task", "true": "adds a monitor task to the queue", "bleu": 0.24002491458061356, "rouge": 0.346590909090909}, {"predict": "invoked this to insert new child at location index in parents children", "true": "invoked this to insert new child at location index in parents children", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the probe ' s next sample", "true": "return the probe ' s next sample", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the given lines to a file", "true": "writes the lines given in input in file", "bleu": 0.25201472805660513, "rouge": 0.5269978401727862}, {"predict": "verifies the specified authentication tag is valid without the file", "true": "verifies if the given chunk authentication tag equals the one in the authentication tag list , but does not verify if the complete list of all authentication tags is valid w", "bleu": 0.028731156186720633, "rouge": 0.26793557833089315}, {"predict": "returns the mime type for the given extension", "true": "returns the mime type for the given extension", "bleu": 1.0, "rouge": 1.0}, {"predict": "update the cache with this binder", "true": "update the cache with this binder", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove new line character from string", "true": "removes new line characters ( useful for base 64 decoding )", "bleu": 0.12634437832866913, "rouge": 0.2234432234432234}, {"predict": "parse the apache camel route file", "true": "parse the spring integration route file and return dom document", "bleu": 0.1876823093652809, "rouge": 0.47843137254901963}, {"predict": "remove a d ted directory handler for the d ted frame cache", "true": "remove a d ted directory handler from the list used for the d ted frame cache", "bleu": 0.6099229828365414, "rouge": 0.8356164383561644}, {"predict": "adds an entry to the request", "true": "add a file to the binary package", "bleu": 0.24608524656663955, "rouge": 0.3034825870646766}, {"predict": "writes the entire contents of this byte stream to the specified output stream", "true": "writes the entire contents of this byte stream to the specified output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "read from input to establish our buffer of \" parse ahead \" look ahead symbols", "true": "read from input to establish our buffer of \" parse ahead \" look ahead symbols", "bleu": 1.0, "rouge": 1.0}, {"predict": "splits this variable into its children ( sets using the children var bind able ) , in the order that they are bound", "true": "this method creates a new vector which does not contain the first element up to the specified limit", "bleu": 0.06293173924458136, "rouge": 0.14963205233033525}, {"predict": "writes the header for persons csv file", "true": "writes the header for zones csv file", "bleu": 0.5946035575013605, "rouge": 0.8571428571428571}, {"predict": "called when the view navigates", "true": "called when the view navigates", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a task to the task queue", "true": "delay task to be executed after refresh", "bleu": 0.24446151121745047, "rouge": 0.2857142857142857}, {"predict": "replace all occurrences of the regular expression with the replacement", "true": "replace all occurrences of the regular expression with the replacement", "bleu": 1.0, "rouge": 1.0}, {"predict": "needed for needed to a vector", "true": "migrates entities and skips those which are already migrated", "bleu": 0.1126634218241493, "rouge": 0.0}, {"predict": "adds entries to the passed in map , using the supplied app name as the key", "true": "adds entries to the passed in map , using the supplied app name as the key", "bleu": 1.0, "rouge": 1.0}, {"predict": "start housekeeping for a child thread managed by the launcher ' s housekeeping , but not spawned by the launcher itself , e", "true": "start housekeeping for a child thread managed by the launcher ' s housekeeping , but not spawned by the launcher itself , e", "bleu": 1.0, "rouge": 1.0}, {"predict": "the graphical representation of the labels on the x axis", "true": "the graphical representation of the labels on the x axis", "bleu": 1.0, "rouge": 1.0}, {"predict": "base 64 - encode the given byte array as a string", "true": "base 64 - encode the given byte array to a string", "bleu": 0.7691605673134586, "rouge": 0.9090909090909091}, {"predict": "decode the base 64 - encoded data in input and return the data in a new byte array", "true": "decode the base 64 - encoded data in input and return the data in a new byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns whether the specified object equals to this finite field", "true": "returns whether the specified object equals to this finite field", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a cubic be record to the specified region", "true": "the in t will be in the form : chunk x , chunk z , pos 1 x , pos 1 z , pos 2 x , pos 2 z , is edge and will represent the bottom and top parts of the chunk", "bleu": 0.0031970519577983548, "rouge": 0.06744057490326147}, {"predict": "factory method that creates only serialize r", "true": "creates new serialize r with configuration from this builder", "bleu": 0.19740631366145517, "rouge": 0.3667334669338677}, {"predict": "new nio based method to load the contents of the given input stream as byte array", "true": "loads a binary file from the input stream", "bleu": 0.10878661088699644, "rouge": 0.2659883720930233}, {"predict": "returns whether or not the given class node is a power - slot , false otherwise", "true": "returns true for long and double", "bleu": 0.07692375026049747, "rouge": 0.09902597402597402}, {"predict": "specifies the list of sections to be send", "true": "you can add sections to filter the input specification , so living doc will only execute the specified sections", "bleu": 0.05734190771186066, "rouge": 0.13800904977375564}, {"predict": "consumes cr lf & quo t ;", "true": "consumes a cr lf from the request", "bleu": 0.2626909894424158, "rouge": 0.42857142857142855}, {"predict": "process the log out request from the log out and returns the session", "true": "process log out request return the session found or throw sam l service exception", "bleu": 0.20345970436499217, "rouge": 0.4414957780458384}, {"predict": "override the equals method", "true": "override the equals method", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes the consumer task", "true": "consume a file", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "adds multivalued option to arguments", "true": "adds multivalued option to arguments", "bleu": 1.0, "rouge": 1.0}, {"predict": "or for two negative numbers ; the first is shorter", "true": "or for two negative numbers ; the first is shorter", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if activity is activity", "true": "ensures that our weak reference to the activity is still valid", "bleu": 0.10822031883953476, "rouge": 0.2341650671785029}, {"predict": "start the timer", "true": "starts the timer", "bleu": 0.7071067811865475, "rouge": 0.6666666666666666}, {"predict": "checks if , if at least one page , and returns true if given url is landing one", "true": "calculates whether the url is a landing page or not", "bleu": 0.101824256461955, "rouge": 0.2259259259259259}, {"predict": "write functionality test 2 : write metadata for the file char buffer", "true": "writes the index row count definitions into a table definition buffer", "bleu": 0.11498759556447223, "rouge": 0.17528735632183906}, {"predict": "send a string to the multi cast address", "true": "send a string using udp to an already specified remote address", "bleu": 0.2270229421855783, "rouge": 0.511744966442953}, {"predict": "initialize the internal token", "true": "initialize r , startup the background expired token deletion thread and key updater thread ( no op unless multi v dc )", "bleu": 0.004746729874891682, "rouge": 0.20515695067264575}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of the certificate", "true": "renders a string representation of this object", "bleu": 0.5169731539571706, "rouge": 0.5714285714285714}, {"predict": "does the work of getting the path", "true": "does the work of getting the path", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate an array of spanned items representing the history of this connection", "true": "generate an array of spanned items representing the history of this connection", "bleu": 1.0, "rouge": 1.0}, {"predict": "sign the input content using the specified key", "true": "signs the global configuration directory content", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "returns true if the next item is up to the next item", "true": "requires the next few characters ( after whitespace ) to match the argument", "bleu": 0.14294845713017917, "rouge": 0.31770833333333337}, {"predict": "convenience method to de - serialize a byte array back into object of specified class loader", "true": "convenience method to de - serialize a byte array back into an object who ' s class type is resolved by the specific class loader", "bleu": 0.41580629301844946, "rouge": 0.6569230769230769}, {"predict": "create interval i mpl for a class", "true": "this is used to build partial intervals", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "check whether a map contains a key - value pairs", "true": "returns true if the dictionary contains true for the given key or false if no value is defined for the key", "bleu": 0.049901060151857274, "rouge": 0.18190854870775347}, {"predict": "bind the specified stream to the current thread", "true": "bind the specified stream to the current thread", "bleu": 1.0, "rouge": 1.0}, {"predict": "in it method load the map layer , let the map layer", "true": "in it map image layer", "bleu": 0.15537125692760353, "rouge": 0.5083333333333333}, {"predict": "sample in a new amount of new instances", "true": "returns the sample skew of a data sequence", "bleu": 0.19070828081828378, "rouge": 0.25}, {"predict": "evolves the specified permutations using the pm x operator", "true": "evolves the specified permutations using the pm x operator", "bleu": 1.0, "rouge": 1.0}, {"predict": "extracts span of the span s to the matched span", "true": "helper function for upload new ner task 2 : extract certain token spans from the html token spans that the crowd flower job task 1 uses to display a text fragment", "bleu": 0.01835757412252778, "rouge": 0.08931185944363104}, {"predict": "this method is called by the loader manager , but body the data mock append to be called by the event", "true": "cleans up when the chain finishes ( possibly early )", "bleu": 0.05809665204409193, "rouge": 0.06892655367231638}, {"predict": "return true if delay exists", "true": "return true if delay exists", "bleu": 1.0, "rouge": 1.0}, {"predict": "push boolean value on to the space preserve stack depending on the value of xml : space = default / preserve", "true": "push boolean value on to the space preserve stack depending on the value of xml : space = default / preserve", "bleu": 1.0, "rouge": 1.0}, {"predict": "register the default device types for default updates", "true": "registers a <unk> - used set of device services with discovery manager", "bleu": 0.09726684100532913, "rouge": 0.09651898734177215}, {"predict": "construct a new input stream reader with the given detail stream", "true": "create an input stream reader that uses the named character encoding", "bleu": 0.22416933501922287, "rouge": 0.36363636363636365}, {"predict": "notification that the message has not delivered to the given value", "true": "the consumer object from the broker or the key used to store the sender", "bleu": 0.10312570678516415, "rouge": 0.2349165596919127}, {"predict": "decode a message from an http message", "true": "return a string representation of a decoded c bus message", "bleu": 0.13391424795650428, "rouge": 0.22803738317757008}, {"predict": "compute an example with random classes", "true": "classify example with maximum vote the following way", "bleu": 0.20830666398386113, "rouge": 0.2785388127853881}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a hash code for this object", "true": "the hash code for all sun hints", "bleu": 0.345720784641941, "rouge": 0.42857142857142855}, {"predict": "returns a deep copy of this iterator", "true": "returns a deep copy of this iterator", "bleu": 1.0, "rouge": 1.0}, {"predict": "return true if the key chain contains a private key", "true": "this method is here because there is no equals on ec key", "bleu": 0.10320893749383378, "rouge": 0.08944281524926685}, {"predict": "takes a byte array and returns the signature array", "true": "adds a copy of the given byte array as a data element ( i", "bleu": 0.12109261383365659, "rouge": 0.2510288065843621}, {"predict": "sets the rotation angle , in radians , of all 2 d rotation planes added to this builder", "true": "sets the rotation angle , in radians , of all 2 d rotation planes added to this builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the user group to the specified configuration files", "true": "this method writes a user registry xml", "bleu": 0.15619699684601276, "rouge": 0.2557651991614256}, {"predict": "converts the specified double to its string representation", "true": "converts the specified double to its string representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "see specification gb t 18284 - 2000", "true": "see specification gb t 18284 - 2000", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a record representing a start request", "true": "sugar method to creates a record for this type", "bleu": 0.2598013194025897, "rouge": 0.3667334669338677}, {"predict": "creates a new user load", "true": "initializes a new stopwatch", "bleu": 0.35930411196308426, "rouge": 0.4535315985130111}, {"predict": "look up a record of a mary request producing data of output type audio into the cache", "true": "carry out a lookup in the cache with the given parameters , for a request with output type audio", "bleu": 0.15731005706493884, "rouge": 0.33002705139765554}, {"predict": "adds a new condition", "true": "will add the condition to the list", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "read the byte value of the buffer from the buffer", "true": "reads the remaining bytes in a byte buffer into a byte", "bleu": 0.13564514503163538, "rouge": 0.28328173374613}, {"predict": "peek into", "true": "peek into", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints msg and exception to system", "true": "prints msg and exception to system", "bleu": 1.0, "rouge": 1.0}, {"predict": "fetches the rp mirror object to find the rp v plex protection protection", "true": "fetch the rp protected target virtual pool uris", "bleu": 0.12571192676522522, "rouge": 0.19902120717781402}, {"predict": "creates a ns data object from a file", "true": "creates a ns data object from a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the cardinality ( number of set bits ) low - endian layout", "true": "compute the number of bits set to 1", "bleu": 0.14949751774990683, "rouge": 0.39804241435562804}, {"predict": "remove literal values from string or just as if it was mine", "true": "de - escapes a literal", "bleu": 0.10390302174233558, "rouge": 0.12708333333333333}, {"predict": "get the real uri from the cookie \" domain \" and \" path \" attributes , if they are not set then uses the uri provided ( coming from the response )", "true": "get the real uri from the cookie \" domain \" and \" path \" attributes , if they are not set then uses the uri provided ( coming from the response )", "bleu": 1.0, "rouge": 1.0}, {"predict": "send an info log message", "true": "send an info log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "add not null entry to list", "true": "add not null entry to list", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d key store type dialog", "true": "creates a new d new key store type dialog", "bleu": 0.6598203338556885, "rouge": 0.931297709923664}, {"predict": "pretty printing accumulator function for longs", "true": "pretty printing accumulator function for longs", "bleu": 1.0, "rouge": 1.0}, {"predict": "replace substring s of one string with another string and return altered string", "true": "replace substring s of one string with another string and return altered string", "bleu": 1.0, "rouge": 1.0}, {"predict": "get test data set object * tests", "true": "helper method for * set object * tests", "bleu": 0.44815260192961937, "rouge": 0.5269978401727862}, {"predict": "removes an event listener", "true": "un registers an event listener", "bleu": 0.5208154731870476, "rouge": 0.6535714285714286}, {"predict": "simple api for starting config s , stream will cause their logging messages for a v pool", "true": "this method is an infinite loop that periodically checks if there are any new messages in the job coordinator stream , and reads them if they exist", "bleu": 0.04770506462205063, "rouge": 0.04366499642090193}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method deals with the fact , that the decoding process doesn ' t always yield a single most likely value", "true": "this method deals with the fact , that the decoding process doesn ' t always yield a single most likely value", "bleu": 1.0, "rouge": 1.0}, {"predict": "read object is called to restore the state of the property permission from a stream", "true": "read object is called to restore the state of the service permission from a stream", "bleu": 0.8153551038173115, "rouge": 0.9333333333333336}, {"predict": "gets the block index for a sources in the api index", "true": "gets the index of the p red block associated with the register spec at the particular get sources ( ) index", "bleu": 0.07718141210688395, "rouge": 0.29582929194956353}, {"predict": "constructs a lockable file writer with a file encoding", "true": "constructs a lockable file writer with a file encoding", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends a program description without implicit wrapping a program", "true": "append the description text for this program , if one exists", "bleu": 0.12507277759788113, "rouge": 0.19645732689210954}, {"predict": "decodes data from base 64 notation , automatically detecting gzip - compressed data and decompressing it", "true": "decodes data from base 64 notation , automatically detecting gzip - compressed data and decompressing it", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the url for the file", "true": "makes a url out of a location , as either a file or a resource", "bleu": 0.054546736148076896, "rouge": 0.17681159420289855}, {"predict": "parse an attribute value ( name = / / www", "true": "<unk> a string into a value", "bleu": 0.12605968092174913, "rouge": 0.13090128755364808}, {"predict": "a locale independent version of to uppercase", "true": "a locale independent version of to uppercase", "bleu": 1.0, "rouge": 1.0}, {"predict": "write data - - output this mod bus message to d out", "true": "write data - - output the completed mod bus message to d out", "bleu": 0.7003015589741095, "rouge": 0.8736979166666665}, {"predict": "update the environment variables for every environment variable in environment variable list", "true": "update the environment variables", "bleu": 0.2891784933232571, "rouge": 0.5495495495495495}, {"predict": "creates a new character class for each character of the specified string", "true": "creates a new character class for each character of the specified string", "bleu": 1.0, "rouge": 1.0}, {"predict": "notifies this objects that the time has been time to the bucket", "true": "this notifies all wan sites about updated timestamp on local site", "bleu": 0.11498759556447223, "rouge": 0.08764367816091953}, {"predict": "returns a new token in the pattern , starting at the specified position", "true": "returns the next occurrence of the regular expression , stepping forward the token ize r to the next line", "bleu": 0.07923788515260259, "rouge": 0.2418235877106045}, {"predict": "remove a service node from the node list", "true": "remove a service node from the node list", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the string representation of this object as a string", "true": "return a copy of the result as a string", "bleu": 0.25965358893403384, "rouge": 0.42508710801393734}, {"predict": "initializes this static object with the context of the calling activity", "true": "initializes this static object with the context of the calling activity", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a content items", "true": "adds a content item", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "writes the underlying url to the underlying socket", "true": "executes a web socket handshake", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "sets the minimum and deals with the given min value", "true": "sets the minimum and deals with the - 1 initialization !", "bleu": 0.6140681563901048, "rouge": 0.6609907120743034}, {"predict": "checks best byte or returns the best read - task closure , if the given task is reached", "true": "emits any <unk> ally available blocks", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "rotate theta degrees about the x axis", "true": "rotate theta degrees about the x axis", "bleu": 1.0, "rouge": 1.0}, {"predict": "scale the rectangle ' s circle on center ( n , or par for the center of the circle ' s circle radius n ' s bounding box , then it", "true": "scales a rect about its centro id", "bleu": 0.03280894525012139, "rouge": 0.0}, {"predict": "returns a unprintable char handler parsed from the given index code strings", "true": "returns a unprintable ext char handler parsed from the given index code strings", "bleu": 0.7831566121841202, "rouge": 0.9531250000000002}, {"predict": "determines the height of this view", "true": "determines the height of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether this id is null ( or matches the id or null", "true": "checks if the id is null ( or matches the null uri )", "bleu": 0.5622008276590377, "rouge": 0.6923076923076923}, {"predict": "update the pending list", "true": "check if there are pending downloads and if so move the top one up to the active list", "bleu": 0.012902949563521738, "rouge": 0.16310160427807485}, {"predict": "limit a value range", "true": "limit number within a values range", "bleu": 0.25916266987614406, "rouge": 0.5791139240506329}, {"predict": "creates and displays the title", "true": "creates and displays the title", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines if the network is connected and is connected to the network", "true": "according to the different type of network to determine whether the network connection", "bleu": 0.16557608079290168, "rouge": 0.39713541666666663}, {"predict": "delete an item", "true": "delete an item by position", "bleu": 0.513417119032592, "rouge": 0.7176470588235294}, {"predict": "this method will calculate the linear channel for the two cases where the two is drawn at the channel , we are the bi - 1", "true": "converts the color channel value according to the of <unk> within the distance", "bleu": 0.058697608930387266, "rouge": 0.2182468694096601}, {"predict": "apply matrix to handle the image inside the image view", "true": "apply matrix to handle the image inside the image view", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a listener to be notified when startup is complete", "true": "add a listener to be notified when startup is complete", "bleu": 1.0, "rouge": 1.0}, {"predict": "quietly closes given resource ignoring possible checked exception", "true": "quietly closes given resource ignoring possible checked exceptions", "bleu": 0.8633400213704505, "rouge": 0.875}, {"predict": "runs any thread files", "true": "start creating the optimized file", "bleu": 0.23530495254141282, "rouge": 0.0}, {"predict": "creates a des encryption key from the given key material", "true": "creates a des encryption key from the given key material", "bleu": 1.0, "rouge": 1.0}, {"predict": "see iso 16022 : 2006 , 5", "true": "see iso 16022 : 2006 , 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks that the given string is a valid type descriptor", "true": "checks that the given string is a valid type descriptor", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new javascript output code to be included in the javascript output code", "true": "this exists solely so that the web ide can override it and use a different js output", "bleu": 0.0848429813968517, "rouge": 0.12681912681912683}, {"predict": "reasonable method to provide a string", "true": "gets the combined text contents of each element in the set of matched elements , including their descendants", "bleu": 0.02513860735449254, "rouge": 0.0}, {"predict": "scans a symbol expression", "true": "scans the x pointer expression", "bleu": 0.3096787331587729, "rouge": 0.43571428571428567}, {"predict": "adds an output line to a output file", "true": "adds a line from the smap", "bleu": 0.19070828081828378, "rouge": 0.2932692307692307}, {"predict": "construct a new string from the given string buffer", "true": "creates a string from the contents of a string buffer", "bleu": 0.29052561567528307, "rouge": 0.6256410256410255}, {"predict": "size of the set", "true": "return the number of signers in the collection", "bleu": 0.14628187563941414, "rouge": 0.31443298969072164}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "methods for starting asynchronous execution", "true": "methods for starting asynchronous execution", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the range of the y - values in the specified data set for the specified data set", "true": "returns the range of x - values in the specified data set for the data items belonging to the visible series", "bleu": 0.5395934108862263, "rouge": 0.7081260364842454}, {"predict": "checks if the under services are related", "true": "checks for compliance related attributes if applicable", "bleu": 0.22089591134157885, "rouge": 0.2857142857142857}, {"predict": "updates zoning information for the zoning map", "true": "set mask zoning map", "bleu": 0.24446151121745047, "rouge": 0.3824451410658307}, {"predict": "wait the invitation invitation", "true": "wait session invitation answer", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "moves the range in the table", "true": "called to move within the selected range of the given j table", "bleu": 0.10218289380194193, "rouge": 0.41924398625429554}, {"predict": "computes the x - dimensional array of the variables ( x and the values ) function which are the estimated transformation ( must be the arrays", "true": "constructs the x ( t ) vector", "bleu": 0.06980361417366379, "rouge": 0.270509977827051}, {"predict": "read stream as binary", "true": "read stream as binary st l", "bleu": 0.6065306597126334, "rouge": 0.7721518987341772}, {"predict": "get the number of components of this identifier", "true": "returns the number of components that are stored in this container", "bleu": 0.32105892380868783, "rouge": 0.511744966442953}, {"predict": "round ( big decimal , math context ) when precision = 0", "true": "round ( big decimal , math context ) when precision = 0", "bleu": 1.0, "rouge": 1.0}, {"predict": "normalizes the given roman numeral words of the integer value", "true": "eliminate below less frequency n - grams and noise latin <unk>", "bleu": 0.0959156018869021, "rouge": 0.0}, {"predict": "returns the string representation of this vector", "true": "returns the string representation of this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the public key selector for this type", "true": "translates a string into a token endpoint au th method type", "bleu": 0.11021777041988566, "rouge": 0.10234899328859062}, {"predict": "generate the internal sorted hash map for tags", "true": "generate the internal sorted hash map for tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "set the geo object", "true": "utility method that iterates over a shape object and prints out the points", "bleu": 0.041910459064397936, "rouge": 0.1073943661971831}, {"predict": "modify the shorten string representing a fully qualified class name", "true": "shorten the class name", "bleu": 0.18850319022747347, "rouge": 0.4644670050761421}, {"predict": "adds a graphic to the overlay", "true": "adds a graphic to the overlay", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the string representation", "true": "returns the string representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "attempts to flip the native flip operation for the given target component", "true": "performs the native gl x flip operation for the given target component", "bleu": 0.6115380576901023, "rouge": 0.75}, {"predict": "add property as a property of property and returns true if this property is a property of a property", "true": "add \" on property p \" information , and tell p to point back here", "bleu": 0.07658412276041004, "rouge": 0.18029556650246306}, {"predict": "initial is e google analytics immediately so it will catch all sorts of errors prior to easy tracker on start", "true": "initial is e google analytics immediately so it will catch all sorts of errors prior to easy tracker on start", "bleu": 1.0, "rouge": 1.0}, {"predict": "you should not be called in order to indicate that you should back the last longer in polar ( you )", "true": "called when the user moves", "bleu": 0.06429451441231726, "rouge": 0.17304964539007092}, {"predict": "instantiate s a new service id", "true": "reads in 16 bytes in standard network byte order", "bleu": 0.1126634218241493, "rouge": 0.0}, {"predict": "call this method when the enter element has been received", "true": "called by the generated handler code when an enter element event is consumed", "bleu": 0.13964659797714432, "rouge": 0.25487465181058494}, {"predict": "adds a finally clause for e arch return statement", "true": "adds a finally clause for e arch return statement", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next xml meta token", "true": "returns the next xml meta token", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if we ' ve crossed a reasonable touch slop for the given child view", "true": "check if we ' ve crossed a reasonable touch slop for the given child view", "bleu": 1.0, "rouge": 1.0}, {"predict": "encode a list into json text and write it to out", "true": "encode a list into json text and write it to out", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads color table as 256 rgb integer values", "true": "reads color table as 256 rgb integer values", "bleu": 1.0, "rouge": 1.0}, {"predict": "update the last modified time", "true": "update the last modified time", "bleu": 1.0, "rouge": 1.0}, {"predict": "push an import href on to the stylesheet stack", "true": "push an import href on to the stylesheet stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "given a key store and key store it in sync key", "true": "based on a public certificate , private key , alias and password , this method will load the certificate and private key as an entry into the key store , and it will set the provided alias and password to the key store entry", "bleu": 0.010870596737213772, "rouge": 0.2296933835395374}, {"predict": "determine if the file needs to be loaded", "true": "returns true if the given indicator file needs to be reloaded", "bleu": 0.35281654783844574, "rouge": 0.6140939597315436}, {"predict": "draws the chart legend", "true": "draws the chart legend", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the given data source", "true": "parses repository definition", "bleu": 0.2730120862709067, "rouge": 0.26180257510729615}, {"predict": "disables the control buttons and initialize the session \" command \"", "true": "disables all buttons in the interface", "bleu": 0.1354599427337814, "rouge": 0.3727087576374745}, {"predict": "recursion over string and do not information", "true": "recursive", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "this method allows to write the given string to the output", "true": "writes the given string to android log cat", "bleu": 0.317023313852343, "rouge": 0.433392539964476}, {"predict": "add a switch port to the quarantine queue", "true": "add a switch port to the quarantine queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will be used to sort the sort index inverted array", "true": "the method prepares the sort index and sort index inverted data", "bleu": 0.2645090286325669, "rouge": 0.43821839080459773}, {"predict": "adds given feature to given source node", "true": "add one geo json feature to this <unk> point set from a jackson node tree", "bleu": 0.0837738790831083, "rouge": 0.2559440559440559}, {"predict": "initialize a bit string with a single value", "true": "initial is es the bit string from a character string of 1 s and 0 s in big - endian order", "bleu": 0.044657922628805316, "rouge": 0.1914225941422594}, {"predict": "sorts the individuals in this population using the given comparator", "true": "sorts the individuals in ascending order according to their performance , thus the best one will be in last position", "bleu": 0.13508740085185458, "rouge": 0.31443298969072164}, {"predict": "writes the contents of this text to the specified writer", "true": "writes the current dom document into the given writer", "bleu": 0.18850319022747347, "rouge": 0.42508710801393734}, {"predict": "sets executor to executors", "true": "sets executor to executors", "bleu": 1.0, "rouge": 1.0}, {"predict": "check whether the specified method is handle a c method that is supposed to be renamed", "true": "determine whether the given method is a c glib ' renamed ' method , following the pattern \" c glib $ method name $ 0 \"", "bleu": 0.08480950419957618, "rouge": 0.3196107784431137}, {"predict": "creates a password reset exception object", "true": "creates a password reset exception object with local iz able error message", "bleu": 0.36787944117144233, "rouge": 0.6288659793814433}, {"predict": "returns a new array of the union over string arrays", "true": "returns a union of 2 arrays , ensuring that each string exists only once", "bleu": 0.1374462580533874, "rouge": 0.32360742705570295}, {"predict": "tries to check if the state of the board state has changed from inputs ( and non - negative ) to window states", "true": "\\ notice window state change when wm changes a property on the window", "bleu": 0.06293173924458136, "rouge": 0.1754554170661553}, {"predict": "this method generates a method and return the members of the given dtm iterator", "true": "the here function returns a node - set containing the attribute or processing instruction node or the parent element of the text node that directly <unk> the x path expression", "bleu": 0.042152901724165276, "rouge": 0.17062937062937064}, {"predict": "returns the largest ( \" top \" ) n values in the column", "true": "returns the largest ( \" top \" ) n values in the column", "bleu": 1.0, "rouge": 1.0}, {"predict": "grab the method from the signature", "true": "grab the class from the signature", "bleu": 0.488923022434901, "rouge": 0.8333333333333334}, {"predict": "creates a time series set of dependency values", "true": "create a metric delta set for tagged metrics and initialize it with the given collection", "bleu": 0.0739821920909478, "rouge": 0.16486486486486487}, {"predict": "returns the number of nodes in this node", "true": "returns the number of nodes in this model ' s nodelist", "bleu": 0.5933643406390795, "rouge": 0.716442953020134}, {"predict": "returns the next element", "true": "returns the next element", "bleu": 1.0, "rouge": 1.0}, {"predict": "escapes bytes in the provided byte string", "true": "return a new byte string with bytes 0 x 00 , 0 x 01 and 0 x <unk> escaped", "bleu": 0.047308627669118, "rouge": 0.14202561117578577}, {"predict": "repeat all input times", "true": "repeat the current input list", "bleu": 0.3096787331587729, "rouge": 0.43571428571428567}, {"predict": "replaces all occurrences of several class names in the class file", "true": "replaces all occurrences of several class names in the class file", "bleu": 1.0, "rouge": 1.0}, {"predict": "return to server current page request", "true": "called on request from the ui to return to the previous page", "bleu": 0.12151662434083678, "rouge": 0.31443298969072164}, {"predict": "constructs the exception with the given throw able as a cause and source of error message", "true": "constructs a new exception with the given cause , copying the message from the cause into this instance", "bleu": 0.22468234632303136, "rouge": 0.40744274809160297}, {"predict": "return the euclidean distance between this cluster and another", "true": "the \" size \" of the line from 0 , 0 to x , y", "bleu": 0.07246365075155338, "rouge": 0.07973856209150328}, {"predict": "called when the test should be done , and if so , the test suite should be done", "true": "called by parent when adb session is complete", "bleu": 0.07535838128770536, "rouge": 0.16531165311653115}, {"predict": "returns the authorization challenges appropriate for this response ' s code", "true": "returns the authorization challenges appropriate for this response ' s code", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the given session to bytes", "true": "converts the given session to bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new instance of nio replacement with the same time", "true": "creates a new random number generator", "bleu": 0.21200626759025185, "rouge": 0.3727087576374745}, {"predict": "verify that the given certificate is valid", "true": "internal method to verify the timestamp on a certificate", "bleu": 0.16599826150636804, "rouge": 0.3667334669338677}, {"predict": "stage one password hashing used in mysql 4", "true": "encrypts a password protocol for authentication is like this : 1", "bleu": 0.11021777041988566, "rouge": 0.10234899328859062}, {"predict": "reads the contents of an input stream into a byte", "true": "reads the contents of an input stream into a byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads an array of bytes to a string", "true": "a byte array into its hex string representation", "bleu": 0.19070828081828378, "rouge": 0.25}, {"predict": "wrap a proto in a checked message and compute the checksum", "true": "wrap a proto in a checked message and compute the checksum", "bleu": 1.0, "rouge": 1.0}, {"predict": "reduce space , this is intended to know the scale of the view ' s dimensions", "true": "if necessary , reduce this image to within ' width ' x ' height ' dimensions", "bleu": 0.10521495173810227, "rouge": 0.3125}, {"predict": "install a sound defined by the user", "true": "installs a replacement sound as the built in sound responsible for the given sound identifier ( this will override the system sound if such a sound exists )", "bleu": 0.013078614250991381, "rouge": 0.15469146238377007}, {"predict": "count of { table } for complex condition", "true": "returns the number of all pages that contain a template the name of which starts with any of the the given strings", "bleu": 0.027867416523464233, "rouge": 0.06149193548387097}, {"predict": "get the encoding value a glyph given its name and a name", "true": "get the encoding value of a glyph given its name and a char set", "bleu": 0.6443085378903369, "rouge": 0.8345771144278606}, {"predict": "transform source bitmap to targeted width and height", "true": "transform source bitmap to targeted width and height", "bleu": 1.0, "rouge": 1.0}, {"predict": "score each track for a track", "true": "scores a collection of track results", "bleu": 0.24446151121745047, "rouge": 0.3333333333333333}, {"predict": "returns a random time in the current time", "true": "returns a current time seconds from epoch", "bleu": 0.2653856085536222, "rouge": 0.5398230088495575}, {"predict": "send a verbose log message", "true": "send a verbose log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes in t as a byte array", "true": "sugar encodes a single point as a byte array", "bleu": 0.40661103887968814, "rouge": 0.6112224448897796}, {"predict": "stores long value with volatile semantic", "true": "stores long value with volatile semantic", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs commands and return output", "true": "runs commands as root ( if available ) and return output", "bleu": 0.1820041563395576, "rouge": 0.5854126679462572}, {"predict": "draws a circle of radius r , centered on ( x , y )", "true": "draws a circle of radius r , centered on ( x , y )", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints a double followed by a newline", "true": "prints a double followed by a newline", "bleu": 1.0, "rouge": 1.0}, {"predict": "write a value", "true": "write a 32 bit signed value", "bleu": 0.27952792741962756, "rouge": 0.6288659793814433}, {"predict": "maps the map to the string builder", "true": "checks each character and replaces it with its mapping", "bleu": 0.11737849637633067, "rouge": 0.0}, {"predict": "add a button press to list", "true": "adds the button pressed listener", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "dispose of object , releasing resources", "true": "dispose of object , releasing resources", "bleu": 1.0, "rouge": 1.0}, {"predict": "fills the attribute with the given index", "true": "adds an attribute to the xml attributes object", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "create a j component", "true": "creates a j component with the properties to be changed", "bleu": 0.14921613134709885, "rouge": 0.3978260869565217}, {"predict": "copies all bytes from the input file to the output stream", "true": "copies the given file to the output stream <unk> , i", "bleu": 0.44833867003844585, "rouge": 0.6363636363636364}, {"predict": "de serialize a k db k and attach a k db", "true": "de serialize a header from a source into the supplied k db header", "bleu": 0.2184641923320139, "rouge": 0.4925975773889637}, {"predict": "transforms an output to the given output", "true": "transform the annotations on the given annotated declaration for inclusion on the given target element type", "bleu": 0.06758212955973163, "rouge": 0.16245006657789615}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "are all currently denied permissions currently being granted ?", "true": "returns whether the user has granted all the requested permission", "bleu": 0.1397712139461423, "rouge": 0.10427350427350426}, {"predict": "fetches a char set from cache ( if present )", "true": "fetches the char set to be used for any given locale from cache", "bleu": 0.16175156313901892, "rouge": 0.42479108635097496}, {"predict": "paints a portion of a highlight", "true": "paints a portion of a highlight", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a control to the psr list", "true": "adds a pending control roll to the list for this phase", "bleu": 0.18882488456859065, "rouge": 0.6409807355516637}, {"predict": "adds the contents from the specified source to the list of documents", "true": "processes the given add - on changes", "bleu": 0.10390302174233558, "rouge": 0.11050724637681159}, {"predict": "re calculate the derived color from the ui manager parent color and offsets", "true": "re calculate the derived color from the ui manager parent color and offsets", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns string representation of oid", "true": "returns string representation of oid", "bleu": 1.0, "rouge": 1.0}, {"predict": "grows the size of the stack", "true": "grows the size of the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "called when the thread has idle", "true": "called by the thread before going into the idle state", "bleu": 0.16959011078459055, "rouge": 0.47843137254901963}, {"predict": "adds a cached span to the in - memory representation", "true": "adds a cached span to the in - memory representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the target object is equivalent to this object", "true": "compares this name with another , for equality", "bleu": 0.11390778025531027, "rouge": 0.108348134991119}, {"predict": "clears all child layers", "true": "request repainting of all the child panels", "bleu": 0.1878296463217631, "rouge": 0.346590909090909}, {"predict": "validates a dns name for format", "true": "validates a dns name for format", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a comment and returns its comment", "true": "reads the first comment line from the input , and returns the comment line ( including the line break character ) without the leading \" # \"", "bleu": 0.016696545073392955, "rouge": 0.2659110723626853}, {"predict": "find the characters in the specified string", "true": "finds the first occurrence of the separator character ignoring the escaped separators starting from the index", "bleu": 0.056829570481990416, "rouge": 0.16245006657789615}, {"predict": "internal method used to guess which content if it ' s content -", "true": "guess a content type from the url", "bleu": 0.10571070857151538, "rouge": 0.21143847487001732}, {"predict": "used for testing - input a text header to a csv line", "true": "used for testing - - input is a full csv line :", "bleu": 0.3706866381788037, "rouge": 0.6666666666666666}, {"predict": "connect to the web server", "true": "connects to the currently configured system", "bleu": 0.2941733261715515, "rouge": 0.3577712609970674}, {"predict": "handles the header of the cache header", "true": "sets http response cache validator headers appropriately and validates the http request against these using any conditional request headers", "bleu": 0.03702100183468252, "rouge": 0.07101280558789289}, {"predict": "show an active iv r zone set , since the off r zone has no one or able", "true": "collect the active iv r zone set , and its zones , members", "bleu": 0.3187271473320672, "rouge": 0.3986928104575163}, {"predict": "returns an empty immutable array , or null if empty", "true": "get an empty immutable array", "bleu": 0.35084396956386854, "rouge": 0.5674418604651164}, {"predict": "modify a definite node with non - empty nodes", "true": "the new ordered list of non - optional non - minus nodes", "bleu": 0.1430210741102858, "rouge": 0.2785388127853881}, {"predict": "returns a string representation of the provided bytes", "true": "returns a string description of an accountable and any nested resources", "bleu": 0.21690743377623947, "rouge": 0.4093959731543625}, {"predict": "returns a hash code for this attribute", "true": "returns a hash code for this node", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "deletes type vertex for an instance of type represented by their indices vertex d", "true": "deletes a type vertex - can be entity ( class type ) or just vertex ( struct / trait type )", "bleu": 0.08390968626574577, "rouge": 0.2757685352622061}, {"predict": "reads an input stream into a list of strings", "true": "read the reader line for line and return the result in a list", "bleu": 0.11909962902993415, "rouge": 0.17604617604617603}, {"predict": "register cache context for cache", "true": "adds cache context to shared cache context", "bleu": 0.25880882365505126, "rouge": 0.48541114058355433}, {"predict": "checks whether the given method is a c glib - > or c , or if it is a c 1", "true": "this method was added to address jackson - <unk> : need to weed out c glib - injected \" get callback s \"", "bleu": 0.10394713922154249, "rouge": 0.180339985218034}, {"predict": "compares two media type name", "true": "compares this named media type to another", "bleu": 0.25880882365505126, "rouge": 0.48541114058355433}, {"predict": "returns true if the underlying resource has changed", "true": "returns true if the underlying dependencies have changed", "bleu": 0.6104735835807844, "rouge": 0.75}, {"predict": "creates a new image of work space", "true": "returns a replaced element for some element in the stream which should be <unk> , but is not", "bleu": 0.038589346254072475, "rouge": 0.07411907654921021}, {"predict": "compares two version numbers", "true": "compares whether this f xg version ' s value is greater than the value of the version parameter", "bleu": 0.012007547560562644, "rouge": 0.16310160427807485}, {"predict": "creates a pooled data source", "true": "creates a basic data source", "bleu": 0.45180100180492244, "rouge": 0.8}, {"predict": "finds an immutable set of the given object", "true": "find the names of a given object", "bleu": 0.239802967618271, "rouge": 0.4048672566371681}, {"predict": "scroll the current item", "true": "keep the current item in the center", "bleu": 0.3158905525406873, "rouge": 0.5198863636363635}, {"predict": "add a meta object to the registry", "true": "add a meta object to the state", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "removes the given word from this set", "true": "removes the word from the stop word list", "bleu": 0.2664731314108428, "rouge": 0.5269978401727862}, {"predict": "add two numbers of different length and sign", "true": "add two numbers of different length and sign", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds item to the list", "true": "adds the item to the internal list", "bleu": 0.3769486629893372, "rouge": 0.8090185676392573}, {"predict": "calculate the bounds for a view ' s title", "true": "calculate the bounds for a view ' s title", "bleu": 1.0, "rouge": 1.0}, {"predict": "invoke all ( null ) throws null pointer exception", "true": "invoke all ( empty collection ) returns empty collection", "bleu": 0.2777619034011791, "rouge": 0.4444444444444444}, {"predict": "writes a package to the packages", "true": "assigns description to a package", "bleu": 0.31239399369202553, "rouge": 0.3696969696969697}, {"predict": "closes this character stream", "true": "closes this stream", "bleu": 0.5081327481546147, "rouge": 0.8798076923076923}, {"predict": "creates the block mirror data", "true": "creates the block object block mirror data", "bleu": 0.4739878501170792, "rouge": 0.8090185676392573}, {"predict": "starts the server , connecting an endpoint to the server", "true": "starts the server by starting all endpoints this server is assigned to", "bleu": 0.21258637840736228, "rouge": 0.3577712609970674}, {"predict": "appends the json representation of the specified string to the end of this array", "true": "appends the json representation of the specified string to the end of this array", "bleu": 1.0, "rouge": 1.0}, {"predict": "retains ( keeps ) only the elements in the receiver that are contained in the specified other list", "true": "retains ( keeps ) only the elements in the receiver that are contained in the specified other list", "bleu": 1.0, "rouge": 1.0}, {"predict": "forwards caught exceptions to input stream", "true": "forwards caught exceptions to input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "clear the result of the result", "true": "clears the result that may has been set", "bleu": 0.20830666398386113, "rouge": 0.2785388127853881}, {"predict": "returns a string containing a collection of strings , separated by a delimiter", "true": "returns a list of the elements invoking to string on non - null elements", "bleu": 0.1322608782946588, "rouge": 0.2207478890229192}, {"predict": "check if value is between range 0 and max", "true": "check if value within allowed range", "bleu": 0.2777619034011791, "rouge": 0.5532879818594103}, {"predict": "replaces all the place within the place to a string buffer", "true": "replaces the place holders by parameters", "bleu": 0.16108992769687397, "rouge": 0.3727087576374745}, {"predict": "qualifier a qualifier selector", "true": "searches for a qualifier selector in a node : ? qu al name = \" value \" - an element in an array , chosen by a qualifier value", "bleu": 0.0013650372104962324, "rouge": 0.15996503496503497}, {"predict": "checks if a frame id is multiple frames", "true": "are multiple occurrences of frame allowed", "bleu": 0.17747405280050269, "rouge": 0.14663461538461536}, {"predict": "parse an xml configuration file into an array of configuration file", "true": "parse an xml configuration from a file", "bleu": 0.33180774028439425, "rouge": 0.5787476280834916}, {"predict": "empirical unconditional hilbert - schmidt dependence measure for x and y values", "true": "empirical conditional hilbert - schmidt dependence measure y and x given z", "bleu": 0.4324227075463215, "rouge": 0.5833333333333334}, {"predict": "creates the rpf frame with the given rpf file paths to be loaded from the rpf directory", "true": "create a a", "bleu": 0.06074588070876682, "rouge": 0.0}, {"predict": "posts the given event info to the queue", "true": "queue the given event in the event queue", "bleu": 0.3303164318013807, "rouge": 0.625}, {"predict": "choose an alias to authenticate the server side of a secure socket given the public key type and the list of certificate issuer authorities recognized by the peer ( if any )", "true": "choose an alias to authenticate the server side of a secure socket given the public key type and the list of certificate issuer authorities recognized by the peer ( if any )", "bleu": 1.0, "rouge": 1.0}, {"predict": "processes a single image", "true": "proc esa el esc a neo de una imagen en <unk> <unk> ivo", "bleu": 0.037870374782798366, "rouge": 0.1073943661971831}, {"predict": "creates a new path handler", "true": "convenience method to create a path", "bleu": 0.24736929544091937, "rouge": 0.3577712609970674}, {"predict": "loads the lines from the server", "true": "read statement lines from input stream", "bleu": 0.2907153684841096, "rouge": 0.3333333333333333}, {"predict": "load file from source folder", "true": "load ignore file using", "bleu": 0.3021375397356768, "rouge": 0.4535315985130111}, {"predict": "remove an argument from this command line", "true": "remove the 1 st occurrence of the argument ( core mutation method )", "bleu": 0.08723697147876523, "rouge": 0.1897356143079316}, {"predict": "description of the method", "true": "description of the method", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the block in the form", "true": "constructs an attribute from pkcs 9 attribute", "bleu": 0.15723447135049806, "rouge": 0.0}, {"predict": "creates a note based on the file", "true": "method used to put note object into database", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "make sure that the transaction ids in the given messages are not 0 and differ between each other", "true": "make sure that the transaction ids in the given messages are not 0 and differ between each other", "bleu": 1.0, "rouge": 1.0}, {"predict": "add next node as a single node", "true": "adds a \" next \" node ( node to the right or bottom ) to this divider ' s list of next nodes", "bleu": 0.023754291366569424, "rouge": 0.18245264207377865}, {"predict": "responds to a config dialog", "true": "callback for the config dialog", "bleu": 0.35930411196308426, "rouge": 0.4}, {"predict": "note , returns in utf - 8", "true": "see the general contract of the read utf method of data input", "bleu": 0.0909326471926252, "rouge": 0.10049423393739704}, {"predict": "adds given value to the list of issued nodes", "true": "for debugging purposes , it ' s useful to insert print statements here", "bleu": 0.09049614828481034, "rouge": 0.08802308802308802}, {"predict": "reset all internal state to be at the top of the grid", "true": "reset all internal state to be at the top of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "calls super", "true": "calls super", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets called from the status manager", "true": "return the repaint manager for the calling thread given a component", "bleu": 0.10624253482403696, "rouge": 0.2234432234432234}, {"predict": "this method will determine if the preferred port is a power of the client", "true": "determines if the given port ww n is a recover point initiator", "bleu": 0.15310245441182443, "rouge": 0.3900255754475704}, {"predict": "checks if a xml character is well - formed", "true": "checks if a xml character is well - formed", "bleu": 1.0, "rouge": 1.0}, {"predict": "send this message to the output stream", "true": "initialization when the web socket completes", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "removes wheel clicking listener", "true": "removes wheel clicking listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the given section to the list of sections", "true": "adds the given section to the list of sections", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the preferred for the video for rendering characters that can be skipped at the given position", "true": "checks if it ' s worth to try to wrap target line ( it ' s long enough ) and tries to calculate preferred wrap position", "bleu": 0.05059542201723088, "rouge": 0.13445995591476853}, {"predict": "adds all the values in the given vector to the end of this vector , expanding its capacity as necessary", "true": "adds all the values in the given vector to the end of this vector , expanding its capacity as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "special purpose function to see if we can optimize the pattern for a descendant iterator", "true": "special purpose function to see if we can optimize the pattern for a descendant iterator", "bleu": 1.0, "rouge": 1.0}, {"predict": "read stream till e of the specified string has been written in", "true": "write the full contents of in str to the destination stream out str", "bleu": 0.12020484516681697, "rouge": 0.15885416666666669}, {"predict": "add a matching rule in the canonical mime t form such as \" image / * \" or a mime t literal such as \" text / html \"", "true": "add a matching rule in the canonical mime t form such as \" image / * \" or a mime t literal such as \" text / html \"", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks a consistent boolean", "true": "validates a number , for use cases where you may need the number to be within a range", "bleu": 0.010850044034164912, "rouge": 0.08155080213903743}, {"predict": "sends the message until the count reaches stopped", "true": "note that if there is sleep in this method", "bleu": 0.11900569447018795, "rouge": 0.0}, {"predict": "construct a new instance with the specified detail string and exception", "true": "construct a new instance with the specified detail string and exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "turns a string list into an array list of strings", "true": "make array list from \" , \" separated string", "bleu": 0.17827531042796255, "rouge": 0.21254355400696867}, {"predict": "returns the char set used by this char set ' s char set", "true": "returns the name of the char set that should be used in textual <unk>", "bleu": 0.19576800346584783, "rouge": 0.36791314837153194}, {"predict": "convert a positive big decimal to an engineering string representation", "true": "convert a positive big decimal to an engineering string representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all mappings from this hash map , leaving it empty", "true": "removes all mappings from this hash map , leaving it empty", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a layer to the map", "true": "adds a new layer to the map", "bleu": 0.5985529678206387, "rouge": 0.9104477611940297}, {"predict": "read the specified file", "true": "read the specified file of rules", "bleu": 0.6065306597126334, "rouge": 0.7721518987341772}, {"predict": "applies updates to the word set being managed by this resource", "true": "applies updates to the word set being managed by this resource", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a text label", "true": "draws a text label", "bleu": 1.0, "rouge": 1.0}, {"predict": "write a portion of an array of characters to the buffer", "true": "writes characters to the buffer", "bleu": 0.317023313852343, "rouge": 0.5362637362637362}, {"predict": "detects an episode using the given file", "true": "detect episode from filename", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "creates an operation that creates an array of the given array type", "true": "creates a simple array creation operation for the given type", "bleu": 0.1690062198556585, "rouge": 0.46212121212121204}, {"predict": "send a spar ql udp ate event", "true": "send an event to all registered listeners", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "set persistent preference type to map , e", "true": "the type of preference to retrieve", "bleu": 0.19070828081828378, "rouge": 0.2932692307692307}, {"predict": "expunge stale entries from the table", "true": "expunges stale entries from the table", "bleu": 0.8091067115702212, "rouge": 0.8333333333333334}, {"predict": "tests if the string is a number of numeric class", "true": "utility method for subclasses to determine if an entire string is digits", "bleu": 0.14595947916189678, "rouge": 0.2683284457478006}, {"predict": "tells whether a given type is a char", "true": "tells whether a given type is a char", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new instance of rsa key", "true": "construct a key from its encoding", "bleu": 0.2626909894424158, "rouge": 0.4680306905370844}, {"predict": "convert a calendar to a java", "true": "convert a calendar to a java", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new image panel", "true": "create and return the image file panel", "bleu": 0.20252884954471367, "rouge": 0.32360742705570295}, {"predict": "write the text and append a newline ( using the platform ' s line - ending )", "true": "writes the given line with the given writer , followed by a new line", "bleu": 0.09083627868206415, "rouge": 0.19698600645855757}, {"predict": "get the child at the given index", "true": "returns the layer at the specified index", "bleu": 0.2777619034011791, "rouge": 0.5714285714285714}, {"predict": "if there is a security manager , makes sure caller has permission to modify threads", "true": "if there is a security manager , makes sure caller has permission to modify threads", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the function to retrieve the value of the array", "true": "the identity function for value conversion - returns the value untouched", "bleu": 0.19756380535471652, "rouge": 0.37770897832817335}, {"predict": "removes the version of the string from the string", "true": "trims white spaces and remove quotes from the string", "bleu": 0.2626909894424158, "rouge": 0.3333333333333333}, {"predict": "returns whether a namespace is defined", "true": "returns whether a namespace is defined", "bleu": 1.0, "rouge": 1.0}, {"predict": "a shallow clone requires cloning the attributes but not the child nodes", "true": "a shallow clone requires cloning the attributes but not the child nodes", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d basic constraints dialog", "true": "creates a new d basic constraints dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "static version of last indexof", "true": "static version of last indexof", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new float column", "true": "create a new float column", "bleu": 1.0, "rouge": 1.0}, {"predict": "read from in records ( in fact does nothing )", "true": "read pr j records ( in fact does nothing )", "bleu": 0.6989307622784944, "rouge": 0.8}, {"predict": "purges one entry whose wrapped key has been garbage collected", "true": "purges one entry whose wrapped key has been garbage collected", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the user has permission ' converter manager", "true": "checks whether the user has permission ' converter manager", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the id matches the project ' s id", "true": "determine whether this coordinates object equals the target object", "bleu": 0.11390778025531027, "rouge": 0.1018363939899833}, {"predict": "adds a new value to the series", "true": "adds a new value to the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if size ( a ) = = size ( b )", "true": "check if size ( a ) = = size ( b )", "bleu": 1.0, "rouge": 1.0}, {"predict": "import a revision from source to a change", "true": "import revision data from change object", "bleu": 0.20164945583740668, "rouge": 0.5865384615384615}, {"predict": "a helper method for writing to a file", "true": "selects output line file by written doc", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "create a new fuzzy query", "true": "dispatches to luce ne ' s simple query parser ' s new fuzzy query , optionally lower casing the term first", "bleu": 0.020712610728366193, "rouge": 0.20771850170261064}, {"predict": "creates a call from st mt s to soot method m", "true": "creates a call from st mt s to soot method m", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method starts as a series of players , we can discard all other files", "true": "play current recorded file , if failed notify error message to caller , if success update fm recorder state", "bleu": 0.06300499474091638, "rouge": 0.05760151085930123}, {"predict": "quan tile function of vectors", "true": "s igm oid / logistic function", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "deletes all files in a folder", "true": "deletes all files in a folder", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates that a string is not empty", "true": "validates that the string is not empty", "bleu": 0.5946035575013605, "rouge": 0.8571428571428571}, {"predict": "reset the context in the order to zero", "true": "resets the current context", "bleu": 0.17747405280050269, "rouge": 0.3546511627906977}, {"predict": "convert a list of values to list of object those in list in list of java values ( list )", "true": "converts an array / collection of values ( the object ) to a parameter values array", "bleu": 0.11709061630923734, "rouge": 0.22676579925650556}, {"predict": "log out a log out from the log", "true": "basic internal api call to aut hsv c to log out a user", "bleu": 0.15976193520644114, "rouge": 0.2739520958083832}, {"predict": "creates a new stateless network interface", "true": "compares the ip addresses of the instance on aw s and maps those to the network interfaces in the system", "bleu": 0.02142071121599405, "rouge": 0.07011494252873564}, {"predict": "creates a new api code source object , and copy the contents of the code source", "true": "creates a new code source", "bleu": 0.1702602472176709, "rouge": 0.5258620689655172}, {"predict": "decodes base 64 data into oct ect s", "true": "decodes base 64 data into oct ect s", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates socket channel", "true": "create a new broadcaster", "bleu": 0.32372956394183194, "rouge": 0.0}, {"predict": "closes file , implicitly invoking done in f file , etc", "true": "closes this database stream and releases any associated system resources", "bleu": 0.11390778025531027, "rouge": 0.09606299212598425}, {"predict": "rotates vector 2 in radians to degree right", "true": "return a new instance of vector rotated from the given number of degrees", "bleu": 0.08583768591139128, "rouge": 0.09131736526946108}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the contents at the given uri", "true": "gets the contents at the given uri", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a mapping from the specified field to the specified data , replacing the previous mapping if there was one", "true": "adds a mapping from the specified field number to the specified data , replacing the previous mapping if there was one", "bleu": 0.8726592486889793, "rouge": 0.9713375796178344}, {"predict": "hide the drawing tool", "true": "hide the special border of the title bar", "bleu": 0.1739594473063345, "rouge": 0.31443298969072164}, {"predict": "this method removes the filter with the syntax transaction manager", "true": "this method removes the business transaction", "bleu": 0.3672056269893592, "rouge": 0.6545064377682404}, {"predict": "adds a point to the sample", "true": "adds a point to the sample", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a tag id", "true": "adds the given tag id to this request", "bleu": 0.18693159143202892, "rouge": 0.47164948453608246}, {"predict": "support for logging allocation on a socket", "true": "attempt a secure connection with basic functionality to maximize compatibility", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "attempt to match the host runtime to a capable platform implementation", "true": "attempt to match the host runtime to a capable platform implementation", "bleu": 1.0, "rouge": 1.0}, {"predict": "interrupt a record to order of the particular root", "true": "takes in a collection of executions belonging to the same process instance", "bleu": 0.12716571564598603, "rouge": 0.2785388127853881}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize n - term values for internal and beta nodes", "true": "populates the <unk> , ie , <unk> and in arrays , and i initial value", "bleu": 0.07645906143263256, "rouge": 0.07721518987341772}, {"predict": "serializes the expression to a st node", "true": "serialize a node ( and it ' s children ) to a parsable string", "bleu": 0.09663861439684919, "rouge": 0.17967599410898377}, {"predict": "initialize the internal frame menu", "true": "initialize the internal frame menu button settings", "bleu": 0.6703200460356393, "rouge": 0.8090185676392573}, {"predict": "below method will be used to restore the work flow steps from a clone", "true": "return a work flow", "bleu": 0.1250076305588977, "rouge": 0.2469635627530364}, {"predict": "remove a data source listener", "true": "remove a data source listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string with the given length", "true": "returns a substring of the given string , representing the ' length ' most - right characters", "bleu": 0.08013215359899438, "rouge": 0.38754764930114366}, {"predict": "clears the key store two methods", "true": "this function clears the block values for blocks in this section", "bleu": 0.12634437832866913, "rouge": 0.2234432234432234}, {"predict": "calculates the vector stored from its stored data", "true": "loads an object from its stored data , with an unknown class", "bleu": 0.2707089559145445, "rouge": 0.3860759493670886}, {"predict": "stop the grid this task should be slowed down , and will stop the grid from the underlying executor", "true": "stops clock timer if all nodes into jvm were stopped", "bleu": 0.05415315253510895, "rouge": 0.0}, {"predict": "push the folder of the last template loaded as a temporary relative reference", "true": "resolve the folder name and push the resulting folder as the last template folder", "bleu": 0.22243539687257283, "rouge": 0.4414957780458384}, {"predict": "prints the first explicit list", "true": "print , to system", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "draws a horizontal bar zi er path", "true": "draws a cubic line", "bleu": 0.24446151121745047, "rouge": 0.3824451410658307}, {"predict": "adds an event to the head of the queue", "true": "adds a new event to the queue", "bleu": 0.31239399369202553, "rouge": 0.639412997903564}, {"predict": "create compute compute compute location", "true": "creates a generator for a set of beans", "bleu": 0.1259933680597235, "rouge": 0.0}, {"predict": "initialize g state info from the shared object", "true": "displays the initialized board on the state view", "bleu": 0.17747405280050269, "rouge": 0.125}, {"predict": "h base table connection callback function", "true": "h base table connection callback function", "bleu": 1.0, "rouge": 1.0}, {"predict": "add primitive type abbreviation to maps of abbreviations", "true": "add primitive type abbreviation to maps of abbreviations", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the entity map based on content type", "true": "initialize the tree map , which associates angles with images / animations", "bleu": 0.13755608571892394, "rouge": 0.28955696202531644}, {"predict": "find and return the replica tor conf as", "true": "find and return the replica tor home directory", "bleu": 0.7259795291154771, "rouge": 0.75}, {"predict": "construct a string data string from a string", "true": "creates a transferable capable of transferring the specified string", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "writes the given physical value to the given polygon", "true": "this routine simply tests for robustness of the to string function", "bleu": 0.12507277759788113, "rouge": 0.19645732689210954}, {"predict": "appends the string representation of the float argument to this string buffer", "true": "appends the string representation of the float argument to this string buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "open / ip file system", "true": "opens a file with the default system action", "bleu": 0.1658165975077607, "rouge": 0.2953995157384988}, {"predict": "tests the last destination", "true": "used to determine if a car can be set out at a destination ( location )", "bleu": 0.017888698387160718, "rouge": 0.09023668639053255}, {"predict": "close the stream , flushing it first", "true": "close the stream , flushing it first", "bleu": 1.0, "rouge": 1.0}, {"predict": "normalizes a portion of a string", "true": "process a path into an array of folders", "bleu": 0.17516432701748888, "rouge": 0.2785388127853881}, {"predict": "returns a random number generator using a random number", "true": "returns a random to be used by the current thread if available , otherwise returns null", "bleu": 0.12068702429139479, "rouge": 0.22846441947565538}, {"predict": "a record was called by the deployment", "true": "record the fact that something was deployed , resulting in the given deployment id", "bleu": 0.08592522909830395, "rouge": 0.35935198821796754}, {"predict": "executed before the activity is started", "true": "this method is called before ignite initial is es", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "invoked if the computation completes successfully", "true": "invoked if the computation completes successfully", "bleu": 1.0, "rouge": 1.0}, {"predict": "called when the executor of the connection is being saved", "true": "shuts down a cleanup thread com", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "write a new byte array", "true": "expands the current speech data by appending a new buffer of audio data", "bleu": 0.07254224910650854, "rouge": 0.20573355817875214}, {"predict": "execute a string template and return the available arguments", "true": "parse the control template and merge it with the control context", "bleu": 0.15982877755018768, "rouge": 0.2946859903381642}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "on create the given xml tag", "true": "before this in f later tries to create an item from the tag , this method will be called", "bleu": 0.03009357607781848, "rouge": 0.21942446043165464}, {"predict": "writes basic ex if data to the tiny planet image , clearing this image , removing prior ex if tags", "true": "writes the jpeg data to a file", "bleu": 0.09134423666564473, "rouge": 0.2433510638297872}, {"predict": "checks to see if this image is available for any image server / o", "true": "check if there are image servers in the system", "bleu": 0.09782375748961449, "rouge": 0.18100890207715134}, {"predict": "returns current nanosecond time", "true": "returns current nanosecond time", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method removes an extension from the recognizer", "true": "this method removes an extension to the recognizer", "bleu": 0.6606328636027614, "rouge": 0.875}, {"predict": "retrieve list of namespace declaration locations active at this node", "true": "retrieve list of namespace declaration locations active at this node", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the specified observer to the list of observers", "true": "adds the specified observer to the list of observers", "bleu": 1.0, "rouge": 1.0}, {"predict": "close a byte array output stream passed in", "true": "close a byte array output stream passed in", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the distance between the specified data point , starting at the specified index", "true": "computes the distance between one data point and a specified mean", "bleu": 0.20333448190047887, "rouge": 0.49061662198391426}, {"predict": "formats the pattern and returns internal state", "true": "formats the parsed string by inserting table ' s values", "bleu": 0.15925177647011352, "rouge": 0.22803738317757008}, {"predict": "adds a key - value mapping", "true": "adds a key - value mapping", "bleu": 1.0, "rouge": 1.0}, {"predict": "release an instance injected as a method", "true": "release an instance injected as a field of an object", "bleu": 0.5477927682341229, "rouge": 0.6841121495327103}, {"predict": "converts a list of objects to a list", "true": "converts list of alert entity objects to list of alert d to objects", "bleu": 0.15451666492113134, "rouge": 0.5479041916167664}, {"predict": "puts an executor into a pool , throwing an exception if pool is full", "true": "null - checks user executor argument , and translates uses of common pool to a sync pool in case parallelism disabled", "bleu": 0.07055935438592946, "rouge": 0.1654611211573237}, {"predict": "adds a group properties listener", "true": "adds a group properties listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "this function edits a global function comment in the database", "true": "edits a global function comment", "bleu": 0.4617366309441026, "rouge": 0.7093023255813954}, {"predict": "load from some xml element", "true": "update static data from xml file", "bleu": 0.24736929544091937, "rouge": 0.3577712609970674}, {"predict": "clear any existing session", "true": "clear any existing session", "bleu": 1.0, "rouge": 1.0}, {"predict": "method which returns true if the entry corresponding to in et address ( entry status : in et , else false if the entry status :", "true": "checks if the entry exists in the directory", "bleu": 0.09615094003919297, "rouge": 0.32515991471215355}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "see the hash code of a string", "true": "class name to wrapper hash , derived from wrapper", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "process notification of the start of an xml element being reached", "true": "process notification of the start of an xml element being reached", "bleu": 1.0, "rouge": 1.0}, {"predict": "check type of section element defined by key", "true": "check type of section element defined by key", "bleu": 1.0, "rouge": 1.0}, {"predict": "this function create as multiple nodes : create as well as the vm list", "true": "this function creates a partition region with total buckets num property set to 11", "bleu": 0.11633270842295028, "rouge": 0.14285714285714285}, {"predict": "generates a new householder transformation from the set of column c of a zm at ( altered )", "true": "constructs a z dia <unk> at and initializes it to the diagonal of a zm at", "bleu": 0.2061477352156375, "rouge": 0.35672514619883033}, {"predict": "report product version information from ant", "true": "report product version information from ant", "bleu": 1.0, "rouge": 1.0}, {"predict": "fills and returns the network neuron with neurons governed by the neurons in the neuron panel", "true": "create the cascading network", "bleu": 0.08513012360883544, "rouge": 0.22426470588235295}, {"predict": "compares two characters sequences starting at the specified index", "true": "check for equality of the two characters sequences starting at the specified index", "bleu": 0.5643103852589499, "rouge": 0.7041847041847041}, {"predict": "divide zero by a negative number", "true": "divide zero by a negative number", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an enumeration of all non terminal ( non - terminal ) productions", "true": "access to productions with this non terminal on the lhs", "bleu": 0.1350862565735141, "rouge": 0.1781021897810219}, {"predict": "add the given node to the set of \" tight \" nodes", "true": "add the given node to the set of \" tight \" nodes", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the specified event is disabled and the event type of event should be disabled", "true": "end of i n s e t s c o d e", "bleu": 0.07223943354597204, "rouge": 0.07117852975495916}, {"predict": "creates new d jar info dialog where the parent is a frame", "true": "creates new d jar info dialog where the parent is a frame", "bleu": 1.0, "rouge": 1.0}, {"predict": "transforms a point array with all points whose touch points are rendering to value - touch - touch - offset", "true": "transform an array of points with all matrixes except the touch matrix - - > use this if the transformed values are not effected by touch gestures", "bleu": 0.07654830544533338, "rouge": 0.2900815217391304}, {"predict": "extract the escaped function", "true": "this method converts escaped function to a server function call", "bleu": 0.10551173833795614, "rouge": 0.26521739130434785}, {"predict": "return a string representation of this object", "true": "return a string representation of this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new ims listener", "true": "add a listener for receiving events", "bleu": 0.31610981104846864, "rouge": 0.5366568914956013}, {"predict": "check asynchronously check servers is called when the adapter is initialized", "true": "check that a number of <unk> are available", "bleu": 0.11390778025531027, "rouge": 0.108348134991119}, {"predict": "returns the stamp to store the given value as the given file", "true": "returns a path representing the history part for the specified time stamp", "bleu": 0.13065113298388567, "rouge": 0.25}, {"predict": "add a ping time for a testing", "true": "adds a ping time sample to the averaging window", "bleu": 0.2598013194025897, "rouge": 0.3667334669338677}, {"predict": "prints the user message to the console", "true": "output a regular message from a user", "bleu": 0.20556680845025982, "rouge": 0.14285714285714285}, {"predict": "connects to the specified address", "true": "creates the new server socket", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "checks if is an access or not", "true": "returns true if str is an access modifier , false otherwise", "bleu": 0.20643565894052812, "rouge": 0.4273204903677758}, {"predict": "handles append request failure", "true": "handles an append failure", "bleu": 0.42728700639623407, "rouge": 0.75}, {"predict": "selects the most suitable preview and picture size , given the desired width and height", "true": "selects the most suitable preview and picture size , given the desired width and height", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads all available rows from the given cursor and returns a list of new image to objects", "true": "reads all available rows from the given cursor and returns a list of new image to objects", "bleu": 1.0, "rouge": 1.0}, {"predict": "decode characters from the specified byte array", "true": "converts the provided byte array to a string using the utf - 8 encoding", "bleu": 0.09663861439684919, "rouge": 0.2695139911634757}, {"predict": "converts a map of attributes to lower case", "true": "returns a copy of the set of attributes for this node with lowercase names", "bleu": 0.10712878727413526, "rouge": 0.25994318181818177}, {"predict": "makes the given visitor visit the annotations of this instruction", "true": "makes the given visitor visit the annotations of this instruction", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a list from passed obj x parameters", "true": "create a list from passed obj x parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the next part of the related file , and removes the next part of the download", "true": "reads the next part of the related file", "bleu": 0.45046627229833414, "rouge": 0.6844319775596073}, {"predict": "computes new standard deviation for the estimator", "true": "compute the parameters of the distribution", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "translates the database specific sql command to block specific size", "true": "translate data type from source to target database", "bleu": 0.13950796967929133, "rouge": 0.11338289962825278}, {"predict": "calculates the rectangle of shape to all requests", "true": "creates a list of shape record to draw a rectangle from the given origin ( start x , start y ) for the specified width and height ( in pixels ) and radius x and radius y for rounded corners", "bleu": 0.0045969728330983095, "rouge": 0.11158536585365855}, {"predict": "find the minimum of all elements in the array , ignoring elements that are nan", "true": "find the minimum of all elements in the array , ignoring elements that are nan", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the cache and deletes all of its stored values", "true": "closes the cache and deletes all of its stored values", "bleu": 1.0, "rouge": 1.0}, {"predict": "moves the selected item down in the model ( and table )", "true": "moves the selected item down in the model ( and table )", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new jar with the given path ( from the local )", "true": "creates a new jar", "bleu": 0.1777835117834348, "rouge": 0.39019189765458434}, {"predict": "the current thread used to temporarily shutdown the current thread", "true": "shut down the scanner , interrupting running tasks and cancelling waiting ones", "bleu": 0.10320893749383378, "rouge": 0.08944281524926685}, {"predict": "convert collection of path paths to relative path", "true": "covert list of files to relative paths", "bleu": 0.239802967618271, "rouge": 0.4048672566371681}, {"predict": "handles the unlock state", "true": "based on the current state of the key store and key guard , try to make progress on <unk> or installing to the key store", "bleu": 0.0020865988907677433, "rouge": 0.12200000000000001}, {"predict": "called from on touch event to end a drag operation", "true": "called from on touch event to end a drag operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the start time between the specified time , which is not already a query entry", "true": "if the recurrence rule is such that the event start date doesn ' t actually fall in one of the <unk> , then push the start date up to the first actual instance of the event", "bleu": 0.03449293574911665, "rouge": 0.14386792452830188}, {"predict": "rounds the x , y , and z values of this vector 3 up to the nearest integer value", "true": "rounds the x , y , and z values of this vector 3 up to the nearest integer value", "bleu": 1.0, "rouge": 1.0}, {"predict": "implements the abstract method simulate method", "true": "implements the abstract method simulate method", "bleu": 1.0, "rouge": 1.0}, {"predict": "head of the frontier , removes any entries whose corresponding corresponding state of the frontier if there are not yet explored", "true": "helper method which removes nodes of already explored states from the head of the frontier", "bleu": 0.18728674627858763, "rouge": 0.28638497652582157}, {"predict": "adds wheel changing listener", "true": "adds wheel changing listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse the attributes passed to the view from the xml", "true": "parse the attributes passed to the view from the xml", "bleu": 1.0, "rouge": 1.0}, {"predict": "concatenates two byte arrays", "true": "concatenates two byte arrays", "bleu": 1.0, "rouge": 1.0}, {"predict": "assert either complete successfully or error signal has been received", "true": "assert either complete successfully or error signal has been received", "bleu": 1.0, "rouge": 1.0}, {"predict": "asserts the argument is valid , as determined by the caller passing the result of an evaluated expression to this assertion", "true": "asserts the argument is valid , as determined by the caller passing the result of an evaluated expression to this assertion", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if given calendar is before", "true": "allows to know if a given calendar instance is set before today", "bleu": 0.12718356905542982, "rouge": 0.5240549828178694}, {"predict": "builds the login popup", "true": "build a standard login ui with username and password fields", "bleu": 0.08017158404431235, "rouge": 0.13260869565217392}, {"predict": "action to scsi volume", "true": "un map the volume from scsi initiator", "bleu": 0.1878296463217631, "rouge": 0.1732954545454545}, {"predict": "get an immutable collection of the types of this collection", "true": "returns the underlying collection", "bleu": 0.13950796967929133, "rouge": 0.3096446700507614}, {"predict": "bounds is calculated by starting at the current start and solve the a solve ( s ) and solve an error", "true": "add a quarter circular path to a given path object , starting from ( x 1 , y 1 ) to ( x 2 , y 2 )", "bleu": 0.052344527119262574, "rouge": 0.11937377690802348}, {"predict": "parses the given content as a blocks", "true": "parse content in block into inline children , using reference map to resolve references", "bleu": 0.06833381956448398, "rouge": 0.08983799705449189}, {"predict": "fill a number of bytes", "true": "fill given array with random bytes at the specified position", "bleu": 0.11115018927487523, "rouge": 0.2515463917525773}, {"predict": "removes all scanning s is able callback s", "true": "removes all scanning callback s", "bleu": 0.3549481056010052, "rouge": 0.8026315789473684}, {"predict": "reads not the next bytes from the underlying stream", "true": "reads from the underlying input stream if not null", "bleu": 0.30213753973567675, "rouge": 0.5555555555555556}, {"predict": "handles a manager creation and register the bean", "true": "assumption is always cache and member mbe an has been will be created first", "bleu": 0.07575149194183216, "rouge": 0.08664772727272725}, {"predict": "check if the shape is set shape", "true": "check whether fast transition is valid", "bleu": 0.20556680845025982, "rouge": 0.31202046035805625}, {"predict": "determines whether the file is visible", "true": "returns true if the given file is visible", "bleu": 0.31149111610852515, "rouge": 0.5570776255707762}, {"predict": "appends a new random - serialized representation of buffer", "true": "append strings to an array creating a new array for the result", "bleu": 0.13309610652103343, "rouge": 0.1856925418569254}, {"predict": "deletes an existing user that is registered in this user", "true": "removes and destroys the object", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "construct a new string by converting the specified sub array of bytes using the specified character encoding", "true": "construct a new string by converting the specified sub array of bytes using the specified character encoding", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the next - part token for greater than the range double , and be used for every range parsing parsing parsing parsing escapes", "true": "initialize the scratch item set", "bleu": 0.06667489966054595, "rouge": 0.15641025641025638}, {"predict": "returns a new editor for the current area", "true": "returns the bounds of the editor", "bleu": 0.19070828081828378, "rouge": 0.2932692307692307}, {"predict": "reads a byte array", "true": "reads the next chunk from the stream", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "construct a cuboid in the given world name and xyz co - ordinates", "true": "construct a cuboid in the given world and xyz co - ordinates", "bleu": 0.7825422900366437, "rouge": 0.9669749009247028}, {"predict": "calculates the log marginal likelihood of a model using the arithmetic mean estimator", "true": "calculates the log marginal likelihood of a model using newton and rafter y ' s <unk> estimator", "bleu": 0.5095248904108802, "rouge": 0.6510138740661686}, {"predict": "checks if message is new message", "true": "returns true if the message starts with & quo t ; new ( & quo t ; or if it equals & quo t ; new & quo t ;", "bleu": 0.0048113533019515705, "rouge": 0.14878048780487804}, {"predict": "installs all the default properties into the current jvm , which is running on java vm", "true": "installs any system properties", "bleu": 0.08513012360883544, "rouge": 0.22426470588235295}, {"predict": "writes doubles from the given double array , starting from the specified offset , to the current position and increases the position by the number of doubles written", "true": "writes doubles from the given double array , starting from the specified offset , to the current position and increases the position by the number of doubles written", "bleu": 1.0, "rouge": 1.0}, {"predict": "con v < # } } to load the address attributes from the passed in", "true": "for a given address type , extract the recipients from the headers", "bleu": 0.12300686288463772, "rouge": 0.22676579925650556}, {"predict": "checks whether the extension of the filename is that specified", "true": "checks whether the extension of the filename is that specified", "bleu": 1.0, "rouge": 1.0}, {"predict": "takes the name of the given file and returns its path", "true": "s can the disk looking for the location of where the source resides", "bleu": 0.11294012253658708, "rouge": 0.24629878869448185}, {"predict": "invoked before the entity needs to be invoked", "true": "used to automatically update the timestamp of locks", "bleu": 0.17747405280050269, "rouge": 0.125}, {"predict": "adds a pad pad stacks to the right side of the stack", "true": "appends a new pad stack with the input shapes to this pad stacks", "bleu": 0.1607716496330015, "rouge": 0.31770833333333337}, {"predict": "calculate the bounds for a view ' s title", "true": "calculate the bounds for a view ' s title", "bleu": 1.0, "rouge": 1.0}, {"predict": "the start of a content model", "true": "the start of a content model", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an om range rings on a lat / lon pair", "true": "create an om range rings with a lat / lon center and a physical distance radius", "bleu": 0.3370910790500255, "rouge": 0.5734430082256169}, {"predict": "creates a new input source", "true": "create an input source form a string", "bleu": 0.25880882365505126, "rouge": 0.32360742705570295}, {"predict": "writes a char sequence to a file creating the file if it does not exist using the default encoding for the vm", "true": "writes a char sequence to a file creating the file if it does not exist using the default encoding for the vm", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the root node of the user preference hierarchy", "true": "returns the root node of the user preference hierarchy", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a socket identifier", "true": "generates a vaguely human - readable format for a given socket identifier", "bleu": 0.06876828939330318, "rouge": 0.34398496240601506}, {"predict": "handles the current re update the collection of album", "true": "called by the providers when the details of an album have been updated", "bleu": 0.11379288211086455, "rouge": 0.35209235209235207}, {"predict": "pushes an string on to the top of this stack", "true": "tell if the table contains the given string", "bleu": 0.13950796967929133, "rouge": 0.11338289962825278}, {"predict": "parses file and returns a string object", "true": "read contents of a file", "bleu": 0.20556680845025982, "rouge": 0.17183098591549298}, {"predict": "converts a tile into a tile x - y coordinate", "true": "converts a pixel ' s x coordinate into a horizontal tile index relative to a given tile grid layout specified by its x offset and tile width", "bleu": 0.044142713521597744, "rouge": 0.2995090016366612}, {"predict": "check if we ' ve crossed a reasonable touch slop for the given child view", "true": "check if we ' ve crossed a reasonable touch slop for the given child view", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs an input object with the given name , expected number and character set", "true": "creates a new input that can be added to a block", "bleu": 0.08839374326825923, "rouge": 0.08176943699731902}, {"predict": "create and parse the class manager", "true": "create a new instance of the class manager", "bleu": 0.31149111610852515, "rouge": 0.5570776255707762}, {"predict": "display the current render surface", "true": "display the current render surface", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the last login time", "true": "returns the last login time", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a stream of the words in this text , at the end of the words", "true": "creates and returns a stream of the words in the given text", "bleu": 0.3807134866446316, "rouge": 0.5865384615384615}, {"predict": "add the supplied application info objects to the list , and en queue it into the list to broadcast when notify ( ) is called", "true": "add the supplied application info objects to the list , and en queue it into the list to broadcast when notify ( ) is called", "bleu": 1.0, "rouge": 1.0}, {"predict": "match a field to not match query not already met", "true": "filter the matching objects for the one ( s ) who os e named field is equal to value", "bleu": 0.056719707763611286, "rouge": 0.13062098501070665}, {"predict": "removes indicator with playlists and converting it to playlists database", "true": "removes some markup that appears on the plot for youtube videos", "bleu": 0.11406351620367239, "rouge": 0.09442724458204334}, {"predict": "construct dash array string from table", "true": "creates the dash array string", "bleu": 0.4111336169005197, "rouge": 0.5545454545454546}, {"predict": "cas head field", "true": "cas head field", "bleu": 1.0, "rouge": 1.0}, {"predict": "positions the given pattern into a position", "true": "finds the position of the given pattern in this blob", "bleu": 0.23813694985189848, "rouge": 0.34205607476635513}, {"predict": "flush underlying stream", "true": "loads the most recent generation file", "bleu": 0.16620830006469264, "rouge": 0.0}, {"predict": "reads a line of text that contains no line of text", "true": "read a line from the given stream", "bleu": 0.14991106946711685, "rouge": 0.2314990512333966}, {"predict": "replaces unprintable characters by their escaped ( or unicode escaped ) equivalents in the given string", "true": "replaces unprintable characters by their e spaced ( or unicode escaped ) equivalents in the given string", "bleu": 0.7780667585391489, "rouge": 0.9041501976284585}, {"predict": "check if the given table exists", "true": "check if the table exists by issuing a select", "bleu": 0.29654680334613515, "rouge": 0.6434599156118143}, {"predict": "process an http : http : / www - www - www - form", "true": "we found a \" : \" and is now trying to read either scheme , username / password", "bleu": 0.07351233247674872, "rouge": 0.12224448897795591}, {"predict": "tests if the given script contains a sql script string", "true": "does the provided sql script contain the specified delimiter ?", "bleu": 0.17827531042796255, "rouge": 0.3}, {"predict": "writes bytes from byte array to output stream", "true": "writes the bytes on the output stream", "bleu": 0.239802967618271, "rouge": 0.5398230088495575}, {"predict": "establish an invariant that the specified service is not in the quorum state", "true": "establish an invariant that the specified service is a not joined with the met quorum", "bleu": 0.5487875691327668, "rouge": 0.7757225433526012}, {"predict": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "true": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "bleu": 1.0, "rouge": 1.0}, {"predict": "do the appropriate processing for cfb mode encryption", "true": "do the appropriate processing for cfb mode encryption", "bleu": 1.0, "rouge": 1.0}, {"predict": "print the document as text", "true": "prints a string without adding a / n at the end", "bleu": 0.08222966016687185, "rouge": 0.11708253358925146}, {"predict": "adds each of the groups to the consistency group of each parents of the groups", "true": "adds each of the provided connection groups to the current tree as children of their respective parents", "bleu": 0.28335685330044097, "rouge": 0.5562310030395137}, {"predict": "load the looks up to a java locator ' s structure", "true": "loads a map input into this cartesian plot", "bleu": 0.11390778025531027, "rouge": 0.108348134991119}, {"predict": "adds a decoration at the end of the list", "true": "add another line decoration into the composite line decoration", "bleu": 0.15619699684601276, "rouge": 0.2222222222222222}, {"predict": "parse a link title", "true": "attempt to parse link title ( <unk> quotes ) , returning the string or null if no match", "bleu": 0.015344279425461304, "rouge": 0.24465240641711228}, {"predict": "records s rdf command on command , audit", "true": "record block volume related event and audit", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "add the data of a specified probability", "true": "add a single value with weight 1", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "returns the number of items in the list", "true": "returns the number of recent items currently stored", "bleu": 0.46713797772820004, "rouge": 0.625}, {"predict": "create a warning diagnostic", "true": "create a warning diagnostic", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new evaluation on the given pattern", "true": "generate the code for the specified pattern", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "handles add request to server configuration", "true": "called on request from the ui to delete an event handler", "bleu": 0.10624253482403696, "rouge": 0.2234432234432234}, {"predict": "remove a graph listener", "true": "remove a graph listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if this connection is ready to host new streams", "true": "returns true if this connection is ready to host new streams", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a column to this table", "true": "adds the given column to this table at the given position in the column list", "bleu": 0.14357508387172072, "rouge": 0.44202898550724634}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes the dialog settings from the settings", "true": "initializes all components used in dialog", "bleu": 0.20556680845025982, "rouge": 0.31202046035805625}, {"predict": "constructs a new batched image request object", "true": "constructs a new batched image request object", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the norm of a vector", "true": "computes the norm of a vector", "bleu": 0.8091067115702212, "rouge": 0.8333333333333334}, {"predict": "gets a string representation of the value", "true": "gets a string representation of the value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the hash code for this filter", "true": "probably should recheck this later", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "de serialize archive for archive archive", "true": "de serializes exam p <unk> stored in <unk> in get archive directory ( )", "bleu": 0.06443935473636557, "rouge": 0.18654434250764526}, {"predict": "converts all rings in the graph into minimal edge rings", "true": "convert the maximal edge rings found by the initial graph travers al into the minimal edge rings required by jt s polygon topology rules", "bleu": 0.06880448353714187, "rouge": 0.38330341113105926}, {"predict": "create loop to customize the mac vector", "true": "generate the mac ( message authentication code ) from a security - encrypted message to do : public for testing - look to remove", "bleu": 0.023159544100502027, "rouge": 0.11742059672762271}, {"predict": "removes an image sharing listener", "true": "removes a listener on image sharing events", "bleu": 0.2736570128577077, "rouge": 0.48541114058355433}, {"predict": "updates the wave file size", "true": "updates the overall and the chunk 2 sizes", "bleu": 0.1971902775417715, "rouge": 0.2953995157384988}, {"predict": "write the new journal to the output file", "true": "write the new journal to the output file", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the matches the string matches the given array", "true": "returns true if the char segment matches the string", "bleu": 0.27901593935858265, "rouge": 0.5313588850174217}, {"predict": "called when the mouse button has been released", "true": "mouse released , this will be called when the spinner button is released", "bleu": 0.18375231731070077, "rouge": 0.45658682634730546}, {"predict": "evaluates the maximum class value for a series of percent factor", "true": "gets the max value for a given class in a transposed chart when using <unk>", "bleu": 0.16309710371282518, "rouge": 0.2993865030674847}, {"predict": "adds the given channel to the channel", "true": "adds the channel to the model and broadcasts a channel add event", "bleu": 0.22117541221307574, "rouge": 0.6029654036243821}, {"predict": "joins an array of objects into one string with separator", "true": "joins an array of objects into one string without separators", "bleu": 0.7860753021519787, "rouge": 0.8}, {"predict": "test if a key is a trait", "true": "returns true if the store can handle the provided trait and false if it cannot", "bleu": 0.06555660318294844, "rouge": 0.17062937062937064}, {"predict": "create supply document , opcode", "true": "create supply based in out bound line", "bleu": 0.24084874887188915, "rouge": 0.32360742705570295}, {"predict": "returns the number of name - value pairs in this list", "true": "returns the number of parameters in this parameter file", "bleu": 0.3646285861936466, "rouge": 0.6110183639398998}, {"predict": "returns the largest ( \" top \" ) n values in the column", "true": "returns the largest ( \" top \" ) n values in the column", "bleu": 1.0, "rouge": 1.0}, {"predict": "load the values for this step from an xml node", "true": "load the values for this step from an xml node", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one", "true": "adds a mapping from the specified key to the specified value , replacing the previous mapping from the specified key if there was one", "bleu": 1.0, "rouge": 1.0}, {"predict": "read data - - input the mod bus message from d in", "true": "read data - - read the reference word", "bleu": 0.3026643726685863, "rouge": 0.5187074829931972}, {"predict": "compute the dot product ( or - z ) of a vector", "true": "return the dot product to a dense feature vector", "bleu": 0.21401603033752975, "rouge": 0.48878205128205127}, {"predict": "creates the new instructions , in lining each instantiation of each subroutine until the code is fully elaborated", "true": "creates the new instructions , in lining each instantiation of each subroutine until the code is fully elaborated", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the standard deviation ( square root of the specified list of doubles", "true": "gets the standard deviation from a list of numbers", "bleu": 0.21142141714303078, "rouge": 0.4699537750385208}, {"predict": "called when there is new data to the client", "true": "trims the capacity of this instance to be the list ' s current size", "bleu": 0.08961856124931385, "rouge": 0.1673525377229081}, {"predict": "set bit ( in t n ) outside zero", "true": "set bit ( in t n ) outside zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "compares a date with a date", "true": "compares a date with a boolean", "bleu": 0.8091067115702212, "rouge": 0.8333333333333334}, {"predict": "decodes the next chunk of data from the stream", "true": "read ahead and decode the next chunk of solutions", "bleu": 0.392814650900513, "rouge": 0.4444444444444444}, {"predict": "creates a new udp client socket that uses udp to the given underlying stream", "true": "create a new udp client socket with the specified logger", "bleu": 0.33649324423301513, "rouge": 0.5154929577464789}, {"predict": "multiply by values by given type", "true": "will multiply all values by a given double", "bleu": 0.236682065782701, "rouge": 0.5570776255707762}, {"predict": "use this function to determine if the given level is a level", "true": "is logging level logged", "bleu": 0.11498759556447223, "rouge": 0.27477477477477474}, {"predict": "compute the folder children of the given folder in the folder to add them to this g", "true": "starting at this folder , create package fragments and add the fragments that are not ex cl used to the collection of children", "bleu": 0.07392597395228379, "rouge": 0.14604948124501196}, {"predict": "quote the given file", "true": "quotes the absolute path of the given file iff it contains whitespace", "bleu": 0.09050415858572283, "rouge": 0.34398496240601506}, {"predict": "read data from net buffer", "true": "read data from net buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method clears and un saved top - level , and clear top - level event", "true": "called when this index is closed", "bleu": 0.07692375026049747, "rouge": 0.09902597402597402}, {"predict": "removes an image consumer from the list of consumers interested in data for this image", "true": "remove an image consumer from the list of consumers interested in data for this image", "bleu": 0.9306048591020997, "rouge": 0.9333333333333336}, {"predict": "should a navigation bar appear at the bottom of the screen in the current device configuration ? a navigation bar may appear on the right side of the screen in certain configurations", "true": "should a navigation bar appear at the bottom of the screen in the current device configuration ? a navigation bar may appear on the right side of the screen in certain configurations", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new value to the pool , removing a new connection to match auto - periodically", "true": "update the aperture value and ensure its value stays in the right range", "bleu": 0.07994607499472013, "rouge": 0.1366181410974244}, {"predict": "builds the invocation cache and returns its required invocation", "true": "builds the invocation , saving its value keyed by the protocol key", "bleu": 0.19902510067151713, "rouge": 0.3713850837138508}, {"predict": "this method compute the mark of the audit", "true": "this method compute the mark of the audit", "bleu": 1.0, "rouge": 1.0}, {"predict": "gcd : the first number is zero", "true": "gcd : the first number is zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "test for a position", "true": "test that if king capture is possible , only a king capture move is returned in the move list", "bleu": 0.009351487442933324, "rouge": 0.15561224489795916}, {"predict": "lay ( 23 , 12 , 12 , n ) and corrects ( n ) or 32 ( 23 , 12 )", "true": "performs error detection and returns a corrected copy of the 24 - bit message that starts at the start index", "bleu": 0.05538696232597745, "rouge": 0.048031496062992125}, {"predict": "validate the view parameters for all expressions", "true": "validate the view parameter expressions and evaluate the expressions returning the result object", "bleu": 0.15513171017484098, "rouge": 0.3794712286158632}, {"predict": "parse an interface string", "true": "parses relative directory from <unk> definition ( in format starting from svn 1", "bleu": 0.03184506239916981, "rouge": 0.0}, {"predict": "picks an encoding for an external entity", "true": "picks an encoding for an external entity", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates a url for a particular item", "true": "generates a url for a particular item within a series", "bleu": 0.6514390575310556, "rouge": 0.7981308411214955}, {"predict": "returns true if the thread should expire instead of going to the idle state", "true": "returns true if the thread should expire instead of going to the idle state", "bleu": 1.0, "rouge": 1.0}, {"predict": "displays a display message", "true": "sets the values to ui model", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "construct an array with the file as a file in file", "true": "char * in file ; input file long * a ; address of output tiled image operation nx ny in t * nx , * ny ; size of output tiled image operation in t * scale ; scale factor for <unk>", "bleu": 0.010171267522952457, "rouge": 0.10240626748740905}, {"predict": "create a script", "true": "create a script from a new database", "bleu": 0.2635971381157267, "rouge": 0.5596330275229358}, {"predict": "return a real number with a cauchy distribution", "true": "returns a random real number from the cauchy distribution", "bleu": 0.2451240194075422, "rouge": 0.5820610687022901}, {"predict": "add the given group to the list of job groups that will never be deleted by this processor , even if a pre - processing - command to delete the group is encountered", "true": "add the given group to the list of job groups that will never be deleted by this processor , even if a pre - processing - command to delete the group is encountered", "bleu": 1.0, "rouge": 1.0}, {"predict": "print the entire layout", "true": "print the entire layout", "bleu": 1.0, "rouge": 1.0}, {"predict": "requests from the via reading", "true": "wake a connection from a select / poll keep alive", "bleu": 0.10043553373039076, "rouge": 0.12577319587628866}, {"predict": "add a field to the multi - query specification", "true": "adds a field to run the multi match against", "bleu": 0.31239399369202553, "rouge": 0.5555555555555556}, {"predict": "encodes a message", "true": "writes the basis to an output stream", "bleu": 0.11909345107359583, "rouge": 0.0}, {"predict": "request a request to be executed immediately before any pending requests", "true": "signal that currenlty there are no more pending a ck s", "bleu": 0.12605968092174913, "rouge": 0.09090909090909091}, {"predict": "converts an array of integers to a string", "true": "converts an array into a string", "bleu": 0.3549481056010052, "rouge": 0.7331730769230769}, {"predict": "copies the provided byte array into this scanner , if the target is needed", "true": "copy the contents of the source array to the target array", "bleu": 0.13217947626377288, "rouge": 0.3270777479892761}, {"predict": "computes the location on a great circle distance", "true": "computes the angular distance of the great circle path between this location and a specified location", "bleu": 0.10980266522628493, "rouge": 0.31443298969072164}, {"predict": "parses the manifest from the given manifest", "true": "an example manifest file looks like { \" name \" : \" dynamo db - export \" , \" version \" : 3 , \" entries \" : { \" url \" : \" s 3 : / / path / to / object / <unk> dd <unk>", "bleu": 0.000531135532008891, "rouge": 0.03205465055176038}, {"predict": "read bytes until the count is satisfied", "true": "read bytes until the count is satisfied", "bleu": 1.0, "rouge": 1.0}, {"predict": "fire when the given operator is moved in this operator", "true": "fire when an operator has been moved", "bleu": 0.18850319022747347, "rouge": 0.48605577689243035}, {"predict": "removes a single individual", "true": "removes a single individual", "bleu": 1.0, "rouge": 1.0}, {"predict": "modifies the variable label", "true": "replaces occurrences of the old variable identifier <unk> with the new identifier new id", "bleu": 0.032639898338235177, "rouge": 0.20198675496688742}, {"predict": "repeats the specified substring a number of times", "true": "repeats the specified substring a number of times", "bleu": 1.0, "rouge": 1.0}, {"predict": "wait for a maximum amount of time for a state change event to occur", "true": "wait for a maximum amount of time for a state change event to occur", "bleu": 1.0, "rouge": 1.0}, {"predict": "pick the leaf that minimize cost", "true": "pick the leaf that minimize cost", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct an add user fields with the given set of user fields", "true": "constructs a new add user fields", "bleu": 0.19338531381761725, "rouge": 0.3546511627906977}, {"predict": "parse the color name from a string and return the flags", "true": "we accept 0 x and # prefixes", "bleu": 0.11390778025531027, "rouge": 0.1157495256166983}, {"predict": "get bounds of w f node icon", "true": "get bounds of w f node icon", "bleu": 1.0, "rouge": 1.0}, {"predict": "drop all the worker threads that are awaiting their active workers", "true": "signals the given workers to end", "bleu": 0.12605968092174913, "rouge": 0.2484725050916497}, {"predict": "returns a clone of this map", "true": "return a copy of the current frame", "bleu": 0.20693220168471366, "rouge": 0.3034825870646766}, {"predict": "override hash code", "true": "compute a combined hash code from the supplied objects using the supplied seed", "bleu": 0.02522532260784596, "rouge": 0.2246777163904236}, {"predict": "calculates and returns the state transition between m and high inclusive range ( text ) and high is used for the following direction ( iv )", "true": "calculate state transition percentage", "bleu": 0.06143498010483918, "rouge": 0.15365239294710328}, {"predict": "get a setter of a method name for a given method", "true": "creates a unique mangled method name based on the method name and the method parameters", "bleu": 0.11840515855353498, "rouge": 0.2993865030674847}, {"predict": "saves a state of this attribute , if possible , or ensures that the buffer is full , or ensures the word has been written", "true": "saves the existing attribute states", "bleu": 0.057783239927083445, "rouge": 0.15155279503105593}, {"predict": "pulls a string off the queue , up to but exclusive of the match sequence , or to the queue running out", "true": "pulls a string off the queue , up to but exclusive of the match sequence , or to the queue running out", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints all ip addresses ( and local ) in order", "true": "prints out the given list of defined ip addresses", "bleu": 0.17827531042796255, "rouge": 0.31881533101045295}, {"predict": "close the underlying input stream", "true": "dispose the encoder , decoder , and the callback for the decoded messages", "bleu": 0.05512018958855254, "rouge": 0.10286677908937607}, {"predict": "calculates the number of transposition between two strings", "true": "calculates the number of transposition between two strings", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the given string ( s )", "true": "uses the parser format instance", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "returns a non - parallel stream of this it er able", "true": "stream the ts data contents", "bleu": 0.11390778025531027, "rouge": 0.13406593406593406}, {"predict": "util method to write an attribute with the ns prefix", "true": "util method to write an attribute with the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "registers an output file for two methods for two methods", "true": "constructs and registers a mod", "bleu": 0.12605968092174913, "rouge": 0.1418604651162791}, {"predict": "arranges the blocks with no constraint on the width and no height", "true": "arranges the blocks without any constraints", "bleu": 0.19338531381761725, "rouge": 0.3546511627906977}, {"predict": "checks if content type is content", "true": "check whether the content - type field of the properties section ( if present ) in the given message matches the provided string ( where null matches if there is no content type present", "bleu": 0.003251007023732498, "rouge": 0.17758369723435224}, {"predict": "generates a certificate that can be used with the private key", "true": "create a x", "bleu": 0.11390778025531027, "rouge": 0.15926892950391647}, {"predict": "handles create site request", "true": "handles next button request", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "checks that all classes that have the same dependencies", "true": "check that all dependencies are satisfied", "bleu": 0.19960198807747329, "rouge": 0.4149659863945578}, {"predict": "bean context membership listener method", "true": "bean context membership interface method", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "check url references for path object", "true": "find the first parent directory that exists and check if this directory is write able", "bleu": 0.04928854007377984, "rouge": 0.08840579710144927}, {"predict": "returns the string representation of the entire s", "true": "returns the textual description of the time value", "bleu": 0.2653856085536222, "rouge": 0.5}, {"predict": "serializes only the un parsed rd n , for compactness and to avoid any implementation dependency", "true": "write object is called to save the state of the url to an object output stream", "bleu": 0.08513012360883544, "rouge": 0.125}, {"predict": "report the beginning of an entity", "true": "report the beginning of an entity", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the given name is a java keyword", "true": "determines whether the given name is a java keyword", "bleu": 0.8801117367933934, "rouge": 0.8888888888888888}, {"predict": "extracts the url from the model", "true": "override this method to provide a custom way of extracting the imported resource url", "bleu": 0.06443935473636557, "rouge": 0.18654434250764526}, {"predict": "this method will only be used for testing this class as well as well as well as well as well as it represents the two separate period", "true": "compares the equality of two <unk> tors", "bleu": 0.04970745472800838, "rouge": 0.13160733549083062}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "renames an object type , e", "true": "renames an object type , e", "bleu": 1.0, "rouge": 1.0}, {"predict": "write a list of file objects in an xml document into a list of elements", "true": "write a list of strings to document as elements with given tag name", "bleu": 0.2490328638846773, "rouge": 0.43416370106761565}, {"predict": "creates a new d policy constraints dialog", "true": "creates a new d policy constraints dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "invalidate the caches to be used for a better admin user", "true": "invalidates all caches for all tenants", "bleu": 0.12605968092174913, "rouge": 0.2484725050916497}, {"predict": "flatten a byte into an xml serialize r", "true": "flatten a byte into an xml serialize r", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the strings to the file , one per line", "true": "write the strings to the file , one per line", "bleu": 1.0, "rouge": 1.0}, {"predict": "allows you to cancel all requests currently in queue or running , by set tag , if passed", "true": "allows you to cancel all requests currently in queue or running , by set tag , if passed tag is null , will not attempt to cancel any requests , if tag is null on request handle , it cannot be canceled by this call", "bleu": 0.22313016014842982, "rouge": 0.5304347826086957}, {"predict": "utility function to draw a circle margin margin of x and y coordinates", "true": "draw a snap horizontal margin indicator", "bleu": 0.1350862565735141, "rouge": 0.3382624768946396}, {"predict": "a record subset of the subset record from the subset of the subset record", "true": "the subset of the original record that contains the values for the given subset schema", "bleu": 0.25761331100951257, "rouge": 0.4797752808988765}, {"predict": "queue the operation queue for execution", "true": "queues the operation for execution", "bleu": 0.3655552228545124, "rouge": 0.7393939393939394}, {"predict": "create a new array that is a cell", "true": "interpret string of digits into cells", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "transforms the shape into the center of the shape", "true": "return the supplied shape , translated to the coordinates that result from calling transform on its center", "bleu": 0.07296176435240816, "rouge": 0.29151732377538825}, {"predict": "prints out a list , starting at the specified indentation , to the specified print writer", "true": "prints out a list , starting at the specified indentation , to the specified print writer", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes all components used in dialog", "true": "initializes all components used in dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "obtains the revocation status of a certificate using o csp", "true": "obtains the revocation status of a certificate using o csp using the most common defaults", "bleu": 0.6065306597126334, "rouge": 0.7721518987341772}, {"predict": "for composite channel , this method tries to check the composite composite composite transactions , and associated with the specified alpha channel", "true": "return a composite type object for the specified alpha composite rule", "bleu": 0.11856660123276004, "rouge": 0.2579281183932347}, {"predict": "removes the specified tracking icon", "true": "removes the specified tracking icon", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the previous state that will be drawn in the machine", "true": "returns a list of all the <unk> used by the lts rules", "bleu": 0.11510518494396255, "rouge": 0.17256011315417258}, {"predict": "remove parent paths from external file and return path to make sure the parent will be accepted", "true": "convert a file into a relative path from a given parent", "bleu": 0.09083627868206415, "rouge": 0.22289890377588306}, {"predict": "returns true if separation in pixels are equal to b", "true": "check whether two floating point values match with a given precision", "bleu": 0.0959156018869021, "rouge": 0.0}, {"predict": "ends the current element context and gets back to the parent context", "true": "ends the current element context and gets back to the parent context", "bleu": 1.0, "rouge": 1.0}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "enters a new scope by appending any necessary whitespace and the given bracket", "true": "enters a new scope by appending any necessary whitespace and the given bracket", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the logarithm of a given value", "true": "calculates the log of a given value", "bleu": 0.5946035575013605, "rouge": 0.8571428571428571}, {"predict": "uploads a file to the destination", "true": "uploads a file from source to the drop box", "bleu": 0.29654680334613515, "rouge": 0.6434599156118143}, {"predict": "creates the zip file", "true": "create a file object to which we can safely zip a file", "bleu": 0.0538140946637381, "rouge": 0.22932330827067668}, {"predict": "remove a custom data handler for a given column name", "true": "remove a custom data handler for a given column name", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if tag is empty ( ie is no queued )", "true": "determines whether the tag has no fields specified", "bleu": 0.11498759556447223, "rouge": 0.2074829931972789}, {"predict": "restore existing ( if i", "true": "restore available badges from save instance", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "implements the abstract region was constructed", "true": "touch the worker if you have a http connection that needs to wait", "bleu": 0.06878769894132081, "rouge": 0.09870550161812298}, {"predict": "construct a catalog entry of the specified catalog", "true": "construct a catalog entry of the specified type", "bleu": 0.8633400213704505, "rouge": 0.875}, {"predict": "adds a new message to the list of characters", "true": "adds a message waiting", "bleu": 0.19960198807747329, "rouge": 0.4959349593495934}, {"predict": "pushes a new stack on to the top of this stack", "true": "push a new scope on top of the scope stack", "bleu": 0.21200626759025185, "rouge": 0.5763779527559055}, {"predict": "logs diagnostic messages about the given class loader and it ' s hierarchy", "true": "logs diagnostic messages about the given class loader and it ' s hierarchy", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a member to the startup member", "true": "add a gossip member to the list of members to start with", "bleu": 0.201267033117133, "rouge": 0.5024711696869852}, {"predict": "gets files for all registered file append ers", "true": "gets files for all registered file append ers", "bleu": 1.0, "rouge": 1.0}, {"predict": "is the auto - reduction case sensitive ?", "true": "returns the case sensitive search switch", "bleu": 0.22679164443904004, "rouge": 0.43990384615384615}, {"predict": "test whether the given node is a namespace dec l node", "true": "test whether the given node is a namespace dec l node", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the hash code value for this object", "true": "returns the hash code value for this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new sub model i mpl", "true": "creates a simple model using default resource bundle", "bleu": 0.22772101321113858, "rouge": 0.3952483801295896}, {"predict": "function two vectors for equality", "true": "tests this function for equality with an arbitrary object", "bleu": 0.17348474258688365, "rouge": 0.40757238307349664}, {"predict": "for custom purposes", "true": "<unk> a string color ( # ff <unk> ) to an in t color", "bleu": 0.01154872631036983, "rouge": 0.0}, {"predict": "generates the default action", "true": "perform the default action", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "start the travers al at the given node", "true": "start the travers al at the given node", "bleu": 1.0, "rouge": 1.0}, {"predict": "process an end of an element", "true": "xml parser : closing xml tag", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "cancels this host in its main order", "true": "cancel all observer relations that this server has established with this ' real tion ' s endpoint", "bleu": 0.04451531901458464, "rouge": 0.0775095298602287}, {"predict": "returns the value at index", "true": "returns an instance ' s attribute value in internal format", "bleu": 0.11115018927487523, "rouge": 0.2515463917525773}, {"predict": "initialize the layout with starting values", "true": "initialize the layout with starting values", "bleu": 1.0, "rouge": 1.0}, {"predict": "decodes lz w image data into pixel array", "true": "decodes lz w image data into pixel array", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the value that corresponds to this key", "true": "find the value that corresponds to this key", "bleu": 1.0, "rouge": 1.0}, {"predict": "decodes the given base 58 string into the original data bytes", "true": "decodes the given base 58 string into the original data bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a match pattern from a pattern and template", "true": "construct a match pattern from a pattern and template", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes the files and sub directories from this file", "true": "closes the b tree and then deletes its data files", "bleu": 0.15881076016027915, "rouge": 0.20854700854700853}, {"predict": "check whether an annotation type has no prefix suffix", "true": "checks to see if an annotated type has no prefix", "bleu": 0.36789852486668184, "rouge": 0.5213675213675214}, {"predict": "formats a string that is at least a valid format", "true": "throws an exception if the format is not syntactically valid", "bleu": 0.14991106946711685, "rouge": 0.2}, {"predict": "log given log interface , logging core and log out to it", "true": "initializes logger into / from log reference passed in", "bleu": 0.10390302174233558, "rouge": 0.09775641025641024}, {"predict": "receive one byte from the port and convert it into string", "true": "receive one byte from the port and convert it into string", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks that a list of constraint can be used for given monitor", "true": "checks all spin : constraints for a given resource", "bleu": 0.13065113298388567, "rouge": 0.2932692307692307}, {"predict": "check if the imdb id is a valid or is a valid person id", "true": "checks if is valid imdb id", "bleu": 0.13834368456410945, "rouge": 0.43109540636042404}, {"predict": "show the video video", "true": "move to the activity where we show the recorded video", "bleu": 0.11337974147240094, "rouge": 0.3978260869565217}, {"predict": "writes all the elements from the given array into the given buffer", "true": "takes a list of coordinates and converts it to km l", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "checks if the exception is one of the intended server side exception that has been thrown over the server", "true": "checks if the exception is one of the intended server side exception that has been thrown over the a idl layer", "bleu": 0.8512503198956609, "rouge": 0.89195775792039}, {"predict": "swap the y - position of the vertical coordinate buffer , which is a rotation at the given buffer", "true": "swap the matrices so that the largest value is on the pivot", "bleu": 0.10079037376973918, "rouge": 0.33627342888643885}, {"predict": "returns true if the popup that can be run at or", "true": "returns whether popup is allowed to be shown above the task bar", "bleu": 0.1307847403141535, "rouge": 0.25884016973125884}, {"predict": "creates a job and create a job object for the specified parameters", "true": "creates a job based on the specified act i viti xml class path resource location and defines a e mr cluster definition", "bleu": 0.10739983258001305, "rouge": 0.2793040293040293}, {"predict": "finds the main class", "true": "find all classes below a certain directory which contain main ( ) classes", "bleu": 0.037870374782798366, "rouge": 0.1073943661971831}, {"predict": "validate valid xml string", "true": "validates whether the given string only contains valid xml characters", "bleu": 0.11337974147240094, "rouge": 0.26521739130434785}, {"predict": "write the area to the file", "true": "just for debugging convenience", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "checks that a stack is compatible with the given access type", "true": "defines when a method access flags are compatible with instant run technology", "bleu": 0.15553014371537452, "rouge": 0.25884016973125884}, {"predict": "create a sequence containing a vector of objects", "true": "create a sequence containing a vector of objects", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a single process manager", "true": "configures with specified thread pool", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "checks the object after serialization", "true": "after reading an object from the input stream , do a simple verification to maintain class in variants", "bleu": 0.02411424781372451, "rouge": 0.07891332470892627}, {"predict": "expand a location based on the provided segment , returning in pt", "true": "compute an offset segment for an input segment on a given side and at a given distance", "bleu": 0.08145723098662616, "rouge": 0.06688596491228069}, {"predict": "returns the element at the specified location", "true": "returns the element at the specified location in this vector", "bleu": 0.6514390575310556, "rouge": 0.7981308411214955}, {"predict": "tidy up map matrix for un managed rules and qo s", "true": "creates the qo s rule objects from the given json object and returns them in a list", "bleu": 0.09336422302412363, "rouge": 0.1375422773393461}, {"predict": "crafts the given byte array with specific character values for section - 9 , and attributes of rfc 2865 with the maximum octet", "true": "custom implementation of to octets to ensure a string value too long will be truncated properly in view of the space needed by the type , length , and identifier", "bleu": 0.06109047004908762, "rouge": 0.11057401812688822}, {"predict": "formats number of decimals to value of pretty printing", "true": "this function returns decimals value for a double", "bleu": 0.15619699684601276, "rouge": 0.2378167641325536}, {"predict": "flushes this output stream and forces any buffered output bytes to be written by the stream", "true": "flush all buffered data to the underlying output stream", "bleu": 0.1203921753741131, "rouge": 0.33701657458563533}, {"predict": "move or copy files to the given destination", "true": "does the copying", "bleu": 0.16036590969929357, "rouge": 0.19805194805194803}, {"predict": "validate the c octet string", "true": "validate the c - octet string", "bleu": 0.49473859088183875, "rouge": 0.8944281524926685}, {"predict": "create a proper bounds for the components on the screen , approaching control points , y 1 , y 2 , and y 2 , y 2 , y 2 , y 2 )", "true": "create a bounding rectangle given the four coordinates , where the upper left corner of the rectangle is the minimum x , y values and the width and height are the difference between xs and ys", "bleu": 0.06419356380928519, "rouge": 0.19897483690587137}, {"predict": "add button for clearing graph data", "true": "add button for clearing graph data", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate the levenshtein distance for a string", "true": "from https : / / en", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "create a file object which contains the numbers in the file system", "true": "this private method just creates a number of files with a specific extension", "bleu": 0.09559539481714499, "rouge": 0.07942708333333334}, {"predict": "returns true if all entities in this set are all state", "true": "determine if the expression is an <unk>", "bleu": 0.11390778025531027, "rouge": 0.1157495256166983}, {"predict": "parses the given string and replaces all occurrences of ' \\ n ' , ' \\ r ' and ' \\ r \\ n ' with the given line separator", "true": "parses the given string and replaces all occurrences of ' \\ n ' , ' \\ r ' and ' \\ r \\ n ' with the given line separator", "bleu": 1.0, "rouge": 1.0}, {"predict": "adjusts the name to avoid name conflicts in the new session and , if the name is adjusted , adjusts the position so the user can see the two nodes", "true": "adjusts the name to avoid name conflicts in the new session and , if the name is adjusted , adjusts the position so the user can see the two nodes", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a notification to the workload", "true": "adds a ping notification to the current list", "bleu": 0.31149111610852515, "rouge": 0.5570776255707762}, {"predict": "create an nfs data store for generating that we be used to create the temp file", "true": "creates an nfs data store for the hosts in the cluster", "bleu": 0.2928298013714697, "rouge": 0.45979899497487436}, {"predict": "check the size of the array and increase if needed", "true": "check the size of the array and increase if needed", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct an album object", "true": "used for open an image from an unknown content storage", "bleu": 0.08017158404431235, "rouge": 0.13260869565217392}, {"predict": "checks that the given substring is a valid internal class name", "true": "checks that the given substring is a valid internal class name", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize a task when there is either a task done", "true": "for a given set of starting tasks , initialize the associated sessions with a proper blocking semaphore and value of number of tasks to be run", "bleu": 0.030266522934265804, "rouge": 0.10286677908937607}, {"predict": "creates calibration charts for the simulation and benchmark / survey data set param color scheme ( red scheme , autumn , muted rainbow , lollapalooza , french girl , m 8 colors ) param map of number of trips per distances class , split by mode param map", "true": "creates calibration charts for the simulation and benchmark / survey data set param color scheme ( red scheme , autumn , muted rainbow , lollapalooza , french girl , m 8 colors ) param map of number of trips per distances class , split by mode param map", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes dollar ( $ ) prefix from the given name if it exists", "true": "return the unquoted version of name ( stripping the start and end ' ` ' characters if present )", "bleu": 0.07923788515260259, "rouge": 0.18136769078295345}, {"predict": "compares this name with the given player name and returns true if it is declared by the specified player", "true": "is the specified player the leader of this group ?", "bleu": 0.1378592993183041, "rouge": 0.29221556886227545}, {"predict": "re - do the last undone operation for a specific rich text editor", "true": "re - do the last undone operation for a specific rich text editor", "bleu": 1.0, "rouge": 1.0}, {"predict": "reports result using future", "true": "decodes outcome to return result or throw unchecked exception", "bleu": 0.10294235160901445, "rouge": 0.14386792452830188}, {"predict": "writes out protein view to an index", "true": "writes out protein view to an zipped and compressed html file", "bleu": 0.47486944442513457, "rouge": 0.6409807355516637}, {"predict": "tests layout for multiple sql statements", "true": "test bf <unk> convert sql casts", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "save macro : = = b ,", "true": "writes all bytes to n ce cs memory as long as there are no user input errors", "bleu": 0.03743277218323974, "rouge": 0.0}, {"predict": "writes the to b file", "true": "write contour into a lf 0 file in <unk> k format", "bleu": 0.08222966016687185, "rouge": 0.11708253358925146}, {"predict": "start monitoring the current thread", "true": "start monitoring the current thread", "bleu": 1.0, "rouge": 1.0}, {"predict": "depth first search of a parent node", "true": "find an element by its \" id \" attribute ; null if no element is found", "bleu": 0.043181135652468706, "rouge": 0.0}, {"predict": "transfers node , if necessary , to sync queue after a cancelled wait", "true": "transfers node , if necessary , to sync queue after a cancelled wait", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates a star version of a regular expression", "true": "construct a regular expression matching the <unk> closure of the language matched by the argument regular expression", "bleu": 0.10245981675678217, "rouge": 0.3004926108374384}, {"predict": "remove the specified element from the selection", "true": "remove the specified element from the selection", "bleu": 1.0, "rouge": 1.0}, {"predict": "pass mouse event straight through to delegate", "true": "pass mouse event straight through to delegate", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints a formatted string to standard output , using the locale and the specified format string and arguments ; then flushes standard output", "true": "prints a formatted string to this output stream , using the specified locale , format string , and arguments , and then flushes this output stream", "bleu": 0.296030265940939, "rouge": 0.6863004632693581}, {"predict": "process the source tree to the output result", "true": "process the source tree to the output result", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests comparison of attributes to different values", "true": "tests comparison sorts attributes before elements", "bleu": 0.2626909894424158, "rouge": 0.4680306905370844}, {"predict": "adds an instruction to the output", "true": "adds an instruction to the output suffix", "bleu": 0.846481724890614, "rouge": 0.9104477611940297}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the selector", "true": "close selector if needed", "bleu": 0.38498150077635496, "rouge": 0.2785388127853881}, {"predict": "returns the sub value of two numbers", "true": "returns the value of subtracting the first from the second number", "bleu": 0.17359100558362855, "rouge": 0.4273204903677758}, {"predict": "adds the provided optional attributes", "true": "adds the provided required attributes", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "displays a dialog box showing an error showing the displays", "true": "shows up history dialog", "bleu": 0.12605968092174913, "rouge": 0.1548223350253807}, {"predict": "returns the number of elements in this queue", "true": "returns the number of elements in this queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads all bytes from an input stream", "true": "read a stream into a byte", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "construct a revere sed sequence from an publisher", "true": "construct a lazy future stream from an publisher", "bleu": 0.3549481056010052, "rouge": 0.625}, {"predict": "creates a new proto bu f handler", "true": "creates a new proto bu f handler", "bleu": 1.0, "rouge": 1.0}, {"predict": "the real guts of parse network response", "true": "the real guts of parse network response", "bleu": 1.0, "rouge": 1.0}, {"predict": "find an notification associated with this notification id", "true": "get a notification by its id", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "creates a new simple gradient using the maximum count for the given max count", "true": "setup the green gradient", "bleu": 0.09782375748961449, "rouge": 0.1234817813765182}, {"predict": "writes a plain text pseudo random number generator", "true": "writes a histogram as a tab - separated file with two columns : the first column indicates the bin key ( e", "bleu": 0.03667558269465418, "rouge": 0.12298387096774194}, {"predict": "this takes a stage of a stage of a value and returns a plain stage of a value", "true": "this takes a stage of a stage of a value and returns a plain stage of a value", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a character and a number", "true": "add a character and a number", "bleu": 1.0, "rouge": 1.0}, {"predict": "clips passed string to java", "true": "clips the passed in string to the space provided", "bleu": 0.18343778145675418, "rouge": 0.5434298440979956}, {"predict": "removes the specified element from this vector", "true": "removes an element from this instant run n able", "bleu": 0.27470644934024185, "rouge": 0.48897795591182364}, {"predict": "check whether the specified object is a c glib - generated class", "true": "check whether the given object is a c glib proxy", "bleu": 0.48442732379638637, "rouge": 0.7393939393939394}, {"predict": "resets the references for streaming", "true": "resets the references for streaming", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a slide to this adapter , and this method can be called by other fragments", "true": "add a slide to the intro", "bleu": 0.2140909265975804, "rouge": 0.39610389610389607}, {"predict": "splits the given string into lines using on any embedded newlines , and wrapping the text as needed to conform to the given maximum line width", "true": "splits the given string into lines using on any embedded newlines , and wrapping the text as needed to conform to the given maximum line width", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes wheel changing listener", "true": "removes wheel changing listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "allocates a direct shape array , and populates it with the specified coordinates", "true": "allocates a direct float buffer , and populates it with the vertex data", "bleu": 0.5316967153331754, "rouge": 0.6923076923076923}, {"predict": "publish / send a message to an m qt t server once the server has messages supplied", "true": "publish / send a message to an m qt t server", "bleu": 0.6341922683775969, "rouge": 0.8172959805115713}, {"predict": "cleans a directory without deleting it", "true": "cleans a directory without deleting it", "bleu": 1.0, "rouge": 1.0}, {"predict": "inverse n ' t n ' of a sub band and a sub band of a sub band values into two values of a sub band", "true": "extracts the watermark data from sub band", "bleu": 0.06143498010483918, "rouge": 0.1352549889135255}, {"predict": "moves a file or directory to the destination directory", "true": "moves a file or directory to the destination directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads security properties from the file", "true": "loads security related properties from a file", "bleu": 0.32386639797736094, "rouge": 0.7587064676616916}, {"predict": "closes an input stream", "true": "closes an input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears all s can and sub directories", "true": "limp i a la list a de fiche ros del esc a neo", "bleu": 0.06628576403773602, "rouge": 0.0}, {"predict": "return true if the edge ab intersects the given edge of constant latitude", "true": "return true if the edge ab intersects the given edge of constant latitude", "bleu": 1.0, "rouge": 1.0}, {"predict": "starts the process described by ' builder ' , and asserts that it sees ' expected out ' on std out and ' expected err ' on std err", "true": "starts the process described by ' builder ' , and asserts that it sees ' expected out ' on std out and ' expected err ' on std err", "bleu": 1.0, "rouge": 1.0}, {"predict": "below method will be used to start file based merge", "true": "below method will be used to start file based merge", "bleu": 1.0, "rouge": 1.0}, {"predict": "callback for when text is inserted into the document", "true": "callback for when text is inserted into the document", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the given exception", "true": "constructs a new exception with the specified message", "bleu": 0.14628187563941414, "rouge": 0.15721649484536082}, {"predict": "convert the window to the be implemented by this method , so it a horizontal spring component that it won ' t be a custom interface", "true": "returns true if the two components have a common parallel group ancestor along the particular axis", "bleu": 0.05551277111446364, "rouge": 0.09951060358890701}, {"predict": "reads the object out of the object", "true": "reads an object from the input stream", "bleu": 0.22089591134157885, "rouge": 0.42857142857142855}, {"predict": "subtract zero from a number", "true": "subtract zero from a number", "bleu": 1.0, "rouge": 1.0}, {"predict": ", l sr # operation : if shift i mm = = 0 then / / / shifter operand = c flag else / / / / / / / / shift i mm > 0 shifter carry out = rm logical shift i mm shifter carry out", "true": ", l sr # operation : if shift i mm = = 0 then shifter operand = 0 shifter carry out = rm 31 else / / shift i mm > 0 shifter operand = rm logical shift right shift i mm shifter carry out = rm shift", "bleu": 0.6641755627032144, "rouge": 0.7291666666666667}, {"predict": "creates a new plaintext component with the given integer", "true": "creates a new plaintext component with the given in t", "bleu": 0.7875585852725084, "rouge": 0.8341880341880341}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "is this a calendar ?", "true": "allows to know if a given calendar instance is set today", "bleu": 0.09778809693469985, "rouge": 0.2341650671785029}, {"predict": "creates an initial port and starts to listen", "true": "creates an initial port and starts to listen", "bleu": 1.0, "rouge": 1.0}, {"predict": "pretty printing accumulator function for doubles", "true": "pretty printing accumulator function for doubles", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts an android image to a bitmap", "true": "note : this conversion procedure is <unk> and may result in jpeg compression artifacts", "bleu": 0.057461663912368725, "rouge": 0.0}, {"predict": "this method is used to convert the string value given to an appropriate representation", "true": "this method is used to convert the string value given to an appropriate representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "test if the dom implementation implements a specific feature", "true": "test if the dom implementation implements a specific feature", "bleu": 1.0, "rouge": 1.0}, {"predict": "assigns port based on the head of the ports to match", "true": "doing the best possible assignment", "bleu": 0.11390778025531027, "rouge": 0.13406593406593406}, {"predict": "get next event ( )", "true": "returns the next event in the queue or external event with time of double", "bleu": 0.059392570240942286, "rouge": 0.19395866454689983}, {"predict": "appends the values to the buffer", "true": "append the polygon to the buffer", "bleu": 0.4347208719449915, "rouge": 0.6666666666666666}, {"predict": "updates the combo box with the new items from the sequence", "true": "updates a j combo box with all of the track locations for this location", "bleu": 0.1786189637183548, "rouge": 0.39152759948652116}, {"predict": "creates a new refactoring session refactoring session", "true": "creates a new refactoring session transformer", "bleu": 0.6803749333171202, "rouge": 0.7800511508951408}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "opens the content of the source while s s the s rc to the s data", "true": "opens this compare operation , showing the compare ui , returning the result details of the comparison", "bleu": 0.11309798220697272, "rouge": 0.24110671936758896}, {"predict": "should never be called", "true": "should never be called", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a resource name such as a resource", "true": "import a resources into view", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "given a string , return true if the string is a numeric value", "true": "checks whether a string contains only number or not using a regex", "bleu": 0.1350862565735141, "rouge": 0.2417437252311757}, {"predict": "opens the password and processes the specified file", "true": "open the supplied key store file from disk", "bleu": 0.17747405280050269, "rouge": 0.25}, {"predict": "encode string as a byte array in base 64 annotation", "true": "encode string as a byte array in base 64 annotation", "bleu": 1.0, "rouge": 1.0}, {"predict": "atomic ally adds the given value to the current value of the field of the given number of elements", "true": "atomic ally adds the given value to the current value", "bleu": 0.5108636942731495, "rouge": 0.7305389221556886}, {"predict": "returns the \" current time \" notion of this scheduler", "true": "returns the \" current time \" notion of this scheduler", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends a list of name / value pair to the list", "true": "appends a name value pair of k / v to l if v is non - null", "bleu": 0.1265461484851118, "rouge": 0.4126268320180383}, {"predict": "creates a properties object from the specified location", "true": "reads the file at the given location and creates a properties file from the contents", "bleu": 0.15377788672932166, "rouge": 0.41216216216216217}, {"predict": "calculates the weight of a node", "true": "calculates the weight of a single plan", "bleu": 0.6848940448305334, "rouge": 0.7587064676616916}, {"predict": "checks whether the extension of the filename is one of those specified", "true": "checks whether the extension of the filename is one of those specified", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the value at the given interval", "true": "suspect underlying variables have changed value ; check", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "inserts the string representation of the string argument into this string buffer", "true": "inserts the string into this string buffer", "bleu": 0.38677062763523445, "rouge": 0.7735507246376813}, {"predict": "builds the keys and values stored in the specified key", "true": "creates the z node if it does not exist", "bleu": 0.12605968092174913, "rouge": 0.10627177700348434}, {"predict": "calculates the logarithm of a given value", "true": "calculates the log of the given value , using the current base", "bleu": 0.15749996500436228, "rouge": 0.5024711696869852}, {"predict": "returns the x , y , and z values of the given range", "true": "raises the x , y , and z values of a vector 3 to the given power", "bleu": 0.5346282669463179, "rouge": 0.7161152614727856}, {"predict": "used to receive s sdp packet", "true": "used to receive s sdp response packet", "bleu": 0.7118034480382984, "rouge": 0.9104477611940297}, {"predict": "tear down after testing", "true": "tear down after testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "flushes this writer", "true": "flushes page and it ' s content stream", "bleu": 0.10148002183214462, "rouge": 0.1680440771349862}, {"predict": "if a j mx image , go at the position and radius r , otherwise long", "true": "convert a color temperature value ( in <unk> ) to a rgb units as floats", "bleu": 0.07692375026049747, "rouge": 0.06489361702127659}, {"predict": "sets the name of this cipher to be used as a single register", "true": "sets the state mapper to set the name to the value returned by the specified mapper", "bleu": 0.12549883128679581, "rouge": 0.2708102108768035}, {"predict": "process a message to correct messages", "true": "listen to the loco net", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "returns the signature that was built by this signature writer", "true": "returns the signature that was built by this signature writer", "bleu": 1.0, "rouge": 1.0}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates a quantitative , linearly scaled layout", "true": "calculates a quantitative , linearly scaled layout", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the objects in the specified collection to the end of this vector", "true": "adds the objects in the specified collection to the end of this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "handles the un handled exception from this server socket", "true": "send if possible the catch server exception to the client", "bleu": 0.15019394384099988, "rouge": 0.20854700854700853}, {"predict": "format nothing", "true": "format nothing", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the full resource name of a table , type", "true": "get the name of a relation between an object and a resource", "bleu": 0.2374142677623577, "rouge": 0.44721407624633425}, {"predict": "updates the combo box change", "true": "update locations if load changes", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "removes the tip text for this property", "true": "returns the tip text for this property", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "join an array of strings to one string value", "true": "joins multiple named values into a single string", "bleu": 0.14113991930789777, "rouge": 0.1189083820662768}, {"predict": "returns a 0 - based depth within the object graph of the current object being serialized", "true": "returns a 0 - based depth within the object graph of the current object being serialized", "bleu": 1.0, "rouge": 1.0}, {"predict": "change a given number of steps to a single variable reference", "true": "change a given number of steps to a single variable reference", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the source class of an attribute list", "true": "returns the value as string out of the given distribution", "bleu": 0.13821693129588736, "rouge": 0.21785714285714283}, {"predict": "description of the method", "true": "description of the method", "bleu": 1.0, "rouge": 1.0}, {"predict": "request group data", "true": "send request to read group data", "bleu": 0.27952792741962756, "rouge": 0.6288659793814433}, {"predict": "computes the full url for the given link url , if present , or a slash", "true": "computes the full url based on a base url and a possibly relative link found in the href param of an html anchor", "bleu": 0.1601078229408269, "rouge": 0.29804560260586316}, {"predict": "serializes cookie object into string", "true": "serializes cookie object into string", "bleu": 1.0, "rouge": 1.0}, {"predict": "skips the given number of bytes", "true": "skips the given number of bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "resumes the ken burns effect animation", "true": "resumes the ken burns effect animation", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the center of the center text view", "true": "draws the description text in the center of the pie chart makes most sense when center - hole is enabled", "bleu": 0.11843106667531643, "rouge": 0.3978260869565217}, {"predict": "subtract two numbers of different scales ; the first is negative", "true": "subtract two numbers of different scales ; the first is negative", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct all the components , which are only used for each network panel", "true": "construct a new all to all panel", "bleu": 0.1135935489027116, "rouge": 0.31715771230502604}, {"predict": "add a property change listener", "true": "add a property change listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "is the extension function available ?", "true": "is the extension function available ?", "bleu": 1.0, "rouge": 1.0}, {"predict": "allocate a list of sections to be notified for this section", "true": "allocates and initializes p section count sections", "bleu": 0.12605968092174913, "rouge": 0.1157495256166983}, {"predict": "true if a refresh is needed from the original data source", "true": "true if a refresh is needed from the original data source", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate an array of random bytes", "true": "generate an array of random bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "called when event occurs to event occurs to event columns to attribute information", "true": "initializes the counting arrays with the start distribution", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "remove the last extension from a file", "true": "removes the extensions of the given file name", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "delete the attribute value", "true": "delete the attribute value", "bleu": 1.0, "rouge": 1.0}, {"predict": "scale based on min , max", "true": "scale based on min , max", "bleu": 1.0, "rouge": 1.0}, {"predict": "internal utility method to determine if the given scheme should use semicolons ( ; ) for query separator instead of ampersand ( & )", "true": "internal utility method to determine if the given scheme should use semicolons ( ; ) for query separator instead of ampersand ( & )", "bleu": 1.0, "rouge": 1.0}, {"predict": "add the leaf to the tree , assuming that the given spatial index are non - recursive", "true": "adds a leaf to a spatial , including all non existing parents", "bleu": 0.11306082351602978, "rouge": 0.2847141190198366}, {"predict": "pre - listeners within an existing block , including a tracker that a tracker must be moved", "true": "do ven n diagram between the two sets", "bleu": 0.06074588070876682, "rouge": 0.0}, {"predict": "converts a database name to a java variable name", "true": "converts a database name to a java variable name", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts an input byte array to a hex string", "true": "the byte returned by message digest does not have a nice textual representation , so some form of encoding is usually performed", "bleu": 0.03684329198716409, "rouge": 0.11996066863323501}, {"predict": "clamp the given size to fit in original area", "true": "given a size , compute a value such that it will <unk> the original size to fit within the max size bounding box and to be less than the provided area", "bleu": 0.027107779334308406, "rouge": 0.22744220730797912}, {"predict": "create a new tcp channel with the given set of messages", "true": "create channel for endpoint", "bleu": 0.12605968092174913, "rouge": 0.2911694510739857}, {"predict": "returns a string representation of this input stream , so it knows about ascii characters to our wrapped in one , so it has it has to one", "true": "prints the fields of a document for human consumption", "bleu": 0.0478968583748614, "rouge": 0.05957031249999999}, {"predict": "encode the input data producing a hex encoded byte array", "true": "encode the input data producing a base 64 encoded byte array", "bleu": 0.6349135031073152, "rouge": 0.8498452012383902}, {"predict": "draws a directory on the provided cell render er", "true": "creates a face of the model in a specified direction", "bleu": 0.1397712139461423, "rouge": 0.20854700854700853}, {"predict": "add a file system observer to this monitor", "true": "add a file system observer to this monitor", "bleu": 1.0, "rouge": 1.0}, {"predict": "create empty message by message buffer ( by filling and end )", "true": "create message from buffer ( for parsing )", "bleu": 0.16261701715194898, "rouge": 0.5187074829931972}, {"predict": "static version of searchlight digits", "true": "computes log ( 1 + x )", "bleu": 0.15388864725803575, "rouge": 0.0}, {"predict": "returns a random number as a variable length in the program", "true": "adds the given number as a push data chunk", "bleu": 0.22416933501922287, "rouge": 0.3055091819699499}, {"predict": "gets the callback s object", "true": "gets the callback s object", "bleu": 1.0, "rouge": 1.0}, {"predict": "changes p trace for p poly line and text buttons", "true": "changes the tree entries from p keep at start count + 1 to new shape count - 1 - keep at end count to p changed entries", "bleu": 0.02738628246476721, "rouge": 0.1497545008183306}, {"predict": "create an instance of a class using the specified class loader", "true": "create an instance of a class using the specified class loader", "bleu": 1.0, "rouge": 1.0}, {"predict": "paints a component that is used to set the bounds on the current clip component", "true": "paint the progress indicator", "bleu": 0.08225964699966554, "rouge": 0.11753371868978806}, {"predict": "adds a new action for the list for this phase", "true": "adds the specified action to the actions list for this phase", "bleu": 0.3570381007186144, "rouge": 0.6609907120743034}, {"predict": "to create a polygon we need atleast 3 separate points", "true": "to create a polygon we need atleast 3 separate points", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the json object from the json array for specified index", "true": "reads the json object value from the json array for specified index", "bleu": 0.7619389834488071, "rouge": 0.949080622347949}, {"predict": "waits until element to compare to given parent", "true": "will wait until no element identified by the by is present", "bleu": 0.12197601375336842, "rouge": 0.20469798657718125}, {"predict": "assert that the test subscriber has been received", "true": "assert that the test subscriber terminated ( i", "bleu": 0.5873949094699213, "rouge": 0.625}, {"predict": "is the video url valid , this will be still valid", "true": "check if a <unk> <unk> url has a valid identifier", "bleu": 0.12605968092174913, "rouge": 0.1921259842519685}, {"predict": "check whether this work is canceled", "true": "check whether this work is canceled", "bleu": 1.0, "rouge": 1.0}, {"predict": "push a tree walker on the stack", "true": "push a tree walker on the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks that the given string is a valid type descriptor", "true": "checks that the given string is a valid type descriptor", "bleu": 1.0, "rouge": 1.0}, {"predict": "update the downloaded download files with new set of known account files to the new values", "true": "rename the local own cloud folder of one account to match the a rename of the account itself", "bleu": 0.089341646650704, "rouge": 0.29103053435114506}, {"predict": "dumps the options for each module to the log for the current configuration", "true": "dump all the configuration options listed as get methods in the configuration interface", "bleu": 0.12011055432195765, "rouge": 0.30769230769230765}, {"predict": "parse a single language resource", "true": "parses the given language resource , returning the resulting json node", "bleu": 0.10822031883953476, "rouge": 0.2341650671785029}, {"predict": "starts the state of the blob", "true": "make a collection of states that can be the start of a line", "bleu": 0.07612610271614867, "rouge": 0.19741100323624597}, {"predict": "det at che s the bitmap container from the request and cancels the request if no one is left listening", "true": "det at che s the bitmap container from the request and cancels the request if no one is left listening", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new density function", "true": "creates a new kernel density function with the given points", "bleu": 0.22230037854975046, "rouge": 0.6288659793814433}, {"predict": "clone the object to a serial iz able object", "true": "this methods provide cloning for serial iz able objects", "bleu": 0.2626909894424158, "rouge": 0.3333333333333333}, {"predict": "determine if there are more than 2 points currently in the partial hull", "true": "determine if there are more than 2 points currently in the partial hull", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new zip entry with the specified name", "true": "creates a new zip entry with the specified name", "bleu": 1.0, "rouge": 1.0}, {"predict": "this test uses the bug # 12753 , of the connection will still be resources", "true": "test if single statement can be safely used in multiple transactions", "bleu": 0.09103526405546068, "rouge": 0.1582360570687419}, {"predict": "read the given dictionary file from the input stream", "true": "read the given dictionary file from the input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "match the token , find the ' token matching the ' token ' into a token name", "true": "matches individual request and target tokens", "bleu": 0.06074588070876682, "rouge": 0.0}, {"predict": "add a vertex , if the value is already present , or if the value is greater than the vertex", "true": "add a vertex to this congruence class", "bleu": 0.1136930615245481, "rouge": 0.2433510638297872}, {"predict": "resets the view to model array to be of size row count", "true": "resets the view to model array to be of size row count", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an immutable set of the set of known values", "true": "return all files referenced by this segment info", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "do we run on android ?", "true": "do we run on apple", "bleu": 0.6147881529512643, "rouge": 0.7393939393939394}, {"predict": "when a result - throw able is assignable from the class , but as if it is assignable to handle the exception", "true": "tests if concrete throw able", "bleu": 0.07832899330004497, "rouge": 0.16712328767123286}, {"predict": "combines and returns queued messages combined into a single string", "true": "combines and returns queued messages combined into a single string", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints a character to the stream", "true": "prints an integer to the stream", "bleu": 0.4347208719449915, "rouge": 0.6666666666666666}, {"predict": "returns the number of retained sections", "true": "returns a map of associations and their confidence , where confidence is support for the item set ( that is , the number of times it appears in the input data ) divided by the total number of sets ( i", "bleu": 0.0012729929966476144, "rouge": 0.15006150061500614}, {"predict": "checks if the specified string is all alpha characters", "true": "returns true if all characters in the string are letters", "bleu": 0.16621692209732, "rouge": 0.31282051282051276}, {"predict": "finds memory for the given item ' s display image into the length restrictions", "true": "extract item sets ending in the given item", "bleu": 0.16451929399933107, "rouge": 0.28683385579937304}, {"predict": "updates a particle position", "true": "updates a particle position", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a hexadecimal character to an integer", "true": "converts a hexadecimal character to an integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method to load the file using the given library , as the parent directory and the native id", "true": "this method must be provided by the vm vendor , as it is called by java", "bleu": 0.09629943614188137, "rouge": 0.23215984776403426}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a positive number from a sign and an array of bytes", "true": "create a positive number from a sign and an array of bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "save the password to a file", "true": "saves the ca key and the certificate chain to the specified key store", "bleu": 0.07612610271614867, "rouge": 0.19741100323624597}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the given filter to the list of filters to \" and \"", "true": "adds a filter to the list of filters to \" or \"", "bleu": 0.6262844962765469, "rouge": 0.8058124174372522}, {"predict": "send a debug log message", "true": "send a debug log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "generate an array of random bytes", "true": "generate an array of random bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the statistics entry", "true": "update the statistics entry", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "initialize and initialize a single file on the properties ( the earliest running \" internal status \" ) but it can be a file will be serialized", "true": "test create and shutdown of a named store", "bleu": 0.04970745472800838, "rouge": 0.12668743509865005}, {"predict": "convert to a string", "true": "returns a string representation of the node", "bleu": 0.22336835181428535, "rouge": 0.346590909090909}, {"predict": "since at the given trace point 1 , we need to split the traces of the trace on layer", "true": "splits the traces containing this", "bleu": 0.08475426399505566, "rouge": 0.18625954198473282}, {"predict": "flip all bits in the byte array for all bit bytes", "true": "this flips the bits in the range index , index + length ) and returns the same byte", "bleu": 0.1186334028473672, "rouge": 0.2643553629469122}, {"predict": "constructs a new index source", "true": "sets the settings and mappings as a single source", "bleu": 0.13575914775035755, "rouge": 0.2717149220489978}, {"predict": "adds users to the server , replacing the existing ones if they have been set", "true": "add users to the configuration", "bleu": 0.15310245441182443, "rouge": 0.32972972972972975}, {"predict": "performs try to acquire the queue for an amortized threshold", "true": "attempts to acquire the eviction lock and apply the pending operations , up to the amortized threshold , to the page replacement policy", "bleu": 0.07604071423846384, "rouge": 0.2829313543599258}, {"predict": "removes a single individual", "true": "removes a single individual", "bleu": 1.0, "rouge": 1.0}, {"predict": "copies a file or directory to another", "true": "copy source file to destination file", "bleu": 0.20556680845025982, "rouge": 0.31202046035805625}, {"predict": "decode properties into string ( url encoded )", "true": "decode properties into string ( url encoded )", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the residual sum of this entry", "true": "generates xml in the rss format", "bleu": 0.20556680845025982, "rouge": 0.31202046035805625}, {"predict": "tests comparison of different values", "true": "tests comparison of different elements", "bleu": 0.7598356856515925, "rouge": 0.8}, {"predict": "deletes directory and all files in a directory", "true": "deletes directory with files", "bleu": 0.22679164443904004, "rouge": 0.5319767441860466}, {"predict": "morph a fixed - source action for rendering", "true": "morph is similar to the replace functionality where a component might be replaced with a component that isn ' t within the container", "bleu": 0.027216527483056172, "rouge": 0.11867704280155641}, {"predict": "localized string to timestamp conversion", "true": "localized string to timestamp conversion", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the string starts with a new one", "true": "true if the string is the beginning of a new camel case hunk", "bleu": 0.298940794016102, "rouge": 0.5097493036211699}, {"predict": "removes all the values from this attribute set", "true": "removes all placeholder - value mappings", "bleu": 0.21105340631872638, "rouge": 0.2932692307692307}, {"predict": "adds fill components to empty cells in the first row and first column of the grid", "true": "adds fill components to empty cells in the first row and first column of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads a hash from byte array is defined as \" name \"", "true": "get the character definitions of the font", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "converts string to byte array", "true": "converts a string to a byte array", "bleu": 0.3169747794424142, "rouge": 0.8090185676392573}, {"predict": "play file given by user name", "true": "joins the channel of the user provided and then plays a file", "bleu": 0.08993236413460196, "rouge": 0.10481099656357389}, {"predict": "initializes the flag that indicates whether all objects are finalized when the vm is about to exit", "true": "ensure that , when the virtual machine is about to exit , all objects are finalized", "bleu": 0.37420316460821246, "rouge": 0.4265734265734266}, {"predict": "returns an interval for the given confidence value", "true": "returns the interval for the given confidence value", "bleu": 0.7506238537503395, "rouge": 0.875}, {"predict": "searches the specified collection for the minimum element using the specified comparator", "true": "searches the specified collection for the minimum element using the specified comparator", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the given file is a member of the given file", "true": "checks if given hash is the same for given file - helps to detect file changes", "bleu": 0.1275401320639038, "rouge": 0.4062153163152054}, {"predict": "add a key value", "true": "add the key that should be treated as one of the value fields", "bleu": 0.045035719139523436, "rouge": 0.32218309859154926}, {"predict": "update the given border with the given border", "true": "add a new border to the existing borders", "bleu": 0.17747405280050269, "rouge": 0.25}, {"predict": "create a name from a character", "true": "returns the name of an html character reference based on its character value", "bleu": 0.07612610271614867, "rouge": 0.19741100323624597}, {"predict": "splits the given string into one list of lines , with the line as a list of strings", "true": "split the supplied content into lines , returning each line as an element in the returned list", "bleu": 0.13052454516645345, "rouge": 0.4020715630885123}, {"predict": "draws the draw able", "true": "draws the wafer map view", "bleu": 0.36827215283744186, "rouge": 0.43571428571428567}, {"predict": "adds a hole to the polygon formed by this ring", "true": "adds a hole to the polygon formed by this ring", "bleu": 1.0, "rouge": 1.0}, {"predict": "registers this odor world component , this method may be used to register the default component", "true": "create mappings from gui components to their gui wrappers", "bleu": 0.07692375026049747, "rouge": 0.08425414364640883}, {"predict": "adds another image container to the list of those interested in the results of the request", "true": "adds another image container to the list of those interested in the results of the request", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the generic activity fields", "true": "initialize the generic activity fields", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is called from native code in order to fill native input stream", "true": "this method is called from the native code in order to skip requested number of bytes in the input stream", "bleu": 0.39768633593547226, "rouge": 0.6841121495327103}, {"predict": "generates a sha 1 hash of the same public key", "true": "generate 64 bit hash key identifier", "bleu": 0.13950796967929133, "rouge": 0.26180257510729615}, {"predict": "creates a new create - xxx sub - command for an optional relation", "true": "creates a new create - xxx sub - command for an optional relation", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d subject information access dialog", "true": "creates a new d subject information access dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "verify signer ( string ) creates instance", "true": "verify signer ( string , identity scope ) creates instance", "bleu": 0.45043204423208616, "rouge": 0.7981308411214955}, {"predict": "reads a line of the element", "true": "reads an svg \" line \" element", "bleu": 0.22236312185643822, "rouge": 0.45522388059701485}, {"predict": "create a list model with the provided items", "true": "create a list model with the provided items", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if field calls is set ( has been assigned a value ) and false otherwise", "true": "returns true if field call type is set ( has been assigned a value ) and false otherwise", "bleu": 0.7914785567985774, "rouge": 0.9095992544268408}, {"predict": "maps a source to a buffer , and return the result buffer for the given source type", "true": "loads the buffer via source mapper , and maps it in source mapper", "bleu": 0.12149176141753365, "rouge": 0.2732362821948488}, {"predict": "creates a new instance of file data store package for files", "true": "create a dialog that filters for files with the specified extensions", "bleu": 0.16108992769687397, "rouge": 0.2727272727272727}, {"predict": "compute static load metrics from v plex storage system", "true": "compute static load metrics", "bleu": 0.392814650900513, "rouge": 0.6612466124661246}, {"predict": "see the general contract of the read short method of data input", "true": "see the general contract of the read short method of data input", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a replication job to copy a partition", "true": "create a replication job to copy a partition", "bleu": 1.0, "rouge": 1.0}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "main entry point", "true": "this method is called when executing this application from the command line", "bleu": 0.022493847365531092, "rouge": 0.0}, {"predict": "same as perform find but now returning a new map", "true": "scipio : stock find orders service", "bleu": 0.12605968092174913, "rouge": 0.13090128755364808}, {"predict": "indicates if this file represents a file on the underlying file system", "true": "indicates if this file represents a file on the underlying file system", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds stage by path", "true": "start with ordinal selection of input stages then ordinal selection of each output ring there after", "bleu": 0.01504254234731835, "rouge": 0.0}, {"predict": "description of the method", "true": "returns an array of the t - statistic of each coefficient in a multiple linear regression model", "bleu": 0.018335190851298155, "rouge": 0.17134831460674158}, {"predict": "execute all the bootstrap s , and s in the list", "true": "this method basically goes through the list of <unk> <unk> registered by modules and runs them", "bleu": 0.10224964383366271, "rouge": 0.14336075205640422}, {"predict": "create index header id", "true": "expert : just reads and verifies the object id of an index header", "bleu": 0.05355679762998549, "rouge": 0.2147887323943662}, {"predict": "returns the stack map table written out", "true": "returns the stack map table written out", "bleu": 1.0, "rouge": 1.0}, {"predict": "save the current buffer in the history file", "true": "save the currently selected cluster er output to a file", "bleu": 0.176625510283176, "rouge": 0.3267857142857143}, {"predict": "schedule storage pool by type", "true": "get recommendations for resource placement based on the passed parameters", "bleu": 0.08445588027797912, "rouge": 0.0}, {"predict": "provide a list of relative paths on the current system which match the given directory", "true": "collect a list of relative paths", "bleu": 0.30130404892785684, "rouge": 0.5160744500846023}, {"predict": "returns true if the transform node is a valid file", "true": "returns true if the given module specifier is specifying a file", "bleu": 0.3570381007186144, "rouge": 0.6609907120743034}, {"predict": "inserts there is no longer required for path", "true": "in v nx , 4 default policies are present , and this method creates expected settings per pool capability", "bleu": 0.03409570231938704, "rouge": 0.0}, {"predict": "this method is called after a failure to modify a stream", "true": "transfers the contents of an input stream to an output stream , using a large buffer", "bleu": 0.08598135896069606, "rouge": 0.14336075205640422}, {"predict": "returns the position of the path corresponding to this level", "true": "returns the position within an org unit path at which the org unit u id will be found for a given org unit level", "bleu": 0.0665455091918004, "rouge": 0.2737881508078994}, {"predict": "attempts to read more data", "true": "attempts to read more data", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a numeric numeric train with the given class value", "true": "adds a numeric ( non - missing ) training class value and weight to the buffer of stored values", "bleu": 0.08877114000709116, "rouge": 0.2612419700214133}, {"predict": "main logic for groups of the group type", "true": "main logic for parsing the groups from the json file", "bleu": 0.2572506957482676, "rouge": 0.5446428571428571}, {"predict": "after rotating , the matrix needs to be translated", "true": "after rotating , the matrix needs to be translated", "bleu": 1.0, "rouge": 1.0}, {"predict": "- - serialize a double from integer", "true": "creates new instance of double ff t 1 d", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "drag the current page", "true": "drag gesture recognized", "bleu": 0.35930411196308426, "rouge": 0.2932692307692307}, {"predict": "checks whether a character is a valid identifier", "true": "checks if specified character can be part of xml identifier ( tag name of attribute name ) and is not standard identifier character", "bleu": 0.03092394561424337, "rouge": 0.23735408560311283}, {"predict": "adds given line to the header", "true": "add a header line to this result", "bleu": 0.2644358066258934, "rouge": 0.3034825870646766}, {"predict": "loads an address from a result set", "true": "loads an address value from the database", "bleu": 0.3655552228545123, "rouge": 0.5714285714285714}, {"predict": "encodes the given string as utf - 8", "true": "formats the input string for inclusion in a url", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "returns get url with appended parameters", "true": "returns get url with appended parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is used when a prefix / uri namespace mapping is indicated after the element was started with a start element ( ) and before and end element ( )", "true": "this method is used when a prefix / uri namespace mapping is indicated after the element was started with a start element ( ) and before and end element ( )", "bleu": 1.0, "rouge": 1.0}, {"predict": "guesses the type of a file , based on file name suffix", "true": "guesses the type of a file , based on file name suffix", "bleu": 1.0, "rouge": 1.0}, {"predict": "check all with giant bq of all terms with varying min should match", "true": "test advance with giant bq of all terms with varying min should match", "bleu": 0.8385766789076257, "rouge": 0.8461538461538461}, {"predict": "returns true for a public class", "true": "returns true for a public class", "bleu": 1.0, "rouge": 1.0}, {"predict": "is strin list being used as long active and the list of details which are still in cache", "true": "this api will be called for releasing the budget that was already allocated to some estimate or purchase order", "bleu": 0.06441414924343829, "rouge": 0.053791887125220456}, {"predict": "create a long transferable to use as the local data for the analysis", "true": "the clipboard must be opened", "bleu": 0.09552040806823771, "rouge": 0.12079207920792079}, {"predict": "put the encoding of the specified length in the stream", "true": "put the encoding of the length in the stream", "bleu": 0.7016879391277371, "rouge": 0.9564459930313588}, {"predict": "process part of generic font family and compares them to the specified font name", "true": "adds a generic font family", "bleu": 0.16451929399933107, "rouge": 0.34528301886792445}, {"predict": "write an object to the buffer if it is unique", "true": "this is used to write the xml element attributes representing the serialized object instance", "bleu": 0.1112086898712083, "rouge": 0.16180371352785147}, {"predict": "parses a data object from the current parsing position", "true": "parses a data object from the current parsing position", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true is the population contains no individuals", "true": "returns true is the population contains no individuals", "bleu": 1.0, "rouge": 1.0}, {"predict": "formats this year - month using the specified formatter", "true": "formats this date - time using the specified formatter", "bleu": 0.4671379777282001, "rouge": 0.7777777777777778}, {"predict": "convert class name to dotted format", "true": "get the name of the class in dotted format", "bleu": 0.20034704329441452, "rouge": 0.3860759493670886}, {"predict": "creates a new d add extension dialog", "true": "creates a new d add extensions dialog", "bleu": 0.7071067811865475, "rouge": 0.8571428571428571}, {"predict": "plays next video in playlist", "true": "plays next video in playlist", "bleu": 1.0, "rouge": 1.0}, {"predict": "invokes a method of an object", "true": "invokes a method by reflection", "bleu": 0.4111336169005197, "rouge": 0.5545454545454546}, {"predict": "copy nodelist members into this nodelist , adding in document order", "true": "copy nodelist members into this nodelist , adding in document order", "bleu": 1.0, "rouge": 1.0}, {"predict": "method called to create the rotate stream and add it to the given path", "true": "returns the rotate stream corresponding to this path", "bleu": 0.18207052811092136, "rouge": 0.47805642633228845}, {"predict": "removes the previous history , if any", "true": "removes old tracks and cleans up the history preparing for new tracks to be added to the mapping", "bleu": 0.045890725128646594, "rouge": 0.2223572296476306}, {"predict": "this method extracts all needed values from the styled attributes", "true": "this method extracts all needed values from the styled attributes", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a log message with a specified code", "true": "construct a log message that does not involve any tem plating", "bleu": 0.20513838542429053, "rouge": 0.3070469798657718}, {"predict": "helper method to perform the user and generate the error string", "true": "translate all the label names within an action string to appropriate code", "bleu": 0.12368857073777001, "rouge": 0.17256011315417258}, {"predict": "cast result object to a boolean", "true": "cast result object to a boolean", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the xml for the current request", "true": "generates the xml for the current request", "bleu": 1.0, "rouge": 1.0}, {"predict": "replaces boolean and boolean value", "true": "we need this strict function because boolean", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "formats this year - month using the specified formatter", "true": "formats this time using the specified formatter", "bleu": 0.4518010018049224, "rouge": 0.7672955974842767}, {"predict": "initializes the source code to the buffer", "true": "initial is ation of a local map that handles each source code line , keyed by the line number", "bleu": 0.047308627669118, "rouge": 0.21303841676367868}, {"predict": "version 1 : - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -", "true": "version 1 : - - - - - - - - - - - - - - - - | key | value | - - - - - - - - - - - - - - - version 2 : - - - - - -", "bleu": 0.7653729641507927, "rouge": 0.8333333333333334}, {"predict": "returns a new matrix to the transformation", "true": "return the left singular vectors", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "override this if the should not contain same error codes for different instances that are not wrappers test is failing and you * really * want to allow one or more of your error codes to have duplicate api errors that are not wrappers", "true": "override this if the should not contain same error codes for different instances that are not wrappers test is failing and you * really * want to allow one or more of your error codes to have duplicate api errors that are not wrappers", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the field of a target object is visited", "true": "indicates whether the field of a target object is visited", "bleu": 0.7102992180127422, "rouge": 0.768503937007874}, {"predict": "removes a download from the completed list", "true": "removes a download from the completed list", "bleu": 1.0, "rouge": 1.0}, {"predict": "modifies the main query by adding a new optional query consisting of shingled phrase queries across the specified field = & lt ; boost for each other query boost mappings", "true": "modifies the main query by adding a new optional query consisting of shingled phrase queries across the specified clauses using the specified field = & gt ; boost mappings", "bleu": 0.7235738147976556, "rouge": 0.8160535117056856}, {"predict": "returns a string representation of this object", "true": "return an id conform ant to xml id", "bleu": 0.13540372457315733, "rouge": 0.0}, {"predict": "updates the number of apps with the apps manager", "true": "update fields from connection", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "create snapshot of new snapshot", "true": "creates a new snapshot , which is assumed not to exist already", "bleu": 0.08860330314183162, "rouge": 0.2190305206463196}, {"predict": "builds a valid cell cell cell cell", "true": "persists log file in database", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "merges this generic properties instance with another properties", "true": "merges two <unk> of the properties from current and new configurations", "bleu": 0.12197601375336842, "rouge": 0.20469798657718125}, {"predict": "we only want the current page that is being shown to be focus able", "true": "we only want the current page that is being shown to be focus able", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes the preferred limit for a existing user", "true": "delete the preferred language of a existing user", "bleu": 0.3549481056010052, "rouge": 0.625}, {"predict": "called to notify a media player started to a media player", "true": "called when media player is done preparing", "bleu": 0.16108992769687397, "rouge": 0.3472485768500949}, {"predict": "parses a value", "true": "if the token is a known parameter name , parses and initializes the token value", "bleu": 0.011702651167821564, "rouge": 0.1983739837398374}, {"predict": "generate a list of urls for a given shard , including the set of directory and jar urls", "true": "creates a randomized list of urls for the given shard", "bleu": 0.23210911117419966, "rouge": 0.5271604938271606}, {"predict": "skip characters", "true": "skip a set amount of bytes", "bleu": 0.10283257773094409, "rouge": 0.22932330827067668}, {"predict": "adds another image container to the list of those interested in the results of the request", "true": "adds another image container to the list of those interested in the results of the request", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a world entity to all the radius of the world", "true": "sends this packet to all the players in the world within the radius", "bleu": 0.23099775906262388, "rouge": 0.41049798115746977}, {"predict": "called by the client", "true": "creates an ephemeral ec dh key pair for a supported group ( named curve )", "bleu": 0.01931500670555844, "rouge": 0.0}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a header to the list", "true": "adds a value to a header", "bleu": 0.31239399369202553, "rouge": 0.3333333333333333}, {"predict": "algorithm data of the data in terms as described by the algorithm", "true": "algorithm as r <unk> a ppl", "bleu": 0.11498759556447223, "rouge": 0.2364341085271318}, {"predict": "get a string representation of this ref", "true": "get the c + + code", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "recreates work space table and migrates data to the new table", "true": "recreates work space table and migrates data to the new table", "bleu": 1.0, "rouge": 1.0}, {"predict": "execute a query with the given string values", "true": "executes a n 1 ql statement with named parameters", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "closes all the stack", "true": "closes all open tags", "bleu": 0.47287080450158786, "rouge": 0.5}, {"predict": "receive not ivica tion of a entity reference", "true": "receive not ivica tion of a entity reference", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a thrift table entry represents a hive table", "true": "creates a table that is partitioned on ds and hr", "bleu": 0.1397712139461423, "rouge": 0.20854700854700853}, {"predict": "links node as last element , or returns false if full", "true": "links node as last element , or returns false if full", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a divider for the given child in the given bounds", "true": "draws a divider for the given child in the given bounds", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes the form specific form object", "true": "constructs a form spec from the specified encoded description", "bleu": 0.14827340167306757, "rouge": 0.12869198312236285}, {"predict": "decodes the given input stream and returns a list of integers , using the result", "true": "decode custom proto bu f variable length array", "bleu": 0.06917184228205472, "rouge": 0.0}, {"predict": "draws the visual representation of a single data item , which is already the x - value it becomes the visual representation of a single data area", "true": "draws the visual representation of a single data item", "bleu": 0.31823566221963034, "rouge": 0.5495495495495495}, {"predict": "writes a little - endian in t", "true": "writes a little - endian in t", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes an double field value", "true": "writes an double field value", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the activity is currently being used for changes in an activity ' s creature", "true": "calculates which type of creature should be spawned next", "bleu": 0.07692375026049747, "rouge": 0.08425414364640883}, {"predict": "before the value is between two properties , template info will be reused", "true": "check if backup related configurations <unk> to rules , if not fail the property update", "bleu": 0.09063677582644454, "rouge": 0.07052023121387282}, {"predict": "deletes a given trait from an existing entity", "true": "deletes a given trait from an existing entity represented by a gui d", "bleu": 0.5352614285189903, "rouge": 0.7305389221556886}, {"predict": "adds all the given tables to the list of tables", "true": "adds the given tables", "bleu": 0.24808415001701817, "rouge": 0.6192893401015228}, {"predict": "writes a template to the file", "true": "replace placeholder in template", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "returns all the text at the given url", "true": "returns all the text at the given url", "bleu": 1.0, "rouge": 1.0}, {"predict": "resets this class to its initial environment", "true": "will clear the current classes and reload in another thread", "bleu": 0.10175282441454783, "rouge": 0.0}, {"predict": "add an item to the toolbar", "true": "searches the receiver ' s list starting at the first item ( index 0 ) until an item is found that is equal to the argument , and returns the index of that item", "bleu": 0.00343752140413818, "rouge": 0.17758369723435224}, {"predict": "adds an attribute to the attribute payload", "true": "adds an attribute to the fetch request", "bleu": 0.6803749333171202, "rouge": 0.7142857142857143}, {"predict": "either execute a snapshot or thread if it exists", "true": "outer callable submits tasks for execution", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "runs full set of full db config", "true": "runs a full - import using the given data config and the provided request parameters", "bleu": 0.0704451546128839, "rouge": 0.2559440559440559}, {"predict": "volume into a volume of the overlapping box , indicating that the top box is used for the given box", "true": "generate a random user id in the range provided", "bleu": 0.06760229884571738, "rouge": 0.14805825242718446}, {"predict": "starts the yarn container manager", "true": "starts the underlying system consumer", "bleu": 0.35930411196308426, "rouge": 0.4}, {"predict": "generates code for binary operation only create code based on the parameters supplied", "true": "sets the flags according to the result of a binary and / or / xor operation", "bleu": 0.09018449225581421, "rouge": 0.13540510543840176}, {"predict": "returns true if the area of the window is inside the area of the tick", "true": "returns true if the label is <unk>", "bleu": 0.23961829057131984, "rouge": 0.4864433811802232}, {"predict": "write type list into current section", "true": "write type list item into current section", "bleu": 0.5033210449798471, "rouge": 0.9104477611940297}, {"predict": "load configuration properties from the config file", "true": "load configuration from resource in current class loader", "bleu": 0.22772101321113858, "rouge": 0.3952483801295896}, {"predict": "close the input stream and ignores any resulting exception", "true": "close streams without pain", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "create a transaction , transaction using the local transaction", "true": "create new transaction using the local transaction manager", "bleu": 0.537284965911771, "rouge": 0.7134502923976607}, {"predict": "skip characters in the given string", "true": "skips char any contiguous characters in skip", "bleu": 0.2644358066258934, "rouge": 0.3034825870646766}, {"predict": "converts a package name to a path by replacing all ' ' '", "true": "converts a package name to a path by replacing all '", "bleu": 0.8385766789076257, "rouge": 0.9306518723994452}, {"predict": "returns true if this map contains the given key", "true": "returns whether this map contains the specified key", "bleu": 0.42728700639623407, "rouge": 0.7134502923976607}, {"predict": "returns true if the given fragment is null or fragments are allowed", "true": "returns true if the given fragment is null or fragments are allowed", "bleu": 1.0, "rouge": 1.0}, {"predict": "increases the capacity of and internally reorganizes the hash table , in order to accommodate and access its entries more efficiently", "true": "increases the capacity of and internally reorganizes the hash table , in order to accommodate and access its entries more efficiently", "bleu": 1.0, "rouge": 1.0}, {"predict": "save in is none of po is from the assets folder", "true": "load po is from assets and save them in the database", "bleu": 0.2521193618434983, "rouge": 0.36363636363636365}, {"predict": "creates the xml element for an xml element", "true": "creates the xml element for a colour value", "bleu": 0.5873949094699213, "rouge": 0.625}, {"predict": "this method is used to all the received from the currently connected to the cluster", "true": "checks if a tag has been marked done within a given scope a specific number of times", "bleu": 0.06053735079430112, "rouge": 0.0}, {"predict": "responds to responds to an conditional window with column name", "true": "responds to the operator column in the edit conditional window", "bleu": 0.21834177214239062, "rouge": 0.4}, {"predict": "adds a header to the header", "true": "add a header with the name and value given", "bleu": 0.1894765350842885, "rouge": 0.3860759493670886}, {"predict": "check if we have duplicate request", "true": "this method checks if an entry for the provided information ( uri and buffer ) is stored in the red is database", "bleu": 0.015348610281018882, "rouge": 0.06475583864118895}, {"predict": "returns whether or not the view is hidden", "true": "returns whether a view is visible to layout manager or not", "bleu": 0.21319824748388547, "rouge": 0.4093959731543625}, {"predict": "writes the tags from this ex if interface object into a jpeg stream , removing prior ex if tags", "true": "writes the tags from this ex if interface object into a jpeg stream , removing prior ex if tags", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete file or directory", "true": "deletes a file or directory and all its content recursively", "bleu": 0.14921613134709885, "rouge": 0.3978260869565217}, {"predict": "see if the menu bar button is light from the navigation bar", "true": "returns true if the passed in j menu bar is above a horizontal j toolbar", "bleu": 0.14015712647020306, "rouge": 0.363095238095238}, {"predict": "construct a node in the result tree", "true": "construct a node in the result tree", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a priority queue from a more - query former", "true": "create a priority queue from a word - > t f map", "bleu": 0.48308952038726644, "rouge": 0.626099706744868}, {"predict": "creates a new journal that omits redundant information", "true": "creates a new journal that omits redundant information", "bleu": 1.0, "rouge": 1.0}, {"predict": "traverse from the closure of the closure object using this object ' s read stream to the closure and the read from this method of the closure", "true": "iterates through the given object stream object by object", "bleu": 0.05647857271976959, "rouge": 0.18318318318318316}, {"predict": "exit with a status", "true": "if run in the system mode , exits the program , in tool mode returns the status", "bleu": 0.013931732312048943, "rouge": 0.08567415730337079}, {"predict": "calculates the distance between two points 0 - lon pairs from a latitude and longitude", "true": "computes the distance between two coordinates in meters", "bleu": 0.22894156860669912, "rouge": 0.36802413273001505}, {"predict": "processes the given challenge and processes the challenge", "true": "processes the ntl m challenge", "bleu": 0.22679164443904004, "rouge": 0.48157894736842105}, {"predict": "takes the big integer and returns the resulting big integer", "true": "calculate a as done in round 2", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "add new cost detail for time zone", "true": "push to queue record", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "add an undo event to the list", "true": "adds the undo event", "bleu": 0.2626909894424158, "rouge": 0.3824451410658307}, {"predict": "establish a progress cache for a cached cache , if not already present", "true": "establish the local copy of the package meta data if needed", "bleu": 0.10571070857151538, "rouge": 0.16920943134535368}, {"predict": "add the image span to the start of the text", "true": "add the image span to the start of the text", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates a password using a hash", "true": "validates a password using a hash", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the current snapshots from the current repository in order", "true": "returns a list of currently running snapshots from repository sorted by snapshot creation date", "bleu": 0.1263574671511449, "rouge": 0.32360742705570295}, {"predict": "add a certificate to the certificate set to be included with the generated signed data message", "true": "add a certificate to the certificate set to be included with the generated signed data message", "bleu": 1.0, "rouge": 1.0}, {"predict": "multiply a number by zero", "true": "multiply a number by zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to clean lock", "true": "finds the begining of the z km <unk> , the end , then removed everything in between !", "bleu": 0.009123763133674224, "rouge": 0.0}, {"predict": "paints the background of a tab", "true": "give selected tab blue color with a gradient ! !", "bleu": 0.1255107248036171, "rouge": 0.11960784313725491}, {"predict": "generates the instruction to push the given value on the stack", "true": "generates the instruction to push the given value on the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an automaton that accepts the concatenation of the terms", "true": "build an automaton to represent the frontier query", "bleu": 0.17827531042796255, "rouge": 0.34014869888475835}, {"predict": "returns a range of values the render er requires to display all the items from the specified data set", "true": "returns the range of values the render er requires to display all the items from the specified data set", "bleu": 0.9036020036098448, "rouge": 0.9473684210526315}, {"predict": "shut down the server", "true": "stop the application and the server", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "( since linux 3", "true": "number of threads in this process ( since linux 2", "bleu": 0.14921613134709885, "rouge": 0.3978260869565217}, {"predict": "assigns the given role to this user", "true": "assigns a role to the user", "bleu": 0.29071536848410967, "rouge": 0.6240409207161125}, {"predict": "creates a default thread pool , with default values : - a default thread factory - all events are accepted", "true": "creates a default thread pool , with default values : - keep alive set to 30 seconds - a default thread factory - all events are accepted", "bleu": 0.6750540182789583, "rouge": 0.8288043478260869}, {"predict": "writes a new initial header to the output stream", "true": "description of the method", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "encodes a collection of strings into form \" - encoded string", "true": "construct a x - www - form - urlencode d document containing the given sequence of name / value pairs", "bleu": 0.06319846675669707, "rouge": 0.18391959798994972}, {"predict": "test where each operation locks only a single resource and there is only one resource to be locked so that all operations must be serialized", "true": "test where each operation locks only a single resource and there is only one resource to be locked so that all operations must be serialized", "bleu": 1.0, "rouge": 1.0}, {"predict": "run the next command to run after the next run n able , it ' s not already in the game , the run n able to run n able", "true": "runs the next command scheduled to be executed immediately", "bleu": 0.07939087147543496, "rouge": 0.2271880819366853}, {"predict": "closes all connected clients sockets , then closes the underlying server socket channel , effectively killing the server socket selector thread , freeing the port the server was bound to and stops all internal worker threads", "true": "closes all connected clients sockets , then closes the underlying server socket channel , effectively killing the server socket selector thread , freeing the port the server was bound to and stops all internal worker threads", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads a xml document from a file", "true": "load xml document from xml file", "bleu": 0.3655552228545123, "rouge": 0.6240409207161125}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove an string at index", "true": "remove an string at index", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new string resulting from replacing all occurrences of old char in this string with new char", "true": "copies this string replacing occurrences of the specified character with another character", "bleu": 0.12257617673006654, "rouge": 0.34580498866213155}, {"predict": "implements the same behaviour as the \" touch \" utility on unix", "true": "implements the same behaviour as the \" touch \" utility on unix", "bleu": 1.0, "rouge": 1.0}, {"predict": "wraps callback ( ) is an easy mock argument predicate", "true": "wraps callback ( ) is an easy mock argument predicate", "bleu": 1.0, "rouge": 1.0}, {"predict": "the editing cell should be selected or not", "true": "the editing cell should be selected or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "this is the same as the following unicode characters that includes the following form : : : \" , and there is no switch to the first - > ipv 6 tag", "true": "prepares an attribute or assertion value as per string prep algorithm defined in rfc <unk>", "bleu": 0.037776418604808376, "rouge": 0.04552238805970149}, {"predict": "add zero from zero", "true": "add zero to zero", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "add class name to dotted format", "true": "add a class annotation for the class node", "bleu": 0.17516432701748888, "rouge": 0.2785388127853881}, {"predict": "formats a string using the format", "true": "throws an exception if the format is not syntactically valid", "bleu": 0.14925824694560996, "rouge": 0.23921568627450981}, {"predict": "parse the upper case mapping attribute for a unicode character", "true": "parse the uppercase mapping attribute for a unicode character", "bleu": 0.6315552371794037, "rouge": 0.8501742160278747}, {"predict": "block on the queue until an entry is been cleaned by the gc", "true": "block on the queue until an entry is been cleaned by the gc", "bleu": 1.0, "rouge": 1.0}, {"predict": "compresses the given number of files , each of the given size , into a", "true": "compresses the given number of files , each of the given size , into a", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the given playlist is valid for u playlist", "true": "ensures that a string for a playlist is valid , checking if it is empty , or another playlist has the same name", "bleu": 0.07354416148731348, "rouge": 0.2263450834879406}, {"predict": "import the specified xml file", "true": "uses pack in handler to update ad", "bleu": 0.15388864725803575, "rouge": 0.0}, {"predict": "log or remove a row from a table", "true": "a record is added to a table , or removed from a table", "bleu": 0.17680564514930266, "rouge": 0.3652694610778443}, {"predict": "a method to construct a default digest method type with the 2016 schema", "true": "a method to construct a default digest method type with a default hash algorithm", "bleu": 0.7016373470128271, "rouge": 0.7358262967430639}, {"predict": "creates a subset of vertices sampled in a specific collection", "true": "creates a subset of sampled vertices", "bleu": 0.3816330911371337, "rouge": 0.6545064377682404}, {"predict": "called just prior to prior manager", "true": "instantiate s a new <unk> transaction manager with the given <unk> graph factory", "bleu": 0.06878769894132081, "rouge": 0.09870550161812298}, {"predict": "shifts - relative beans a bean instance into the target", "true": "move coord s of all inputs and outputs of this meta bean to the coord s of the supplied bean instance", "bleu": 0.05934269577876743, "rouge": 0.12127236580516898}, {"predict": "this method is called via background positions", "true": "queries reference database for all w if is in specified range around map centre", "bleu": 0.06833381956448398, "rouge": 0.08983799705449189}, {"predict": "html - escapes the output", "true": "returns true if the underlying dependencies have changed", "bleu": 0.14983220973977976, "rouge": 0.1476997578692494}, {"predict": "a method to be called when some text was changed in a text node , so that live objects can be notified", "true": "a method to be called when some text was deleted from a text node , so that live objects can be notified", "bleu": 0.8318180062062374, "rouge": 0.9090909090909091}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a new instance", "true": "do not construct directly", "bleu": 0.35930411196308426, "rouge": 0.25}, {"predict": "creates a new producer that will return a status of the message", "true": "creates a new producer object", "bleu": 0.2891784933232571, "rouge": 0.5083333333333333}, {"predict": "animate opening a tab in the foreground", "true": "animate opening a tab in the foreground", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if all of the given class is allowed for the given class", "true": "returns true if the function to check is allowed", "bleu": 0.20333448190047887, "rouge": 0.543026706231454}, {"predict": "load org access access access user to list", "true": "load org access user", "bleu": 0.339132609103075, "rouge": 0.7093023255813954}, {"predict": "closes the disk cache associated with this image cache object", "true": "closes the disk cache associated with this image cache object", "bleu": 1.0, "rouge": 1.0}, {"predict": "using the export mask object , create a volume uri to h lu map", "true": "using the export mask object , create a volume uri to h lu map", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the underlying socket", "true": "closes the underlying socket", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the vertices that vertices", "true": "calculates maximum of each coordinate", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "gets the output and error streams from a process and reads them to keep the process from blocking due to a full output buffer", "true": "gets the output and error streams from a process and reads them to keep the process from blocking due to a full output buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds list of arguments in command line", "true": "adds list of arguments in command line", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns matching node or null if none", "true": "returns matching node or null if none", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a band on a java 2 d graphics device ( such as the axis )", "true": "draws the axis on a java 2 d graphics device ( such as the screen or a printer )", "bleu": 0.614835123699657, "rouge": 0.731549815498155}, {"predict": "read a generator setting with the property codes", "true": "read contents of fetch list", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "sets up this animator set to play all of the supplied animations at the same time", "true": "sets up this animator set to play all of the supplied animations at the same time", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a random color", "true": "creates a random colour", "bleu": 0.668740304976422, "rouge": 0.75}, {"predict": "parse a category string as a plain diagnostic", "true": "given a category string that may be prep ended with \" <unk> - \" , return the category e num that corresponds with the category and whether or not it is a is <unk> error", "bleu": 0.010799185234915553, "rouge": 0.16712328767123288}, {"predict": "legacy method for implementing a method of the given method", "true": "this only exists as the tests need to call this through the deprecated method too", "bleu": 0.08461586088475063, "rouge": 0.15443037974683543}, {"predict": "create a program that will be written to the network", "true": "read a <unk> k lf 0 file with external settings", "bleu": 0.12605968092174913, "rouge": 0.1}, {"predict": "aborts the executor and interrupts all threads", "true": "aborts the call", "bleu": 0.24446151121745047, "rouge": 0.43109540636042404}, {"predict": "adds a csp listener to the solution strategy", "true": "adds a csp state listener to the solution strategy", "bleu": 0.6598203338556885, "rouge": 0.931297709923664}, {"predict": "print the specified message to the specified stream , using a standard line width", "true": "prints the provided string on the provided stream", "bleu": 0.10511846841633776, "rouge": 0.28683385579937304}, {"predict": "remove a range of mappings as a batch", "true": "remove a range of mappings as a batch", "bleu": 1.0, "rouge": 1.0}, {"predict": "check the null ability of the column definitions for the result set matches the expected values", "true": "check the null ability of the column definitions for the result set matches the expected values", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a key bounding no bounding boxes to the file or a file file file", "true": "compute the bounding boxes of all <unk> ( if they haven ' t already been computed )", "bleu": 0.10181128254376885, "rouge": 0.12360688956433638}, {"predict": "adds a user to the list of trackers", "true": "adds the specified timeline", "bleu": 0.17747405280050269, "rouge": 0.3546511627906977}, {"predict": "load data from database", "true": "load data into local m data", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "paints the text area", "true": "paints the text area", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an array containing all elements in the specified array , in the specified array", "true": "produces an array list for an array of elements where the list is pre - sized with extra capacity", "bleu": 0.09860814573660683, "rouge": 0.23040604343720492}, {"predict": "send all listeners to all listeners", "true": "sends a cluster event to all registered listeners", "bleu": 0.2238400777155271, "rouge": 0.4178082191780822}, {"predict": "initialize the \" s \" ( s ) url to be the first ( s )", "true": "update data for a key or set of keys", "bleu": 0.06468490584192432, "rouge": 0.0}, {"predict": "method to load x 509 x", "true": "load the extensions table model with x", "bleu": 0.20693220168471366, "rouge": 0.3034825870646766}, {"predict": "deletes all the addresses of a existing user", "true": "deletes all existing addresses of the a existing user", "bleu": 0.366545903669115, "rouge": 0.8148854961832059}, {"predict": "writes a char sequence to a file creating the file if it does not exist", "true": "writes a char sequence to a file creating the file if it does not exist", "bleu": 1.0, "rouge": 1.0}, {"predict": "set the limit and limit of this statement", "true": "set the limit of this statement", "bleu": 0.5773502691896258, "rouge": 0.8798076923076923}, {"predict": "checks whether the file exists", "true": "test if a file exists or not", "bleu": 0.24084874887188915, "rouge": 0.32360742705570295}, {"predict": "write the bytes to byte array", "true": "write the bytes to byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "skips characters", "true": "skips characters", "bleu": 1.0, "rouge": 1.0}, {"predict": "initialize the", "true": "implement all methods along with their respective name & class", "bleu": 0.011702651167821564, "rouge": 0.0}, {"predict": "convert file name to string conversion otherwise illegal byte types", "true": "cleans up the filename from illegal characters and truncates it to the length of bytes specified", "bleu": 0.0765635970878477, "rouge": 0.0738498789346247}, {"predict": "copy content from a file to an underlying file", "true": "copy a url to a file", "bleu": 0.21105340631872635, "rouge": 0.5532879818594103}, {"predict": "here we bound the deltas such that the frame cannot be stretched beyond the extents of the cell layout , and such that the frame ' s borders can ' t cross", "true": "here we bound the deltas such that the frame cannot be stretched beyond the extents of the cell layout , and such that the frame ' s borders can ' t cross", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new authentication configuration object", "true": "creates a new named authentication configuration object", "bleu": 0.5033210449798471, "rouge": 0.9104477611940297}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove trailing or leading whitespace from the annotation", "true": "remove trailing or leading whitespace from the annotation", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the tip text for this property", "true": "returns the tip text for this property", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a writable sub raster given a region of the raster", "true": "creates a writable sub raster given a region of the raster", "bleu": 1.0, "rouge": 1.0}, {"predict": "send buffer to server", "true": "send all local - buffered data to server", "bleu": 0.18693159143202892, "rouge": 0.47164948453608246}, {"predict": "ensure the internal array ' s capacity", "true": "ensure the internal array ' s capacity", "bleu": 1.0, "rouge": 1.0}, {"predict": "calls the event", "true": "calls an event with the given details", "bleu": 0.16842357369809585, "rouge": 0.3730886850152905}, {"predict": "finds parent files to open the given directory", "true": "returns the best configuration of a particular resource given a set of multiple configurations of the same resource", "bleu": 0.050847167445562676, "rouge": 0.14386792452830188}, {"predict": "compare two string to act as a compare string to empty", "true": "compares the two strings", "bleu": 0.11390778025531027, "rouge": 0.14558472553699284}, {"predict": "execute shell commands , default return result msg", "true": "execute shell commands , default return result msg", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method for populate the blob using the check binary blob stored procedure", "true": "populates a ( segmented ) blob using the fill binary blob stored procedure", "bleu": 0.35556702356686953, "rouge": 0.5384615384615383}, {"predict": "un registers a local file from being observed for changes", "true": "un registers a local file from being observed for changes", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes the object immutable", "true": "makes the object immutable", "bleu": 1.0, "rouge": 1.0}, {"predict": "appending the is null operator clause", "true": "appending the is null operator clause", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove all elements from the queue", "true": "remove all mappings from this cache", "bleu": 0.31239399369202553, "rouge": 0.5}, {"predict": "update favorite from favorite channel , make it as favorite station", "true": "update the favorite ui state", "bleu": 0.12605968092174913, "rouge": 0.2681318681318681}, {"predict": "appends all of the elements in the specified collection that are not already in the specified collection , to last element in this de que , in the order", "true": "appends all of the elements in the specified collection that are not already contained in this list , to the end of this list , in the order that they are returned by the specified collection ' s iterator", "bleu": 0.4308178087199247, "rouge": 0.601690934711132}, {"predict": "saves the analysis of all data recorded in this analyzer to the specified file", "true": "saves the analysis of all data recorded in this analyzer to the specified file", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an iterator over the stored dependencies", "true": "returns an iterator over the stored dependencies", "bleu": 1.0, "rouge": 1.0}, {"predict": "notify the ticket form this object", "true": "posts notification about new sms ticket", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "parses an integer , 32 bit integer , and returns the integer in the range", "true": "helper method to ( more ) efficiently parse integer numbers from string values", "bleu": 0.08225964699966554, "rouge": 0.07236061684460261}, {"predict": "creates a new header from a buffer", "true": "creates a new header from a buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "true": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "bleu": 1.0, "rouge": 1.0}, {"predict": "makes a date string in the given from a date", "true": "makes a date string in the given from a date", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes a client request for execution after the client sends back to complete", "true": "execute a bq request with exponential back off and return the result", "bleu": 0.12011055432195765, "rouge": 0.2417437252311757}, {"predict": "checks if the http url passed , which can be read", "true": "confirms that the omaha server sent back an \" ok \" code", "bleu": 0.10400927574124633, "rouge": 0.08628005657708629}, {"predict": "adds a new resource source before the others", "true": "adds a new resource source", "bleu": 0.5873949094699213, "rouge": 0.8026315789473684}, {"predict": "commits changes in the current document", "true": "commit all changes made in the dialog to the model", "bleu": 0.16038842424444547, "rouge": 0.3588235294117647}, {"predict": "connects to this net point , when the package is either a receiver which is part of an item , which is part of the net", "true": "if p from point is already on a target item , a connection to the target is made and true returned", "bleu": 0.08085298080223226, "rouge": 0.26031294452347087}, {"predict": "notify the user of an event", "true": "handles generic motion events", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "add a class to this class", "true": "add \" on class c \" information , and tell c to point back here", "bleu": 0.05861428254383573, "rouge": 0.26521739130434785}, {"predict": "edits a element", "true": "initiates cell editing on the specified element", "bleu": 0.14162677936694862, "rouge": 0.18654434250764526}, {"predict": "create a point which encodes with point compression", "true": "create a point which encodes with point compression", "bleu": 1.0, "rouge": 1.0}, {"predict": "serializes a xml document into a string - encoded in utf 8 format , with platform line separators", "true": "serializes a xml document into a string - encoded in utf 8 format , with platform line separators", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds fill components to empty cells in the first row and first column of the grid", "true": "adds fill components to empty cells in the first row and first column of the grid", "bleu": 1.0, "rouge": 1.0}, {"predict": "return true if the input native component is still good : 00 / finally", "true": "there are two reasons why we don ' t use buffer per window when vista ' s <unk> ( aka aero ) is enabled : - since with <unk> all windows are already double - buffered , the application doesn ' t get expose events so we don", "bleu": 0.009267526877236369, "rouge": 0.05871029836381136}, {"predict": "return the area of triangle abc", "true": "return the area of triangle abc", "bleu": 1.0, "rouge": 1.0}, {"predict": "non symmetric reduction from hesse nberg to real s chur form", "true": "non symmetric reduction from hesse nberg to real s chur form", "bleu": 1.0, "rouge": 1.0}, {"predict": "two transactions read a value and replace it", "true": "two transactions read a value and replace it", "bleu": 1.0, "rouge": 1.0}, {"predict": "casts a list to array object remove empty elements", "true": "casts a list to array object remove empty elements", "bleu": 1.0, "rouge": 1.0}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "searches the specified collection for the minimum element", "true": "searches the specified collection for the minimum element", "bleu": 1.0, "rouge": 1.0}, {"predict": "server interface method that sends a heartbeat cluster to a heartbeat host", "true": "create an external / configured server", "bleu": 0.10390302174233558, "rouge": 0.1182170542635659}, {"predict": "to string , but is c elements in a queue", "true": "to string contains to strings of elements", "bleu": 0.17827531042796255, "rouge": 0.36454183266932266}, {"predict": "generate an animation using the attacks and prepare a different title", "true": "the entity spends the rest of its turn finding a club", "bleu": 0.12605968092174913, "rouge": 0.18181818181818182}, {"predict": "tests allocation contexts for random allocation", "true": "from a rw store , creates multiple allocation contexts to <unk> updates , re - allocate storage and protect against by concurrent contexts", "bleu": 0.017098852226464185, "rouge": 0.12474437627811862}, {"predict": "creates new instance for a single byte array", "true": "create a new pdf x ref , given a sequence of bytes representing the fixed - width cross reference table line", "bleu": 0.03494671304222457, "rouge": 0.12761506276150628}, {"predict": "turn a set of addresses into an array of dns addresses", "true": "create a string array of host addresses from a collection of in et addresses", "bleu": 0.14105352671463167, "rouge": 0.39152759948652116}, {"predict": "display the authenticated pilot ' s profile", "true": "display the authenticated pilot ' s profile", "bleu": 1.0, "rouge": 1.0}, {"predict": "instantiate s a new multi progress moves", "true": "creates a new instance of smooth animation", "bleu": 0.24446151121745047, "rouge": 0.2857142857142857}, {"predict": "update product by product", "true": "updates product price", "bleu": 0.35930411196308426, "rouge": 0.2932692307692307}, {"predict": "checks that all classes have the same type and if it ' s have been performed", "true": "check that the dependencies are satisfied", "bleu": 0.08513012360883544, "rouge": 0.19805194805194803}, {"predict": "clear bit ( in t n ) inside a positive number", "true": "clear bit ( in t n ) inside a positive number", "bleu": 1.0, "rouge": 1.0}, {"predict": "funnel actions , time , funnel steps , etc", "true": "de serialize funnel steps", "bleu": 0.18575057999133596, "rouge": 0.3306233062330623}, {"predict": "appends a descriptor to the given descriptor", "true": "appends a parameter type to the parameter list represented by the given descriptor", "bleu": 0.19173207681565174, "rouge": 0.5692068429237948}, {"predict": "add a fatal exception", "true": "add a catch - clause to the end of the list , and sets its parent to this node", "bleu": 0.01112085540299491, "rouge": 0.15561224489795916}, {"predict": "stream an array of bytes to the browser this method will close the response content as an input stream when finished", "true": "stream an array of bytes to the browser this method will close the ser v let output stream when finished", "bleu": 0.675091533514862, "rouge": 0.7839357429718876}, {"predict": "unlock a key", "true": "unlocks the given lock on the key", "bleu": 0.14162677936694862, "rouge": 0.18654434250764526}, {"predict": "get a list of 45 ( lazy list ) orders known ordering", "true": "returns a slice of orders", "bleu": 0.1235622127262679, "rouge": 0.38125000000000003}, {"predict": "ensures that the schema change is reachable", "true": "try to reach a schema agreement among all the reachable nodes", "bleu": 0.1247439242120089, "rouge": 0.2136602451838879}, {"predict": "clears the list of the steps", "true": "removes all of the elements from enclosed list", "bleu": 0.2238400777155271, "rouge": 0.2785388127853881}, {"predict": "create a new tile store", "true": "create a tile store with a specific sprite store", "bleu": 0.2030072761281288, "rouge": 0.5434298440979956}, {"predict": "returns a comparable value for a qualifier", "true": "returns a comparable value for a qualifier", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if this objects chain work is higher than the others", "true": "returns true if this objects chain work is higher than the others", "bleu": 1.0, "rouge": 1.0}, {"predict": "evaluate expression by function arguments", "true": "evaluate js script ( function or statement )", "bleu": 0.1658165975077607, "rouge": 0.2953995157384988}, {"predict": "throws an internal token ize r", "true": "parses the next token from the stream , and generates a syntax error if the token does not equal the specified character", "bleu": 0.015348610281018882, "rouge": 0.06475583864118895}, {"predict": "returns true if the given url is a jar file", "true": "determine whether the given url points to a resource in a jar file , that is , has protocol \" jar \" , \" zip \" , \" vf s zip \" or \" ws jar \"", "bleu": 0.023578648866188958, "rouge": 0.2313527180783818}, {"predict": "indicates whether some other object is \" equal to \" this one", "true": "indicates whether some other object is \" equal to \" this one", "bleu": 1.0, "rouge": 1.0}, {"predict": "apply set timestamp adds to the batch the query used to change the server timestamp , if needed and if possible ( if the database support such a feature )", "true": "apply set timestamp adds to the batch the query used to change the server timestamp , if needed and if possible ( if the database support such a feature )", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a forward reference to this label", "true": "adds a forward reference to this label", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an instance of the access or class loader", "true": "creates an access or for the given class", "bleu": 0.25406637407730737, "rouge": 0.594541910331384}, {"predict": "parses the given list of logged m qt t drop m message inside and offsets", "true": "parses the given list of xml messages into a list of m qt t message objects", "bleu": 0.36836104969691197, "rouge": 0.5772870662460569}, {"predict": "stops the entity at the start of the time", "true": "ends the bandwidth measurement", "bleu": 0.14113991930789777, "rouge": 0.16531165311653115}, {"predict": "add new row should be part of all files in array merging and insert new row should be part of the array", "true": "this method will be used to add new row", "bleu": 0.1090009697802911, "rouge": 0.20938215102974828}, {"predict": "decode the base 64 encoded string data - whitespace will be ignored", "true": "decode the base 64 encoded string data - whitespace will be ignored", "bleu": 1.0, "rouge": 1.0}, {"predict": "produce an address from the stream obtained from a thread", "true": "skip over all frames below cur rfp with saved code pointers outside of heap ( c frames ) , stopping at the native frame immediately preceding the glue frame which contains the method id of the native method ( this is necessary to allow retrieving the return address", "bleu": 0.0031209009618122945, "rouge": 0.030839231547017187}, {"predict": "scheme walk is called by path for a scheme lookup like file : / t mp / foo / foo", "true": "scheme walk is called by path for a scheme lookup like file : / t mp / foo", "bleu": 0.897077374680109, "rouge": 0.9564459930313588}, {"predict": "returns true if the mime type is a mime type", "true": "checks whether the mime type represents an image media item", "bleu": 0.23462350320528, "rouge": 0.3}, {"predict": "create a new dialog box", "true": "message dialog with custom center node", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "measure item size in kilobytes rather than units which is more practical for a bitmap cache", "true": "measure item size in kilobytes rather than units which is more practical for a bitmap cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "find matrix in case", "true": "returns a new matrix object , where each value is set to the absolute value", "bleu": 0.022969543400575367, "rouge": 0.0953125}, {"predict": "removes the attribute value from the attribute", "true": "remove the attribute from the entry", "bleu": 0.3073940764756322, "rouge": 0.6240409207161125}, {"predict": "opens the snapshot of this camera", "true": "wraps encode camera to mpeg ( )", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "parses the exception into the target exception", "true": "parses an exception debugger option", "bleu": 0.20556680845025982, "rouge": 0.34366197183098596}, {"predict": "rotates the given image by the correct color", "true": "rotates the given image by 180 degrees", "bleu": 0.5873949094699213, "rouge": 0.6747787610619468}, {"predict": "update - e", "true": "update <unk> mode related fields", "bleu": 0.2758512992979459, "rouge": 0.23921568627450981}, {"predict": "sets name and attributes", "true": "sets name and attributes", "bleu": 1.0, "rouge": 1.0}, {"predict": "display a calendar , checking the date", "true": "display calendar for selected resource , time ( day / week / month ) and date", "bleu": 0.06457085856966725, "rouge": 0.3249001331557923}, {"predict": "creates a string string instance with coordinates of a coordinates", "true": "creates a line string using the given coordinate sequence", "bleu": 0.17827531042796255, "rouge": 0.31881533101045295}, {"predict": "trims an array to be exactly the target a size", "true": "trims an array to be exactly the target a size", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes this reader", "true": "closes this strategy and releases any zookeeper resources ; but keeps the zookeeper instance open", "bleu": 0.012951112459987979, "rouge": 0.1983739837398374}, {"predict": "returns true if , at this time , the object will accept a connection via the named event", "true": "returns true if , at this time , the object will accept a connection via the named event", "bleu": 1.0, "rouge": 1.0}, {"predict": "subtract the specified number of specified number of specified quantity", "true": "subtract the specified number of droid flakes", "bleu": 0.4617366309441026, "rouge": 0.6075697211155379}, {"predict": "process an array of bytes , producing output if necessary", "true": "process an array of bytes , producing output if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if service type does not require resource name", "true": "returns true if service type requires resource name", "bleu": 0.5193071778680676, "rouge": 0.7936802973977695}, {"predict": "the entry point of the program", "true": "strip the properties filenames supplied , replacing their contents", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "macro : round : parses s , rounds with u , f mts", "true": "macro : add : parses s , adds v u , f mts", "bleu": 0.4841524713034601, "rouge": 0.7692307692307693}, {"predict": "create an authority key identifier using the passed in certificate ' s public key , issuer and serial number", "true": "create an authority key identifier using the passed in certificate ' s public key , issuer and serial number", "bleu": 1.0, "rouge": 1.0}, {"predict": "opens a jar file", "true": "opens the specified jar file and returns a valid handle", "bleu": 0.11988448048923712, "rouge": 0.3978260869565217}, {"predict": "removes all photo that have been removed from this user", "true": "removes all email ' s from this user", "bleu": 0.27901593935858265, "rouge": 0.5669144981412639}, {"predict": "initializes the disk based cache by scanning for all files currently in the specified root directory", "true": "initializes the disk based cache by scanning for all files currently in the specified root directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "the graphical representation of a path", "true": "the graphical representation of a path", "bleu": 1.0, "rouge": 1.0}, {"predict": "java x", "true": "java x", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a password reset admin console object", "true": "constructs a logger object", "bleu": 0.20556680845025982, "rouge": 0.3824451410658307}, {"predict": "determines if a character is an english letter", "true": "determines if a character is a letter", "bleu": 0.6104735835807844, "rouge": 0.8097345132743362}, {"predict": "call the visitors for the function arguments", "true": "call the visitors for the function arguments", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method creates a new link for a given uri", "true": "creates a link with the given uri and label text", "bleu": 0.21834177214239062, "rouge": 0.5}, {"predict": "checks if the given token is a expression", "true": "checks if the token is a runtime expression", "bleu": 0.44632361378533286, "rouge": 0.875}, {"predict": "destroys this node", "true": "destroys a tree hash instance after the top node was taken for authentication path", "bleu": 0.015198978579778455, "rouge": 0.21070811744386875}, {"predict": "creates a file part from the path", "true": "creates a uri from a file", "bleu": 0.3073940764756322, "rouge": 0.4680306905370844}, {"predict": "reads a fixed type", "true": "reads fixed type from the given reader with flags validation", "bleu": 0.11337974147240094, "rouge": 0.3978260869565217}, {"predict": "processes a request to play a media file", "true": "processes a request to play a media file", "bleu": 1.0, "rouge": 1.0}, {"predict": "performs a binary search for the specified element in the specified sorted list using the specified comparator", "true": "performs a binary search for the specified element in the specified sorted list using the specified comparator", "bleu": 1.0, "rouge": 1.0}, {"predict": "finish the xml document", "true": "finish the xml document", "bleu": 1.0, "rouge": 1.0}, {"predict": "check which elements are valid", "true": "check which elements are valid to appear at this point", "bleu": 0.36787944117144233, "rouge": 0.6288659793814433}, {"predict": "removes an entry from the set", "true": "we do not use any locks here as every remove is for a region entry which is locked before coming here", "bleu": 0.01813224057849837, "rouge": 0.0673289183222958}, {"predict": "creates a new hash cache cache object", "true": "creates cache hashing with provided algorithm", "bleu": 0.20556680845025982, "rouge": 0.31202046035805625}, {"predict": "marshall a e num value", "true": "marshall an e num value", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "c hole sky algorithm for symmetric and positive definite matrix", "true": "c hole sky algorithm for symmetric and positive definite matrix", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes the credits for credits", "true": "initializes key and action event of game", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "indicates whether a midi file of the midi file type specified can be written from the midi file type", "true": "indicates whether a midi file of the file type specified can be written from the sequence indicated", "bleu": 0.693395566222006, "rouge": 0.841766329346826}, {"predict": "computes the window naf ( non - adjacent form ) of an integer", "true": "computes the window naf ( non - adjacent form ) of an integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "maps a collection name to a collection", "true": "given a collection name and a flag ( reverse of forward mapping ) , return the new collection name based on the mapping", "bleu": 0.03891125186324464, "rouge": 0.3040877367896311}, {"predict": "locks to prevent both puts and takes", "true": "locks to prevent both puts and takes", "bleu": 1.0, "rouge": 1.0}, {"predict": "fills vector with random numbers in the range min , max )", "true": "fills vector with random integer values in the range min , max )", "bleu": 0.7003015589741095, "rouge": 0.8736979166666665}, {"predict": "returns the hash code for this set of data", "true": "this method will be used to get the has code , this will be used to the index for inserting array wrapper object as a key in map", "bleu": 0.021492699207313153, "rouge": 0.14841849148418493}, {"predict": "this is overridden to signal that we go to go down the server at the given thread", "true": "returns this image animator thread back to service as an image f etcher if possible", "bleu": 0.0859076483566362, "rouge": 0.12642487046632125}, {"predict": "returns true if the name of the given name is equal to the other name", "true": "compare the given name with the package name in case in di <unk> way", "bleu": 0.16943571815930883, "rouge": 0.3469852104664391}, {"predict": "draws the range markers ( if any ) for an axis and layer", "true": "draws the range markers ( if any ) for a render er and layer", "bleu": 0.6734009436331136, "rouge": 0.8094089264173704}, {"predict": "decrypt key ( does not use salting , so the encryption result is the same for the same input )", "true": "decrypt key ( does not use salting , so the encryption result is the same for the same input )", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a vp f layer", "true": "construct a vp f layer", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the new instructions , in lining each instantiation of each subroutine until the code is fully elaborated", "true": "creates the new instructions , in lining each instantiation of each subroutine until the code is fully elaborated", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if the connection is currently closing", "true": "determines if a connection should be closed upon return to the pool", "bleu": 0.1081377510275021, "rouge": 0.20098846787479407}, {"predict": "set the coefficients of this vector", "true": "get ter for hs l components", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "obtains the priority of this thread , waiting the executor to be completed before the s can be accepted", "true": "shutdown all attached resources synchronously", "bleu": 0.05415315253510895, "rouge": 0.0}, {"predict": "indicates whether this pool is unused", "true": "indicates whether this pool is unused", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method change a directory on the current user ' s home directory", "true": "this method changes the current working directory", "bleu": 0.16544619993389978, "rouge": 0.5285961871750434}, {"predict": "removes the given column from the header", "true": "remove quotes from the given column name", "bleu": 0.392814650900513, "rouge": 0.42857142857142855}, {"predict": "indicates whether the user has been scrolled", "true": "if enabled , checks whether the time that has passed since the scroll position was last changed is greater than the defined time out", "bleu": 0.023159544100502027, "rouge": 0.17613089509143406}, {"predict": "refills the input buffer", "true": "refills the input buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "search for the search documents in the search algorithm", "true": "searches through the index for the specified query and returns the list of documents that finds a match for the query", "bleu": 0.0556330738951919, "rouge": 0.24872579001019368}, {"predict": "writes the tail of the list to the stream", "true": "writes the tail of the list to the stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a list of element objects that have the given name and are immediate children of the given element ; if name is null , all child elements will be included", "true": "return a list of element objects that have the given name and are immediate children of the given element ; if name is null , all child elements will be included", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a required number of random bytes", "true": "returns a required number of random bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the tip text for this property", "true": "returns the tip text for this property", "bleu": 1.0, "rouge": 1.0}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "list job is specified by job list", "true": "get all cube jobs", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "converts a q - array into a binary array", "true": "encodes a polynomial whose coefficients are between 0 and q , to binary", "bleu": 0.10761866342063775, "rouge": 0.26406926406926406}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "it opens a file input stream", "true": "it opens a file input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new caret listener that will be called when the caret position is changed", "true": "adds a new status change listener to the list of listeners", "bleu": 0.16943571815930883, "rouge": 0.39559014267185466}, {"predict": "static function to acquire the serial sensor manager instance to use", "true": "static function returning the serial sensor manager instance to use", "bleu": 0.670422683816333, "rouge": 0.8645669291338582}, {"predict": "tests fail : always returns false", "true": "tests fail : always returns false", "bleu": 1.0, "rouge": 1.0}, {"predict": "a ' stream less ' version of encode that simply takes a buffer of bytes and returns a string containing the encoded buffer", "true": "a ' stream less ' version of encode that simply takes a buffer of bytes and returns a string containing the encoded buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks a stack frame value", "true": "checks a stack frame value", "bleu": 1.0, "rouge": 1.0}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "push the instructions to check that the given switch is visible", "true": "used to find and push in - bound and out - bound routes using static flow entry <unk>", "bleu": 0.06671246496902901, "rouge": 0.06608884073672805}, {"predict": "parse id for same document", "true": "returns the id from a same - document uri ( ex : \" # id \" )", "bleu": 0.029453208790640954, "rouge": 0.24830393487109909}, {"predict": "mark the read count as in use", "true": "mark the space as in use", "bleu": 0.4111336169005197, "rouge": 0.7800511508951408}, {"predict": "c hole sky algorithm for symmetric and positive definite matrix", "true": "c hole sky algorithm for symmetric and positive definite matrix", "bleu": 1.0, "rouge": 1.0}, {"predict": "read a string like a normal - generated number , i", "true": "read a string from memory", "bleu": 0.21200626759025185, "rouge": 0.40219780219780216}, {"predict": "shifts right an array of integers", "true": "shifts right an array of integers", "bleu": 1.0, "rouge": 1.0}, {"predict": "distinct aggregate function which update the distinct set", "true": "distinct aggregate function which update the distinct set", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will removes a new legion member from the me ch", "true": "this method will remove a legion member", "bleu": 0.23901088824528133, "rouge": 0.6630434782608696}, {"predict": "prints the builder to the xml file", "true": "prints the characters from the buffer and resets it to do : make sure that print buffer ( ) is called at the end of the stream in case we have some characters there ! ( flush ( ) ? )", "bleu": 0.002158948779316658, "rouge": 0.1477892186553604}, {"predict": "parse a string value to a calendar", "true": "parse a string value to a calendar", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if a method is a trust body to a target", "true": "returns true if some method in this class has an active ba f body", "bleu": 0.10312570678516415, "rouge": 0.2349165596919127}, {"predict": "retains only the characters in the given string that are contained in the specified container", "true": "removes all characters from ' str ' that are not in ' retain chars '", "bleu": 0.12300686288463772, "rouge": 0.2666666666666666}, {"predict": "delete an old connection", "true": "close and delete an old , unused connection to make room for a new one", "bleu": 0.045203824166015344, "rouge": 0.38125}, {"predict": "find the index of the element that is larger than x", "true": "find the index of the element that is larger than x", "bleu": 1.0, "rouge": 1.0}, {"predict": "release any condition about any reason that , then use any exception to be done with the schedule", "true": "removes all routes without any departure from the schedule", "bleu": 0.09629943614188137, "rouge": 0.2364341085271318}, {"predict": "test whether two relation agree", "true": "test whether two relation agree", "bleu": 1.0, "rouge": 1.0}, {"predict": "prepare the tokens to start the end of the highest word", "true": "standard suffix removal", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "returns the text matched by the current regular expression", "true": "returns the text matched by the current regular expression", "bleu": 1.0, "rouge": 1.0}, {"predict": "take a list of patches and return a textual representation", "true": "take a list of patches and return a textual representation", "bleu": 1.0, "rouge": 1.0}, {"predict": "enter a new precedence level", "true": "leave precedence level", "bleu": 0.35930411196308426, "rouge": 0.5236051502145923}, {"predict": "this method validates the sort size", "true": "this method validates the sort size", "bleu": 1.0, "rouge": 1.0}, {"predict": "finish the current element of the first \" side \" of the net value to be used as a icon", "true": "called to indicate that painting is finished", "bleu": 0.06108557268562171, "rouge": 0.08111702127659574}, {"predict": "delete the panel", "true": "invoked by delete panel menu item validate user intent before deleting", "bleu": 0.04131510728455004, "rouge": 0.2590233545647558}, {"predict": "perform an asynchronous average operation", "true": "perform an asynchronous average operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the next pattern in the pattern", "true": "returns the next token", "bleu": 0.345720784641941, "rouge": 0.5736677115987461}, {"predict": "creates a implementation of dom test document builder factory using org", "true": "creates a implementation of dom test document builder factory using org", "bleu": 1.0, "rouge": 1.0}, {"predict": "obtains a description of the tracked route", "true": "obtains a description of this route", "bleu": 0.5410822690539396, "rouge": 0.7800511508951408}, {"predict": "pushes a new type on to the output frame stack", "true": "pushes a new type on to the output frame stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes a macro object", "true": "loads a macro from a file on disk", "bleu": 0.1739594473063345, "rouge": 0.31443298969072164}, {"predict": "method to delete all es input objects", "true": "delete the elastic search indices that was used for functional testing", "bleu": 0.10489671869455933, "rouge": 0.10683012259194395}, {"predict": "adds a part to this body", "true": "adds partition to partition set", "bleu": 0.24446151121745047, "rouge": 0.3696969696969697}, {"predict": "terminate the f sync service and wait for all the tasks to complete", "true": "terminate the f sync service and wait for all the tasks to complete", "bleu": 1.0, "rouge": 1.0}, {"predict": "utility function used by depth of 1", "true": "search s for the farthest empty location where the current tile could go", "bleu": 0.06628576403773602, "rouge": 0.0}, {"predict": "computes minimal sample size for down scaling image so result image size won ' t exceed max acceptable opengl texture size", "true": "computes minimal sample size for down scaling image so result image size won ' t exceed max acceptable opengl texture size", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the main split pane based on a color", "true": "creates the main split pane", "bleu": 0.5169731539571706, "rouge": 0.7530864197530864}, {"predict": "calls the chain chain against the time chain", "true": "to do currently returns exactly the same chain", "bleu": 0.17747405280050269, "rouge": 0.25}, {"predict": "check if we have a journal to make sure it will not be called on the server", "true": "reference able mechanism requires later setup of tx m gr , otherwise binding into j ndi already requires that tm is running", "bleu": 0.04526715098380795, "rouge": 0.0}, {"predict": "advance all moves from square sq 0 in direction delta , taking in square ' s larger format", "true": "return true if making a move delivers check to the <unk>", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "for new log directory , return a directory for the given class path", "true": "creates a new specific fs directory instance", "bleu": 0.1135935489027116, "rouge": 0.21143847487001732}, {"predict": "java", "true": "add element to xml document", "bleu": 0.015401555084618098, "rouge": 0.0}, {"predict": "writes input stream to output", "true": "read a string of up to max length bytes from an input stream", "bleu": 0.07795171967670728, "rouge": 0.20573355817875214}, {"predict": "split the result of the given branch name into a branch", "true": "returns the remote and the \" local \" name of a remote branch", "bleu": 0.12989958594727688, "rouge": 0.41049798115746977}, {"predict": "see iso 16022 : 2006 , 5", "true": "see iso 16022 : 2006 , 5", "bleu": 1.0, "rouge": 1.0}, {"predict": "encrypts the given password using the specified password", "true": "encrypts data received from the given output stream using the aes algorithm", "bleu": 0.16847111051295394, "rouge": 0.4825949367088607}, {"predict": "pads the string with the given character until it has the given length", "true": "pads the string with the given character until it has the given length", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether we should select a view for swiping", "true": "checks whether we should select a view for swiping", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is invoked to notify the view that a view is sent to other than other than other view", "true": "reset the state of front view when the it ' s recycled by list view", "bleu": 0.07264339766175722, "rouge": 0.17596153846153845}, {"predict": "push a pair of nodes into the stack", "true": "push a pair of nodes into the stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "resets the iv to its original value", "true": "resets the iv to its original value", "bleu": 1.0, "rouge": 1.0}, {"predict": "multiply a 3 x 3 matrix by y size", "true": "multiplies this matrix by a matrix that flips and shifts the y - axis", "bleu": 0.12109261383365659, "rouge": 0.2510288065843621}, {"predict": "stops the connection in the default data source", "true": "shuts down the data source", "bleu": 0.22679164443904004, "rouge": 0.48157894736842105}, {"predict": "string if ies an ipv 4 or v 6 address with subnet mask", "true": "string if ies an ipv 4 or v 6 address with subnet mask", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new action object", "true": "creates a new action object", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert hex string to byte", "true": "convert hex string to byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "write string to buffer", "true": "puts a string into the buffer by first writing the size of the string as an in t , followed by the bytes of the string , padded if necessary to a multiple of 4", "bleu": 0.0001840506906900939, "rouge": 0.08970588235294118}, {"predict": "returns a collection of all permissions given by the user", "true": "create permission for our trusted code", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "produces a map that has a region to the same points and adds a message to the specified array", "true": "update one network with information from another", "bleu": 0.05415315253510895, "rouge": 0.0}, {"predict": "prints a message to the log level", "true": "temporary utility method to keep current print ln behavior", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "blocks until a chunk of the given size can be made from the stream , or e of is reached", "true": "blocks until a chunk of the given size can be made from the stream , or e of is reached", "bleu": 1.0, "rouge": 1.0}, {"predict": "user runs a query and counts facets", "true": "user runs a query and aggregates facets by summing their association values", "bleu": 0.3461582271460378, "rouge": 0.6029654036243821}, {"predict": "constructs a reverse part of the given input stream with no children", "true": "parse the raw text geo names file", "bleu": 0.10390302174233558, "rouge": 0.11050724637681159}, {"predict": "if at runtime , when the q name of the attribute is known , another prefix is specified for the attribute , then we can patch or hack the name with this method", "true": "if at runtime , when the q name of the attribute is known , another prefix is specified for the attribute , then we can patch or hack the name with this method", "bleu": 1.0, "rouge": 1.0}, {"predict": "create xml from a tag", "true": "creates a mojang son string from the given list tag", "bleu": 0.11943865131127647, "rouge": 0.2515463917525773}, {"predict": "creates a 4 x sd : xxx", "true": "creates a new similar xml element", "bleu": 0.24446151121745047, "rouge": 0.31202046035805625}, {"predict": "will account for checking , checking several things : 1 , checking several things : 1", "true": "remove per partition counters and associated sens is ion metrics", "bleu": 0.06468490584192432, "rouge": 0.0}, {"predict": "returns a vector of 2 d vector 2 d around an angle", "true": "return a new instance of vector rotated from the given number of radians", "bleu": 0.11368272367804307, "rouge": 0.23828125000000006}, {"predict": "on m qt t connect to the server", "true": "the method is part of the m qt t simple callback interface in the event of the m qt t connection being broken the led is set to colour <unk> and made to flash", "bleu": 0.012807757976899564, "rouge": 0.17134831460674158}, {"predict": "calculate the bounds for a view ' s title", "true": "calculate the bounds for a view ' s title", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the header , throwing an empty header if the header is missing", "true": "returns the value of an already set output header", "bleu": 0.14283632578659286, "rouge": 0.37596302003081655}, {"predict": "parse sparse fields from unique map of categories , adding in unique ids to player have been same", "true": "parses query params and produces sparse fields map", "bleu": 0.09629943614188137, "rouge": 0.2479674796747967}, {"predict": "sign all the signatures of the form of the cert", "true": "sign part of the xml document referer ed by the supplied a list of id attributes of nodes", "bleu": 0.08864993685523051, "rouge": 0.2717149220489978}, {"predict": "invoked when the target of the listener has changed its state", "true": "invoked when the target of the listener has changed its state", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a url to the s rc / s can also be merged into this a pending track", "true": "adds the url to the url class loader", "bleu": 0.13400825781778894, "rouge": 0.3306233062330623}, {"predict": "adds a new interval to the set", "true": "add points to the interval", "bleu": 0.2626909894424158, "rouge": 0.34366197183098596}, {"predict": "resets the alpha size object with the initial values", "true": "resets som network to initial values", "bleu": 0.19960198807747329, "rouge": 0.4149659863945578}, {"predict": "reloads the xml stream", "true": "reloads the current page and jumps to the same position", "bleu": 0.10551173833795614, "rouge": 0.26521739130434785}, {"predict": "draws a hexagon shape of the given parameters", "true": "draws a hexagon shape for the given parameters", "bleu": 0.5969491792019646, "rouge": 0.875}, {"predict": "this is used to determine if a field is a static field", "true": "this is used to determine if a field is static", "bleu": 0.7539221180326288, "rouge": 0.9242424242424241}, {"predict": "query the query that", "true": "get the current number of outstanding ( batch ) requests to google pub / sub", "bleu": 0.022969543400575367, "rouge": 0.0953125}, {"predict": "converts a byte array into a string", "true": "formats a key as a series of comma delimited unsigned bytes", "bleu": 0.1160873020151595, "rouge": 0.2136602451838879}, {"predict": "initializes and initializes the logging logger", "true": "initializes the logging for the component", "bleu": 0.4111336169005197, "rouge": 0.5}, {"predict": "fills the list from pos down to the top of the list", "true": "fills the list from pos to the left of the list view", "bleu": 0.5266403878479265, "rouge": 0.8333333333333334}, {"predict": "removes a default value from the set of default values", "true": "removes the given value from the set of default values", "bleu": 0.6989307622784944, "rouge": 0.8}, {"predict": "turns the binding for each key binding", "true": "returns the key code for the specified key binding description", "bleu": 0.18094495256969623, "rouge": 0.45607476635514016}, {"predict": "test the cache amount of cache entries ( which cache & lt ; so that cache can be deleted", "true": "replacing the value for a key doesn ' t cause an eviction but it does bring the replaced entry to the front of the queue", "bleu": 0.05197068391807963, "rouge": 0.08872727272727272}, {"predict": "merges two signatures using the timestamp , and return the timestamp", "true": "generates a merged signature of this and another one , where the other signature must be a 1 - signature", "bleu": 0.05976941963701239, "rouge": 0.12261306532663319}, {"predict": "returns a hash code for this instance", "true": "returns a hash code for this object", "bleu": 0.8408964152537145, "rouge": 0.8571428571428571}, {"predict": "creates new grid exception with given throw able as a cause and source of error message", "true": "creates new exception with given throw able as a nested cause and source of error message", "bleu": 0.7346682658304726, "rouge": 0.9375000000000001}, {"predict": "define that the given object is aborted", "true": "the given objects enters the transaction", "bleu": 0.24446151121745047, "rouge": 0.31202046035805625}, {"predict": "adds an option to the required options for an option", "true": "adds an option instance", "bleu": 0.23462350320528, "rouge": 0.4644670050761421}, {"predict": "pause for the client to join the client", "true": "the joined event fires when the first client handshake is processed", "bleu": 0.13107175678306446, "rouge": 0.3070469798657718}, {"predict": "property change listener method , to listen for the source map ' s background changes", "true": "property change listener method , to listen for the source map ' s background changes", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a frame to the section animation", "true": "add a frame to the transition animation", "bleu": 0.5410822690539396, "rouge": 0.7142857142857143}, {"predict": "makes a common implementation of the given class and return a classes that are declared at location of a given location", "true": "scans the class path for concrete classes under the specified package implementing this interface", "bleu": 0.0690889519686715, "rouge": 0.17784256559766765}, {"predict": "get the text in the c data block", "true": "get the text in the c data block", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether the given modifier is changed from the passed pos", "true": "determines if the block at the given position requires a skylight update", "bleu": 0.14709132836587344, "rouge": 0.17256011315417258}, {"predict": "expand a rectangle by the given amount", "true": "expand a rectangle by the given amount", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a given string into a datagram packet", "true": "converts a given string into a datagram packet", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets a string representation of this object", "true": "constructs and returns a string representation of this constraints object", "bleu": 0.4606369751099828, "rouge": 0.6841121495327103}, {"predict": "assigns the ids of the specified set of ids", "true": "assigns the objects to the clusters", "bleu": 0.19960198807747329, "rouge": 0.4149659863945578}, {"predict": "slide the current slide", "true": "do a pro bab list ic subtree slide move", "bleu": 0.10294235160901445, "rouge": 0.14386792452830188}, {"predict": "un registers a previously registered vm shutdown hook", "true": "un registers a previously registered vm shutdown hook", "bleu": 1.0, "rouge": 1.0}, {"predict": "counts the number of black / white transitions between two points , using something like bres en ham ' s algorithm", "true": "counts the number of black / white transitions between two points , using something like bres en ham ' s algorithm", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the string representation of the current value", "true": "returns the string representation of the current value", "bleu": 1.0, "rouge": 1.0}, {"predict": "call this from camera button", "true": "check if good camera sizes are available for encoder", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "construct a new instance with the specified detail string and exception", "true": "construct a new instance with the specified detail string and exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a string without a newline", "true": "append string separated by space", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "encodes the given string into this plain text stream", "true": "encode string to base 64", "bleu": 0.14113991930789777, "rouge": 0.1506172839506173}, {"predict": "lookup table as new table in this g sub table", "true": "return information about the lookup tables in this g sub table", "bleu": 0.4342117574941646, "rouge": 0.56656346749226}, {"predict": "get the sum of the task", "true": "get aggregate summation of time - deltas , in nanoseconds", "bleu": 0.1255107248036171, "rouge": 0.23921568627450981}, {"predict": "re - measure the loading views height , and adjust internal padding as necessary", "true": "re - measure the loading views height , and adjust internal padding as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the given character sequence is a word", "true": "takes a character sequence with a single character and checks if the character occurs in a list of word separators or is empty", "bleu": 0.06394236401645632, "rouge": 0.2829313543599258}, {"predict": "execute an array of blocking tasks , blocking until a primary is available", "true": "execute the supplied operation using the primary , blocking until a primary is available", "bleu": 0.4903959257907357, "rouge": 0.5886610373944512}, {"predict": "write a portion of an array", "true": "write an array of characters", "bleu": 0.3303164318013807, "rouge": 0.5545454545454546}, {"predict": "initializes the table viewer object with the given bounds", "true": "creates the table for the repositories", "bleu": 0.19960198807747329, "rouge": 0.4149659863945578}, {"predict": "message processing as much as a base type", "true": "human readable text description of type and subtype", "bleu": 0.16036590969929357, "rouge": 0.125}, {"predict": "create a straight line from the current path point to the new one specified by x and y", "true": "create a straight line from the current path point to the new one specified by x and y", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method determines which menu items get to be ' action items ' that will appear in an action bar and which items ' overflow items ' overflow items ' in a secondary menu", "true": "this method determines which menu items get to be ' action items ' that will appear in an action bar and which items should be ' overflow items ' in a secondary menu", "bleu": 0.8635707684233572, "rouge": 0.9278704612365065}, {"predict": "checks basic missing value handling of the scheme", "true": "checks basic missing value handling of the scheme", "bleu": 1.0, "rouge": 1.0}, {"predict": "disables the gui interface and clears the command", "true": "disables all buttons in the interface", "bleu": 0.19070828081828378, "rouge": 0.43990384615384615}, {"predict": "load artifact at path with a custom artifact", "true": "load artifact at path , using path name as artifact id", "bleu": 0.32105892380868783, "rouge": 0.511744966442953}, {"predict": "fair version of try acquire", "true": "fair version of try acquire", "bleu": 1.0, "rouge": 1.0}, {"predict": "an internal method for accessing the end of a header", "true": "check if the current string builder trailing characters is an http header end ( empty cr lf )", "bleu": 0.07122387860714109, "rouge": 0.1358574610244989}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "a run n able to check whether the current auto active train is moving or stopped note : if train stops to do work with a manual throttle , this thread will continue to wait until auto operation is resumed", "true": "a run n able that implements delayed execution of a transit section action", "bleu": 0.08773393531104272, "rouge": 0.20776566757493187}, {"predict": "creates a new d add extension dialog", "true": "creates new d add extensions dialog", "bleu": 0.38260294162784475, "rouge": 0.7800511508951408}, {"predict": "add a new point to the result", "true": "add point to the result set", "bleu": 0.5410822690539396, "rouge": 0.7800511508951408}, {"predict": "check whether the specified class is a c glib - generated class", "true": "check whether the specified class is a c glib - generated class", "bleu": 1.0, "rouge": 1.0}, {"predict": "verifies the authentication status message is signed or extended status", "true": "verifies the di co very information matches the data received in a authentication response from an open id provider", "bleu": 0.0724813323008464, "rouge": 0.19593147751605994}, {"predict": "generates a report for the given date", "true": "generate report using description and target date", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "update text views for recharge", "true": "update the text views based on the recharge data being passed in", "bleu": 0.10067278896273972, "rouge": 0.4380610412926392}, {"predict": "obtains map map with given transactions , in order to map out", "true": "gets transaction id map depending on transaction type", "bleu": 0.10390302174233558, "rouge": 0.10374149659863945}, {"predict": "stops the listener thread and unbinds the address", "true": "stops the listener thread and unbinds the address", "bleu": 1.0, "rouge": 1.0}, {"predict": "decode data with a private key", "true": "decode data with private key", "bleu": 0.488923022434901, "rouge": 0.9242424242424241}, {"predict": "derives the a rgb value for a color based on an offset between two other colors", "true": "derives the a rgb value for a color based on an offset between two other colors", "bleu": 1.0, "rouge": 1.0}, {"predict": "add two positions , if an array of cubic be treated as part of uploads", "true": "adds a landing pad to the station", "bleu": 0.06917184228205472, "rouge": 0.0}, {"predict": "creates a cut strategy", "true": "create a new strategy", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "creates a default thread pool , with default values : - minimum pool size is 0 - all events", "true": "creates a default thread pool , with default values : - minimum pool size is 0 - maximum pool size is 16 - keep alive set to 30 seconds - a default thread factory - all events are accepted", "bleu": 0.33346680022040204, "rouge": 0.6168174560936668}, {"predict": "add a property change listener", "true": "add a property change listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the chunk data for a given locator", "true": "write a chunk on to the data service", "bleu": 0.20164945583740668, "rouge": 0.25}, {"predict": "converts an event to the event queue", "true": "disabled for hosted mode", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "initialize all required items", "true": "initialize the values in the table to the preference values", "bleu": 0.08017158404431235, "rouge": 0.13260869565217392}, {"predict": "this method will read all the properties from file and load it into memory", "true": "this method will read all the properties from file and load it into memory", "bleu": 1.0, "rouge": 1.0}, {"predict": "records through the contents of the api", "true": "copies new / updated notes from source to destination storage", "bleu": 0.10175282441454783, "rouge": 0.0}, {"predict": "prints this property list out to the specified stream", "true": "prints this property list out to the specified output stream", "bleu": 0.8085785995823291, "rouge": 0.9384615384615386}, {"predict": "convert date in string format to date format", "true": "convert date in string format to date format", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns directory or null if it exists", "true": "calculates md 5 checksum for the given file o directory", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "initial is e the parameters generator", "true": "initial is e the parameters generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "there are more than one dictionary which are left", "true": "method to check more result is present or not", "bleu": 0.14113991930789777, "rouge": 0.1111111111111111}, {"predict": "increases the capacity of this list , if necessary", "true": "trims the capacity of this list to be the list ' s current size", "bleu": 0.2966151155123462, "rouge": 0.41838134430727025}, {"predict": "enters a new scope by appending any necessary whitespace and the given bracket", "true": "enters a new scope by appending any necessary whitespace and the given bracket", "bleu": 1.0, "rouge": 1.0}, {"predict": "create an ascii representation of a position", "true": "create an ascii representation of a position", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears the s can term s with the s dm mode", "true": "clears the caches and sections data set", "bleu": 0.14991106946711685, "rouge": 0.2314990512333966}, {"predict": "returns a set of nodes that corresponds to this node", "true": "converts an iterator to a set of nodes , according to the x path data model", "bleu": 0.201526720930963, "rouge": 0.36924939467312345}, {"predict": "runs the case where the number of times in the way", "true": "runs a task concurrently", "bleu": 0.11390778025531027, "rouge": 0.14558472553699284}, {"predict": "creates the vm list", "true": "create the virtual machines and add them to the list", "bleu": 0.08872444253557525, "rouge": 0.26521739130434785}, {"predict": "add a port use", "true": "adds a use count to a port , which indicates one initiator is using the port this is public static because the storage ports as signer test uses it", "bleu": 0.0009809269654278288, "rouge": 0.10664335664335663}, {"predict": "pop the current executing attribute set", "true": "pop the current executing attribute set", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates one buffer for the camera preview callback", "true": "creates one buffer for the camera preview callback", "bleu": 1.0, "rouge": 1.0}, {"predict": "associates the cache with the given key , either if cache or null", "true": "put element , key and value both not allowed to be null", "bleu": 0.1135935489027116, "rouge": 0.16116248348745044}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove model change listener", "true": "remove model change listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "fire a change event to listeners", "true": "fire a change event to listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates the connection name", "true": "constructs a name for the connection using the connection type , host , and port", "bleu": 0.0324838397986111, "rouge": 0.190625}, {"predict": "execute multiple multiple multiple queries", "true": "executes a query on the queries inside the cl d fusion en vi <unk> nt", "bleu": 0.0369481680224917, "rouge": 0.09172932330827067}, {"predict": "discovers the id and returns a new instance", "true": "discovers ( refreshes ) a host", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "fully read the specified number of bytes", "true": "the read fully method from data input stream is very useful for all types of streams", "bleu": 0.06457085856966725, "rouge": 0.16245006657789615}, {"predict": "setup circles on a screen", "true": "draw lines between the connectors", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "adds a new a star node to the queue unless it is already among the closed nodes , in which case an update an update node with the new distance", "true": "adds a new a star node to the queue unless it is already among the closed nodes , in which case it only updates the closed node with the new distance", "bleu": 0.7840188396306584, "rouge": 0.8499464094319399}, {"predict": "convert a java file to a file", "true": "gets the file from a java file object", "bleu": 0.31689174383082924, "rouge": 0.3952483801295896}, {"predict": "signals a waiting take", "true": "signals a waiting take", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a raster with two layout but using a different width and height", "true": "creates a writable raster with the specified width and height , that has a data layout ( sample model ) compatible with this color model", "bleu": 0.092957531028187, "rouge": 0.29877551020408166}, {"predict": "build a random left - regular bipartite graph of given left and right sizes", "true": "build a random left - regular bipartite graph of given left and right sizes", "bleu": 1.0, "rouge": 1.0}, {"predict": "and returns a adjusted string", "true": "execute a command in the environment", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "updates the progress update between the given value", "true": "update progress , safe to use for <unk>", "bleu": 0.17747405280050269, "rouge": 0.125}, {"predict": "this context doesn ' t want to do : both directory , even if it isn ' t exist", "true": "creates a context handler for the directory", "bleu": 0.0712695567709093, "rouge": 0.16781292984869325}, {"predict": "tests if this string starts with the specified prefix", "true": "indicates if this text starts with the specified prefix", "bleu": 0.5814307369682193, "rouge": 0.7777777777777778}, {"predict": "the inverse method , which enables the t byte , the case of the initialize r tables and initialize the initialize r initialize r method and verify that the index", "true": "ensure the jsp engine is initialized correctly", "bleu": 0.04034110170120257, "rouge": 0.06087824351297405}, {"predict": "creates a new temporary directory in the specified directory", "true": "creates a new temporary directory in the default temporary file location", "bleu": 0.6084288535721685, "rouge": 0.6876006441223833}, {"predict": "return a string representation of an array of partition ' s ' - ' command - '", "true": "to string - a string representation for the super - class partition ' partition '", "bleu": 0.17694975149532557, "rouge": 0.37927461139896373}, {"predict": "scipio : returns true only if the category is a child of this category", "true": "scipio : returns true only if the category id is child of the given parent category id", "bleu": 0.5022959905162326, "rouge": 0.760914760914761}, {"predict": "input an instance for filtering", "true": "input an instance for filtering", "bleu": 1.0, "rouge": 1.0}, {"predict": "get a list of all the colors in the database", "true": "get a list of all of the columns on a table", "bleu": 0.4342117574941646, "rouge": 0.56656346749226}, {"predict": "adds a resource to a list of resource files", "true": "add a resource created within the analyzed method", "bleu": 0.18575057999133596, "rouge": 0.2378167641325536}, {"predict": "blocks the current event until the event arrives or the time out expires", "true": "signals the semaphore when the event arrives", "bleu": 0.18798317647335086, "rouge": 0.42287694974003465}, {"predict": "tests if this object is equal to another", "true": "tests this object for equality with an arbitrary object", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "check if all dbs vc instances are active in the cluster currently it ' s distributed quorum", "true": "check if node count / 2 + 1 dbs vc instances are active on other nodes in the cluster so that if the current node is powered off , a quorum will still be maintained", "bleu": 0.12979747374266945, "rouge": 0.3982195845697329}, {"predict": "schedule an alarm for the given context", "true": "schedules the nearest upcoming alarm , to refresh notifications", "bleu": 0.15447878876032708, "rouge": 0.12224448897795591}, {"predict": "stop the stop request", "true": "allows scheduling a request to stop the workload", "bleu": 0.18693159143202892, "rouge": 0.31443298969072164}, {"predict": "java x", "true": "java x", "bleu": 1.0, "rouge": 1.0}, {"predict": "joins an array of comparable objects into a array of array elements", "true": "joins arrays together , if only one array contains elements it will be returned without coping anything", "bleu": 0.08145723098662616, "rouge": 0.2006578947368421}, {"predict": "split an url into an empty set of paths", "true": "returns a list of sub parts of path of a resource name", "bleu": 0.10113117135596685, "rouge": 0.0928462709284627}, {"predict": "in it cal and start pos", "true": "initial is e best selling items report", "bleu": 0.15723447135049806, "rouge": 0.0}, {"predict": "notify listeners that a transaction is begin to the graph listeners", "true": "notification of transaction beginning", "bleu": 0.11390778025531027, "rouge": 0.14558472553699284}, {"predict": "this is used to add a job to the execution", "true": "add the given job to run", "bleu": 0.18850319022747347, "rouge": 0.3927038626609442}, {"predict": "reset the parser with a new latex expression", "true": "reset the parser with a new latex expression", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a constant - constant", "true": "adds a new constant", "bleu": 0.3860973950960897, "rouge": 0.6802973977695167}, {"predict": "add full chart data", "true": "add full chart data", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a rule to the data output", "true": "writes the state of the transition rule to the stream", "bleu": 0.23813694985189848, "rouge": 0.45607476635514016}, {"predict": "removes the given property from being animated as a part of this property bundle", "true": "removes the given property from being animated as a part of this property bundle", "bleu": 1.0, "rouge": 1.0}, {"predict": "de serialize the given byte array into a type containing the type this object and subject to change ( do not use )", "true": "de serializes a serialized type serialize r", "bleu": 0.0665422126355551, "rouge": 0.2212817412333736}, {"predict": "divide the number of multi digits by the number of one digit", "true": "divide the number of multi digits by the number of one digit", "bleu": 1.0, "rouge": 1.0}, {"predict": "show the neuron properties dialog", "true": "creates and displays the neuron properties dialog", "bleu": 0.5093330917854971, "rouge": 0.6472148541114059}, {"predict": "encrypt the message \" in \" chunks \" encryption", "true": "perform pseudo \" in - place \" encryption", "bleu": 0.23356898886410005, "rouge": 0.4756335282651072}, {"predict": "does a change of the receiver have any changes in the class", "true": "check if one of the children is changed", "bleu": 0.1367440667823257, "rouge": 0.2074829931972789}, {"predict": "removes special char if defined", "true": "for some save sc near ios and analysis we should remove special characters , i", "bleu": 0.0369481680224917, "rouge": 0.09172932330827067}, {"predict": "creates a network script action", "true": "create a new script action for the work space", "bleu": 0.17348474258688365, "rouge": 0.40757238307349664}, {"predict": "get the web image of an image", "true": "load the web view with an image with a url", "bleu": 0.20024850746991507, "rouge": 0.45607476635514016}, {"predict": "this method consolidates the chall an merge interest , and its out the requested chall an", "true": "constructs a list of receipts for each installment", "bleu": 0.06468490584192432, "rouge": 0.0}, {"predict": "check the email address is valid or not", "true": "checks if the input parameter is a valid email", "bleu": 0.17795502018438056, "rouge": 0.34923664122137404}, {"predict": "adds an edge to the directed edges for this planar graph", "true": "adds a directed edge which is known to form part of this line", "bleu": 0.12498879161997976, "rouge": 0.3283983849259758}, {"predict": "parses a string as an xml file", "true": "parses a deployment descriptor stored in a regular file", "bleu": 0.19740631366145517, "rouge": 0.3667334669338677}, {"predict": "open a new connection entry", "true": "called by the conn m gr thread when a new connection is created", "bleu": 0.10259023253147191, "rouge": 0.3086003372681282}, {"predict": "checks whether the extension of the filename is that specified", "true": "checks whether the extension of the filename is that specified", "bleu": 1.0, "rouge": 1.0}, {"predict": "report an entry", "true": "generate and return the collision report", "bleu": 0.19765609300943976, "rouge": 0.20962199312714777}, {"predict": "adds the given subscription to the subscription store - used for topic to subscription matching", "true": "adds the given topic to the subscription store - used for topic to subscription matching", "bleu": 0.8153551038173115, "rouge": 0.9333333333333336}, {"predict": "zips the given string points to a zip file in \" de \" database \"", "true": "store the contents of the to be zipped name directory into a zip file with the provided name", "bleu": 0.13872223312687962, "rouge": 0.2981427174975562}, {"predict": "generates a hash map for storing expanded state when activity is rotated or on resume ( ) is called if necessary", "true": "generates a hash map used to store expanded state for items in the list on configuration change or whenever on resume is called", "bleu": 0.21469918131718027, "rouge": 0.4959349593495935}, {"predict": "adds audio packet that have been notified on audio packet", "true": "adds the listener to receive audio packets from all modules", "bleu": 0.13950796967929133, "rouge": 0.2}, {"predict": "convenience method for decoding data to a file", "true": "convenience method for decoding data to a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a delta indicator with the given value of the given critical it y and value", "true": "creates the extension from the passed der encoded value of the same", "bleu": 0.1513851459876605, "rouge": 0.2932692307692307}, {"predict": "creates a new java environment", "true": "creates a java environment with the given ' java ' path", "bleu": 0.136079846679777, "rouge": 0.4683301343570058}, {"predict": "format method for the o conversion character and long argument", "true": "format method for the o conversion character and long argument", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a callback for javascript object", "true": "adds a js function to handle calls to the specified javascript object", "bleu": 0.11492332782473744, "rouge": 0.31443298969072164}, {"predict": "removes all blocks from the section 0", "true": "remove all blocks , block listeners , and entry points", "bleu": 0.15925177647011352, "rouge": 0.22803738317757008}, {"predict": "writes string to file", "true": "java nio replacement of commons - io", "bleu": 0.142719668098593, "rouge": 0.0}, {"predict": "selection tree : select node tree at least 1 to select at least node", "true": "determines whether a given node is a variable access node that can be simplified", "bleu": 0.09782375748961449, "rouge": 0.14285714285714285}, {"predict": "invoked by the picker for updating the widget", "true": "called by the picker for updating the header display", "bleu": 0.6406746857842317, "rouge": 0.6984732824427481}, {"predict": "this method is used to reduce the way of round points to a vertex plus the x and y", "true": "where is a segment , represented by endpoints ' s 1 ' and ' s 2 ' , within g a range ' near ' of region ' r ' ?", "bleu": 0.043060095985920345, "rouge": 0.11502199874292895}, {"predict": "add an action to the list", "true": "add an action to the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "method which loads an index from a file", "true": "method which loads an index from a data input ( random access file or data input stream )", "bleu": 0.2547427905669301, "rouge": 0.5754716981132075}, {"predict": "obtains the url of the specified class file", "true": "obtains the url of the specified class file", "bleu": 1.0, "rouge": 1.0}, {"predict": "con cats a new i and c + unique id", "true": "the sign off function lets the server know that a client is checking out", "bleu": 0.08450033111870488, "rouge": 0.08090185676392574}, {"predict": "this method creates steps to create s rdf pairs in an empty cg", "true": "this method creates steps to create s rdf pairs in an empty s rdf group", "bleu": 0.7882308990070634, "rouge": 0.846242774566474}, {"predict": "convert a timestamp to the histogram", "true": "creating timestamp for down sampling in order to be consistent with ts db down sampling fun c on hour / minute level", "bleu": 0.016986029490530064, "rouge": 0.1295116772823779}, {"predict": "should a navigation bar appear at the bottom of the screen in the current device configuration ? a navigation bar may appear on the right side of the screen in certain configurations", "true": "should a navigation bar appear at the bottom of the screen in the current device configuration ? a navigation bar may appear on the right side of the screen in certain configurations", "bleu": 1.0, "rouge": 1.0}, {"predict": "for printing indices in a given point", "true": "returns a string represent ion of the node", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "receive notification of a recoverable xslt processing error", "true": "receive notification of a recoverable xslt processing error", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the head of the as so cation list that is keyed by target", "true": "get the head of the as so cation list that is keyed by target", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a union path iterator object , including creation of location path iterators from the opcode list , and call back into the compiler to create predicate expressions", "true": "create a union path iterator object , including creation of location path iterators from the opcode list , and call back into the compiler to create predicate expressions", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the command from a file", "true": "executes the unzip run n able using the provided monitor to update the user and provide cancel capabilities", "bleu": 0.02989501072722226, "rouge": 0.07644110275689221}, {"predict": "read a record in the database", "true": "read a record from the database", "bleu": 0.488923022434901, "rouge": 0.8333333333333334}, {"predict": "print error message into the error stream", "true": "throws error message with line number and last token read", "bleu": 0.15925177647011352, "rouge": 0.22803738317757008}, {"predict": "constant - time spooky hash 4 - word - state hashing reusing pre computed state partially", "true": "constant - time spooky hash 4 - word - state hashing reusing pre computed state partially", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if this text has at the end of the underlying cursor at the end", "true": "if the deal has more deals , this returns true ; false otherwise", "bleu": 0.12512236921161915, "rouge": 0.14055299539170507}, {"predict": "adds an issuer to the criterion for the issuer distinguished names", "true": "adds an issuer to the criterion for the issuer distinguished names", "bleu": 1.0, "rouge": 1.0}, {"predict": "build the string required for an sql select statement : where key in ( ? , ? ,", "true": "build the string required for an sql select statement : where key in ( ? , ? ,", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all nodes in the map with the specified name", "true": "creates a copy of nodes map without the given node", "bleu": 0.14991106946711685, "rouge": 0.3}, {"predict": "write the given device to storage if we are master", "true": "write the given device to storage if we are master", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "assumes that array lower + 1 through to array upper is already in heap form and then puts array lower to the array upper in heap form", "true": "helps sort an array of doubles", "bleu": 0.044915755686574035, "rouge": 0.06846240179573512}, {"predict": "removes an audio processor from the internal buffer", "true": "removes the processor from the internal processor queue at the provided index", "bleu": 0.2833335058083106, "rouge": 0.4825949367088607}, {"predict": "creates a list of suffix nodes", "true": "inserts a chain of children into the given node", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "ensure that the given locator is within the locator", "true": "converts a locator string with a known prefix to a by object", "bleu": 0.10113117135596685, "rouge": 0.0928462709284627}, {"predict": "tells the listener that a task has been started", "true": "notify listeners that a task was started", "bleu": 0.2777619034011791, "rouge": 0.5115303983228512}, {"predict": "non - dom : check for valid xml characters as per the xml version", "true": "non - dom : check if value of the comment is well - formed", "bleu": 0.33649324423301513, "rouge": 0.42857142857142855}, {"predict": "throws an exception if a failure , that is responsible for an exception if this is not in this method", "true": "throw an exception if the record has been destroyed", "bleu": 0.1136930615245481, "rouge": 0.22208737864077668}, {"predict": "uploads the version of the artifact", "true": "uploads artifact into the repository", "bleu": 0.2626909894424158, "rouge": 0.3696969696969697}, {"predict": "escapes bytes in the format used in protocol buffer text format , which is the same as the format used for c string literals", "true": "escapes bytes in the format used in protocol buffer text format , which is the same as the format used for c string literals", "bleu": 1.0, "rouge": 1.0}, {"predict": "load a load name this set of a given set of integers : : 1", "true": "read the header of a daa file and all reference names", "bleu": 0.1082597837309053, "rouge": 0.1582360570687419}, {"predict": "get an array of types for an array of objects", "true": "get an array of types for an array of objects", "bleu": 1.0, "rouge": 1.0}, {"predict": "counts all the mappings according to the given bucket , in order to their ordinal index", "true": "does all the \" real work \" of <unk> up the counts", "bleu": 0.11502783619900048, "rouge": 0.21995192307692307}, {"predict": "get parent , e the value , e", "true": "adds th binary security token to the header element", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "skips spaces in the given string", "true": "skips spaces in the given string", "bleu": 1.0, "rouge": 1.0}, {"predict": "update the button", "true": "update the <unk> scrolling", "bleu": 0.5066641486392105, "rouge": 0.5570776255707762}, {"predict": "samples an operand from the distribution", "true": "samples from the distribution", "bleu": 0.4347208719449915, "rouge": 0.8299319727891156}, {"predict": "given an input stream it loads a p em x 509 certificate", "true": "reads x 509 certificate object from given input stream", "bleu": 0.23901088824528133, "rouge": 0.2932692307692307}, {"predict": "create a new guacamole tunnel for the guacamole client", "true": "creates a new guacamole http tunnel map which automatically closes and removes http tunnels which are no longer in use", "bleu": 0.08182166500549096, "rouge": 0.2582010582010582}, {"predict": "associate the given value with the specified key", "true": "associate the given class name value with the specified key", "bleu": 0.5822894008899787, "rouge": 0.8714285714285713}, {"predict": "rename the whole table", "true": "if rename definitions object is prepared , does the lookup and renaming of schema , table and columns", "bleu": 0.012902949563521738, "rouge": 0.24465240641711228}, {"predict": "handle the result of reading last add confirmed", "true": "handle the result of reading last add confirmed", "bleu": 1.0, "rouge": 1.0}, {"predict": "puts a row to the list", "true": "tests if the specified fingerprint is in this set", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "return true if there are no extension present in this generator", "true": "return true if there are no extension present in this generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "apply the layout to the layout", "true": "apply this group ' s layout to its neurons", "bleu": 0.1894765350842885, "rouge": 0.3860759493670886}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "the nice value ( see set priority ( 2 ) ) , a value in the range 19 ( low priority ) to - 20 ( high priority )", "true": "the nice value ( see set priority ( 2 ) ) , a value in the range 19 ( low priority ) to - 20 ( high priority )", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the size of the layer set", "true": "gets the <unk> size of a layer of the tree", "bleu": 0.20958712452883563, "rouge": 0.45607476635514016}, {"predict": "finds a static method that is non - static method for inclusion in public class", "true": "finds public static method that is accessible from public class", "bleu": 0.2722589423069702, "rouge": 0.580952380952381}, {"predict": "helper http function to get list of my service cards based on keyword", "true": "helper http function to get list of my service cards based on keyword and category", "bleu": 0.8574039191604413, "rouge": 0.9167630057803468}, {"predict": "adds the candidate for this candidate from the candidate stack", "true": "add a phone number address to the list", "bleu": 0.12605968092174913, "rouge": 0.11338289962825278}, {"predict": "convenience method to return only the digits and plus signs in the matching string", "true": "convenience method to return only the digits and plus signs in the matching string", "bleu": 1.0, "rouge": 1.0}, {"predict": "compares two methods for equality", "true": "package private helper method for descriptor", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "returns the marker segment of the marker sequence", "true": "returns the first marker segment object in the list with the given tag , or null if none is found", "bleu": 0.06197705798903779, "rouge": 0.3315217391304348}, {"predict": "returns an input reader", "true": "open the input using the \" from \" parameter , exiting on failure", "bleu": 0.037870374782798366, "rouge": 0.1073943661971831}, {"predict": "returns a new instance which has the additional source to be merged together with the current array of sources", "true": "returns a new instance which has the additional first source to be concatenated together with the current array of sources", "bleu": 0.724386543179998, "rouge": 0.9188284518828452}, {"predict": "publish to a tenant", "true": "this method publishes the supplied items", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "throws an exception if the uri is valid", "true": "verify the valid class use for construction", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "create the extension from its der encoded value and critical it y", "true": "create the extension from the passed der encoded value", "bleu": 0.38677062763523445, "rouge": 0.6842948717948718}, {"predict": "generates monthly periods for the last 5 , current and next 5 years", "true": "generates <unk> periods for the whole year in which the start date of the given period exists", "bleu": 0.13819423067894707, "rouge": 0.26040554962646745}, {"predict": "generate a 128 bit key using the key generator of the process", "true": "generates a random aes key for encrypting / decrypting the <unk> value attention : in a real cash box this key would be generated during the in it process and stored in a secure area", "bleu": 0.02090486812143843, "rouge": 0.2346153846153846}, {"predict": "handle a single value property change", "true": "veto able change listener", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "parse a server response into a json object", "true": "parse a server response into a json object", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads version information from the url", "true": "loads version information from the url", "bleu": 1.0, "rouge": 1.0}, {"predict": "find a page of entity using query by example", "true": "find a page of user using query by example", "bleu": 0.6580370064762462, "rouge": 0.8888888888888888}, {"predict": "add a static view to appear at the end of the list", "true": "add a static view to appear at the end of the recycle r view", "bleu": 0.7721334650597669, "rouge": 0.8345771144278606}, {"predict": "add a string to the start of the queue", "true": "add a string to the start of the queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the given use can be read only", "true": "tests to see if the connection is in read only mode", "bleu": 0.18702742554494436, "rouge": 0.3929146537842191}, {"predict": "consumes to a publisher , returning immediately", "true": "consume returns a comp let able future that is done when publisher completes", "bleu": 0.08723697147876523, "rouge": 0.1897356143079316}, {"predict": "set the parent node", "true": "set the parent node", "bleu": 1.0, "rouge": 1.0}, {"predict": "cleans a directory without deleting it", "true": "cleans a directory without deleting it", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if this char set is known to be registered in the iana char set", "true": "returns true if this char set is known to be registered in the iana char set registry", "bleu": 0.9394130628134758, "rouge": 0.9644268774703558}, {"predict": "adds a constant to the high quality list", "true": "create and add constant instance", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "given a change message , report logging to change", "true": "called if something is messed up", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "asserts that the given actual data is equal with , parameter , or , parameter w or , tolerance", "true": "<unk> like the jun it asserts for doubles , which allows an \" epsilon \" but this is for integers , and with a specific description in the assert just for time stamps", "bleu": 0.042159144922987266, "rouge": 0.1100420926037282}, {"predict": "instantiate s a new spider tag", "true": "instantiate s a new site map", "bleu": 0.6147881529512643, "rouge": 0.6666666666666666}, {"predict": "flushes the entire document", "true": "flush all cached resources", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "add basic 4 address to the output", "true": "add an entity where the info packet traverses", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "checks whether the scheme alters the training data set during training", "true": "checks whether the scheme alters the training data set during building", "bleu": 0.9036020036098448, "rouge": 0.9090909090909091}, {"predict": "returns true if the queue is empty", "true": "determines if the event queue is empty", "bleu": 0.4111336169005197, "rouge": 0.7142857142857143}, {"predict": "reads a delta from the given reader", "true": "reads index entries from the segment", "bleu": 0.2626909894424158, "rouge": 0.4680306905370844}, {"predict": "return the number of hosts in a two network environment", "true": "returns number of hosts in the net 2 initiators map", "bleu": 0.3672056269893592, "rouge": 0.4}, {"predict": "add the certificates in cert store to the certificate set to be included with the generated signed data message", "true": "add the certificates in cert store to the certificate set to be included with the generated signed data message", "bleu": 1.0, "rouge": 1.0}, {"predict": "process lob data as a been processed from database", "true": "internal : process a lob specification", "bleu": 0.16784459625186196, "rouge": 0.27664399092970515}, {"predict": "fires a sax parser s for the given element", "true": "fires a sax start prefix mapping event for all the namespace stack which have just come into scope", "bleu": 0.10694820729788418, "rouge": 0.34936998854524626}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints this exception ' s stack trace to a print writer", "true": "prints this exception ' s stack trace to a print writer", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the data flavor for a new list of java source listeners", "true": "convert data flavor list to array", "bleu": 0.14694106251955755, "rouge": 0.3546511627906977}, {"predict": "test for correct error handling for a choice that has no icon element", "true": "test for correct error handling for a choice that has an empty icon element", "bleu": 0.7492013233822993, "rouge": 0.8829915560916768}, {"predict": "translates attributes into an attribute", "true": "sets attributes of a file on windows system", "bleu": 0.14983220973977976, "rouge": 0.1476997578692494}, {"predict": "returns the next index of the message", "true": "gets next id for indexed message id", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "fills the fields with the current sensor id and unique id", "true": "set the current values of all fields", "bleu": 0.16108992769687397, "rouge": 0.2314990512333966}, {"predict": "checks if the security info s is s for the given endpoint", "true": "return true if any of the security info s is valid for the given endpoint and client identity", "bleu": 0.35925011566740067, "rouge": 0.6434599156118143}, {"predict": "retains ( keeps ) only the elements in the receiver that are contained in the specified other list", "true": "retains ( keeps ) only the elements in the receiver that are contained in the specified other list", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts byte array to string list of byte strings", "true": "converts an array list to an array list", "bleu": 0.17747405280050263, "rouge": 0.4756335282651072}, {"predict": "add an index to the table", "true": "defines an index with the specified column names", "bleu": 0.2238400777155271, "rouge": 0.4178082191780822}, {"predict": "sets the ssl key store key", "true": "sets the ssl key store key password", "bleu": 0.846481724890614, "rouge": 0.9104477611940297}, {"predict": "zookeeper session has been started", "true": "instantiate s a new zookeeper state machine ensemble", "bleu": 0.14983220973977976, "rouge": 0.1476997578692494}, {"predict": "creates a shortcut set with the specified character", "true": "creates shortcut for mnemonic replacing standard alt + letter to ctrl + alt + letter on mac with j dk version newer than 6", "bleu": 0.02580955920010991, "rouge": 0.17199248120300753}, {"predict": "indicates to the virtual machine that it would be a good time to collect available memory", "true": "runs the garbage collector", "bleu": 0.07692375026049747, "rouge": 0.11213235294117647}, {"predict": "deletes the minimum height at the given node", "true": "removes the smallest key and associated value from the given subtree", "bleu": 0.15587146574232644, "rouge": 0.3070469798657718}, {"predict": "resets the counters to 0", "true": "reset error and warning counters", "bleu": 0.2730120862709067, "rouge": 0.2}, {"predict": "write the source to the specified output stream", "true": "reads config from the given source file , updating it using the given configuration and writing in to the given output", "bleu": 0.049422115544674704, "rouge": 0.3190376569037656}, {"predict": "return the type to representation of the type", "true": "separate the input annotations into a map of target class ( targeted , valid , invalid ) to the annotations that fall into each of those categories", "bleu": 0.018756321134324627, "rouge": 0.1561433447098976}, {"predict": "updates the location and line", "true": "cause auto scroll to occur", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "compares two strings , returning the length", "true": "compares the string value to another value", "bleu": 0.20556680845025982, "rouge": 0.2857142857142857}, {"predict": "bind an integer into given value", "true": "bind achievement condition to given property", "bleu": 0.24446151121745047, "rouge": 0.3333333333333333}, {"predict": "remove a column from this table", "true": "remove a column from this table", "bleu": 1.0, "rouge": 1.0}, {"predict": "write data to the data", "true": "append text to the log , repaint the window and notify the auto scroll thread to scroll to the end of the text area", "bleu": 0.00803791031570834, "rouge": 0.12335692618806875}, {"predict": "closes a connection to a transaction", "true": "closes the connection to the database", "bleu": 0.31239399369202553, "rouge": 0.5}, {"predict": "creates a new struct object from a bayes estimator from a bayes estimator and data model", "true": "constructs a new bayes im editor from a bayes estimator wrapper", "bleu": 0.2545984531673679, "rouge": 0.53643216080402}, {"predict": "remove an action listener that receives events to the projection panel", "true": "removes the listener for events that shift the projection stack", "bleu": 0.17827531042796255, "rouge": 0.384251968503937}, {"predict": "send a fatal error log message", "true": "send a fatal error log message", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests whether an object is a literal", "true": "returns true if the character at index is a literal , that is not editable", "bleu": 0.11025262522550319, "rouge": 0.2559440559440559}, {"predict": "generate a granularity instance based on a path element", "true": "generate a granularity instance based on a path element", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new word iterator for the default locale", "true": "constructs a word iterator using the default locale", "bleu": 0.3549481056010053, "rouge": 0.8323586744639376}, {"predict": "this leaf closes the leaf", "true": "closes the index by closing its open leaf page , if necessary", "bleu": 0.09521044541645862, "rouge": 0.3285457809694794}, {"predict": "push a single file", "true": "push a single file", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse and returns string from the following form for the open state", "true": "performs some processing on the given item", "bleu": 0.10390302174233558, "rouge": 0.11050724637681159}, {"predict": "resize the buffer to the exact provided size", "true": "resize s the array to contain a smaller number of elements", "bleu": 0.13107175678306446, "rouge": 0.3070469798657718}, {"predict": "split u in t 8 to 2 bytes of high byte and low byte", "true": "split u in t 8 to 2 bytes of high byte and low byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "pretty printing accumulator function for shorts", "true": "pretty printing accumulator function for shorts", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes this directory in a directory", "true": "fills the class cache with classes in the specified directory", "bleu": 0.1255107248036171, "rouge": 0.23921568627450981}, {"predict": "removes all bandwidth object from the current values", "true": "removes the specified bandwidth type", "bleu": 0.19070828081828378, "rouge": 0.32105263157894737}, {"predict": "exit with a process success code", "true": "exit with a process success code", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns current nanosecond time", "true": "get the current time", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "remove / collapse multiple occurrences of string arguments", "true": "remove / collapse multiple newline characters", "bleu": 0.44632361378533286, "rouge": 0.5865384615384615}, {"predict": "creates a list of suffix nodes", "true": "inserts a chain of children into the given node", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "generates a java doc in the given source index", "true": "generates and returns the java doc for the specified start / end tag pair", "bleu": 0.12109261383365659, "rouge": 0.3347050754458162}, {"predict": "extract the properties for each object in the given source", "true": "extract all properties in this namespace that can be found in the provided property source", "bleu": 0.11966489805508941, "rouge": 0.3860759493670886}, {"predict": "removes the last element from this set", "true": "remove the last row", "bleu": 0.24446151121745047, "rouge": 0.3824451410658307}, {"predict": "ensures that the given component is visible", "true": "scrolls to show the component in case it is invisible currently", "bleu": 0.1247439242120089, "rouge": 0.32049036777583184}, {"predict": "returns the next available character , or the null character ' \\ 0 ' if all input has been exhausted", "true": "returns the next available character , or the null character ' \\ 0 ' if all input has been exhausted", "bleu": 1.0, "rouge": 1.0}, {"predict": "ends the value for the random representation ( the highest representation ) and resets the representation ( not modified and resets the login )", "true": "should be invoked after processing each child representation element , in order to apply consistency checks", "bleu": 0.050661968099322066, "rouge": 0.05187074829931972}, {"predict": "creates a new instance for the specified number formatter", "true": "creates a new section label generator using the specified label format string , and platform default number and percentage formatters", "bleu": 0.0956389954588777, "rouge": 0.38730158730158726}, {"predict": "implements the overlap by les k ( t ) les k ( by is probably a overlap ( )", "true": "splits a char sequence according to the delimiter character", "bleu": 0.0712695567709093, "rouge": 0.07634543178973717}, {"predict": "initializes a timer for a specified object", "true": "initializes a timer with a target , a selector and an interval in seconds", "bleu": 0.13448025110102005, "rouge": 0.35935198821796754}, {"predict": "handles given keys to invocation", "true": "reads a tuple from the stream", "bleu": 0.18796001821050234, "rouge": 0.0}, {"predict": "adds a double and a string", "true": "adds a string and a double", "bleu": 0.45180100180492244, "rouge": 0.6666666666666666}, {"predict": "removes the property change listener from the listener list", "true": "remove the specified property change listener", "bleu": 0.2777619034011791, "rouge": 0.5532879818594103}, {"predict": "load the values for this step from an xml node", "true": "load the values for this step from an xml node", "bleu": 1.0, "rouge": 1.0}, {"predict": "the implementation of generating a parameter with type of type arguments", "true": "hash a signature", "bleu": 0.11390778025531027, "rouge": 0.15926892950391647}, {"predict": "called to notify that a consumption has finished", "true": "called to notify that a consumption has finished", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the numerical value to cast a numerical value from one type to another", "true": "generates the instructions to cast a numerical value from one type to another", "bleu": 0.7487402156832422, "rouge": 0.8948655256723717}, {"predict": "adds a trigger group name", "true": "adds a trigger group name to the list of trigger group names", "bleu": 0.2465969639416065, "rouge": 0.5475763016157988}, {"predict": "reads a utf - 8 string from the input stream", "true": "reads a utf - 8 encoded string", "bleu": 0.47987820666906633, "rouge": 0.7290836653386453}, {"predict": "clears the temporary files", "true": "limp i a la list a de fiche ros temporal es del esc a neo", "bleu": 0.01931500670555844, "rouge": 0.0}, {"predict": "reads the given file", "true": "read and extract a thumbnail - sized image from a file", "bleu": 0.06243769243378541, "rouge": 0.12298387096774194}, {"predict": "submit ( execution ) throws a result", "true": "completed submit ( run n able ) returns successfully", "bleu": 0.19740631366145517, "rouge": 0.3667334669338677}, {"predict": "shrinks a rectangle on the amount of space represented by this object", "true": "shrinks an area by the space attributes", "bleu": 0.13065113298388567, "rouge": 0.3315217391304348}, {"predict": "makes a query using the json set and returns the assert queries", "true": "validates a query matches some json test expressions using the default double delta tolerance", "bleu": 0.15233734832972273, "rouge": 0.3034825870646766}, {"predict": "builds the absolute stats", "true": "builds the absolute stats", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method to execute a journal in a plugin", "true": "used to execute this plugin tool", "bleu": 0.19960198807747329, "rouge": 0.4149659863945578}, {"predict": "method serializes the class i fier to a file", "true": "serialize a model to file", "bleu": 0.16784459625186196, "rouge": 0.3012345679012346}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if the specified field is a partition tag field", "true": "check if the specified field is a partition tag field", "bleu": 1.0, "rouge": 1.0}, {"predict": "arranges the blocks for this container with a fixed width and no height constraint", "true": "arranges the blocks in the container with a fixed width and no height constraint", "bleu": 0.7241577342575828, "rouge": 0.8571428571428571}, {"predict": "processes a query that has been added to the application given the command line arguments and returns a result that key", "true": "mainly exists to provide statement", "bleu": 0.05809665204409193, "rouge": 0.08652482269503546}, {"predict": "get the index of the first occurrence of the string", "true": "similar to string", "bleu": 0.12605968092174913, "rouge": 0.17039106145251398}, {"predict": "returns the line of this bit in the specified map", "true": "adds delta to the count for k and returns the count prior to addition", "bleu": 0.11950151429308975, "rouge": 0.16180371352785147}, {"predict": "send a tcp packet to the client", "true": "send to tcp client", "bleu": 0.23356898886410002, "rouge": 0.5736677115987461}, {"predict": "handle a key typed event", "true": "handle a key typed event", "bleu": 1.0, "rouge": 1.0}, {"predict": "fills in the input map of classes given a subset of class", "true": "given a map of already renamed classes , fill in the gaps for classes that were not reached , but have parents that can be pulled from", "bleu": 0.05953742827489555, "rouge": 0.14386792452830188}, {"predict": "reads the state of this object from a stream", "true": "verifies that the method name , parameter types , and constraints are valid", "bleu": 0.09049614828481034, "rouge": 0.08802308802308802}, {"predict": "creates a program that satisfies an op check multi sig program", "true": "create a program that satisfies an op check multi sig program , using pre - encoded signatures", "bleu": 0.5237080939586991, "rouge": 0.6877113866967306}, {"predict": "deletes the instances at the given positions", "true": "deletes the instances at the given positions", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the listener as a listener of the specified type", "true": "adds the listener as a listener of the specified type", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws test of connecting to a 2 d array of shape", "true": "gc 2 gc : generalized ce <unk> ral transformation", "bleu": 0.11390778025531027, "rouge": 0.1018363939899833}, {"predict": "this method determines if the group is between two dates", "true": "tests if the given base date is between the given start date and end date , including the dates themselves", "bleu": 0.08032344912012505, "rouge": 0.31443298969072164}, {"predict": "add a listener for event changes", "true": "registers a time out event listener for time out notification", "bleu": 0.16959011078459055, "rouge": 0.3588235294117647}, {"predict": "converts the provided string list to a string array", "true": "converts the provided string list to a string array", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the tool tip text for the given text , with the html escape characters and escapes any comments in the specified", "true": "this method transforms the given tool tip text into html", "bleu": 0.12740810460323607, "rouge": 0.3351648351648352}, {"predict": "writes a block from the buffer", "true": "writes a chunk of bytes to the stream", "bleu": 0.2238400777155271, "rouge": 0.4178082191780822}, {"predict": "creates a new client http request object", "true": "creates a new multi part post http request on a freshly opened url connection", "bleu": 0.15124760523215705, "rouge": 0.4491899852724595}, {"predict": "receive notification of character data", "true": "receive notification of character data", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends a tag to the xml", "true": "helper method for printing a tag in top level", "bleu": 0.17632778423526832, "rouge": 0.2573839662447257}, {"predict": "this method can be used to allow the root of the calling multi token", "true": "returns the object managing the validation extra info", "bleu": 0.09782375748961449, "rouge": 0.19122257053291536}, {"predict": "add the top level top level elements to the top level", "true": "add top level contents to the document", "bleu": 0.1972940627795883, "rouge": 0.5787476280834916}, {"predict": "executes a single row", "true": "invokes a closure passing it a new sql instance created from the given map of arguments", "bleu": 0.017888698387160718, "rouge": 0.09023668639053255}, {"predict": "write a byte array", "true": "writes a buffer to the underlying stream", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "adds a index entry", "true": "adds a new index entry or updates an existing index entry", "bleu": 0.10332660497667492, "rouge": 0.49193548387096775}, {"predict": "computes the project : this query from this model", "true": "the demand - driven mode for precisely computing points - to information for given pointers", "bleu": 0.07246365075155338, "rouge": 0.07973856209150328}, {"predict": "removes characters from the specified array of characters", "true": "adjust indices in starts to reflect a deletion after delete at", "bleu": 0.09268172804333874, "rouge": 0.0}, {"predict": "create the type for the given class , if it is already in this class", "true": "factory for a bean type", "bleu": 0.09103526405546068, "rouge": 0.10990990990990988}, {"predict": "reverse document for a logic", "true": "reverse allocation", "bleu": 0.2730120862709067, "rouge": 0.3096446700507614}, {"predict": "determines if the subject using the given caller is used as a caller - key qualifier", "true": "determines if the application doesn ' t mind if the mechanism obtains the required credentials from outside of the current subject", "bleu": 0.11592084811211917, "rouge": 0.21107266435986158}, {"predict": "read an entity declaration", "true": "read an entity declaration", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a field with the specified value", "true": "add a field with the specified value", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes the storage if it is already associated with this request", "true": "deletes a storage information and files from disk", "bleu": 0.12605968092174913, "rouge": 0.216696269982238}, {"predict": "registers a client request to start an incoming request", "true": "sends an advanced synchronous request that has to be configured by the developer", "bleu": 0.10761866342063775, "rouge": 0.17604617604617603}, {"predict": "builds an error node", "true": "summary", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests if an example is ok to be a certain example", "true": "returns true if the example does not contain missing values within regarded attributes", "bleu": 0.10510262682013449, "rouge": 0.1641991924629879}, {"predict": "loads a binary file", "true": "loads a binary file from the input stream", "bleu": 0.36787944117144233, "rouge": 0.6288659793814433}, {"predict": "delete lun s from the lun group", "true": "delete lun s from lun group", "bleu": 0.5946035575013605, "rouge": 0.9360613810741688}, {"predict": "removes the order of the given locator s from the set of collected services that are also null - separated by a locator s", "true": "deletes a set of locator s from the managed set of locator s , and discards any already - discovered lookup service that corresponds to a deleted locator", "bleu": 0.1677272427867365, "rouge": 0.3793532338308458}, {"predict": "checks if the item is selected", "true": "looks , if the input item type is selected", "bleu": 0.23206041459353086, "rouge": 0.6434599156118143}, {"predict": "add operation to screen", "true": "updates the dialog with a new operation", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "creates a new key store with a given provider", "true": "specifies the security provider to use for the key store", "bleu": 0.17861170664603615, "rouge": 0.20854700854700853}, {"predict": "attempts to cas - dec re ment the worker count field of c tl", "true": "attempts to cas - dec re ment the worker count field of c tl", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert the provided requests to a http url", "true": "serializes one or more requests but does not execute them", "bleu": 0.12489309605176803, "rouge": 0.10892857142857142}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct instance of composite annotations", "true": "this class can find composite routes between two territories", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "create a new endpoint , with a specific host and port", "true": "create an endpoint for a specified host and port", "bleu": 0.24384183193426084, "rouge": 0.6110183639398998}, {"predict": "test for bug # 575 , and set metadata up to the client", "true": "tests fix for bug # <unk> - db md", "bleu": 0.1777835117834348, "rouge": 0.2819722650231125}, {"predict": "amount of time that this process has been scheduled in kernel mode , measured in clock ticks ( divide by s ys conf ( sc c lk t ck ) )", "true": "amount of time that this process has been scheduled in kernel mode , measured in clock ticks ( divide by s ys conf ( sc c lk t ck ) )", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the program re writer for an rewrite a given rewrite which is passed from outside", "true": "construct a program re writer for the given rewrite sets which are passed from outside", "bleu": 0.33599730590055277, "rouge": 0.6489361702127661}, {"predict": "creates a new settings menu", "true": "creates the settings menu", "bleu": 0.3860973950960897, "rouge": 0.6802973977695167}, {"predict": "writes a string to the given output stream", "true": "write string to data output stream motivation : data input stream", "bleu": 0.18239668350432228, "rouge": 0.4093959731543625}, {"predict": "check if the given string is a valid java name", "true": "check whether the given string can be a valid java name", "bleu": 0.4372805827465167, "rouge": 0.7554179566563467}, {"predict": "create try / create commands", "true": "create process commands to start tern with node", "bleu": 0.1658165975077607, "rouge": 0.2953995157384988}, {"predict": "parse the directory tree", "true": "count the metrics for packages", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "gets the error stream from a process and reads it to keep the process from blocking due to a full buffer", "true": "gets the error stream from a process and reads it to keep the process from blocking due to a full buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes the string wherever it occurs in the builder", "true": "deletes the string wherever it occurs in the builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes log likelihood of an entire clustering", "true": "computes log likelihood of an entire clustering", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the array of any class names for the given list of params", "true": "turn an array of strings ( class names ) into an array of class objects", "bleu": 0.14185422023352762, "rouge": 0.35260115606936415}, {"predict": "announce multi cast announcement to the storage", "true": "announce membership in the specified groups , and return false if interrupted , otherwise return true", "bleu": 0.056829570481990416, "rouge": 0.16245006657789615}, {"predict": "encodes a byte array into base 64 format and breaks the output into lines", "true": "encodes a byte array into base 64 format and breaks the output into lines", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove the gazetteers file contained in the list of the gazetteer", "true": "trim off excess size dead space", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "determines if the prompt contains ' s single account character", "true": "determines if the prompt contains ' select account '", "bleu": 0.5900468726392808, "rouge": 0.7439024390243903}, {"predict": "sets the sorted string sorted on", "true": "sorts the instances according to the given attribute / dimension", "bleu": 0.11341174240707227, "rouge": 0.11960784313725491}, {"predict": "flip the image that the image to the given image", "true": "flips the given image on the horizontal axis", "bleu": 0.24808415001701817, "rouge": 0.34014869888475835}, {"predict": "whether audit is enable ? defaults to true", "true": "whether audit is enable ? defaults to true", "bleu": 1.0, "rouge": 1.0}, {"predict": "is this sip request ?", "true": "is a terms & conditions request", "bleu": 0.24736929544091937, "rouge": 0.3577712609970674}, {"predict": "reads segments for the segments in this segment order to use for all segments in the segments", "true": "reads the segment metadata , the sequence and table key", "bleu": 0.09083627868206415, "rouge": 0.31082802547770705}, {"predict": "starts the time as a project", "true": "if time is > 60 * 60 * 24 seconds , it will be projected into next day , e", "bleu": 0.02142071121599405, "rouge": 0.07011494252873564}, {"predict": "below method will be used to update the min or max value by removing the length from it", "true": "below method will be used to update the min or max value by removing the length from it", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct a node in the result tree", "true": "construct a node in the result tree", "bleu": 1.0, "rouge": 1.0}, {"predict": "run a meta class where the meta times can run", "true": "check that the map either contains the specified type or is the specified type", "bleu": 0.08450033111870488, "rouge": 0.08090185676392574}, {"predict": "de serialize a struct object", "true": "desi rial ize a struct object", "bleu": 0.41602390756021224, "rouge": 0.5366568914956013}, {"predict": "merge two options", "true": "create and parse allowable options", "bleu": 0.2758512992979459, "rouge": 0.23921568627450981}, {"predict": "this method concatenates two byte arrays", "true": "this method concatenates two byte arrays", "bleu": 1.0, "rouge": 1.0}, {"predict": "initializes an input stream from a file", "true": "initializes an input stream from a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an instance of extended d is max configuration", "true": "creates an instance of extended d is max configuration", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes out a single value for the properties", "true": "writes all properties of a given resource to the properties table and links them to the main table record", "bleu": 0.06063168540538234, "rouge": 0.2760180995475113}, {"predict": "the maximum y axis of the input value", "true": "compute the maximum value on a log scale", "bleu": 0.22679164443904004, "rouge": 0.375}, {"predict": "adds the listener as key listener", "true": "register a listener to be notified when focus is cleared", "bleu": 0.11341174240707227, "rouge": 0.11960784313725491}, {"predict": "add a listener for mode changes", "true": "add a listener for mode changes", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration of all the available options", "bleu": 0.43343894987509085, "rouge": 0.7904967602591793}, {"predict": "creates a mosaic levy", "true": "creates a x em mosaic levy", "bleu": 0.36064528799877893, "rouge": 0.7721518987341772}, {"predict": "this is the implementation function that determines whether the provided value is within the range", "true": "returns the ordinal rank of value among the sampled values in this buffer", "bleu": 0.10343603005129705, "rouge": 0.21708185053380782}, {"predict": "measure item size in kilobytes rather than units which is more practical for a bitmap cache", "true": "measure item size in kilobytes rather than units which is more practical for a bitmap cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new predicate returning true when the predicate matches the predicate", "true": "negate the given predicate", "bleu": 0.11498759556447223, "rouge": 0.27477477477477474}, {"predict": "add margin top to simulate set fits system window false", "true": "add margin top to simulate set fits system window true", "bleu": 0.8931539818068694, "rouge": 0.9}, {"predict": "decode hex string to a byte array", "true": "converts a hexadecimal string into an byte array", "bleu": 0.240785655451027, "rouge": 0.3952483801295896}, {"predict": "sends data to the device", "true": "sends data to the device on this connection", "bleu": 0.5488116360940264, "rouge": 0.7384987893462469}, {"predict": "blocks for schema", "true": "requests and blocks for the schema from the server", "bleu": 0.10283257773094409, "rouge": 0.45864661654135336}, {"predict": "appends a new string representation to the buffer", "true": "append a text representation of an array to a buffer", "bleu": 0.157044754112095, "rouge": 0.43571428571428567}, {"predict": "returns the written by this instance", "true": "returns an array that holds the real values from the mat lab array", "bleu": 0.07612610271614867, "rouge": 0.19741100323624597}, {"predict": "read partitions for specified file", "true": "read the cut points from the given sequence file", "bleu": 0.13575914775035755, "rouge": 0.2717149220489978}, {"predict": "check if the poll seq is available for the requested channel", "true": "returns true if the indicated sequence number is available", "bleu": 0.18850319022747347, "rouge": 0.4073455759599332}, {"predict": "add a slide to this adapter , and this method can be called by other fragments", "true": "add a slide to the intro", "bleu": 0.2140909265975804, "rouge": 0.39610389610389607}, {"predict": "draw a line on to the array , using the classic bres en ham algorithm", "true": "draw a line on to the array , using the classic bres en ham algorithm", "bleu": 1.0, "rouge": 1.0}, {"predict": "performs some processing on the given item", "true": "performs some processing on the given item", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "pushes an element on to the top of this stack", "true": "push to the top of the stack", "bleu": 0.3672056269893592, "rouge": 0.6075697211155379}, {"predict": "compute the cardinality ( number of set bits ) low - 1 digest calculator that specified number", "true": "return the cardinality of a particular tail , which is the range count if not optional and infinite if optional", "bleu": 0.08563457112034535, "rouge": 0.159825327510917}, {"predict": "create standard response header with optional cookie and print out", "true": "create standard response header with optional cookie and print document", "bleu": 0.8931539818068694, "rouge": 0.9}, {"predict": "cast a object to a long object ( reference type )", "true": "cast a object to a long object ( reference type )", "bleu": 1.0, "rouge": 1.0}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "finish rendering the icon and add the associated row context", "true": "complete the current grid row , adding the icon at the end", "bleu": 0.15433335889254143, "rouge": 0.2683284457478006}, {"predict": "tests that internal state of the object can not be changed by modifying initial array value", "true": "tests that internal state of the object can not be changed by modifying initial array value", "bleu": 1.0, "rouge": 1.0}, {"predict": "shuts down the bridge", "true": "shutdown the android debug bridge and clean up all connected devices", "bleu": 0.06909866532427987, "rouge": 0.24596774193548387}, {"predict": "send a web socket web socket from the server", "true": "marks that ping back was received", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "finds an object literal", "true": "find a slot in the j to c with this object literal in else return 0", "bleu": 0.02354285107288738, "rouge": 0.1804733727810651}, {"predict": "reset the t at least one window", "true": "not part of api turns off the viewable area , scaling the page back to original scaling", "bleu": 0.04451531901458464, "rouge": 0.0775095298602287}, {"predict": "build space out of tax", "true": "builds an expanded version of the ' wu mpu s lexicon ' found on page <unk> of aim a v 3", "bleu": 0.011128574349134012, "rouge": 0.06923950056753689}, {"predict": "test the transfer rate of a single rate", "true": "compare transfer rate calculated to expected value", "bleu": 0.21105340631872638, "rouge": 0.26991150442477874}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds this to the inverse to the arguments", "true": "add an x 509 trust manager to the ones being governed by this composite", "bleu": 0.10712878727413526, "rouge": 0.1732954545454545}, {"predict": "returns an iterator over all nodes", "true": "return an iterator of all children of this node", "bleu": 0.1894765350842885, "rouge": 0.3860759493670886}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new folder in the current directory with the name create directory name", "true": "creates a new folder in the current directory with the name create directory name", "bleu": 1.0, "rouge": 1.0}, {"predict": "i - empirical prior", "true": "i - mutual information", "bleu": 0.47287080450158786, "rouge": 0.5}, {"predict": "setup and run a test", "true": "setup and run a test", "bleu": 1.0, "rouge": 1.0}, {"predict": "always returns 0 , exception tests fail no positive test case for black - box test possible : no default value indicated", "true": "always returns 0 , exception tests fail no positive test case for black - box test possible : no default value indicated", "bleu": 1.0, "rouge": 1.0}, {"predict": "make a pretty printed json text of this map", "true": "make a pretty printed json text of an object value", "bleu": 0.6799308458396492, "rouge": 0.7299145299145299}, {"predict": "returns true if a class has at least a specific type", "true": "returns true if the given annotation is retained at runtime", "bleu": 0.22416933501922287, "rouge": 0.384251968503937}, {"predict": "message processing test , start activity", "true": "message processing test , send invalid sms data", "bleu": 0.4405149609594086, "rouge": 0.5570776255707762}, {"predict": "add a class path into the path", "true": "adds the class path for the loader as paths in the merge path", "bleu": 0.11787460936700446, "rouge": 0.3794712286158632}, {"predict": "load the first whole configuration from the given string", "true": "load directories map used to populate select on basic metadata page", "bleu": 0.11301601243449393, "rouge": 0.09822866344605477}, {"predict": "get the null in divi du um =", "true": "create a \" null \" in divi du um ( full space )", "bleu": 0.2500409412742686, "rouge": 0.45658682634730546}, {"predict": "locates all classes in the given uri", "true": "executes find all strings assuming the strings are the names of a classes that should be loaded and returned", "bleu": 0.03978165541753403, "rouge": 0.14202561117578577}, {"predict": "determines whether or not a value is of slav o - germanic org in", "true": "determines whether or not a value is of slav o - germanic org in", "bleu": 1.0, "rouge": 1.0}, {"predict": "inverse a full inventory , so that it can be used by the get full inventory", "true": "shuffles all items in the inventory", "bleu": 0.08513012360883544, "rouge": 0.19805194805194803}, {"predict": "responsible for generating the animations that moves the tabs back in from discard attempt or commit the current discard ( if any )", "true": "responsible for generating the animations that moves the tabs back in from discard attempt or commit the current discard ( if any )", "bleu": 1.0, "rouge": 1.0}, {"predict": "formats a double value as a fraction and returns the result", "true": "returns the formatted value", "bleu": 0.16108992769687397, "rouge": 0.2911694510739857}, {"predict": "a locale independent version of to lowercase", "true": "a locale independent version of to lowercase", "bleu": 1.0, "rouge": 1.0}, {"predict": "run the specified step where the specified size = 1", "true": "assert a step - list with get a list of sample steps ( size )", "bleu": 0.08461586088475063, "rouge": 0.15443037974683543}, {"predict": "invoked when a processing exception occurs", "true": "invoked when a processing exception occurs", "bleu": 1.0, "rouge": 1.0}, {"predict": "registers the given transform", "true": "this method allows to register a transformation", "bleu": 0.142719668098593, "rouge": 0.0}, {"predict": "terminate this entire set of co routines", "true": "terminate this entire set of co routines", "bleu": 1.0, "rouge": 1.0}, {"predict": "shrinks the capacity of the buffer to the current length if necessary", "true": "shrinks the capacity of the buffer to the current length if necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new atomic \" and \" - condition", "true": "creates a new logical and condition with the provided sub - conditions", "bleu": 0.2164910073203448, "rouge": 0.4642313546423136}, {"predict": "discard any allocations that hold data prior to the specified absolute position , returning them to the al locator", "true": "discard any allocations that hold data prior to the specified absolute position , returning them to the al locator", "bleu": 1.0, "rouge": 1.0}, {"predict": "create new hop given host , port and transport", "true": "create new hop given host , port and transport", "bleu": 1.0, "rouge": 1.0}, {"predict": "update for ngc", "true": "sets the state of the ui controls to match our internal state", "bleu": 0.022493847365531092, "rouge": 0.0}, {"predict": "writes a single character", "true": "write a ascii code to the output stream", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "extract a message , creating the message from a received message , and integer values in the array", "true": "process the incoming message , see if it is a panel response , and if so parse the loco net id", "bleu": 0.10728071127834692, "rouge": 0.3034825870646766}, {"predict": "executes reads and validates a reads ground truth", "true": "executes a random batch operation with keys presented in sorted order", "bleu": 0.12197601375336842, "rouge": 0.20469798657718125}, {"predict": "check whether an user has been added to the user", "true": "a method that determines if it is possible to add a range of lights in numerical order eg 11 thru 18 , primarily used to show / not show the add range box in the add light window", "bleu": 0.008483488372914712, "rouge": 0.0754017305315204}, {"predict": "method to compare all the object classes in the set with the spec fie d object class", "true": "method to compare all the object classes in the set with the spec fie d object class", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes an in t field value", "true": "writes an in t field value", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns natural logarithm of the argument", "true": "get the log of the factorial of a number", "bleu": 0.17632778423526832, "rouge": 0.2573839662447257}, {"predict": "timed wait for a response to the server", "true": "waits for a response to some pending operation", "bleu": 0.44632361378533286, "rouge": 0.5}, {"predict": "atomic ally adds the given value to the current value of the field of the given object managed by this updater", "true": "atomic ally adds the given value to the current value of the field of the given object managed by this updater", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes ' close able ' , ignoring any checked exceptions", "true": "closes a specified close able , suppressing any checked exceptions", "bleu": 0.2998221389342337, "rouge": 0.7000000000000001}, {"predict": "this function adds a byte to a file", "true": "append some data to the file", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "notify the listeners that the list has changed", "true": "notify all registered listeners that a change occurred in the lists", "bleu": 0.16481400866629634, "rouge": 0.4093959731543625}, {"predict": "convert a ipv 4 address from an integer to an in et address", "true": "convert a ipv 4 address from an integer to an in et address", "bleu": 1.0, "rouge": 1.0}, {"predict": "opens a file on the server", "true": "opens a ftp connection", "bleu": 0.2907153684841096, "rouge": 0.4149659863945578}, {"predict": "plus ( math context ) for a positive big decimal", "true": "plus ( math context ) for a positive big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "put an map value to the queue if it does not already exist", "true": "adds the key - value mapping to the cache iff there is no entry for that key", "bleu": 0.09930751066504134, "rouge": 0.1953041622198506}, {"predict": "determine the common suffix of two strings", "true": "determine the common suffix of two strings", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the current xslt element", "true": "closes parser and frees all resources", "bleu": 0.22352339099197038, "rouge": 0.1788856304985337}, {"predict": "start the publishing monitor thread itself", "true": "starts the publishing monitor once and only once", "bleu": 0.2945901093386716, "rouge": 0.4178082191780822}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "( unknown ) reads for video capture", "true": "polls the status of video frame read completion", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "draws the axis on the canvas", "true": "reduce this bean visual ' s icon size by the given factor", "bleu": 0.0812630644213965, "rouge": 0.10481099656357389}, {"predict": "verifies the syntax of the target name and recreates the transient state", "true": "reconstitutes contained permissions based on the information in the target name", "bleu": 0.2044800736021839, "rouge": 0.3505747126436781}, {"predict": "converts a camel case to java camel strings", "true": "returns the identifier in lower - camel format", "bleu": 0.16036590969929357, "rouge": 0.125}, {"predict": "decodes base 64 data into oct ect s", "true": "decodes base 64 data into oct ect s", "bleu": 1.0, "rouge": 1.0}, {"predict": "sorts the passed list of source objects in a list of source objects", "true": "sorts the passed list of full copy source objects based on the natural sort order of their labels", "bleu": 0.275864669078055, "rouge": 0.5015416238437821}, {"predict": "gets and removes the head of the queue", "true": "gets and removes the head of the queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "instantiate s a new movie set action", "true": "instantiate s a new adds the movie set action", "bleu": 0.5196026388051794, "rouge": 0.8557114228456915}, {"predict": "create an rmi registry", "true": "starts the rmi registry", "bleu": 0.47287080450158786, "rouge": 0.5}, {"predict": "remove a socket from the list of modifications", "true": "read from monitored file , report any changed values for monitored socket statistics", "bleu": 0.09499501502705178, "rouge": 0.09131736526946108}, {"predict": "does a given url point to google book search , regardless of domain", "true": "does a given url point to google book search , regardless of domain", "bleu": 1.0, "rouge": 1.0}, {"predict": "resets internal state to the initial state", "true": "resets internal state to the initial state", "bleu": 1.0, "rouge": 1.0}, {"predict": "fix me : fix me ' if character white space", "true": "ensure the output string has a character of whitespace before adding another word", "bleu": 0.0933873085201553, "rouge": 0.084958217270195}, {"predict": "handles add request handler request", "true": "handles duplicate request handler request", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "determines if the head of this audio instance have expired on the current time", "true": "test if the response is expired against current time , given the expire duration in milliseconds", "bleu": 0.1379357312452807, "rouge": 0.3293736501079914}, {"predict": "makes the given visitor visit this stack map frame", "true": "makes the given visitor visit this stack map frame", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an array of \" key = value \" strings containing information not otherwise easily available , such as # defined library versions", "true": "returns an array of \" key = value \" strings containing information not otherwise easily available , such as # defined library versions", "bleu": 1.0, "rouge": 1.0}, {"predict": "executes the given query", "true": "handle a recently halted query by throwing an appropriate exception", "bleu": 0.08017158404431235, "rouge": 0.13260869565217392}, {"predict": "write the given device to storage if we are master", "true": "write the given device to storage if we are master", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a list of given cell to be used by the given name", "true": "if network hardware on a node was replaced , the identity will change", "bleu": 0.10571070857151538, "rouge": 0.15384615384615383}, {"predict": "change the parameter and return the hastings ratio", "true": "change the parameter and return the hastings ratio", "bleu": 1.0, "rouge": 1.0}, {"predict": "tear down after testing", "true": "tear down after testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "fired when the chart has been pro grammatically change", "true": "receives notification of a chart progress event", "bleu": 0.14113991930789777, "rouge": 0.1278825995807128}, {"predict": "initialize ( or re - initialize ) this iterator", "true": "initialize ( or re - initialize ) this iterator", "bleu": 1.0, "rouge": 1.0}, {"predict": "obtains a local date instance of this epoch", "true": "obtains a local date in the japanese calendar system from the epoch - day", "bleu": 0.22066035619387875, "rouge": 0.43323863636363635}, {"predict": "the function convert transverse mercator to geodetic converts transverse mercator projection ( east ing and north ing ) coordinates to geodetic ( latitude and longitude ) coordinates , according to the current ellipsoid and transverse mercator projection parameters", "true": "the function convert transverse mercator to geodetic converts transverse mercator projection ( east ing and north ing ) coordinates to geodetic ( latitude and longitude ) coordinates , according to the current ellipsoid and transverse mercator projection parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks fail with optimistic lock on fail", "true": "checks size is zero", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "virtual i zed support for map", "true": "virtual i zed support for map", "bleu": 1.0, "rouge": 1.0}, {"predict": "puts the entry with the specified key into the cache", "true": "puts the entry with the specified key into the cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "normalize processor for each item", "true": "this is an important usability feature to have in our cpp transformation", "bleu": 0.0566124695559154, "rouge": 0.0}, {"predict": "add a language and the list", "true": "add language to supported languages", "bleu": 0.24446151121745047, "rouge": 0.3696969696969697}, {"predict": "returns the index of the smallest value in an array that is greater than ( or optionally equal to ) a specified key", "true": "returns the index of the smallest value in an array that is greater than ( or optionally equal to ) a specified key", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a user to the filesystem", "true": "adds a user to the underlying repository", "bleu": 0.6848940448305334, "rouge": 0.7587064676616916}, {"predict": "block merges the given entries as high 2 low & high 2", "true": "block mix ( 128 - bit block ) of input key to internal hash state", "bleu": 0.08091975469641616, "rouge": 0.07261904761904761}, {"predict": "registers the given host an event", "true": "register a host that is connected to the switch", "bleu": 0.14827340167306757, "rouge": 0.12869198312236285}, {"predict": "add to - be - reconciled flow to the queue", "true": "add to - be - reconciled flow to the queue", "bleu": 1.0, "rouge": 1.0}, {"predict": "construct this object from one of the strings in the format \" list \" parameter", "true": "construct this object from one of the strings in the \" fm t list \" parameter", "bleu": 0.7088706579891837, "rouge": 0.8980021030494217}, {"predict": "puts the entry with the specified key into the cache", "true": "puts the entry with the specified key into the cache", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a jar file from all jar sections", "true": "writes the jar file", "bleu": 0.21105340631872638, "rouge": 0.3546511627906977}, {"predict": "appends a new cell to the current row containing the provided integer value", "true": "appends a new cell to the current row containing the provided integer value", "bleu": 1.0, "rouge": 1.0}, {"predict": "expect a server proxy failure with the given arguments", "true": "expect a server proxy failure", "bleu": 0.5169731539571706, "rouge": 0.7530864197530864}, {"predict": "re - measure the loading views height , and adjust internal padding as necessary", "true": "re - measure the loading views height , and adjust internal padding as necessary", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the property with the specified key from this list", "true": "remove a key from the parameter set", "bleu": 0.17827531042796255, "rouge": 0.24302788844621517}, {"predict": "re calculates all attribute statistics on the attribute", "true": "re calculate the attribute statistics of the given attribute", "bleu": 0.2451240194075422, "rouge": 0.5820610687022901}, {"predict": "returns true if this element has no children", "true": "returns whether this group has any child layers", "bleu": 0.19070828081828378, "rouge": 0.375}, {"predict": "inserts the column at the given index in the column list ( which can be used to insert )", "true": "inserts the specified column at the specified position", "bleu": 0.14253911354181859, "rouge": 0.399737876802097}, {"predict": "returns the index of string s in the reply", "true": "returns the index of string s in the reply", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the size ( not any ) of the list", "true": "to do relevant for ll - parser ? ? ?", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "load the procedure command from the input stream", "true": "load a command script from the input stream and find the b sh method in the target namespace", "bleu": 0.1438175076195409, "rouge": 0.43160377358490565}, {"predict": "invokes the correct source for the command class", "true": "a command may be implemented as a compiled java class containing one or more static invoke ( ) methods of the correct signature", "bleu": 0.036774976148415406, "rouge": 0.11867704280155641}, {"predict": "compute the responses for the current instance on the current instance", "true": "computes probabilities for the multi no mi al logistic model type", "bleu": 0.14991106946711685, "rouge": 0.18181818181818182}, {"predict": "add client and add it to client", "true": "wrapper methods for add / modify / remove apis in am client cap data", "bleu": 0.07562380261607851, "rouge": 0.17967599410898377}, {"predict": "deletes a file or directory", "true": "deletes a single file or recursively a folder with its content", "bleu": 0.136079846679777, "rouge": 0.4683301343570058}, {"predict": "method that adds the export snapshot step for a single volume", "true": "add the export remove volume step to the work flow", "bleu": 0.17033186037639278, "rouge": 0.28818897637795277}, {"predict": "inference by gibbs sampling", "true": "inference by gibbs sampling", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the token from the search token", "true": "r removes a debug token", "bleu": 0.20556680845025982, "rouge": 0.34366197183098596}, {"predict": "report version info from sax interfaces", "true": "report version info from sax interfaces", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if the compiler provider s wc should be in cl", "true": "loop thru the saved signature and file checksums in the persisted data and compare them with the signature and file checksums in the s wc context", "bleu": 0.04355882356049047, "rouge": 0.15111478117258464}, {"predict": "adjust min / pref size for columns ( or rows ) that has components that spans multiple columns ( or rows )", "true": "adjust min / pref size for columns ( or rows ) that has components that spans multiple columns ( or rows )", "bleu": 1.0, "rouge": 1.0}, {"predict": "dumps the specified byte buffer as a hex string", "true": "dumps the given bytes to std out as a hex dump ( up to length bytes )", "bleu": 0.1284290102874165, "rouge": 0.3643966547192354}, {"predict": "parse chat event listener", "true": "parses the chat logger and invokes the listener on each chat event encountered", "bleu": 0.05355679762998549, "rouge": 0.2147887323943662}, {"predict": "parses the given byte sequence , as well as they ' re escape sequences", "true": "test for unknown , but valid , escape sequences", "bleu": 0.1250076305588977, "rouge": 0.271513353115727}, {"predict": "returns the network parameters for the specified id or null if not recognized", "true": "returns the network parameters for the given string id or null if not recognized", "bleu": 0.7246037029655586, "rouge": 0.8829915560916768}, {"predict": "add the certificates in cert store to the c rl set to be included with the generated signed data message", "true": "add the certificates and cr ls contained in the given cert store to the pool that will be included in the encoded signature block", "bleu": 0.21412361790973145, "rouge": 0.49193548387096775}, {"predict": "send an body to a stream", "true": "writes the body of this attribute in an attribute - type dependent way ; see jvm s 7 4", "bleu": 0.02800522812577658, "rouge": 0.07314148681055155}, {"predict": "find the angle between the origin of the given point", "true": "uses trig to find angle of the arrow", "bleu": 0.18850319022747347, "rouge": 0.4535315985130111}, {"predict": "append whitespace characters to the writer", "true": "helper method used to append whitespace characters to the end of each rendered element", "bleu": 0.21327821360013705, "rouge": 0.4663608562691131}, {"predict": "clear all resources of the given resource type", "true": "clears resource index of the given resource type name from the local cache", "bleu": 0.31440983834765307, "rouge": 0.45658682634730546}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "special handling to check if we have a valid byte array for both header and transactions", "true": "special handling to check if we have a valid byte array for both header and transactions", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the last 6 bi - months where the last one is the bi - month which the given date is inside", "true": "generates the last 52 weeks where the last one is the week which the given date is inside", "bleu": 0.5116116106757558, "rouge": 0.763772954924875}, {"predict": "get the set of labels required at the time of matching the vertex in a cypher match pattern", "true": "gets the set of labels required at the time of matching the vertex in a cypher match pattern", "bleu": 0.9426151476815119, "rouge": 0.9444444444444445}, {"predict": "resets the list of all summary information of the summary list", "true": "reset the count of the unread messages of the section whose index is given in a section", "bleu": 0.09872064645916422, "rouge": 0.2750845546786922}, {"predict": "adds a new category to the list of categories", "true": "adds a category to the list of registered categories to appear in the lexicon", "bleu": 0.3435669703363279, "rouge": 0.6694101508916324}, {"predict": "call non virtual object method v : invoke a virtual method that returns an object", "true": "call non virtual object method v : invoke a virtual method that returns an object", "bleu": 1.0, "rouge": 1.0}, {"predict": "tries to send all other messages to all connected hosts ordered by their delivery probability", "true": "tries to send all other messages to all connected hosts ordered by their delivery probability", "bleu": 1.0, "rouge": 1.0}, {"predict": "make a dark color to ripple effect", "true": "make a dark color to ripple effect", "bleu": 1.0, "rouge": 1.0}, {"predict": "test for list of streams", "true": "creating a stream from a set of seed values", "bleu": 0.12267223791558805, "rouge": 0.1358574610244989}, {"predict": "cache a client user id", "true": "cache a user ' s client item id keyed by internal user id", "bleu": 0.09547096889020204, "rouge": 0.5143338954468802}, {"predict": "processes a entity", "true": "processes an entity element", "bleu": 0.4260520663282873, "rouge": 0.5570776255707762}, {"predict": "returns matching node or null if none", "true": "returns matching node or null if none", "bleu": 1.0, "rouge": 1.0}, {"predict": "utility method to query the modifier flags of this member", "true": "utility method to query the modifier flags of this member", "bleu": 1.0, "rouge": 1.0}, {"predict": "receives a task from a queue , blocking by blocking", "true": "implements that top - level image single task submission that is defined by the image consumer interface", "bleu": 0.06927760750451363, "rouge": 0.14153132250580047}, {"predict": "this method handles the query ( )", "true": "generate invoices from shipments", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "locate the best instance of ' pattern ' in ' text ' near ' loc ' using the bit ap algorithm", "true": "locate the best instance of ' pattern ' in ' text ' near ' loc ' using the bit ap algorithm", "bleu": 1.0, "rouge": 1.0}, {"predict": "given the ( i , j ) n - leader , j ) , ( 2 , y - > ) ^ 2 )", "true": "return a leaf cell given its cube face ( range 0", "bleu": 0.05606668411195419, "rouge": 0.12248995983935741}, {"predict": "checks if a response message contains a body", "true": "checks if a response message contains a body", "bleu": 1.0, "rouge": 1.0}, {"predict": "updates the actions in the editor", "true": "updates the actions that depend on the state of a single project", "bleu": 0.1599248714366856, "rouge": 0.41924398625429554}, {"predict": "closes this audio input stream and releases any system resources associated with the stream", "true": "closes the file item", "bleu": 0.09782375748961449, "rouge": 0.2469635627530364}, {"predict": "helper method to determine if we have a national number , and fills the national number with zero number formats to national number", "true": "attempts to extract a valid number from a phone number that is too long to be valid , and resets the phone number object passed in to that valid version", "bleu": 0.06941217517637607, "rouge": 0.29486404833836855}, {"predict": "checks if the specified time is within this calendar property with the specified comparison", "true": "compares a time value with current time", "bleu": 0.09782375748961449, "rouge": 0.2026578073089701}, {"predict": "get histogram from histogram", "true": "histogram get ter , returns the histogram value contained in this metric value", "bleu": 0.045035719139523436, "rouge": 0.2147887323943662}, {"predict": "only create new label", "true": "create week day label", "bleu": 0.3976353643835253, "rouge": 0.5}, {"predict": "appends the given path to the end of the path", "true": "create a new path consisting of this path with one or more additional segments given by the relative path", "bleu": 0.06745148003336161, "rouge": 0.2612419700214133}, {"predict": "returns the index of the first occurrence of the given substring , or null if it is found", "true": "returns the index within a string of the first occurrence of a specified substring", "bleu": 0.32594818888335836, "rouge": 0.5754716981132075}, {"predict": "completed submit ( null ) returns result", "true": "submit ( null callable ) throws null pointer exception", "bleu": 0.27470644934024185, "rouge": 0.48897795591182364}, {"predict": "read a value value", "true": "read a 32 bit signed number", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "tests whether the queue is currently acquired", "true": "true iff there is a granted group", "bleu": 0.18575057999133598, "rouge": 0.14285714285714285}, {"predict": "add a preprocessor directive like # define , # extension , # version etc", "true": "add a preprocessor directive like # define , # extension , # version etc", "bleu": 1.0, "rouge": 1.0}, {"predict": "format a long as a string", "true": "format to string buffer", "bleu": 0.24446151121745047, "rouge": 0.4149659863945578}, {"predict": "clear the profiler as it", "true": "clears saved results for average computations", "bleu": 0.18796001821050234, "rouge": 0.0}, {"predict": "filter out elements that have a property with provided key", "true": "filter out elements that do not have a property value equal to provided value", "bleu": 0.3239454232489392, "rouge": 0.6472148541114059}, {"predict": "add an attribute - value pair", "true": "adds value for an attribute and saves the change in the database", "bleu": 0.11492332782473744, "rouge": 0.20962199312714777}, {"predict": "copies stream to output stream", "true": "copy stream , from input to output , it don ' t close", "bleu": 0.07795171967670728, "rouge": 0.3086003372681282}, {"predict": "prints elements of given type members", "true": "helper method that outputs the public or protected inner members of a class", "bleu": 0.07612610271614867, "rouge": 0.09870550161812298}, {"predict": "initialize basic internal get ter", "true": "initializes the basic variable / row mapping", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "invoked when the mouse is released", "true": "if the mouse is dragging a rectangle , pick the vertices contained in that rectangle clean up settings from mouse pressed", "bleu": 0.033747902377517694, "rouge": 0.20198675496688742}, {"predict": "find free space on the windows platform using the ' dir ' command", "true": "find free space on the windows platform using the ' dir ' command", "bleu": 1.0, "rouge": 1.0}, {"predict": "this will attach the sip header to the given sip message", "true": "attach a header and die if you get a duplicate header exception", "bleu": 0.11510518494396255, "rouge": 0.17256011315417258}, {"predict": "starts a text that does not start with the given position", "true": "phone <unk> the word text", "bleu": 0.12605968092174913, "rouge": 0.13406593406593406}, {"predict": "stop the program", "true": "allows to exit program", "bleu": 0.38498150077635496, "rouge": 0.2785388127853881}, {"predict": "set the integration span", "true": "create a state at a time", "bleu": 0.18325568129983205, "rouge": 0.0}, {"predict": "returns an integer hash code for the specified object", "true": "returns a hash code for the specified object", "bleu": 0.6606328636027614, "rouge": 0.8323586744639376}, {"predict": "copies all of the mappings from the specified map to this one", "true": "copies all of the mappings from the specified map to this one", "bleu": 1.0, "rouge": 1.0}, {"predict": "asserts that the actual pivot field matches the expected criteria", "true": "asserts that the actual pivot field matches the expected criteria", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the string representation of this object", "true": "returns the string representation of this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "flatten a string into an xml serialize r", "true": "flatten a string into an xml serialize r", "bleu": 1.0, "rouge": 1.0}, {"predict": "iterates over the file tree of a directory", "true": "iterates over the file tree of a directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "highlights all the previous in the text for the passed text", "true": "highlights all the hash tag in the passed text", "bleu": 0.33180774028439425, "rouge": 0.7128547579298832}, {"predict": "reads next variable length block from input", "true": "reads next variable length block from input", "bleu": 1.0, "rouge": 1.0}, {"predict": "process one block of input from the array in and write it to the out array", "true": "process one block of input from the array in and write it to the out array", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the m qt t topic for a command", "true": "get the m qt t topic for a command", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures that an object is null and contains null elements", "true": "checks that object arg is neither null nor empty ( ie length = = 0 ) and that it does not contain any null element", "bleu": 0.038472595977002935, "rouge": 0.3182608695652174}, {"predict": "execute a download on a url", "true": "fetches url content by executing get request with provided cookie string", "bleu": 0.09600096733558854, "rouge": 0.1117216117216117}, {"predict": "test against the \" void set seed ( byte ) \" method ; it checks out that \" set seed ( byte ) \" method supplements its argument to current seed rather than replaces current seed", "true": "test against the \" void set seed ( byte ) \" method ; it checks out that \" set seed ( byte ) \" method supplements its argument to current seed rather than replaces current seed", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an image from the specified", "true": "flips the given image on the vertical axis", "bleu": 0.17516432701748888, "rouge": 0.2785388127853881}, {"predict": "creates a filter factory with a given map", "true": "creates a new <unk> fo logi k filter factory", "bleu": 0.23420197753909952, "rouge": 0.465648854961832}, {"predict": "execute the callable wrapping checked exceptions", "true": "execute the callable wrapping checked exceptions inside a runtime exception", "bleu": 0.513417119032592, "rouge": 0.7176470588235294}, {"predict": "pads spaces on to the left of the given string to the string with the given width", "true": "pads the given string to the left with spaces to ensure that it ' s at least total chars long", "bleu": 0.2856179047509544, "rouge": 0.37292576419213974}, {"predict": "decodes lz w image data into pixel array", "true": "decodes lz w image data into pixel array", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the hash code value for this policy value", "true": "returns the hash code for this policy information", "bleu": 0.5253819788848316, "rouge": 0.8323586744639376}, {"predict": "creates a new unix terminal in the given input stream and initializes it in the default character encoding", "true": "creates a unix terminal with default settings , using system", "bleu": 0.11794224053267105, "rouge": 0.3765432098765432}, {"predict": "verbose log message with print f formatting", "true": "verbose log message with print f formatting", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the cell at row index and column index is editable", "true": "checks if is cell editable", "bleu": 0.12011055432195765, "rouge": 0.36237623762376237}, {"predict": "checks that all streams have been added to the last time", "true": "checks all added streams and removes invalid ones", "bleu": 0.14323145079400493, "rouge": 0.32504440497335696}, {"predict": "we only want the current page that is being shown to be focus able", "true": "we only want the current page that is being shown to be focus able", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a priority to the list of packages to be loop", "true": "add to the list of packages that take priority over the parent", "bleu": 0.4093783607491417, "rouge": 0.5176803394625177}, {"predict": "action to be performed", "true": "action to be performed", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of the certificate issuer and the according to the given x 509 certificate", "true": "verifies a single certificate", "bleu": 0.07994607499472013, "rouge": 0.21441124780316342}, {"predict": "expands the barcode", "true": "reads a sequence of bit encoded using lz w compression with 12 - bit code words from standard input ; expands them ; and writes the results to standard output", "bleu": 7.33799085404856e-05, "rouge": 0.10562770562770561}, {"predict": "constructs new audio capabilities based on a set of supported encodings and a maximum channel count", "true": "constructs new audio capabilities based on a set of supported encodings and a maximum channel count", "bleu": 1.0, "rouge": 1.0}, {"predict": "test if the x axis is based on the axis", "true": "let the graph model decide", "bleu": 0.12605968092174913, "rouge": 0.1418604651162791}, {"predict": "returns an extension response code", "true": "creates an extension response code", "bleu": 0.7598356856515925, "rouge": 0.8}, {"predict": "creates the default inverse cumulative probability test expected values", "true": "creates the default inverse cumulative probability density test expected values", "bleu": 0.7030119876929803, "rouge": 0.9384615384615386}, {"predict": "appends the string representation of the boolean argument to this string buffer", "true": "appends the string representation of the boolean argument to the string buffer", "bleu": 0.7910665071754358, "rouge": 0.9166666666666665}, {"predict": "deletes all so lr ' s servers", "true": "deletes a set of servers", "bleu": 0.20556680845025982, "rouge": 0.34366197183098596}, {"predict": "writes the position of the internal message to the given buffer", "true": "copy bu f to m message", "bleu": 0.12605968092174913, "rouge": 0.12423625254582485}, {"predict": "sorts the specified range of the array using the given work space array slice if possible for merging", "true": "sorts the specified range of the array using the given work space array slice if possible for merging", "bleu": 1.0, "rouge": 1.0}, {"predict": "report a fatal xslt processing error", "true": "report a fatal xslt processing error", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a terminal if it is in the set", "true": "add a single terminal to the set", "bleu": 0.24446151121745052, "rouge": 0.639412997903564}, {"predict": "this method creates a zookeeper path for the specified path", "true": "create zoo keep r node if not exist", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "stop recording , flushing i / log file", "true": "tells the video recorder to stop recording", "bleu": 0.21105340631872638, "rouge": 0.26991150442477874}, {"predict": "writes a tag with the given name", "true": "write a tag with a name", "bleu": 0.3655552228545123, "rouge": 0.6240409207161125}, {"predict": "returns the hash code value for this timestamp", "true": "returns the hash code value for this code signer", "bleu": 0.761894894736741, "rouge": 0.8148854961832059}, {"predict": "get type variable for the given type variable", "true": "get new type variable", "bleu": 0.22679164443904004, "rouge": 0.5319767441860466}, {"predict": "process frame from the status of the client", "true": "process certificate based au th request", "bleu": 0.16036590969929357, "rouge": 0.14663461538461536}, {"predict": "iterates from this number down to the given number , inclusive , dec re men ting by one each time", "true": "iterates from this number down to the given number , inclusive , dec re men ting by one each time", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a select expression element", "true": "adds an select expression within the select clause", "bleu": 0.1971902775417715, "rouge": 0.2953995157384988}, {"predict": "remove listener for pv changes", "true": "remove listener for pv changes", "bleu": 1.0, "rouge": 1.0}, {"predict": "test if a gts has ' s normal version", "true": "determine if a gts ' values are normally distributed", "bleu": 0.2777619034011791, "rouge": 0.4444444444444444}, {"predict": "load the contents of a properties object", "true": "load contents from a properties object", "bleu": 0.38260294162784475, "rouge": 0.7800511508951408}, {"predict": "returns the gamma function of the argument", "true": "returns the gamma function of the argument", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new progress show dialog", "true": "create a new instance of this class , and start the timer", "bleu": 0.10694820729788418, "rouge": 0.20962199312714777}, {"predict": "parse a uri expression into a single repository", "true": "parse a string under the expectation that it is a repository expression , i", "bleu": 0.1185574919557074, "rouge": 0.346590909090909}, {"predict": "closes this reader", "true": "closes this stream", "bleu": 0.7071067811865475, "rouge": 0.6666666666666666}, {"predict": "add to internal sections list", "true": "add a section to the document", "bleu": 0.24736929544091937, "rouge": 0.3577712609970674}, {"predict": "load a genome relationships file", "true": "load a genome relationships file", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the parts of the version supplied", "true": "return the version parts", "bleu": 0.2626909894424158, "rouge": 0.3824451410658307}, {"predict": "executes the algorithm , producing ( at least ) a result workbench", "true": "executes the algorithm , producing ( at least ) a result workbench", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if a double is between zero equality", "true": "check if two doubles are equal to within specified tolerance", "bleu": 0.1262975489687145, "rouge": 0.10427350427350426}, {"predict": "load the given xml model", "true": "read the meta model declaration from a js file , check it ' s the right version and return the model as a map", "bleu": 0.006759049970609995, "rouge": 0.12335692618806875}, {"predict": "splits the line to split , and return the resulting string that describes how the same as a less than c 2 , and convert comment as a , that still split comment and returns it", "true": "check for comments , trim white space", "bleu": 0.03351542279475122, "rouge": 0.05295138888888889}, {"predict": "convenience method that creates the volume data", "true": "creates the block object volume data", "bleu": 0.3073940764756322, "rouge": 0.6240409207161125}, {"predict": "convert a map to a unique object", "true": "takes a hash map and creates an object", "bleu": 0.19148978368719022, "rouge": 0.3952483801295896}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes an sms from the server", "true": "\" del sms \" cm d deletes sms , either - all sms - all sent sms - sms from specified contact - # last messages - # last incoming / outgoing messages", "bleu": 0.0034703837944924003, "rouge": 0.1367713004484305}, {"predict": "checks if the instructions is a start block in the ir", "true": "' finally ' instructions can start in the middle of the first block", "bleu": 0.15447751184440917, "rouge": 0.3283983849259758}, {"predict": "returns true if the error was set to trace the error", "true": "checks to see if the there has been an error in the print stream", "bleu": 0.13572106276731308, "rouge": 0.31322207958921694}, {"predict": "splits the document into a list of size", "true": "splits the document basing on the given size", "bleu": 0.3155984539112945, "rouge": 0.5}, {"predict": "validates the au th scheme input matches the au th scheme", "true": "validates the module instance names provided to the set properties ( ) call for the au th scheme key", "bleu": 0.17619767816755613, "rouge": 0.38164754953076124}, {"predict": "construct a business u u u id string to be a c & lt ; c & lt ;", "true": "a helper method to return the u u id without the \" urn : u u id : \" prefix", "bleu": 0.1405442708346481, "rouge": 0.25523012552301255}, {"predict": "reads and returns the next line , excluding the line separator if present", "true": "reads and returns the next line in this input stream", "bleu": 0.4324227075463215, "rouge": 0.5343065693430658}, {"predict": "decodes data from base 64 notation , automatically detecting gzip - compressed data and decompressing it", "true": "decodes data from base 64 notation , automatically detecting gzip - compressed data and decompressing it", "bleu": 1.0, "rouge": 1.0}, {"predict": "make a gradient using the given width and height", "true": "creates a red gradient paint", "bleu": 0.15619699684601276, "rouge": 0.3012345679012346}, {"predict": "returns a list of all available tokens in a string", "true": "returns a list of all numbers found in a given string", "bleu": 0.48393051476159044, "rouge": 0.7554179566563467}, {"predict": "delete storage group by arrays", "true": "delete a storage server from the tracker server", "bleu": 0.1658165975077607, "rouge": 0.2953995157384988}, {"predict": "creates a node that receives routed objects from the network can only connect to", "true": "creates a node that accepts input into the routing network can only connect to one other node", "bleu": 0.4067002149402057, "rouge": 0.6340956340956342}, {"predict": "asserts that the given set is not null", "true": "assert delivery state by delivery group", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "creates a new set of modules that have been annotated and creates a new module", "true": "it seems that create files compile scope does not work in all environments , at least with android , see https : / / intel lij - support", "bleu": 0.03457787424585785, "rouge": 0.04410701373825017}, {"predict": "write the bitmap to a file", "true": "writes the bitmap to disk and returns the new file", "bleu": 0.2231931376573339, "rouge": 0.47843137254901963}, {"predict": "parse text", "true": "parse the given text sentence", "bleu": 0.18762935180380186, "rouge": 0.5304347826086957}, {"predict": "replace the old child with a new child", "true": "replace the old child with a new child", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the hash code for the specified multi - key", "true": "gets the hash code for the specified multi - key", "bleu": 1.0, "rouge": 1.0}, {"predict": "flushes this stream to the output stream and forces any buffered data to be written", "true": "flushes the stream", "bleu": 0.09782375748961449, "rouge": 0.37888198757763975}, {"predict": "util method to write an attribute without the ns prefix", "true": "util method to write an attribute without the ns prefix", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds entry to the list", "true": "adds the entry to the entry list", "bleu": 0.3769486629893372, "rouge": 0.8090185676392573}, {"predict": "update the status frame to reflect the new track", "true": "always use this method to update the position of the sliding view", "bleu": 0.15122637383061946, "rouge": 0.2785388127853881}, {"predict": "flush the diff on the previous write writer", "true": "writes any remaining <unk> lines", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "construct a video stream from one of the strings obtained from the \" url \" parameter map \" parameter \" parameter : each line : \"", "true": "construct a video stream from one of the strings obtained from the \" url encoded fm t stream map \" parameter if the video info", "bleu": 0.5821747317554493, "rouge": 0.6690322580645162}, {"predict": "compares this string to another character with the specified character", "true": "compares this character array against the specified string", "bleu": 0.22692039365038064, "rouge": 0.5669144981412639}, {"predict": "flushes the underlying stream , but leaves the internal buffer alone", "true": "flushes any buffered output", "bleu": 0.11390778025531027, "rouge": 0.14558472553699284}, {"predict": "start all server starter server after a server service", "true": "starts background thread that launches servers", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "evaluate the entity and store the output of this entity to be written to the maximum maximum maximum maximum maximum maximum", "true": "evaluates the pagination variables", "bleu": 0.05809665204409193, "rouge": 0.09118086696562032}, {"predict": "constructs a new wrapper to collect runtime dynamics", "true": "constructs a new wrapper to collect runtime dynamics", "bleu": 1.0, "rouge": 1.0}, {"predict": "identical to provider equality in provider", "true": "if the provider was not previously registered , do nothing", "bleu": 0.11341174240707227, "rouge": 0.11960784313725491}, {"predict": "creates a new instance of sort comparator", "true": "construct a comparator that sorts items by newest first", "bleu": 0.15447878876032708, "rouge": 0.24448897795591182}, {"predict": "update the x / value pair", "true": "updates an item in the series", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "writes an float field value", "true": "writes an float field value", "bleu": 1.0, "rouge": 1.0}, {"predict": "decode the supplied byte array , generating and appending the supplied number of error correction bytes to be used", "true": "<unk> and decodes the supplied byte array , removing the error correction codes and returning the original data", "bleu": 0.28051550320162943, "rouge": 0.43455031166518254}, {"predict": "turns a string list into an array list of strings", "true": "make array list from \" , \" separated string", "bleu": 0.17827531042796255, "rouge": 0.21254355400696867}, {"predict": "return a path for a scroll bar button", "true": "return a path for a scroll bar button", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all views from the adapter , e", "true": "remove all the views from the adapter and de - parents them from the view pager after calling this , it is expected that notify data set changed should be called soon afterwards", "bleu": 0.02133101974821514, "rouge": 0.26368876080691644}, {"predict": "is it an return true ; returns true ; false ; no return false ; returns true ; returns true ; false ;", "true": "method to check valid <unk> mobile number", "bleu": 0.04449945957170705, "rouge": 0.0}, {"predict": "converts an error message into a string", "true": "converts an error in the generated file to a compile error based on the source", "bleu": 0.11657795763232932, "rouge": 0.3412587412587413}, {"predict": "returns the hyperbolic sine of the number", "true": "returns the hyperbolic sine of the number", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a notification to this container", "true": "show notification in container", "bleu": 0.24446151121745047, "rouge": 0.4149659863945578}, {"predict": "whether the attribute has been modified", "true": "have the attributes of this service schema been modified", "bleu": 0.1894765350842885, "rouge": 0.3860759493670886}, {"predict": "returns security d descriptor for given class , th d , or cst arrays", "true": "get descriptor for method ( if any )", "bleu": 0.11633270842295028, "rouge": 0.19122257053291536}, {"predict": "runs full set of full db config", "true": "runs a full - import using the given data config and the provided request parameters", "bleu": 0.0704451546128839, "rouge": 0.2559440559440559}, {"predict": "generate a random sample of the sample", "true": "produce a random sample of the given d bids", "bleu": 0.5112863131654277, "rouge": 0.6112224448897796}, {"predict": "draws a message size based on the range of bytes", "true": "generates a ( random ) message size", "bleu": 0.17827531042796255, "rouge": 0.36454183266932266}, {"predict": "validate the given signature", "true": "grab the arg s string from the method signature", "bleu": 0.11392443929712959, "rouge": 0.28773584905660377}, {"predict": "removes a listener from the set of listeners", "true": "removes a listener from the set of listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "java x", "true": "java x", "bleu": 1.0, "rouge": 1.0}, {"predict": "process the events to a list of not null or not", "true": "indicate an outbound result", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "add a key to the array map", "true": "add a new value to the array map", "bleu": 0.5154486831107657, "rouge": 0.7904967602591793}, {"predict": "reset the candidate parser settings , making each parser equally likely", "true": "reset the candidate parser settings , making each parser equally likely", "bleu": 1.0, "rouge": 1.0}, {"predict": "redefine this extended type object to represent a different extended type", "true": "redefine this extended type object to represent a different extended type", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a long value", "true": "writes a long to the specified position", "bleu": 0.3158905525406873, "rouge": 0.5198863636363635}, {"predict": "create a straight line from the current path point to the new one specified by x and y", "true": "create a straight line from the current path point to the new one specified by x and y", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete the replication set", "true": "delete the replication set", "bleu": 1.0, "rouge": 1.0}, {"predict": "moves the task to the next available frame", "true": "called to move to the next frame", "bleu": 0.3155984539112945, "rouge": 0.5398230088495575}, {"predict": "adds wheel changing listener", "true": "adds wheel changing listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new megan id", "true": "m rma - rma defaults", "bleu": 0.2295748846661433, "rouge": 0.0}, {"predict": "see the general contract of the read long method of data input", "true": "see the general contract of the read long method of data input", "bleu": 1.0, "rouge": 1.0}, {"predict": "test method from apache derby project meta data", "true": "test for bug <unk> j <unk> <unk> - <unk> data type 0 invalid", "bleu": 0.09499501502705178, "rouge": 0.18263473053892215}, {"predict": "attempts to create a log instance for the given category name", "true": "attempts to create a log instance for the given category name", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a ns data object from a file", "true": "creates a ns data object from a file", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new via header based on the newly supplied uri and branch values", "true": "creates a new via header based on the newly supplied uri and branch values", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of this request stream", "true": "adds some debugging information", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "dispose of object , releasing resources", "true": "dispose of object , releasing resources", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds index of the string", "true": "finds index of the string", "bleu": 1.0, "rouge": 1.0}, {"predict": "handle the csr request fields to wrong service", "true": "part of the json api", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "resolves all required parameters from the given java classes , returning the java arguments contained by the given executable from the given java x - urlencode d", "true": "resolve the array of parameters for the supplied executable , target , and outer instance", "bleu": 0.059112458831223215, "rouge": 0.1506172839506173}, {"predict": "returns true if the given character is a valid name character", "true": "check whether the given char can be one of a name", "bleu": 0.17033186037639278, "rouge": 0.36363636363636365}, {"predict": "support for logging allocation on a socket", "true": "attempt a secure connection with basic functionality to maximize compatibility", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "checks to see if a character ' s id is a character , or a character in the beginning of a digit", "true": "determine if a character is ok to start an id", "bleu": 0.11856660123276004, "rouge": 0.2681318681318681}, {"predict": "returns a hash code", "true": "returns a hash code for this font", "bleu": 0.4723665527410147, "rouge": 0.693181818181818}, {"predict": "creates a new command handler", "true": "e num con tru ctor to set command", "bleu": 0.14983220973977976, "rouge": 0.1476997578692494}, {"predict": "tells whether a given type is a float", "true": "tells whether a given type is a float", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a component event to an area", "true": "invoked when the component ' s size changes", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "create a argument with the provided name and argument", "true": "create an arg with a name and help line description , along with a number of expected arguments to follow this option", "bleu": 0.05210428321071942, "rouge": 0.23992133726647003}, {"predict": "a version of remove , if it has already exists , from the specified snapshot", "true": "a version of remove ( object ) using the strong hint that given recent snapshot contains o at the given index", "bleu": 0.166931720783564, "rouge": 0.32360742705570295}, {"predict": "removes the given model from the container", "true": "removes the given model from the container", "bleu": 1.0, "rouge": 1.0}, {"predict": "read in", "true": "read map information from stage 0 x", "bleu": 0.06237111121110017, "rouge": 0.20198675496688742}, {"predict": "creates a new abstract generator object", "true": "get <unk> ff <unk> probability number , in ln space", "bleu": 0.09536752763778475, "rouge": 0.0}, {"predict": "after rotating , the matrix needs to be translated", "true": "after rotating , the matrix needs to be translated", "bleu": 1.0, "rouge": 1.0}, {"predict": "follows changes in the file , calling the tail er listener ' s handle method for each new line", "true": "follows changes in the file , calling the tail er listener ' s handle method for each new line", "bleu": 1.0, "rouge": 1.0}, {"predict": "with child view to processing move events", "true": "with child view to processing move events", "bleu": 1.0, "rouge": 1.0}, {"predict": "test read fails by randomly generated tests", "true": "tests that local instances can be recreated ( = are deterministic ) if the same random seed is used to generate them", "bleu": 0.02179210314610696, "rouge": 0.06308169596690795}, {"predict": "adds a new match region to this applied", "true": "adds a new applied region to the match without a priority", "bleu": 0.26214351356612897, "rouge": 0.511744966442953}, {"predict": "resets the list of sub - tree path paths , ending at 0 , ending at position ! = 0 , beginning at day 0 , included ! = 0 , ending at ending at ending at portion", "true": "resets the selection the panel by selecting all <unk>", "bleu": 0.04175415561574822, "rouge": 0.09576138147566718}, {"predict": "assert a throw able type and implement more assertions in the specified consumer", "true": "asserts that the execution of consumer throws an exception of the specific class", "bleu": 0.10571070857151538, "rouge": 0.15384615384615383}, {"predict": "returns true if the current relation is present", "true": "return true if this storage is empty", "bleu": 0.22679164443904004, "rouge": 0.4048672566371681}, {"predict": "asserts the argument is a boolean , then throws illegal argument exception", "true": "assertions allow for simpler test code", "bleu": 0.08737167851715875, "rouge": 0.0}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a tag value converter with the given id", "true": "store feature ids using id key", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "called for the after parsing of the currently collected ones", "true": "common in its , regardless of applet or application", "bleu": 0.12605968092174913, "rouge": 0.10627177700348434}, {"predict": "attempts to prepare the request for a retry", "true": "attempts to prepare the request for a retry", "bleu": 1.0, "rouge": 1.0}, {"predict": "sorts the specified file using the specified comparator", "true": "this will simply load the file by blocks of x rows , then sort them in - memory , and write the result to temporary files that have to be merged later", "bleu": 0.00949480621541769, "rouge": 0.13535502958579881}, {"predict": "add directory to s can for saves avatars", "true": "add directory to s can for saves avatars", "bleu": 1.0, "rouge": 1.0}, {"predict": "implements the node in the order , higher - right order , i", "true": "returns highest node", "bleu": 0.09552040806823771, "rouge": 0.14087759815242493}, {"predict": "process the properties associated with a properties object", "true": "process a net map event properties object , which means that a properties object , representing an event from the net map server , is evaluated and used to modify the node cache and line cache accordingly", "bleu": 0.009148489184701286, "rouge": 0.19908616187989558}, {"predict": "adds an id for this role", "true": "adds id repo am sdk plugin to the given organization name", "bleu": 0.10624253482403696, "rouge": 0.2234432234432234}, {"predict": "initializes the disk based cache by scanning for all files currently in the specified root directory", "true": "initializes the disk based cache by scanning for all files currently in the specified root directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "press a key press", "true": "getting the value of key pressed and appending it to current pin", "bleu": 0.04862652376060361, "rouge": 0.11466165413533834}, {"predict": "check if string is still verification ( i", "true": "whether the given string has a hier achy structure with the sep era tors", "bleu": 0.07575149194183216, "rouge": 0.08664772727272725}, {"predict": "paints a portion of a highlight", "true": "paints a portion of a highlight", "bleu": 1.0, "rouge": 1.0}, {"predict": "receives a char and stores it into the piped reader", "true": "receives a char and stores it into the piped reader", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a buffer to a byte buffer", "true": "converts a buffer to a byte buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "implements output stream", "true": "implements output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "process an uri to back of a uri", "true": "convert local paths into absolute paths for links based on the local file system", "bleu": 0.0636991580240073, "rouge": 0.0}, {"predict": "generates an utterance for announcing screen on and screen off", "true": "generates an utterance for announcing screen on and screen off", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculate matrix for fit center", "true": "calculate matrix for fit center", "bleu": 1.0, "rouge": 1.0}, {"predict": "resets the thread to the start time", "true": "resets the rate sampling", "bleu": 0.24446151121745047, "rouge": 0.3824451410658307}, {"predict": "reads the next 2 - bit integer", "true": "read the next in t from the input stream", "bleu": 0.18370727471078332, "rouge": 0.24448897795591182}, {"predict": "runs the test case", "true": "runs the test case", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "add issuer ( x 500 principal issuer ) method testing", "true": "add issuer ( x 500 principal issuer ) method testing", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds new tag of tag mappings for the tag transformation", "true": "adds specified tag transformation to the collection", "bleu": 0.18850319022747347, "rouge": 0.36454183266932266}, {"predict": "this method will be used to check whether a file has been modified or not", "true": "this method will be used to check whether a file has been modified or not", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the characters up to the next close sequence", "true": "return the characters up to the next close quote character", "bleu": 0.7875585852725084, "rouge": 0.8341880341880341}, {"predict": "read a file , and if necessary", "true": "read <unk> 3 tag to do : not working", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "compute the result of the kernel evaluation on the supplied vectors", "true": "compute the result of the kernel evaluation on the supplied vectors", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the configuration is present in the database", "true": "returns whether the database configuration is present or not ( i", "bleu": 0.26238334426718246, "rouge": 0.47213622291021673}, {"predict": "returns true if an pin is in the pin , negative by a pin of the pin note : 1", "true": "tests the string to see if it contains a partial numeric run", "bleu": 0.07264339766175722, "rouge": 0.13090128755364808}, {"predict": "generate the log message to the given text", "true": "me to do que genera un alert con el <unk> je de error y a dem as cie rr a la vent an a que se intent a ab rir", "bleu": 0.01025184961754384, "rouge": 0.04765625}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the best parse for state \" state \" , potentially starting with a u nary rule", "true": "returns the best parse for state \" state \" , potentially starting with a u nary rule", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses attributes of the do cue m nt element for this object", "true": "parses attributes of the do cue m nt element for this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates the distance between two given points in the plane", "true": "calculates the distance between two given points in the plane", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws the center text in a center view", "true": "draws the description text in the center of the pie chart makes most sense when center - hole is enabled", "bleu": 0.06921533708211948, "rouge": 0.3315217391304348}, {"predict": "description of the method", "true": "description of the method", "bleu": 1.0, "rouge": 1.0}, {"predict": "pads spaces on to the end of the value to make it ' places ' long", "true": "pads spaces on to the end of the value to make it ' places ' long", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates an error result code with the provided integer value and appends it to the result", "true": "creates and registers a new error result code with the application", "bleu": 0.30277029197532096, "rouge": 0.45979899497487436}, {"predict": "add another exception to this set", "true": "add all exceptions in the given set", "bleu": 0.20693220168471366, "rouge": 0.3034825870646766}, {"predict": "( unknown ) for video capture", "true": "starts video input from the camera", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "creates the license locator with the given license files", "true": "constructs the license locator with the given license file names", "bleu": 0.6799308458396492, "rouge": 0.7299145299145299}, {"predict": "checks if the exception is one of the intended server side exception that has been thrown over the server", "true": "checks if the exception is one of the intended server side exception that has been thrown over the a idl layer", "bleu": 0.8512503198956609, "rouge": 0.89195775792039}, {"predict": "initializes the project type registry with the given types", "true": "initial is es set of project type definitions", "bleu": 0.18575057999133596, "rouge": 0.2378167641325536}, {"predict": "add notification listener to this mbe an", "true": "attach notification listener that can be used to listen notifications emitted by mbe an server", "bleu": 0.102601628763616, "rouge": 0.42657342657342656}, {"predict": "subtract two negative numbers of different length", "true": "subtract two negative numbers of different length", "bleu": 1.0, "rouge": 1.0}, {"predict": "consumes the receive messages from the queue , until the topic is empty", "true": "handles looping and consuming", "bleu": 0.08032276872815308, "rouge": 0.0}, {"predict": "read a fixed size of bytes from the input", "true": "exactly like read raw bytes , but caller must have already checked the fast path : ( size 0 )", "bleu": 0.05227938863320699, "rouge": 0.19365079365079363}, {"predict": "if check dup s is false , delete the service ( if present ) from service by at tr under all attribute values of the given entry or from service by empty at tr if the given entry has no attributes", "true": "if check dup s is false , delete the service ( if present ) from service by at tr under all attribute values of the given entry or from service by empty at tr if the entry has no attributes", "bleu": 0.9370011451812967, "rouge": 0.9898580121703854}, {"predict": "tests ds a algorithm parameters provider", "true": "tests ds a algorithm parameters provider", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if is possible", "true": "tells if a class node is candidate for class literal bytecode optimization", "bleu": 0.0538140946637381, "rouge": 0.22932330827067668}, {"predict": "load log file into properties", "true": "loads the log file for the given license and returns it", "bleu": 0.10822031883953476, "rouge": 0.2341650671785029}, {"predict": "creates a new html strip char filter factory", "true": "creates a new html strip char filter factory", "bleu": 1.0, "rouge": 1.0}, {"predict": "update the user by query", "true": "update the user by the values , if the values contains \" password \" field , it will auto encrypt the password field", "bleu": 0.020761539380292342, "rouge": 0.25603357817418676}, {"predict": "the likelihood of a tag in given document", "true": "the likelihood of a tag in given document", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a description of the class i fier", "true": "make a string from the cluster features", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "test bulk get / put byte methods with offset and length", "true": "test of the bulk get / put byte methods which accept a slice into the caller ' s array", "bleu": 0.2576399260359546, "rouge": 0.44525547445255476}, {"predict": "insert data for obj", "true": "insert data to footer", "bleu": 0.47287080450158786, "rouge": 0.5}, {"predict": "tells if there are any messages in the list", "true": "determines whether or not the current locale language is english", "bleu": 0.1262975489687145, "rouge": 0.10427350427350426}, {"predict": "call this method from your gui screen to process the keys into the text box", "true": "call this method from your gui screen to process the keys into the text box", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert generic image name into an image name", "true": "parse a full image name ( my host : <unk> / namespace / repo : tag ) into its components", "bleu": 0.050604055944008755, "rouge": 0.19891304347826086}, {"predict": "registers the channel with the given channel names", "true": "adds the set of channel names to the set of listened channels", "bleu": 0.14544785215055717, "rouge": 0.28955696202531644}, {"predict": "deletes a directory recursively", "true": "deletes a directory recursively", "bleu": 1.0, "rouge": 1.0}, {"predict": "displays a new non - verbose popup property from the application , if the application is changed , or text has been changed", "true": "output property summary table", "bleu": 0.05291907393644996, "rouge": 0.08484005563282336}, {"predict": "deletes any empty folder from the db", "true": "deletes any empty folder from the db", "bleu": 1.0, "rouge": 1.0}, {"predict": "perform an asynchronous sum operation", "true": "perform an asynchronous sum operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "test ( ) method testing", "true": "write ( byte b , in t off , in t len ) method testing", "bleu": 0.07271361304044333, "rouge": 0.3669172932330827}, {"predict": "parses the content of the document", "true": "converts the logging event data in xml string format into an actual xml document class instance", "bleu": 0.046172815301777345, "rouge": 0.1680440771349862}, {"predict": "determines if the full copy of the production ' s sub - tree to the list of volumes", "true": "checks to see if the volume is a production journal", "bleu": 0.101824256461955, "rouge": 0.2259259259259259}, {"predict": "tests the ' http : in et ' , ' - '", "true": "test the # in a column name for oracle compatibility", "bleu": 0.11498759556447223, "rouge": 0.18484848484848485}, {"predict": "return the url of the url safe char set of the url or canonical equivalences of the url scheme", "true": "un escape and decode a given string regarded as an escaped string with the default protocol char set", "bleu": 0.09107438368292149, "rouge": 0.16295636687444345}, {"predict": "wait for next calls to the l ru queue ( i", "true": "wait before sending next poll", "bleu": 0.12605968092174913, "rouge": 0.2681318681318681}, {"predict": "a vector is a vector of mapping vector is a vector of mapping to be a vector and end line vector of mapping vector", "true": "adjusts the objects in line line num of mapping vector so all column numbers starting with start col are <unk> by ` shift '", "bleu": 0.09970222994544457, "rouge": 0.16666666666666666}, {"predict": "compute the printer of the given text", "true": "determine the number of lines in the annotation text and the length of the longest line", "bleu": 0.07678812443288274, "rouge": 0.3249001331557923}, {"predict": "writes an image map to an output stream", "true": "writes an image map to the specified writer", "bleu": 0.5873949094699213, "rouge": 0.625}, {"predict": "adds a message to the import - > list", "true": "adds a message ( if not null ) to the builder", "bleu": 0.25014555519576226, "rouge": 0.4911433172302737}, {"predict": "returns a string representation of the log out response", "true": "returns a string representation of the log out response", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a collection of strings into a list", "true": "returns a list of strings , where the strings are the result of calling string", "bleu": 0.11062918077527298, "rouge": 0.24729729729729732}, {"predict": "returns the minimum of this ordering according to the specified values", "true": "returns the smallest of the specified values according to this ordering", "bleu": 0.32466791547509893, "rouge": 0.5454545454545454}, {"predict": "reads bytes from the stream", "true": "read a sub array of bytes from connection", "bleu": 0.1971902775417715, "rouge": 0.2953995157384988}, {"predict": "append a string on to the vector", "true": "append a string on to the vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method consolidates the stacks with an item which is to the actual output list", "true": "take a list of item stacks and <unk> where possible", "bleu": 0.09782375748961449, "rouge": 0.08299319727891155}, {"predict": "determines how many days ago time was ( rounded down )", "true": "determines how many days ago time was ( rounded down )", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if a xml character is well - formed", "true": "checks if a xml character is well - formed", "bleu": 1.0, "rouge": 1.0}, {"predict": "xor for zero and zero", "true": "xor for zero and zero", "bleu": 1.0, "rouge": 1.0}, {"predict": "call the specified consumer with the ' next ' rail ' completes", "true": "call the specified consumer with the current element passing through any ' rail '", "bleu": 0.4895686196590792, "rouge": 0.6828358208955225}, {"predict": "java", "true": "java", "bleu": 1.0, "rouge": 1.0}, {"predict": "add missing values to a data set", "true": "add missing values to a data set", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts parameters into batches", "true": "insert discovered objects in batches", "bleu": 0.2798263237576258, "rouge": 0.21785714285714283}, {"predict": "modifies the configuration object in all the config s", "true": "modifies the attributes for the given configuration object", "bleu": 0.24446151121745052, "rouge": 0.4756335282651072}, {"predict": "removes a listener from the tab", "true": "removes the given tab listener from this layout", "bleu": 0.24771976691208875, "rouge": 0.4178082191780822}, {"predict": "creates a new socket manager for th l dap server", "true": "creates a new instance with a list of uris", "bleu": 0.23462350320528, "rouge": 0.31881533101045295}, {"predict": "add volumes to run storage group from storage group", "true": "this method is used for v max 3 to add volumes to parking storage group once volumes are un exported", "bleu": 0.09202340705693718, "rouge": 0.32275132275132273}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert the specified string to an input stream , encoded as bytes using the specified character encoding", "true": "convert the specified string to an input stream , encoded as bytes using the specified character encoding", "bleu": 1.0, "rouge": 1.0}, {"predict": "has the user chosen to export pkcs 8 pkcs 8 format", "true": "has the user chosen to export to pkcs # 8 ?", "bleu": 0.5491004867761125, "rouge": 0.7272727272727273}, {"predict": "generates a public key instance from a string containing the base 64 - encoded public key", "true": "generates a public key instance from a string containing the base 64 - encoded public key", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new tick", "true": "creates a new tick", "bleu": 1.0, "rouge": 1.0}, {"predict": "can be created by subclasses", "true": "determines whether the server can be stopped in - process , such as when a server is embedded in an application and the server launcher api is being used", "bleu": 0.002956981955128955, "rouge": 0.10436270316509837}, {"predict": "print a message on", "true": "log a new message on the selected print stream with the given method and level", "bleu": 0.03434747872925831, "rouge": 0.2859375}, {"predict": "add a member to the startup member", "true": "add a gossip member to the list of members to start with", "bleu": 0.201267033117133, "rouge": 0.5024711696869852}, {"predict": "returns if modifier is a public", "true": "returns if modifier is public", "bleu": 0.6434588841607617, "rouge": 0.9242424242424241}, {"predict": "generates a public key instance from a string containing the base 64 - encoded public key", "true": "generates a public key instance from a string containing the base 64 - encoded public key", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert a user preference generic value to a user pref map", "true": "convert a user preference generic value to a user pref map", "bleu": 1.0, "rouge": 1.0}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "appends a string to the end of the list of strings", "true": "append a string in quotes", "bleu": 0.14991106946711685, "rouge": 0.2681318681318681}, {"predict": "deletes the user info from the authentication info object", "true": "delete a user and password from a file", "bleu": 0.15619699684601276, "rouge": 0.2378167641325536}, {"predict": "add error occurred in class of an array", "true": "logs error messages to the error logs", "bleu": 0.16036590969929357, "rouge": 0.13495575221238937}, {"predict": "removes an audio processor from the processor queue", "true": "removes the provided processor from the internal processor queue", "bleu": 0.325547788760636, "rouge": 0.6984732824427481}, {"predict": "clamp the magnitude of value for abs min and abs max", "true": "clamp the magnitude of value for abs min and abs max", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the animation type or 0 if cannot be found", "true": "returns the animation type or 0 if cannot be found", "bleu": 1.0, "rouge": 1.0}, {"predict": "append a string on to the vector", "true": "append a string on to the vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if a method is a method named with a method", "true": "returns true it the passed method is contained in the also passed list of methods by also comparing matching parameters", "bleu": 0.06614573606326299, "rouge": 0.12261306532663319}, {"predict": "delete a node from the graph", "true": "delete a node from the graph", "bleu": 1.0, "rouge": 1.0}, {"predict": "method to handle update route", "true": "responds to the update button - update to route table", "bleu": 0.11943865131127647, "rouge": 0.37731958762886597}, {"predict": "returns a string representation of the attribute", "true": "returns a string representation of this object", "bleu": 0.6803749333171202, "rouge": 0.7142857142857143}, {"predict": "checks for the current stream", "true": "checks whether the x stream is present in the class path", "bleu": 0.09778809693469985, "rouge": 0.35124760076775424}, {"predict": "the real guts of parse network response", "true": "the real guts of parse network response", "bleu": 1.0, "rouge": 1.0}, {"predict": "computes the squared distribution function", "true": "compute the result of the kernel evaluation on the supplied vectors", "bleu": 0.08222966016687185, "rouge": 0.11708253358925146}, {"predict": "returns the number of sub - batch batch batch size", "true": "get local batch size for this sequences", "bleu": 0.16590387014219712, "rouge": 0.24302788844621517}, {"predict": "decodes an array of url safe 7 - bit characters into an array of original bytes", "true": "decodes an array of url safe 7 - bit characters into an array of original bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "clears the scrap heap", "true": "clear scrap views out of this recycle r", "bleu": 0.13218059591958078, "rouge": 0.15721649484536082}, {"predict": "adds a data set dynamically", "true": "adds a data set dynamically", "bleu": 1.0, "rouge": 1.0}, {"predict": "pass the call on to the underlying handler", "true": "pass the call on to the underlying handler", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a lib vlc with s options", "true": "create a lib vlc with s options", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a child to the display list", "true": "adds a child to the display list at the specified index , bumping children at equal or greater indexes up one , and setting its parent to this container", "bleu": 0.04315930926145262, "rouge": 0.3502871205906481}, {"predict": "calculate notes from a color at all given nodes , given a color at the end of the tree , and root , repeat after that tree", "true": "calculate probability of data at descendants from node , given a color at the node ( ' partials ' ) , by a fels en stein - like pruning algorithm", "bleu": 0.212406312366245, "rouge": 0.31282051282051276}, {"predict": "calculates the minimum of the matrix", "true": "dp", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "appends a json encoded key / value pair to the given string builder", "true": "appends a json encoded key / value pair to the given string builder", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a time object from a given date - if the date is between 1950 and 2049 a utc time object is generated , otherwise a generalized time is used", "true": "creates a time object from a given date - if the date is between 1950 and 2049 a utc time object is generated , otherwise a generalized time is used", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new d check box dialog", "true": "creates a new d check update dialog", "bleu": 0.7071067811865475, "rouge": 0.8571428571428571}, {"predict": "runs , original automaton , using a automaton", "true": "simple , original br ics implementation of br zo zo w ski minimize ( )", "bleu": 0.08798014921805314, "rouge": 0.16486486486486487}, {"predict": "indicates whether this item is equal to the given object", "true": "if this item equals to the given object", "bleu": 0.403527863746399, "rouge": 0.6802973977695167}, {"predict": "adds a column to the key definition", "true": "adds the given column", "bleu": 0.22089591134157885, "rouge": 0.3824451410658307}, {"predict": "decode the base 64 - encoded data in input and return the data in a new byte array", "true": "decode the base 64 - encoded data in input and return the data in a new byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks whether double vectors is special handling of its special missing ( un - ) pairs", "true": "check for nan values", "bleu": 0.06468490584192432, "rouge": 0.0}, {"predict": "when a debugging is available", "true": "fills a string buffer with spaces until it has at least the given length", "bleu": 0.04512859433163675, "rouge": 0.09697933227344992}, {"predict": "opens a log file system property", "true": "open the file with appending mode", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "calculates kernel value of vectors x and y", "true": "calculates kernel value of vectors x and y", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes this writer", "true": "closes this stream", "bleu": 0.7071067811865475, "rouge": 0.6666666666666666}, {"predict": "takes a list of files and writes it as a \" file of file names \" ( i", "true": "takes a list of files and writes it as a \" file of file names \" ( i", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets the \" internal \" flag on type ids which are defined in the dex file or within the vm ( e", "true": "sets the \" internal \" flag on type ids which are defined in the dex file or within the vm ( e", "bleu": 1.0, "rouge": 1.0}, {"predict": "obtains the trigonometric cosine of this angle", "true": "obtains the cosine of this angle", "bleu": 0.5946035575013605, "rouge": 0.9360613810741688}, {"predict": "the actual error function which does the real approximation of the parameters being declared in the array", "true": "how much of the variance is not explained by the regression", "bleu": 0.10216198665886358, "rouge": 0.22289890377588306}, {"predict": "returns the number of prefixes", "true": "this returns the number of available namespaces", "bleu": 0.5093330917854971, "rouge": 0.6472148541114059}, {"predict": "append a character sequence to this writer", "true": "append a character sequence to this writer", "bleu": 1.0, "rouge": 1.0}, {"predict": "get timestamp from timestamp", "true": "convert a timestamp to the string representation that <unk> will accept", "bleu": 0.06243769243378541, "rouge": 0.12298387096774194}, {"predict": "consumes the current value and removes the associated tag", "true": "gets the value of an attribute and remove it from the list", "bleu": 0.12716571564598603, "rouge": 0.3713850837138508}, {"predict": "copies the byte array at the specified index", "true": "copy the contents of this <unk> to a byte array", "bleu": 0.176625510283176, "rouge": 0.3267857142857143}, {"predict": "import an ec key", "true": "imports a key to the key chain", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "creates a new connection group tree of each root", "true": "creates a new connection group tree using the given connection group as the tree root", "bleu": 0.3391802215691811, "rouge": 0.558169934640523}, {"predict": "checks whether the given reader contains a single metric string", "true": "determines if the given reader contains a single or multiple metrics", "bleu": 0.5163677114298966, "rouge": 0.56656346749226}, {"predict": "add a button press to list", "true": "adds the button pressed listener", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "gets content from meta tag", "true": "gets content from meta tag", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the given columns", "true": "removes the given columns", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the config from the list of formats and places the list of formats and add them in the list of messages from the list of the list", "true": "read g 11 n settings service config data from sms", "bleu": 0.0478968583748614, "rouge": 0.11509433962264153}, {"predict": "refresh preferences - set key", "true": "read key mapping from default preferences for context", "bleu": 0.1658165975077607, "rouge": 0.1476997578692494}, {"predict": "add types to in the r rd file", "true": "add the types that are inherited by this class", "bleu": 0.16829946711936866, "rouge": 0.232824427480916}, {"predict": "multiply scalar to histogram", "true": "multiply histogram by scalar", "bleu": 0.42728700639623407, "rouge": 0.5}, {"predict": "get and set the position of the mouse", "true": "paint it", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "adds new participants to given map of participants", "true": "adds participants to all shared deployments", "bleu": 0.22679164443904004, "rouge": 0.43990384615384615}, {"predict": "convert a map to json text", "true": "convert a map to json text", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints the message and context", "true": "prints the message and context", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the number of method invoked so far", "true": "returns the number of method invoked so far", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method to associate request ids to shared preference keys", "true": "helper method to associate request ids to shared preference keys", "bleu": 1.0, "rouge": 1.0}, {"predict": "saves the post manage name out service", "true": "saves the post manage name id service", "bleu": 0.7071067811865475, "rouge": 0.8571428571428571}, {"predict": "look for the completion of the play button", "true": "attempts to start the play store activity for the update page of this app , and returns success or failure", "bleu": 0.06197705798903779, "rouge": 0.19891304347826086}, {"predict": "returns a handle denoting the class member identified by its scope", "true": "returns a handle denoting the class member identified by its scope", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert collection of path files to relative path", "true": "covert list of files to relative paths", "bleu": 0.3155984539112945, "rouge": 0.5398230088495575}, {"predict": "ensures that the security manager is currently in use to do so that the java manager is currently in use ( see every time )", "true": "utility routine that sets a security manager if one isn ' t already present", "bleu": 0.06871624004919695, "rouge": 0.1620903454384411}, {"predict": "create a rate or client", "true": "get conversion rate", "bleu": 0.2730120862709067, "rouge": 0.26180257510729615}, {"predict": "performs interaction between client ' s https url connection and servers side ( server socket )", "true": "performs interaction between client ' s https url connection and servers side ( server socket )", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a engine id that is the engine identified by the given port", "true": "generates a unique engine id", "bleu": 0.1350862565735141, "rouge": 0.36237623762376237}, {"predict": "convert rule to set", "true": "parses rules xml file", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "dispose of object , releasing resources", "true": "dispose of object , releasing resources", "bleu": 1.0, "rouge": 1.0}, {"predict": "encrypts a document", "true": "encrypts the given ws s xml element in a given xml context document", "bleu": 0.022793652050154326, "rouge": 0.3370165745856354}, {"predict": "add an issue during transformation", "true": "add an issue during transformation", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts several nodes at ones", "true": "inserts node at given index", "bleu": 0.3021375397356768, "rouge": 0.4}, {"predict": "creates the ntl m hash of the user ' s password", "true": "creates the ntl m hash of the user ' s password", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if a double value is between the given parameter", "true": "helper method to check that a value is between 0 and 1 and display a warning if not", "bleu": 0.11666987814504833, "rouge": 0.2717149220489978}, {"predict": "substitutes parameter types of a given parameter", "true": "this method operates on the internal string representation of parameter values and replaces macro expressions of the form { macro name }", "bleu": 0.024116926544041066, "rouge": 0.1261633919338159}, {"predict": "x", "true": "x", "bleu": 1.0, "rouge": 1.0}, {"predict": "split the camel case of camel case", "true": "converts a name like \" output byte input table coding loop \" to a list of words : { \" output \" , \" byte \" , \" input \" , \" table \" , \" coding \" , \" loop \" }", "bleu": 0.0010849649292147708, "rouge": 0.03540336622170633}, {"predict": "use an x path string to select a node list using a passed in namespace context", "true": "use an x path string to select a nodelist namespace prefix is resolved using the the specified context", "bleu": 0.4548794014983485, "rouge": 0.5820610687022901}, {"predict": "constructs a result file entry with the specified non - dominated population and auxiliary properties", "true": "constructs a result file entry with the specified non - dominated population and auxiliary properties", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates discovery for deployment elements", "true": "generates xml for locator s in the distributed system", "bleu": 0.13575914775035755, "rouge": 0.2717149220489978}, {"predict": "creates a new basic type for the given class , type and a type", "true": "instantiate s a new type instance", "bleu": 0.1250076305588977, "rouge": 0.323321554770318}, {"predict": "action listener interface - no p", "true": "close window ( or reload page if in debug mode )", "bleu": 0.08072686929338534, "rouge": 0.0}, {"predict": "apply properties to all type parameters", "true": "applies the properties without saving them", "bleu": 0.22089591134157885, "rouge": 0.16666666666666666}, {"predict": "rotates the subtree so that its root ' s left child is the new root", "true": "rotates the subtree so that its root ' s right child is the new root", "bleu": 0.8153551038173115, "rouge": 0.9333333333333336}, {"predict": "adds a new node to the list of nodes", "true": "add node to the group", "bleu": 0.2626909894424158, "rouge": 0.4518518518518518}, {"predict": "check if a set exists", "true": "check to see if the given backup set already exists in the backup store", "bleu": 0.05674620314719988, "rouge": 0.38791732909379967}, {"predict": "extract an array of positional parameters", "true": "returns a value as a string array", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "write a string without compression", "true": "write a string without compression", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse a csv file from the supplied resource", "true": "returns a map of model accession to a threshold record", "bleu": 0.12489309605176803, "rouge": 0.10892857142857142}, {"predict": "shuts down the executor", "true": "shutdown all attached resources without waiting on the thread", "bleu": 0.10294235160901445, "rouge": 0.14386792452830188}, {"predict": "we moved this method to get a point with the given scale", "true": "converts drawing coordinates to view coordinates", "bleu": 0.10390302174233558, "rouge": 0.1182170542635659}, {"predict": "adds a descriptor to the extension descriptor", "true": "add a setup descriptor", "bleu": 0.20556680845025982, "rouge": 0.3824451410658307}, {"predict": "returns true if cidr is alive", "true": "check whether the cidr address contains the ip address", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "compiles a progress success action", "true": "compiles a progress success action", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string containing all float numbers concatenated by a specified separator", "true": "returns a string with all float values concatenated by a specified separator", "bleu": 0.5266403878479265, "rouge": 0.8333333333333334}, {"predict": "put an unsigned byte into the specified byte buffer at the specified offset", "true": "put an unsigned byte into the specified byte buffer at the current position", "bleu": 0.8385766789076257, "rouge": 0.8461538461538461}, {"predict": "returns the number of the pra meters included in the given descriptor", "true": "returns the number of the pra meters included in the given descriptor", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a trie with infrequent values occurring in the given trie removed", "true": "optimize ( remove empty rows ) from the given trie and return the resulting trie", "bleu": 0.1666758520167017, "rouge": 0.21785714285714283}, {"predict": "check if denied permissions is denied", "true": "is all denied boolean", "bleu": 0.24446151121745047, "rouge": 0.4149659863945578}, {"predict": "returns a key for cassandra column", "true": "returns returns a key for all the col names , for better readability if the names got cut off", "bleu": 0.0704294201024965, "rouge": 0.2925659472422062}, {"predict": "converts the given locale to the formatter", "true": "completes this builder by creating the formatter", "bleu": 0.24446151121745047, "rouge": 0.2857142857142857}, {"predict": "wait for external storage", "true": "synchronously waits for external store to be mounted ( eg : sd card )", "bleu": 0.03881559933679476, "rouge": 0.20198675496688742}, {"predict": "append a node on to the vector", "true": "append a node on to the vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "uploads a pk to install", "true": "installs the given a pk on the device", "bleu": 0.1971902775417715, "rouge": 0.2953995157384988}, {"predict": "reads an input stream into a list of byte values", "true": "reads an input stream into a list of byte values", "bleu": 1.0, "rouge": 1.0}, {"predict": "uninstall package and clear data of app silent by root", "true": "uninstall package and clear data of app silent by root", "bleu": 1.0, "rouge": 1.0}, {"predict": "opens an existing worker object created outside the stack", "true": "opens a list for playback", "bleu": 0.14113991930789777, "rouge": 0.1506172839506173}, {"predict": "adds the provided user friendly names", "true": "adds the provided user friendly names", "bleu": 1.0, "rouge": 1.0}, {"predict": "schedule a task for repeated fixed - rate execution after a specific time has been reached", "true": "schedule a task for repeated fixed - rate execution after a specific time has been reached", "bleu": 1.0, "rouge": 1.0}, {"predict": "tests stepping through a range with a closure", "true": "tests stepping backwards through a reversed range with a closure", "bleu": 0.44557127531844243, "rouge": 0.8714285714285713}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method will check the digits before dot with the max precision allowed", "true": "this method will check the digits before dot with the max precision allowed", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method de serializes a string to a node", "true": "this method de serializes the supplied document", "bleu": 0.392814650900513, "rouge": 0.5115303983228512}, {"predict": "append given name / value pairs as query parameters to the base url the params argument is interpreted as a sequence of name / value pairs so the given number of params must be divisible by 2", "true": "append given name / value pairs as query parameters to the base url the params argument is interpreted as a sequence of name / value pairs so the given number of params must be divisible by 2", "bleu": 1.0, "rouge": 1.0}, {"predict": "sends an event to the end of the network", "true": "sends a message to the test runner agent", "bleu": 0.19960198807747329, "rouge": 0.35672514619883033}, {"predict": "apply a map of j mx objects to the query", "true": "it will create the j ms configurations", "bleu": 0.13950796967929133, "rouge": 0.12151394422310759}, {"predict": "returns the next revision", "true": "returns the next revision", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a selection column", "true": "add selection column to first tab", "bleu": 0.2868106410131918, "rouge": 0.3860759493670886}, {"predict": "indexes the data values for the given field name for each tuple in the provided iterator", "true": "indexes the data values for the given field name for each tuple in the provided iterator", "bleu": 1.0, "rouge": 1.0}, {"predict": "close output stream without a exception", "true": "close output stream without a exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new search listener", "true": "adds the specified listener to the internal list of listeners", "bleu": 0.11115018927487523, "rouge": 0.2515463917525773}, {"predict": "methods for starting asynchronous execution", "true": "methods for starting asynchronous execution", "bleu": 1.0, "rouge": 1.0}, {"predict": "renames the file underlying this cache span to update its last access time", "true": "renames the file underlying this cache span to update its last access time", "bleu": 1.0, "rouge": 1.0}, {"predict": "unpacks the compressed character translation table", "true": "unpacks the compressed character translation table", "bleu": 1.0, "rouge": 1.0}, {"predict": "open a file or file associated with this file", "true": "launches the associated application to open the file", "bleu": 0.16784459625186196, "rouge": 0.2378167641325536}, {"predict": "converts a iso iso time string to normal equivalent according to the following iso 8601 format", "true": "converting iso 8601 formatted duration to normal readable time", "bleu": 0.1332358437599213, "rouge": 0.2527624309392265}, {"predict": "toggle the selection status of the item at a given position", "true": "toggle the selection status of the item at a given position", "bleu": 1.0, "rouge": 1.0}, {"predict": "map a byte into a byte", "true": "cannot map from a byte", "bleu": 0.31239399369202553, "rouge": 0.5545454545454546}, {"predict": "after rotating , the matrix needs to be translated", "true": "after rotating , the matrix needs to be translated", "bleu": 1.0, "rouge": 1.0}, {"predict": "invokes the wrapped producer method", "true": "invokes the wrapped producer method", "bleu": 1.0, "rouge": 1.0}, {"predict": "wrap a keyword in prefix to handle a \" keyword in java c var binding set", "true": "return a non - conflicting safe name if name is a ruby built - in", "bleu": 0.09147827112247602, "rouge": 0.1946808510638298}, {"predict": "adds the issue match er to the issue match er", "true": "creates a new issue match er and adds it to this match er", "bleu": 0.22211370348624584, "rouge": 0.5097493036211699}, {"predict": "builds scope from annotation element", "true": "finds the scope for a bean producing declaration , either a method or a type", "bleu": 0.0369481680224917, "rouge": 0.09172932330827067}, {"predict": "return a key for the given key , which is cached in key", "true": "java wrapper for windows registry api reg open key ( )", "bleu": 0.10571070857151538, "rouge": 0.16920943134535368}, {"predict": "removes property change listener", "true": "remove the provided listener from the receiver", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "the iterator over the previous iteration", "true": "advances the iterator backwards , to the last boundary preceding this one", "bleu": 0.11492332782473744, "rouge": 0.31443298969072164}, {"predict": "creates a new a fixed image from a resource", "true": "creates a new image replaced element and scales it to the size specified if either width or height has a valid value ( values are > - 1 ) , otherwise original size is preserved", "bleu": 0.016174821171061324, "rouge": 0.2053872053872054}, {"predict": "determines whether a name is a suffix of this compound name", "true": "determines whether a compound name is a prefix of this compound name", "bleu": 0.47635995036908074, "rouge": 0.8628005657708628}, {"predict": "creates a generic method binding", "true": "create method of parameterized type , substituting original parameters with type arguments", "bleu": 0.06732395159376953, "rouge": 0.1095152603231598}, {"predict": "c rear in c returns result of null pointer , in c ) returns result", "true": "invoke all ( c ) returns results of all completed tasks in c", "bleu": 0.1892240568795935, "rouge": 0.36180308422301305}, {"predict": "creates a new internal listener", "true": "creates a new listener object", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "initial is e the lib sv m code generator ( e", "true": "sign a digest with this key", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "creates time interval start time , start time + end time , start time", "true": "creates time interval start time , end time ) if times are not null", "bleu": 0.4428500142691474, "rouge": 0.5714285714285714}, {"predict": "creates the gui that should be shown in the edit menu", "true": "create and return a new edit menu for this network panel", "bleu": 0.14991106946711685, "rouge": 0.18181818181818182}, {"predict": "removes the given listener from the list of listeners", "true": "removes the given listener from the list of listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "automatically run a new state manager instance to automatically assigned new state", "true": "called to update the current model keep every states", "bleu": 0.10390302174233558, "rouge": 0.09775641025641024}, {"predict": "parse a text representation of a json data structure", "true": "parse a text representation of a json data structure", "bleu": 1.0, "rouge": 1.0}, {"predict": "the number of parts in this multi part body", "true": "the number of parts in this multi part body", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a simple database from a file", "true": "generate a simple double vector database from a file", "bleu": 0.44683107184405757, "rouge": 0.7334669338677354}, {"predict": "adds a choose r to the number of choo sable file", "true": "add filter ( s ) for possible types to the input file choose r", "bleu": 0.15020004628709785, "rouge": 0.2349165596919127}, {"predict": "request the service listener", "true": "unbinds the in - app billing service", "bleu": 0.1878296463217631, "rouge": 0.346590909090909}, {"predict": "returns null if there is nothing left", "true": "returns null if there is nothing left", "bleu": 1.0, "rouge": 1.0}, {"predict": "en coda un arch ivo a en una consult a en v cf una consult as en v 1", "true": "me to do en car ga do de bor <unk> todos los usu a rios a soci a dos a un de <unk> do organo , <unk> y cuando <unk> organo se en cu <unk> en <unk> vi <unk> e", "bleu": 0.029166785229045, "rouge": 0.15926892950391647}, {"predict": "add all the tasks associated to the neuron", "true": "helper method for get in <unk> ate layers", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "shift right ( in t n ) , n < 0", "true": "shift right ( in t n ) , n < 0", "bleu": 1.0, "rouge": 1.0}, {"predict": "stress test mg rs : 1 , 2 mg rs algorithm to 32 bits upper and u 2 are different values with 32 - 2 + 0000 to be 2 + 1", "true": "<unk> norm : inverse gain normalization", "bleu": 0.037776418604808376, "rouge": 0.06003937007874015}, {"predict": "takes the parameters below the source code below the source below the score list", "true": "finds the first non - whitespace character starting at index", "bleu": 0.08839374326825923, "rouge": 0.08591549295774649}, {"predict": "reads the next encoded content from the encoded input stream", "true": "reads the next encoded content from the encoded input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new primitive type", "true": "creates an object that represents a primitive value of the type associated with the specified primitive wrapper object", "bleu": 0.025497712677716746, "rouge": 0.3156532988357051}, {"predict": "convenience method that creates a pair of related debits and credits for accrual based accounting", "true": "convenience method that creates a pair of related debits and credits for cash based accounting", "bleu": 0.8371170098777919, "rouge": 0.9333333333333336}, {"predict": "reads a sequence of bytes from this file into the given buffer", "true": "reads a sequence of bytes from this file into the given buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "clear the time for this date", "true": "clears the time portion of this calendar instance ; useful utility where it makes sense to compare month / day / year only <unk> of a calendar", "bleu": 0.009433481206347441, "rouge": 0.16310160427807485}, {"predict": "returns the probability distribution function", "true": "returns the probability distribution function", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts an integer to a string , and appends it to the given string buffer", "true": "converts an integer to a string , and appends it to the given buffer", "bleu": 0.8761560783209453, "rouge": 0.9715585893060297}, {"predict": "draw the 12 text values at the positions specified by the text grid parameters", "true": "draw the 12 text values at the positions specified by the text grid parameters", "bleu": 1.0, "rouge": 1.0}, {"predict": "test de bus queda active directory con atri but os", "true": "test de bus queda active directory con limit e", "bleu": 0.6786502681586726, "rouge": 0.7439024390243903}, {"predict": "handle key events in world , add it to the input buffer", "true": "handle the input virtual key code and transition state , create event and add it to the input buffer", "bleu": 0.28696408292700704, "rouge": 0.5579268292682926}, {"predict": "returns a hash code value for this object", "true": "returns the hash code for the object", "bleu": 0.25098621243978964, "rouge": 0.6747787610619468}, {"predict": "strips leading period if string starts with given string", "true": "strips leading period from a string ( example : input - > \"", "bleu": 0.17809548511381157, "rouge": 0.35209235209235207}, {"predict": "check if the passed in directory is required to be present in the configuration area", "true": "check if the passed in directory is required to be present in the configuration data set", "bleu": 0.8705873459943787, "rouge": 0.8980021030494217}, {"predict": "creates the instance of tls v 1 connection state", "true": "creates the instance of ssl v 3 connection state", "bleu": 0.4671379777282001, "rouge": 0.7777777777777778}, {"predict": "calculate matrix for fit center", "true": "calculate matrix for fit center", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method to clean up labels", "true": "removes empty labels and assigns ids to non - empty labels", "bleu": 0.10624253482403696, "rouge": 0.2234432234432234}, {"predict": "rotate theta degrees about the z axis", "true": "rotate theta degrees about the z axis", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert an in t time in milliseconds", "true": "convert a time in milliseconds in utc to the nanoseconds since midnight ( in the default timezone )", "bleu": 0.0794850675189937, "rouge": 0.29647630619684084}, {"predict": "perform an asynchronous max operation", "true": "perform an asynchronous max operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "create an https client / ip client", "true": "create the https client , returns a balanced web resource that can be used the same way a web resource is", "bleu": 0.03555135945989538, "rouge": 0.19656283566058}, {"predict": "creates a new array signature", "true": "creates a new type signature with the given amount of array nesting added to the given type signature", "bleu": 0.04176710239967757, "rouge": 0.39456662354463135}, {"predict": "writes a line to the output stream", "true": "writes the new line text to the underlying writer", "bleu": 0.20873176328735715, "rouge": 0.48897795591182364}, {"predict": "increases the size of the internal buffer to make up new size", "true": "increase the underlying buffer array in size , so that the new size is at least min size", "bleu": 0.10250745402459091, "rouge": 0.32172995780590713}, {"predict": "constructs a split with the specified data set in the distribution", "true": "creates split on enumerated attribute", "bleu": 0.11390778025531027, "rouge": 0.13406593406593406}, {"predict": "determine whether it is loaded more", "true": "determine whether it is loaded more", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new worker only if there are no idle worker", "true": "add a new worker only if there are no idle worker", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the node at the head of the frontier , adds the corresponding state to the node ' s state and returns the node", "true": "removes the node at the head of the frontier , adds the corresponding state to the explored set , and returns the node", "bleu": 0.760856626273165, "rouge": 0.8543417366946778}, {"predict": "encodes a byte array into a string", "true": "base 64 encode the given data", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "creates a new bitmap with the specified rotation offset and height", "true": "creates a bitmap font with the given arguments and places said font in the cache", "bleu": 0.14253628894439752, "rouge": 0.44907975460122695}, {"predict": "method used to check if memory pool is treated as local pool", "true": "determines if the name of the memory pool mx bean provided matches a list of known <unk> pool names", "bleu": 0.08670262200807066, "rouge": 0.2479674796747967}, {"predict": "returns a simple string representation of the data set with the type and the number of entries", "true": "returns a simple string representation of the data set with the type and the number of entries", "bleu": 1.0, "rouge": 1.0}, {"predict": "execute callable without trapping checked exceptions", "true": "directive for the compiler that the given callable should only be executed in the interpreter", "bleu": 0.04928854007377984, "rouge": 0.08840579710144927}, {"predict": "token ize s the given string into string tokens", "true": "token ize s the given string into string tokens", "bleu": 1.0, "rouge": 1.0}, {"predict": "a proxy interface method that adds a protocol of the protocol dispatch selector to the given protocol", "true": "creates a selector for a given protocol", "bleu": 0.11306082351602978, "rouge": 0.3604135893648449}, {"predict": "adds given line to the header", "true": "adds given line to the header", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the contents of the input stream from the server", "true": "reads an external skeleton file from a buffered reader", "bleu": 0.13950796967929133, "rouge": 0.21254355400696867}, {"predict": "detects the presence of genetic non - monogamy within an set of families", "true": "detects the presence of genetic non - monogamy within an set of families", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a va o for the scene with some boxes", "true": "creates a va o for the scene", "bleu": 0.6786502681586726, "rouge": 0.850597609561753}, {"predict": "contents of file", "true": "returns boolean indicating whether this file contains the content value", "bleu": 0.05210158044842422, "rouge": 0.14022988505747128}, {"predict": "load up a char - based image from the given file", "true": "load up an image from the given file , where only the off character is known", "bleu": 0.2978481644474863, "rouge": 0.5017626321974148}, {"predict": "update the receipt when the receipt has been requested", "true": "when receipt is cancelled the status of the receipt in eg dm collected receipts is updated as cancelled", "bleu": 0.08126306442139648, "rouge": 0.20962199312714777}, {"predict": "adds an animation to the choreographer and show it", "true": "add animations to the target view", "bleu": 0.18575057999133596, "rouge": 0.27664399092970515}, {"predict": "if discovery fails , then mark the system as unreachable", "true": "if discovery fails , then mark the system as unreachable", "bleu": 1.0, "rouge": 1.0}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "encodes the application data into ssl / tls record", "true": "encodes the application data into ssl / tls record", "bleu": 1.0, "rouge": 1.0}, {"predict": "if this node is not filled with words , the word set will be filled with words", "true": "performs inti aliz ation of the scheme", "bleu": 0.07223943354597204, "rouge": 0.09010339734121123}, {"predict": "checks if a string is in the set", "true": "checks if string has a length in a certain range", "bleu": 0.19546825878823415, "rouge": 0.43571428571428567}, {"predict": "writes a file to the output file", "true": "recursively listen for file system events in the specified path name", "bleu": 0.1160873020151595, "rouge": 0.2136602451838879}, {"predict": "filter out the property", "true": "this method adds a new property criteria", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "remove a column that should be used when the query has been updated", "true": "remove the column represented by its name", "bleu": 0.1135935489027116, "rouge": 0.21143847487001732}, {"predict": "check if given native gui d is in db", "true": "check un managed protection set exists in db", "bleu": 0.19960198807747329, "rouge": 0.35672514619883033}, {"predict": "put string to byte", "true": "put string to byte", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks entry to this query", "true": "runs query check result", "bleu": 0.2730120862709067, "rouge": 0.22676579925650556}, {"predict": "atomic ally updates the field of the given function , returning the updated value of applying the given function", "true": "atomic ally updates the current value with the results of applying the given function , returning the updated value", "bleu": 0.6487066897882101, "rouge": 0.6842105263157894}, {"predict": "as the activity , called by the activity delegate", "true": "close the window immediately and cleanup", "bleu": 0.14113991930789777, "rouge": 0.13832199546485258}, {"predict": "checks if the track will be drawn", "true": "figure out if this data service is considered to be highly utilized , in which case the ds should shed some index partitions", "bleu": 0.02246542173774962, "rouge": 0.12163509471585243}, {"predict": "generates a public key instance from a string containing the base 64 - encoded public key", "true": "generates a public key instance from a string containing the base 64 - encoded public key", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method converts the arguments passed in as integers to a command line", "true": "converts all throw able arguments to its message if the message is not null", "bleu": 0.1112176984362864, "rouge": 0.2207478890229192}, {"predict": "\" reasonable \" line - content \" , y > 0", "true": "utility method computing the size of the widget if dimensions are set to wrap content , using the default font", "bleu": 0.05562171233991619, "rouge": 0.12261306532663319}, {"predict": "creates a new directory , based on the given path", "true": "create a new <unk> directory for the named location", "bleu": 0.18850319022747347, "rouge": 0.42508710801393734}, {"predict": "adds a \" minutes \" request \" pair \" values \" to \" list \"", "true": "if \" minutes \" is not currently present in \" values \" , we add an appropriate new entry to values and labels", "bleu": 0.13430770571181663, "rouge": 0.35494596841230264}, {"predict": "re compose the top level variable and parameter declarations", "true": "re compose the top level variable and parameter declarations", "bleu": 1.0, "rouge": 1.0}, {"predict": "invoked when a property is closed", "true": "this method gets called when a bound property is changed", "bleu": 0.1876823093652809, "rouge": 0.47843137254901963}, {"predict": "sorts an array of integers , if necessary , to create an array of elements , ignoring the elements of the array", "true": "clone and sort the array , if not already sorted", "bleu": 0.09165852474742525, "rouge": 0.20109890109890108}, {"predict": "execute update based on the sql statement given", "true": "execute update based on the sql statement given", "bleu": 1.0, "rouge": 1.0}, {"predict": "parse the normal text and determine the hastings ratio", "true": "add some text to the page", "bleu": 0.15619699684601276, "rouge": 0.27664399092970515}, {"predict": "initializes had oop connection", "true": "initialize , download the regex info into cache", "bleu": 0.11115018927487523, "rouge": 0.0}, {"predict": "adds the given indices to the set of positions", "true": "adds the given indices", "bleu": 0.392814650900513, "rouge": 0.6612466124661246}, {"predict": "loads the json data of the given input stream", "true": "load object definitions from json stream", "bleu": 0.15619699684601276, "rouge": 0.27664399092970515}, {"predict": "for the reduction of location path parts , create a list of all the multi step paths with more than one step , sorted by the number of steps , with the most steps occur ing earlier in the list", "true": "for the reduction of location path parts , create a list of all the multi step paths with more than one step , sorted by the number of steps , with the most steps occur ing earlier in the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "decode word frequencies for each quantization boundary", "true": "add weighting coefficients to the decoded word - length information", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "update functionality test 2 # test update 3 ( )", "true": "update functionality test 2 # test update 3 ( )", "bleu": 1.0, "rouge": 1.0}, {"predict": "java x", "true": "prune away exceptional out edges that are not reachable given this block ' s instructions", "bleu": 0.0009606121050066008, "rouge": 0.0}, {"predict": "computes the query by applying the specified depth - value", "true": "run a single iteration of the <unk> - <unk> modeling step", "bleu": 0.12623203108004888, "rouge": 0.18885448916408668}, {"predict": "returns the text matched by the current regular expression", "true": "returns the text matched by the current regular expression", "bleu": 1.0, "rouge": 1.0}, {"predict": "cleans up the mini dump that started will find all mini dumps , and try to upload them", "true": "mark file we just uploaded for cleanup later", "bleu": 0.057259987315337726, "rouge": 0.0}, {"predict": "convert everything to a string representation of this space", "true": "return a spaced fingerprint representation of this hex digest", "bleu": 0.2777619034011791, "rouge": 0.4444444444444444}, {"predict": "parse content type value", "true": "parse the content type in the provided bytes", "bleu": 0.18693159143202892, "rouge": 0.47164948453608246}, {"predict": "before this method is called , it checks to ensure that all objects have been changed", "true": "no cache for de serialized strings , each string is an own instance", "bleu": 0.08513012360883544, "rouge": 0.07027649769585254}, {"predict": "decode the base 64 encoded string data writing it to the given output stream , whitespace characters will be ignored", "true": "decode the base 64 encoded string data writing it to the given output stream , whitespace characters will be ignored", "bleu": 1.0, "rouge": 1.0}, {"predict": "set the beginning of the next contour relative to the last point ( x , y )", "true": "same as line to , but the coordinates are considered relative to the last point on this contour", "bleu": 0.27610135543351616, "rouge": 0.34109972041006525}, {"predict": "parses all current game into the shared game", "true": "outputs the conflicts found in the work space in the following format : t fs test 01 / add fold / tes there 2 : the item content has changed t fs test 01 / test add", "bleu": 0.004273606737009669, "rouge": 0.03981723237597912}, {"predict": "write the start data to the output stream", "true": "write the start to the specified output stream", "bleu": 0.4032989116748133, "rouge": 0.875}, {"predict": "add q ty to stage", "true": "add to actual q ty", "bleu": 0.408248290463863, "rouge": 0.6}, {"predict": "determines whether a character is a vowel", "true": "is the character a vowel ?", "bleu": 0.2777619034011791, "rouge": 0.4680306905370844}, {"predict": "creates one buffer for the camera preview callback", "true": "creates one buffer for the camera preview callback", "bleu": 1.0, "rouge": 1.0}, {"predict": "submits task to execution pool", "true": "submits task to execution pool", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints the stack trace to the specified print writer", "true": "print the stack trace for a sql exception to a specified print writer", "bleu": 0.25186505044536794, "rouge": 0.6161616161616162}, {"predict": "initialize entity objects with procedure sum from body", "true": "creates game objects and adds them to the world", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "read data - - input the mod bus message from d in", "true": "read data - - input the mod bus message from d in", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the element at the specified position in this list", "true": "removes the element at the specified position in this list", "bleu": 1.0, "rouge": 1.0}, {"predict": "create edges for this demo graph", "true": "create edges for this demo graph", "bleu": 1.0, "rouge": 1.0}, {"predict": "uses the request to perform an sent data to the request and makes the attributes to render the request if there is set to render", "true": "uses the pagination parameters form the request and makes sure to order the result and set all pagination attributes for the response to render", "bleu": 0.19359517339258708, "rouge": 0.45063801208865006}, {"predict": "builds a single row of components in the panel", "true": "builds a single row of components in the panel", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds additional target elements", "true": "adds additional target elements", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a curve to the shape", "true": "adds a cubic curve to the be zi er path", "bleu": 0.2231931376573339, "rouge": 0.47843137254901963}, {"predict": "divide : rounding mode is round up , result is negative", "true": "divide : rounding mode is round up , result is negative", "bleu": 1.0, "rouge": 1.0}, {"predict": "write metadata to meta count", "true": "write meta bits must be called after all allocations have been made , the last one being the allocation for the meta bits themselves ( allowing for an extension ! )", "bleu": 0.0016667612018820286, "rouge": 0.0983078162771958}, {"predict": "it opens the counter binary file for writing", "true": "create a stream to read from the counter file", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "create a new composite predicate", "true": "create a new composite predicate", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the next word in the token", "true": "read the next word from the parsed sentence", "bleu": 0.31689174383082924, "rouge": 0.5269978401727862}, {"predict": "append a string to the output stream", "true": "provides a java string literal representing the parameter string", "bleu": 0.16599826150636804, "rouge": 0.3667334669338677}, {"predict": "determine if a file or directory exists", "true": "determine if a file or directory exists", "bleu": 1.0, "rouge": 1.0}, {"predict": "for use in subclasses to build the data for this class", "true": "method that generates all large item sets with a minimum support , and from these all association rules with a minimum metric ( i", "bleu": 0.029379119441390756, "rouge": 0.0}, {"predict": "float value of a negative big decimal", "true": "float value of a negative big decimal", "bleu": 1.0, "rouge": 1.0}, {"predict": "replaces the very first occurrence of a substring with supplied string", "true": "replaces the very first occurrence of a substring with supplied string", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an object to method ize", "true": "add the name of the class to method ize", "bleu": 0.26367153725164694, "rouge": 0.5147679324894514}, {"predict": "return the first child element returns the first element", "true": "return the first child element returns the first element", "bleu": 1.0, "rouge": 1.0}, {"predict": "main entry point", "true": "the main program for the html test class", "bleu": 0.10148002183214462, "rouge": 0.1680440771349862}, {"predict": "returns the hash code for the string", "true": "returns the hash code for the raw string", "bleu": 0.7536998328984837, "rouge": 0.9222462203023757}, {"predict": "tests the functionality of the method , which allows to add all helper text colors , which are contained by a collection", "true": "tests the functionality of the method , which allows to add all helper text colors , which are contained by an array", "bleu": 0.9067110266941047, "rouge": 0.9090909090909091}, {"predict": "applies max norm to the histogram", "true": "applies max norm to the histogram", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a graphic to the overlay", "true": "adds a graphic to the overlay", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the contents of a message to a file", "true": "writes the given message to the specified file", "bleu": 0.24446151121745052, "rouge": 0.594541910331384}, {"predict": "gets the hash code for the message", "true": "returns the hash code for this image type specifier", "bleu": 0.38849358632832764, "rouge": 0.48897795591182364}, {"predict": "returns a random number between start ( inclusive ) and end ( exclusive )", "true": "returns a random number between start ( inclusive ) and end ( inclusive )", "bleu": 0.8666415730847504, "rouge": 0.9285714285714285}, {"predict": "writes a mime type ' s contents", "true": "writes the given bytes", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "returns whether we need to be invoked to use the configuration that we need to be used to use particular configuration", "true": "handles updating the system locale", "bleu": 0.05809665204409193, "rouge": 0.08652482269503546}, {"predict": "find the edge points in the given list of points , which means particular edge is included in the given edge buffer", "true": "look for a convex polygon at the specified edge", "bleu": 0.0612957497932821, "rouge": 0.13958810068649885}, {"predict": "retrieve an key map instance by its key", "true": "retrieve an key map instance by its key", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the name is admin from admin", "true": "tells if a offset or time zone is gmt", "bleu": 0.15619699684601276, "rouge": 0.2222222222222222}, {"predict": "transforms a string that represents a uri into something more proper , by adding or canonical i zing the protocol", "true": "transforms a string that represents a uri into something more proper , by adding or canonical i zing the protocol", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the mapping from the specified key , if there was any", "true": "removes the mapping from the specified key , if there was any", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new individual match to the index", "true": "called while highlighting a single result , to append the whole matched token to the provided fragments list", "bleu": 0.06497689401959562, "rouge": 0.21580188679245282}, {"predict": "starts the worker thread", "true": "start the timer to make sure processing doesn ' t take too long", "bleu": 0.037870374782798366, "rouge": 0.1073943661971831}, {"predict": "fill a table from a single array", "true": "extract a single row from a table", "bleu": 0.345720784641941, "rouge": 0.42857142857142855}, {"predict": "removes each character in a string", "true": "removes all characters contained in provided string", "bleu": 0.22236312185643822, "rouge": 0.45522388059701485}, {"predict": "adds all column names to the columns in the query", "true": "adds all available table columns to the query as generated keys", "bleu": 0.22063721361655497, "rouge": 0.47213622291021673}, {"predict": "loads the token frequencies from the database", "true": "loads the token frequencies from the database", "bleu": 1.0, "rouge": 1.0}, {"predict": "copy all bytes of the input stream to a output stream", "true": "copy the input stream to the output stream", "bleu": 0.37700638045494705, "rouge": 0.7584369449378331}, {"predict": "test of type conversion", "true": "test for verifying jackson - 72", "bleu": 0.2179289600664314, "rouge": 0.1930379746835443}, {"predict": "copies new form component", "true": "creates a copy of the given component and its hierarchy", "bleu": 0.08017158404431235, "rouge": 0.13260869565217392}, {"predict": "compute the zeta constant needed for the distribution", "true": "compute the zeta constant needed for the distribution", "bleu": 1.0, "rouge": 1.0}, {"predict": "values in the order values section", "true": "the method return big decimal", "bleu": 0.22089591134157885, "rouge": 0.18484848484848485}, {"predict": "this loads the profile of the user", "true": "loads the user profile", "bleu": 0.3073940764756322, "rouge": 0.5736677115987461}, {"predict": "scrolls to the item by the specified amount", "true": "scroll the selected item", "bleu": 0.17747405280050269, "rouge": 0.3546511627906977}, {"predict": "generates a device - and invocation - specific seed to be mixed into the linux prng", "true": "generates a device - and invocation - specific seed to be mixed into the linux prng", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines whether the text of applying a symbol , applying the necessary character as a symbol that allows escape the formatting of a single character", "true": "determines whether the text of a symbol requires ( single ) quotes", "bleu": 0.21424827813482483, "rouge": 0.4616840113528855}, {"predict": "parses an \" commit \" file : port \" and returns the number of lines associated with this name", "true": "parse out the commit counter from the file name", "bleu": 0.08097785064266201, "rouge": 0.2290362953692115}, {"predict": "loads a xml document from the given file", "true": "loads a xml document from a file and returns the corresponding dom document", "bleu": 0.3378553585578884, "rouge": 0.5479041916167664}, {"predict": "returns the value of adding the given node", "true": "returns a new comment attached to an empty node", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "refer the same api in assignment service", "true": "returns true if the given employee is an hod", "bleu": 0.13958734303905354, "rouge": 0.12224448897795591}, {"predict": "build a single label instance from a single label language", "true": "build a m unger that will load only a single label per entity", "bleu": 0.20670009173746332, "rouge": 0.42479108635097496}, {"predict": "this is a url that represents an \" archive \"", "true": "returns an array of stat values that match the specified spec", "bleu": 0.12623203108004888, "rouge": 0.09442724458204334}, {"predict": "assigns a cluster and its children", "true": "recursively assigns numbers to the nodes in the tree", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "closes the current path", "true": "close the current sub path by appending a straight line from the current point to the sub path ' s starting point", "bleu": 0.005644844940217165, "rouge": 0.20515695067264575}, {"predict": "instantiate s a new tv show episode scrape task", "true": "instantiate s a new tv show episode scrape task", "bleu": 1.0, "rouge": 1.0}, {"predict": "save selection & return se lec ion query or \" \"", "true": "save selection & return se lec ion query or \" \"", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a model info mbe an notification with the notification types", "true": "constructs a model mbe an notification info object with a default descriptor", "bleu": 0.24737714147554007, "rouge": 0.5176803394625177}, {"predict": "release a task that was saved", "true": "clean - up all resources and files allocated for the given build task", "bleu": 0.06878769894132081, "rouge": 0.09870550161812298}, {"predict": "create a temporary directory that is a child of the given directory", "true": "create a temporary directory that is a child of the given directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the host uri , as a string", "true": "return the host uri , as a string", "bleu": 1.0, "rouge": 1.0}, {"predict": "move source and target parameters created", "true": "performs a translation so the center of this bounding box will be at ( lon center | lat center )", "bleu": 0.018012599273714434, "rouge": 0.0}, {"predict": "call send event to be tracked", "true": "call send event to track an occurrence of a named event", "bleu": 0.26718582988399503, "rouge": 0.4468864468864468}, {"predict": "handles a column that is pressed on the get button", "true": "tell the table something is pressed", "bleu": 0.17827531042796255, "rouge": 0.26180257510729615}, {"predict": "creates a fixed records of a fixed amount of fixed records", "true": "create a list of count 16 - byte records", "bleu": 0.1354599427337814, "rouge": 0.3055091819699499}, {"predict": "adds the provided attributes ( not already present ) to the d list", "true": "add the given attributes to this params if they are not already present", "bleu": 0.2044800736021839, "rouge": 0.38461538461538464}, {"predict": "re compose the attribute - set declarations", "true": "re compose the attribute - set declarations", "bleu": 1.0, "rouge": 1.0}, {"predict": "splits the given string using the given regex as delimiters", "true": "splits the given string using the given regex as delimiters", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses the class path , proc delete directory (", "true": "deletes the backed - up db directory", "bleu": 0.15619699684601276, "rouge": 0.2557651991614256}, {"predict": "specialized version of find to get last valid node", "true": "specialized version of find to get last valid node", "bleu": 1.0, "rouge": 1.0}, {"predict": "invoked to pass stream data", "true": "invoked to pass stream data", "bleu": 1.0, "rouge": 1.0}, {"predict": "counts the size of a directory recursively ( sum of the length of all files )", "true": "counts the size of a directory recursively ( sum of the length of all files )", "bleu": 1.0, "rouge": 1.0}, {"predict": "pans the view provided by this display in absolute ( i", "true": "pans the view provided by this display in absolute ( i", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks that the given object is not equal to this object", "true": "verifies that serialization preserves equals and hash code", "bleu": 0.11390778025531027, "rouge": 0.108348134991119}, {"predict": "returns the url of the product wiki page", "true": "returns the url of the product wiki page", "bleu": 1.0, "rouge": 1.0}, {"predict": "called to notify that a consumption has finished", "true": "called to notify that a consumption has finished", "bleu": 1.0, "rouge": 1.0}, {"predict": "build the mean of the list", "true": "gets the average from a list of numbers", "bleu": 0.18822631894109965, "rouge": 0.2785388127853881}, {"predict": "converts the byte array to a hex string", "true": "convert a byte array to hexadecimal", "bleu": 0.3155984539112945, "rouge": 0.43990384615384615}, {"predict": "initializes an input stream from a url", "true": "initializes an input stream from a url", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds all pending events in a batch to be after in order to keep post the node after expanding after the view after the call to", "true": "removes the enable full screen run n able from the ui queue and runs it immediately", "bleu": 0.051660454541342535, "rouge": 0.09951060358890701}, {"predict": "converts an html entity from a string", "true": "find the html entity and convert it back to a regular character if the entity exists , otherwise return the same string", "bleu": 0.032586794879778176, "rouge": 0.2523267838676318}, {"predict": "writes vector of opaque values", "true": "writes vector of opaque values", "bleu": 1.0, "rouge": 1.0}, {"predict": "unlock user interface", "true": "unlock user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "build a map of storage system for the given v plex storage system", "true": "build a map of uri to cached storage system for the underlying arrays", "bleu": 0.44534504264163466, "rouge": 0.6153846153846153}, {"predict": "password based encryption using aes - cbc 256 bits", "true": "password based encryption using aes - cbc 256 bits", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns strongest measurement for each wi fi within t from t to t bl w if is", "true": "gets w if is by bs sid", "bleu": 0.13445273575332958, "rouge": 0.27031019202363366}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "called when the kit is being removed from the j editor pane", "true": "de installs the editor for the kit", "bleu": 0.15537125692760353, "rouge": 0.22101449275362317}, {"predict": "actions a pull event", "true": "actions a pull event", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true in case with no work flow", "true": "check if sip transport uses tls", "bleu": 0.13485111859503685, "rouge": 0.0}, {"predict": "the sample from the database", "true": "keep a record as a sample , with certain probability", "bleu": 0.10043553373039076, "rouge": 0.12577319587628866}, {"predict": "prepares a cop rhd creation for given open stack", "true": "prepares tenant create param class filled with information from given tenant", "bleu": 0.12507277759788113, "rouge": 0.19645732689210954}, {"predict": "this draws a \" marked occurrence of a highlight", "true": "call this function to draw the node highlighted", "bleu": 0.14113991930789777, "rouge": 0.1189083820662768}, {"predict": "returns a new instance of the image encoded as a new instance", "true": "used to retrieve an image encoder for a specific image format", "bleu": 0.11498759556447223, "rouge": 0.17528735632183906}, {"predict": "use for apply pinch zoom functionality to your image view", "true": "use for apply pinch zoom functionality to your image view", "bleu": 1.0, "rouge": 1.0}, {"predict": "empirical unconditional hilbert - schmidt dependence measure for x and y using incomplete c hole sky decomposition to approximate gram matrices", "true": "empirical unconditional hilbert - schmidt dependence measure for x and y given z using incomplete c hole sky decomposition to approximate gram matrices", "bleu": 0.8379990355241307, "rouge": 0.9467849223946784}, {"predict": "parses an array of file option , uses default if option is missing", "true": "parses a file option , uses default if option is missing", "bleu": 0.6930977286178778, "rouge": 0.8460471567267683}, {"predict": "is the cost detail for the lines ; using copying is enabled", "true": "are the lines accounting balanced", "bleu": 0.1367440667823257, "rouge": 0.25416666666666665}, {"predict": "this implements the un synchronized semantics of ensure capacity", "true": "ensures that the receiver can hold at least the specified number of elements without needing to allocate new internal memory", "bleu": 0.04601170352846859, "rouge": 0.1291005291005291}, {"predict": "get base base base method from method", "true": "get the name of the message bundle to use when getting the message for the specified method", "bleu": 0.04926429870313275, "rouge": 0.1550190597204574}, {"predict": "closes this stream , implicitly invoking done ( )", "true": "do all required cleanup now that we ' re finished with the currently - open", "bleu": 0.06093442415317837, "rouge": 0.0}, {"predict": "lock in its image", "true": "locks the queue for read / write access", "bleu": 0.11115018927487523, "rouge": 0.0}, {"predict": "creates a statement interceptor to monitor query response times", "true": "creates a statement interceptor to monitor query response times", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes a so lr response from the passed id", "true": "deletes a so lr document with the given id", "bleu": 0.42728700639623407, "rouge": 0.6666666666666666}, {"predict": "prepare for the open loader", "true": "lets the user select a props file for changing the database connection parameters", "bleu": 0.061000517228105004, "rouge": 0.20573355817875214}, {"predict": "looks up the client side for the client", "true": "load client object client details entity", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "adds the named field property for the named access or message", "true": "adds the named event property backed by the named access or field", "bleu": 0.4093783607491417, "rouge": 0.6902404526166903}, {"predict": "parses no wildcard segments", "true": "this method parses the given pattern into segments seperated by wildcard ' * ' characters", "bleu": 0.02731554444032802, "rouge": 0.190625}, {"predict": "returns a map of the environment variables used by the context contained in the context", "true": "encodes the baggage to strings to set as environment variables , which will then be picked up in a child process", "bleu": 0.08629921818897687, "rouge": 0.2157382847038019}, {"predict": "the graphical representation of a series", "true": "the graphical representation of a series", "bleu": 1.0, "rouge": 1.0}, {"predict": "listen for the username , so the connection can such for display", "true": "start receiving the mod log for the given channel ( username )", "bleu": 0.15537125692760353, "rouge": 0.25}, {"predict": "returns true if the given class name is a valid class name", "true": "return whether or not the given class name is valid", "bleu": 0.39553325358771796, "rouge": 0.5545454545454546}, {"predict": "makes sure current thread was written", "true": "corrects the loco net fast clock", "bleu": 0.18575057999133598, "rouge": 0.0}, {"predict": "determine if a data collection is needed for a data collection", "true": "if the job is in progress , don ' t schedule the job", "bleu": 0.10510262682013449, "rouge": 0.1641991924629879}, {"predict": "remove a break point from the break point manager", "true": "remove the given set of breakpoints", "bleu": 0.15619699684601276, "rouge": 0.27664399092970515}, {"predict": "replaces an rd n from a l dap server", "true": "replaces an existing template", "bleu": 0.18575057999133596, "rouge": 0.3306233062330623}, {"predict": "reads object un serialized values from a stream , logging times for the read from the given stream , logging read from the error", "true": "un marshals the event listener", "bleu": 0.05606668411195419, "rouge": 0.15641025641025638}, {"predict": "adds the specified item to this list model", "true": "adds the specified item to this list model", "bleu": 1.0, "rouge": 1.0}, {"predict": "using some super basic byte array & lt ; - & gt ; hex conversions so we don ' t have to rely on any large base 64 libraries", "true": "using some super basic byte array & lt ; - & gt ; hex conversions so we don ' t have to rely on any large base 64 libraries", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a new cluster", "true": "creates a new cluster server definition", "bleu": 0.4056114983537769, "rouge": 0.5791139240506329}, {"predict": "create a positive number from a sign and an array of bytes", "true": "create a positive number from a sign and an array of bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "minimal stage", "true": "minimal completion stage returns a comp let able future that is completed normally , with the same value , when source is", "bleu": 3.817663819004394e-05, "rouge": 0.14489311163895488}, {"predict": "writes a directory post resource", "true": "write directory post resource", "bleu": 0.5081327481546147, "rouge": 0.6802973977695167}, {"predict": "trim the array to the required size", "true": "trim the array to the required size", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a potion id or item type", "true": "converts a vanilla potion id to an equivalent buk kit potion type", "bleu": 0.13597602315271134, "rouge": 0.40197693574958815}, {"predict": "removes curl mesh to this render er", "true": "removes curl mesh from this render er", "bleu": 0.5, "rouge": 0.8571428571428571}, {"predict": "constructs a list of new list of uris using the given source", "true": "select pro samples from a single instance", "bleu": 0.10390302174233558, "rouge": 0.11050724637681159}, {"predict": "helper method to send run n able into local handler loop", "true": "helper method to send run n able into local handler loop", "bleu": 1.0, "rouge": 1.0}, {"predict": "indicates whether this periodic run n able is closed", "true": "check whether this map is closed", "bleu": 0.23356898886410005, "rouge": 0.5532879818594103}, {"predict": "inserts a bit time into the script", "true": "does something to insert think time into the script", "bleu": 0.38849358632832764, "rouge": 0.48897795591182364}, {"predict": "copies stream , fires progress events by listener , can be interrupted by listener", "true": "copies stream , fires progress events by listener , can be interrupted by listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new instruction to the code", "true": "add new node and set prev instruction pointing to this instruction", "bleu": 0.1247439242120089, "rouge": 0.32049036777583184}, {"predict": "ensures that the capacity of the buffer is at least the specified number of additional bytes", "true": "ensure the buffer can hold at least ' minimum capacity ' bytes", "bleu": 0.13847066375656705, "rouge": 0.36658653846153844}, {"predict": "removes a previously added user friendly name", "true": "removes the provided user friendly name", "bleu": 0.3655552228545123, "rouge": 0.6240409207161125}, {"predict": "converts input stream to byte array", "true": "reads json api spec document and converts it into collection of target type objects", "bleu": 0.05822753005110548, "rouge": 0.09327217125382263}, {"predict": "add given timer to the swarm", "true": "add a targeting by a swarm <unk> from a specified entity", "bleu": 0.10624253482403696, "rouge": 0.2234432234432234}, {"predict": "checks if the checkpoint exists", "true": "checks specified checkpoint existing", "bleu": 0.3021375397356768, "rouge": 0.4535315985130111}, {"predict": "constructs an om raster , using the high - bit color icon", "true": "create an om raster , lat / lon placement with an image icon", "bleu": 0.27846466558102084, "rouge": 0.39713541666666663}, {"predict": "locate the vertices and the code words area of a black blob using the start and stop patterns as locator s", "true": "locate the vertices and the code words area of a black blob using the start and stop patterns as locator s", "bleu": 1.0, "rouge": 1.0}, {"predict": "copy the data from the input stream to the specified output stream", "true": "copy from one stream to another", "bleu": 0.15537125692760353, "rouge": 0.4728682170542636}, {"predict": "writes the header to the instance of the task", "true": "writes the catalog , doc info , preferences , and ( as we use only single page output the page tree", "bleu": 0.052614512819431365, "rouge": 0.18654434250764526}, {"predict": "parses a string into a string", "true": "parses a \" normal string \"", "bleu": 0.31239399369202553, "rouge": 0.5}, {"predict": "code to un re update instruction type", "true": "generate code for <unk> a return value of the given type from the invocation handler ' s \" invoke \" method ( as type object ) to its correct type", "bleu": 0.008264566794564103, "rouge": 0.14581673306772908}, {"predict": "formats a string for text and replaces all instances for it with matching text as a string", "true": "formats a link , given an array of tokens", "bleu": 0.09507244120026236, "rouge": 0.1628838451268358}, {"predict": "constructs a new json exception with the specified cause", "true": "constructs a new json exception with the specified cause", "bleu": 1.0, "rouge": 1.0}, {"predict": "tells whether the project contains j mx agent \"", "true": "this will check an array of <unk> , determine if they exist and determine that it has either the permissions <unk> , <unk> , or <unk>", "bleu": 0.021345967478862422, "rouge": 0.05254091300602928}, {"predict": "initializes the patterns by the default pattern", "true": "performs inti aliz ation of the scheme", "bleu": 0.18575057999133598, "rouge": 0.14285714285714285}, {"predict": "returns directories as directories", "true": "list the directories contained within a directory", "bleu": 0.1697232447536737, "rouge": 0.1732954545454545}, {"predict": "adds the string representation of the text edit and its children to the given string buffer", "true": "adds the string representation for this text edit and its children to the given string buffer", "bleu": 0.7624658586234861, "rouge": 0.875}, {"predict": "encodes an arbitrary value as a signed 32 integer", "true": "writes a vl q encoded value to the provide append able", "bleu": 0.12507277759788113, "rouge": 0.09822866344605477}, {"predict": "convenience method to recursively de cycle through cell overlay", "true": "removes and returns the given overlay from the given cell", "bleu": 0.1397712139461423, "rouge": 0.10427350427350426}, {"predict": "removes the given foreign key from the list", "true": "removes the indicated foreign key", "bleu": 0.2653856085536222, "rouge": 0.6421052631578947}, {"predict": "inserts the string representation of the in t argument into this string buffer", "true": "inserts the string representation of the second in t argument into this string buffer", "bleu": 0.8008131934180451, "rouge": 0.9565741857659832}, {"predict": "adds extra plane to be closed", "true": "adds a ge fa e hr dung to the list of all ge fa e hr dung en if ge fa e hr dung not already exits", "bleu": 0.007382097986232767, "rouge": 0.1087344028520499}, {"predict": "normalize the class path into a special class path", "true": "converts any relative class path references to the full path", "bleu": 0.18885888592159467, "rouge": 0.31282051282051276}, {"predict": "create a sequence containing one object", "true": "create a sequence containing one object", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the value of the x that is to be copied from the x", "true": "power function", "bleu": 0.07432998184513635, "rouge": 0.0}, {"predict": "append a node on to the vector", "true": "append a node on to the vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a node into a string", "true": "convert the input node to string type , if it isn ' t already", "bleu": 0.06443935473636557, "rouge": 0.18654434250764526}, {"predict": "update functionality test 2 # test update 7 ( )", "true": "update functionality test 2 # test update 7 ( )", "bleu": 1.0, "rouge": 1.0}, {"predict": "this service is used to read historical values or events of one or more nodes", "true": "this service is used to read historical values or events of one or more nodes", "bleu": 1.0, "rouge": 1.0}, {"predict": "validates a uri instance", "true": "check that the vm identifier includes a unique numerical identifier for the target jvm", "bleu": 0.02949347753605095, "rouge": 0.10099337748344371}, {"predict": "called by the thread after exiting the iterator", "true": "stream will close after the already written bytes are read", "bleu": 0.13821693129588736, "rouge": 0.21785714285714283}, {"predict": "writes a long value", "true": "adjusts the offset by the header size , such that writing to a zero offset would not <unk> the header", "bleu": 0.006580884365953166, "rouge": 0.07439024390243902}, {"predict": "an internal entity declaration", "true": "an internal entity declaration", "bleu": 1.0, "rouge": 1.0}, {"predict": "never be called for an object", "true": "returns true if a given log record should be published", "bleu": 0.11341174240707227, "rouge": 0.11960784313725491}, {"predict": "returns the next element in the array", "true": "move to next element in the array", "bleu": 0.6803749333171202, "rouge": 0.7142857142857143}, {"predict": "use it if you need to add a multiple messages", "true": "use it if you need to add a multiple messages", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates and sets the permission of this token", "true": "called for the first denied permission if there is need to show the rational", "bleu": 0.08383280652235028, "rouge": 0.1732954545454545}, {"predict": "constructs a principal using the given parameters and reads the contents of a query from the specified map of principal", "true": "construct a new principal for the specified username and password , with the specified role names ( as strings )", "bleu": 0.09936036078831874, "rouge": 0.3}, {"predict": "returns whether the specified object equals to this instance", "true": "returns whether the specified object equals to this instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "adjusted i to instantiate s v 1", "true": "simulates rolling a dice with 6 sides", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "returns the byte array containing the 7 - bit unpacked gsm alphabet of the alphabet - bit - bit - bit gsm alphabet", "true": "convert a list of <unk> values into an octet stream , with a number of empty bits at the start", "bleu": 0.05856458233275369, "rouge": 0.09420849420849421}, {"predict": "creates a new parser", "true": "creates a new panel object", "bleu": 0.5208154731870476, "rouge": 0.6535714285714286}, {"predict": "returns the height at the given index in the future", "true": "return marker height given index", "bleu": 0.17827531042796255, "rouge": 0.42558139534883715}, {"predict": "consumes the state of a cluster and creates a matched state", "true": "use the supplied function to asynchronously consume messages from the cluster", "bleu": 0.12605968092174913, "rouge": 0.18181818181818182}, {"predict": "calculates the distance ( or similarity ) between two instances", "true": "calculates the distance ( or similarity ) between two instances", "bleu": 1.0, "rouge": 1.0}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "to do : this chaining can be slow at query execution", "true": "to do : this chaining can be slow at query execution", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove a custom contents of a database", "true": "re - creates the full text index for this database", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "debugging : dot representation of this graph", "true": "debugging : dot representation of this graph", "bleu": 1.0, "rouge": 1.0}, {"predict": "resize the tables to the underlying array", "true": "resize tables as the number of objects grow", "bleu": 0.19148978368719022, "rouge": 0.3952483801295896}, {"predict": "returns true if there ' s another socket address to try", "true": "returns true if there ' s another socket address to try", "bleu": 1.0, "rouge": 1.0}, {"predict": "transforms a value at the percentile based on the range of 100 )", "true": "x = 1 / ( 1 - percentage )", "bleu": 0.09552040806823771, "rouge": 0.09399075500770414}, {"predict": "queue a name in the database", "true": "extracts the queue name given a pin later queue database name", "bleu": 0.12634437832866915, "rouge": 0.33516483516483514}, {"predict": "check whether the provided id is use an entry", "true": "routines for returning <unk> d names", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "returns the angle between two keys numbers specified by this touch point and y", "true": "angle between the current touch coordinates and the down coordinates", "bleu": 0.13834368456410945, "rouge": 0.34366197183098596}, {"predict": "c data section 3 bytes block wise must be byte 0", "true": "parse a little - endian u in t 16 from the data at the given offset", "bleu": 0.0723014165286922, "rouge": 0.07168037602820211}, {"predict": "rotate i mm ! = 0 : shifter operand = = 0 then shifter operand = rm shifter carry out = rm shifter carry out = rm rotate i mm : shifter carry out = rm 31 = shifter carry out = rm rotate right shift i mm", "true": ", as r operation : if rs 7 : 0 = = 0 then shifter operand = rm shifter carry out = c flag else if rs 7 : 0 = 32 / if rm 31 = = 0 then shifter operand = 0 shifter carry out =", "bleu": 0.3671510216651532, "rouge": 0.45833333333333326}, {"predict": "remove a port - quotes from a long option", "true": "removes the surrounding quote characters as needed", "bleu": 0.11868405219520975, "rouge": 0.0}, {"predict": "generates a label for the specified series", "true": "generates a label for the specified series", "bleu": 1.0, "rouge": 1.0}, {"predict": "match to match path string", "true": "tests whether or not a string matches against a pattern", "bleu": 0.10043553373039076, "rouge": 0.12577319587628866}, {"predict": "method to adjust new this entry for given entry in table", "true": "asks to adjust new preferred size <unk> if necessary", "bleu": 0.21200626759025185, "rouge": 0.3055091819699499}, {"predict": "find any fields that field descriptors for this type", "true": "find description of a field of this class", "bleu": 0.16784459625186196, "rouge": 0.35672514619883033}, {"predict": "constructs a new instance , based on a particular date / time and time zone", "true": "constructs a quarter , based on a date / time and time zone", "bleu": 0.5681096832337497, "rouge": 0.8683274021352313}, {"predict": "if there is no field with the specified key , then associate the given value with the specified key", "true": "if there is no field with the specified key , then associate the given value with the specified key", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the boolean value from the json array for specified index", "true": "reads the boolean value from the json array for specified index", "bleu": 1.0, "rouge": 1.0}, {"predict": "update the is function to call room", "true": "append the call of proper auto boxing method for the given prim it if type", "bleu": 0.06555660318294844, "rouge": 0.17062937062937064}, {"predict": "open the pdf file for break - iterator", "true": "open pdf file using a byte stream - by default files under <unk> bytes are cached to disk but this can be altered by setting pdf file reader", "bleu": 0.019684226266952622, "rouge": 0.20198675496688742}, {"predict": "main entry point for the application", "true": "generate <unk> report data from directories with <unk> report results", "bleu": 0.09536752763778475, "rouge": 0.0}, {"predict": "waits for the arena searching for a waiting producer to transfer thread", "true": "waits for ( by spinning ) to have an element transfered from another thread", "bleu": 0.1315189295625006, "rouge": 0.3034825870646766}, {"predict": "constructs one list of signatures", "true": "construct the 1 - signatures by merging adjacent dense bins", "bleu": 0.10043553373039076, "rouge": 0.12577319587628866}, {"predict": "test bit ( in t n ) of a positive number", "true": "test bit ( in t n ) of a positive number", "bleu": 1.0, "rouge": 1.0}, {"predict": "finds the end of the string that contains whitespace s", "true": "finds and returns the end of the given character sequence after trimming new line characters from the right", "bleu": 0.16499612399314367, "rouge": 0.33964365256124723}, {"predict": "makes a query using the json set and returns the assert queries", "true": "validates a query matches some json test expressions using the default double delta tolerance", "bleu": 0.15233734832972273, "rouge": 0.3034825870646766}, {"predict": "pop the current executing attribute set", "true": "pop the current executing attribute set", "bleu": 1.0, "rouge": 1.0}, {"predict": "add workout the transformation and workout the 2 values for xx values in xml", "true": "calculate the x coord s for text here y coord s are calculated in the method process text array ( final byte stream , in t start command , in t data pointer )", "bleu": 0.026637032425484423, "rouge": 0.11626429479034307}, {"predict": "prints the entry in a writer to the stream", "true": "prints the roster information", "bleu": 0.18575057999133596, "rouge": 0.3306233062330623}, {"predict": "convert a java date to it ' s julian equivalent", "true": "convert a julian to it ' s java date equivalent", "bleu": 0.47287080450158786, "rouge": 0.7000000000000001}, {"predict": "removes the last element of the given object", "true": "remove the last element , if it matches", "bleu": 0.2984745896009823, "rouge": 0.375}, {"predict": "write a rdf schema to a row containing data set of the tags and adds a single ex if there are no structure", "true": "serializes a struct property", "bleu": 0.05291907393644996, "rouge": 0.08484005563282336}, {"predict": "computes the utility table for the bayesian network", "true": "computes the utility table for the query variable ( typically an action variable ) , given the provided evidence", "bleu": 0.1835563707040774, "rouge": 0.4140271493212669}, {"predict": "convert a list of float to a primitive array", "true": "converts a string list of scores to float", "bleu": 0.2208959113415788, "rouge": 0.4756335282651072}, {"predict": "assigns the open and data into the next one", "true": "assigns the output socket to the next image", "bleu": 0.23356898886410005, "rouge": 0.4756335282651072}, {"predict": "loading method", "true": "loading method", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the best insertion for the given route", "true": "find the best insertion position for a relocated activity in a given list of current activities", "bleu": 0.17860244166902361, "rouge": 0.47164948453608246}, {"predict": "parse a string value to a calendar", "true": "parse a string value to a calendar", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes a short ( 16 bit ) to the target stream", "true": "writes a short ( 16 bit ) to the target stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if there are any resources in this dhcp pool", "true": "checks if is initialized", "bleu": 0.11390778025531027, "rouge": 0.14558472553699284}, {"predict": "starts and activity to open the ' new account ' page in the own cloud web site", "true": "starts and activity to open the ' new account ' page in the own cloud web site", "bleu": 1.0, "rouge": 1.0}, {"predict": "registers extra subject at the appropriate for the statements", "true": "register an extra valid subject", "bleu": 0.15619699684601276, "rouge": 0.3012345679012346}, {"predict": "trim whitespace", "true": "trims a line and removes comments", "bleu": 0.08647154598524984, "rouge": 0.0}, {"predict": "calculates the euclidean number of points between two points", "true": "calculates the square of the euclidean distance between two 1 d points represented by real values", "bleu": 0.12968664746479025, "rouge": 0.45692883895131076}, {"predict": "adds the instructions to the list of instructions in the of flow mod", "true": "adds the instructions to the list of of instructions in the of flow mod", "bleu": 0.8617038791239606, "rouge": 0.9565741857659832}, {"predict": "get an iterator over the data type", "true": "non - thread safe iterator", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "verify that the specified string set of hosts for the domain", "true": "check if given domains are in use or not , if any of them is in use , throw exception", "bleu": 0.05025989071455871, "rouge": 0.06130653266331659}, {"predict": "filters all the files in the specified circle", "true": "this method implements the <unk> intersection detection method to determine whether the circles are actually intersecting", "bleu": 0.06528905536667998, "rouge": 0.15721649484536082}, {"predict": "initialize and create a test unit for a given test class", "true": "initializes mats im test utils without requiring the method of a class to be a jun it test", "bleu": 0.07933493800053909, "rouge": 0.1982665222101842}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "the roll back in t by the process", "true": "the bitmap of ignored signals , displayed as a decimal number", "bleu": 0.11021777041988566, "rouge": 0.10234899328859062}, {"predict": "finds corresponding java type for a given annotated type , returning type by type + 1 for given type", "true": "method that will try to determine statically defined type of property being serialized , based on annotations ( for overrides ) , and alternatively declared type ( if static typing for serialization is enabled )", "bleu": 0.03651235857820379, "rouge": 0.17579250720461095}, {"predict": "converts the logic to an output stream containing the pairs of instances for the logic between them and parameters", "true": "augment given scene with information from stub file , reading stubs from input stream and writing j a if to output stream", "bleu": 0.08223390829873314, "rouge": 0.14443567482241515}, {"predict": "returns map containing the given entries", "true": "returns map containing the given entries", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the characters from an array", "true": "write the characters from an array", "bleu": 1.0, "rouge": 1.0}, {"predict": "bounds the current scroll if necessary , but does not synchronize the stack view", "true": "bounds the current scroll if necessary", "bleu": 0.4001601601922499, "rouge": 0.646643109540636}, {"predict": "loads the voice from the given voice", "true": "add a free tt s voice for a given mary voice", "bleu": 0.1247439242120089, "rouge": 0.32049036777583184}, {"predict": "puts a key / value pair into the array , optimizing for the case where the key is greater than all existing keys in the array", "true": "puts a key / value pair into the array , optimizing for the case where the key is greater than all existing keys in the array", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an incremental class i fier listener", "true": "add an incremental class i fier listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method reads a 32 bit float , and returns it as a float", "true": "reads an r 4 from the file and returns it in a float", "bleu": 0.20333448190047887, "rouge": 0.4474327628361858}, {"predict": "returns a ( possibly empty ) collection view of the given input stream", "true": "returns a ( possibly empty ) collection view of the certificates read from the given input stream in stream", "bleu": 0.5865725142030359, "rouge": 0.7859266600594649}, {"predict": "checks for files on the given file and adds the lines to the destination file ( or optionally ) for the file", "true": "checks to see if filenames exist on a destination directory that don ' t exist in the source directory", "bleu": 0.07289334177359764, "rouge": 0.19773095623987033}, {"predict": "converts the order in place into account into account multiple by their order in across the result", "true": "converts a query ' s order by clause , if any", "bleu": 0.0859076483566362, "rouge": 0.22289890377588306}, {"predict": "tick : the tick label position is valid", "true": "tick a specific block position , finding the valid blocks immediately adjacent to it and then replacing one at random", "bleu": 0.044994075374844275, "rouge": 0.19891304347826086}, {"predict": "adds the given purchase information to the database and returns the total number of times that the given product has been purchased", "true": "adds the given purchase information to the database and returns the total number of times that the given product has been purchased", "bleu": 1.0, "rouge": 1.0}, {"predict": "configures the old message label", "true": "configures any necessary colors / fonts for the specified label used representing the message", "bleu": 0.05674620314719988, "rouge": 0.2909379968203497}, {"predict": "removes all limit lines from the axis", "true": "removes all limit lines from the axis", "bleu": 1.0, "rouge": 1.0}, {"predict": "links node as first element , or returns false if full", "true": "links node as first element , or returns false if full", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove all the supplied elements in the returned filterable", "true": "remove all elements in the supplied stream from this filterable", "bleu": 0.31762152032055835, "rouge": 0.6256410256410255}, {"predict": "draws the given line of mx points using the given list of points", "true": "draws the given lines as segments between all points of the given list of mx points", "bleu": 0.3549642985355191, "rouge": 0.6093229744728079}, {"predict": "checks for path specified in this space and extracts the minimal coordinates", "true": "compute 3 a regions for a sensor - referenced touch coordinate", "bleu": 0.10390302174233558, "rouge": 0.08764367816091953}, {"predict": "flushes this stream to the output stream and forces any buffered data to be written", "true": "flushes the stream", "bleu": 0.09782375748961449, "rouge": 0.37888198757763975}, {"predict": "constructs a vector with the given array of doubles", "true": "create a vector of given dimension", "bleu": 0.21105340631872635, "rouge": 0.4149659863945578}, {"predict": "handle a bizarre special case", "true": "handle a bizarre special case", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts a lat - lon pair to an array", "true": "convert longitude to pixel value", "bleu": 0.14113991930789777, "rouge": 0.1506172839506173}, {"predict": "gets the value at the world value between world values and size", "true": "indicates whether world file values appear to be in latitude and longitude", "bleu": 0.1235622127262679, "rouge": 0.25}, {"predict": "stores the in t value in the send", "true": "description of the method", "bleu": 0.16036590969929357, "rouge": 0.17732558139534885}, {"predict": "remove a remote session from remote session", "true": "remove a remote session", "bleu": 0.5169731539571706, "rouge": 0.7648902821316614}, {"predict": "returns the string representation of this vector", "true": "returns the string representation of this vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an iterator over the tree", "true": "iterator visits the direct child nodes in the external key ordering", "bleu": 0.10624253482403696, "rouge": 0.2234432234432234}, {"predict": "enables metrics for the server by setting \" opt - out \" to false in the config file and starting the metrics task", "true": "enables metrics for the server by setting \" opt - out \" to false in the config file and starting the metrics task", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new evaluation with the given key - md 5 instance", "true": "creates an hm act 64 instance which uses the given secret key material", "bleu": 0.14294845713017917, "rouge": 0.23828125000000006}, {"predict": "returns true if the char segment starts with the given string", "true": "returns true if the char segment starts with the string", "bleu": 0.8265168183793802, "rouge": 0.9606299212598426}, {"predict": "write part of an array of bytes", "true": "write a byte buffer that isn ' t backed by an array", "bleu": 0.1285981829222983, "rouge": 0.30148270181219106}, {"predict": "return true if the class was loaded from the application s rc / directory", "true": "return true if the class was loaded from the application s rc / directory", "bleu": 1.0, "rouge": 1.0}, {"predict": "process a dummy ld if lines from the server to create new lines", "true": "reads in the ld if file , and writes the change records on the l dap connection", "bleu": 0.09930751066504134, "rouge": 0.1953041622198506}, {"predict": "print out a row for a row", "true": "render ( print ) progress bar", "bleu": 0.18575057999133598, "rouge": 0.15601023017902813}, {"predict": "attempts to release the non - blocking lock that is held by the specified object name", "true": "drain currently permitted requests and grant lock to next request or", "bleu": 0.08513012360883544, "rouge": 0.07663316582914573}, {"predict": "load positions based on the positions of the items", "true": "loads positions within certain ar re a", "bleu": 0.14113991930789777, "rouge": 0.1278825995807128}, {"predict": "creates the check box , which is to be check if the icon is in the report box", "true": "shorthand for creating the check box setting the icon / text and making it into a toggle button", "bleu": 0.15071676257541072, "rouge": 0.2777777777777778}, {"predict": "add a completed batch to the remote server", "true": "adds this batch to the downloads system", "bleu": 0.2984745896009823, "rouge": 0.4048672566371681}, {"predict": "save the encoded ( output ) buffer into the complete encoded recording", "true": "save the encoded ( output ) buffer into the complete encoded recording", "bleu": 1.0, "rouge": 1.0}, {"predict": "create a job definition that is using fixed delays specify , when and how often the job should be triggered", "true": "create a job definition that is using fixed delays specify , when and how often the job should be triggered", "bleu": 1.0, "rouge": 1.0}, {"predict": "find the fields constant that matches field id , or null if its not found", "true": "find the fields constant that matches field id , or null if its not found", "bleu": 1.0, "rouge": 1.0}, {"predict": "stores given long value", "true": "stores given integer value", "bleu": 0.5081327481546147, "rouge": 0.75}, {"predict": "create a splits file with number of documents", "true": "takes the available cas and creates more cases from them to conform to the minimal requested amount of cas objects to have sufficient for running a cross - validation", "bleu": 0.01285617726475233, "rouge": 0.04903536977491961}, {"predict": "sign part of the xml document referer ed by the supplied a list of xml document attributes", "true": "sign the xml document using enveloped signatures", "bleu": 0.14216645907653844, "rouge": 0.3604135893648449}, {"predict": "click popup of this and popup", "true": "display popup", "bleu": 0.22089591134157885, "rouge": 0.27477477477477474}, {"predict": "creates a new abstract writer writer", "true": "creates a writer for processing sequences from provided data source", "bleu": 0.16038842424444547, "rouge": 0.3588235294117647}, {"predict": "get the best relationship for the given source and target", "true": "guesses the ' best ' firing plan under a certain heat no <unk> is done", "bleu": 0.08461586088475063, "rouge": 0.15443037974683543}, {"predict": "produces a volume group array , initialized from the source group", "true": "map an volume group to volume group rest rep", "bleu": 0.16108992769687397, "rouge": 0.3055091819699499}, {"predict": "post all filenames provided in arg s", "true": "post all filenames provided in arg s", "bleu": 1.0, "rouge": 1.0}, {"predict": "return a string representation of this object", "true": "return a string representation of this object", "bleu": 1.0, "rouge": 1.0}, {"predict": "clear all searchable items", "true": "clear all searchable items", "bleu": 1.0, "rouge": 1.0}, {"predict": "register a new listener for changes in the panel", "true": "register a listener to be notified when plotting completes", "bleu": 0.19960198807747329, "rouge": 0.3333333333333333}, {"predict": "adds multiple instances of an ingredient from the list", "true": "adds multiples of the specified ingredient", "bleu": 0.17747405280050263, "rouge": 0.4149659863945578}, {"predict": "constructs a new batched image request object", "true": "constructs a new batched image request object", "bleu": 1.0, "rouge": 1.0}, {"predict": "order by order", "true": "returns the order string produced by this object", "bleu": 0.11230610537242834, "rouge": 0.3360881542699724}, {"predict": "find a clone that corresponds to the key argument", "true": "find a clone that corresponds to the key argument", "bleu": 1.0, "rouge": 1.0}, {"predict": "convert the specified string to bytes using the specified encoding", "true": "convert a string to a byte array using the specified encoding", "bleu": 0.3775218276532607, "rouge": 0.6609907120743034}, {"predict": "description of the method", "true": "description of the method", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method is called before writing to the process", "true": "clear log cat buffer prior to test run", "bleu": 0.14113991930789777, "rouge": 0.1189083820662768}, {"predict": "add a single character to this hash table", "true": "add a meta character and its replacement", "bleu": 0.22679164443904004, "rouge": 0.4048672566371681}, {"predict": "find the code that does the real work of lookup", "true": "the code that does the real work of lookup", "bleu": 0.8931539818068694, "rouge": 0.9564459930313588}, {"predict": "finds all history records for the given job and job", "true": "finds all history records for the given job", "bleu": 0.7860753021519787, "rouge": 0.9070631970260222}, {"predict": "checks if a xml character is well - formed", "true": "checks if a xml character is well - formed", "bleu": 1.0, "rouge": 1.0}, {"predict": "escapes a character if it has an escape sequence or is non - printable ascii", "true": "escapes a character if it has an escape sequence or is non - printable ascii", "bleu": 1.0, "rouge": 1.0}, {"predict": "if a landmark has been added to the set of the active landmarks , this function re - evaluates the estimated remaining travel time based on the new set of the new nodes", "true": "if a landmark has been added to the set of the active landmarks , this function re - evaluates the estimated remaining travel time based on the new set of active landmarks of the nodes contained in pending nodes", "bleu": 0.7749419128246785, "rouge": 0.8757290264692688}, {"predict": "returns a string representation of the internal i , i", "true": "describe the attribute eva lu at or", "bleu": 0.12605968092174913, "rouge": 0.12151394422310759}, {"predict": "draws a overflow indicator", "true": "draws indicator in case the expression text overflows on the y axis", "bleu": 0.0538140946637381, "rouge": 0.22932330827067668}, {"predict": "write a line of values to the file", "true": "write a line of values to the file with a timestamp", "bleu": 0.6872892787909722, "rouge": 0.818791946308725}, {"predict": "this method returns true if the byte stream contains a p em encoded item", "true": "this method returns true if the input stream contains a p em encoded item", "bleu": 0.8003203203844999, "rouge": 0.9285714285714285}, {"predict": "creates a new close listener", "true": "creates the new close listener", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "controls the shard routing of the request", "true": "controls the shard routing of the request", "bleu": 1.0, "rouge": 1.0}, {"predict": "receive data with a specific buffer size", "true": "receive data with a specific buffer size", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes an attribute at the given position ( 0 to num attributes ( ) ) from the given position", "true": "deletes an attribute at the given position ( 0 to num attributes ( ) - 1 )", "bleu": 0.7404008324993688, "rouge": 0.841766329346826}, {"predict": "adds the index characters from the given locale to the index", "true": "adds the index characters from the given locale to the index", "bleu": 1.0, "rouge": 1.0}, {"predict": "wrap the key store using a key", "true": "wrap a key", "bleu": 0.2626909894424158, "rouge": 0.646643109540636}, {"predict": "creates a new java class loader", "true": "this class was not meant to be constructed explicitly", "bleu": 0.1339801428338312, "rouge": 0.12869198312236285}, {"predict": "adds a separator to the log", "true": "add separator routines are not used in peers", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "determine if sd card exists", "true": "determine if sd card exists", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the class from a path", "true": "load a class from the rmi class loader corresponding to the given code base url path in the current execution context", "bleu": 0.028378490131586942, "rouge": 0.20198675496688742}, {"predict": "loads the raw modules of a database", "true": "loads the raw modules of a database", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the data for this segment to the stream in valid jpeg format", "true": "writes the data for this segment to the stream in valid jpeg format , directly from the data array", "bleu": 0.6303131865967199, "rouge": 0.7859266600594649}, {"predict": "rounds a double to the next nearest integer value in a probabilistic fashion ( e", "true": "rounds a double to the next nearest integer value in a probabilistic fashion ( e", "bleu": 1.0, "rouge": 1.0}, {"predict": "converts the executable element properties to typename properties", "true": "converts the executable element properties to typename properties", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses a register information from the node , register a register register", "true": "parses register information from the target information string", "bleu": 0.3026643726685863, "rouge": 0.5187074829931972}, {"predict": "creates the thread factory", "true": "creates a daemon thread with the specified name prefix", "bleu": 0.12241977696855179, "rouge": 0.28773584905660377}, {"predict": "tests the substitute in a random number as a decimal number", "true": "unit test for a cpu num message", "bleu": 0.11390778025531027, "rouge": 0.1157495256166983}, {"predict": "format a vector of numbers into a formatted string", "true": "format a vector of numbers into a formatted string", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a new column to the beginning of a column", "true": "this version of add column allows the user to override the default length associated with each column type", "bleu": 0.07747429431210744, "rouge": 0.33964365256124723}, {"predict": "schedules the given block", "true": "layout blocks", "bleu": 0.3021375397356768, "rouge": 0.0}, {"predict": "adds a transaction to the transaction", "true": "add a new server transaction to the set of existing transactions", "bleu": 0.18892891214792823, "rouge": 0.4468864468864468}, {"predict": "requests a successful call to get the delay in", "true": "da lays the current thread", "bleu": 0.14113991930789777, "rouge": 0.1506172839506173}, {"predict": "test split and join of properties ( using pipe )", "true": "test split and join of nested properties ( using pipe )", "bleu": 0.7358936681622166, "rouge": 0.9442724458204335}, {"predict": "test simple boolean map", "true": "let ' s also check that it is possible to do type conversions to allow use of non - string map keys", "bleu": 0.003991508135974129, "rouge": 0.06838565022421525}, {"predict": "returns true if", "true": "returns true if", "bleu": 1.0, "rouge": 1.0}, {"predict": "extract base 64 encoded byte array from byte array output stream", "true": "parses a byte array", "bleu": 0.14991106946711685, "rouge": 0.2911694510739857}, {"predict": "reset any bandwidth object", "true": "resets the bandwidth average for this instance of the bandwidth manager", "bleu": 0.06243769243378541, "rouge": 0.12298387096774194}, {"predict": "tests whether a security role is correctly merged into an empty descriptor", "true": "tests whether a single security role is correctly inserted into an empty descriptor", "bleu": 0.5337692335477128, "rouge": 0.8736979166666665}, {"predict": "decodes the full revision operation", "true": "decodes a full revision operation", "bleu": 0.537284965911771, "rouge": 0.8}, {"predict": "removes the first character data from the subtree", "true": "remove children from type character data from a node , this includes text , comment and c data section nodes", "bleu": 0.06659868297790404, "rouge": 0.19891304347826086}, {"predict": "un links interior node p with predecessor trail", "true": "un links interior node p with predecessor trail", "bleu": 1.0, "rouge": 1.0}, {"predict": "load one corpus text into the parallel corpus", "true": "streaming loader , which does not double peak memory like the loader that creates a suffix array from a parallel corpus", "bleu": 0.044657922628805316, "rouge": 0.1914225941422594}, {"predict": "mix of mix of g umbel distribution", "true": "friction mixing law", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "serialize a json object to a string", "true": "serialize the given java object into string according the given content - type ( only json is supported for now )", "bleu": 0.03161012526321221, "rouge": 0.19656283566058}, {"predict": "appends a flag that specifies how much of time , which means such as well , which means of time", "true": "compile a sequence sw $ z r , n ( $ reg ) sw $ z r , n + 4 ( $ reg ) sw $ z r , n + 8 ( $ reg )", "bleu": 0.031048872868124255, "rouge": 0.09989082969432314}, {"predict": "verifies that the passed as a native volume is created for the volume", "true": "determines if the v plex volume can be expanded by natively expanding the backend volumes", "bleu": 0.09739555402052819, "rouge": 0.2115606936416185}, {"predict": "update an gui if the in decoder definition", "true": "file gui from roster contents", "bleu": 0.16036590969929357, "rouge": 0.16052631578947368}, {"predict": "adjusted ize s a number", "true": "function which will return one if the argument is zero or a positive number , and zero if not", "bleu": 0.018373002712755784, "rouge": 0.1508034610630408}, {"predict": "this method will be called if the size is not present in the list", "true": "returns itself if it is equal to the supplied size , otherwise the supplied size", "bleu": 0.10831305487476968, "rouge": 0.2741573033707865}, {"predict": "checks if can be gzip", "true": "checks if the request supports gzip and is not a include request ( these cannot be g zipped )", "bleu": 0.02482560410974568, "rouge": 0.22620519159456118}, {"predict": "creates a new processor", "true": "constructs a replay processor with bounded or unbounded buffering", "bleu": 0.11392443929712959, "rouge": 0.28773584905660377}, {"predict": "show conversations list", "true": "by default displays the current conversations in the view , this method can be updated to modify the conversations list before it is shown , can be used to filter the list or augment it", "bleu": 1.648202348153387e-05, "rouge": 0.09138576779026215}, {"predict": "reads the next encoded byte from the encoded input stream", "true": "reads the next encoded byte from the encoded input stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "en queues a job to be run", "true": "en queue a job for this thread", "bleu": 0.2626909894424158, "rouge": 0.42857142857142855}, {"predict": "this test doesn ' t pass on ri", "true": "this test doesn ' t pass on ri", "bleu": 1.0, "rouge": 1.0}, {"predict": "test bit ( in t n ) of a positive number", "true": "test bit ( in t n ) of a positive number", "bleu": 1.0, "rouge": 1.0}, {"predict": "receive notification of the start of an element", "true": "receive notification of the start of an element", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the given purchase information to the database and returns the total number of times that the given product has been purchased", "true": "adds the given purchase information to the database and returns the total number of times that the given product has been purchased", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a string value using a font as utf - text field", "true": "draw a string using the current font and color in the x , y coordinates", "bleu": 0.12100325656200607, "rouge": 0.29047619047619044}, {"predict": "reads the sep c if i ed number of characters into the array", "true": "read the sep c if i ed number of characters into the array", "bleu": 0.9193227152249185, "rouge": 0.9230769230769234}, {"predict": "updates the cn once value", "true": "update the nonce parameters", "bleu": 0.2730120862709067, "rouge": 0.22676579925650556}, {"predict": "accept and process an instance event", "true": "accept and process an instance event", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines if the v pool has pools to have the requested pool", "true": "re calculate all virtual pools matching storage pools that have rp protection as creation of a protection system creates new relationships and constraints on the matching pools of an rp system", "bleu": 0.02536604434039144, "rouge": 0.1292372881355932}, {"predict": "calculate the fee for fee", "true": "calculates the trading fee a player has to pay when selling for a certain price", "bleu": 0.04393902429866315, "rouge": 0.27518796992481204}, {"predict": "locate the vertices and the code words area of a black blob using the start and stop patterns as locator s", "true": "locate the vertices and the code words area of a black blob using the start and stop patterns as locator s", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a search history line to the search history", "true": "adds current search pattern in the search history list", "bleu": 0.2907153684841096, "rouge": 0.5555555555555556}, {"predict": "method to trim the file list , and create a list of source files", "true": "walk the file list looking for name collisions", "bleu": 0.16451929399933107, "rouge": 0.28683385579937304}, {"predict": "concatenates the string representation of each items in this array , with the given string as a separator between each item", "true": "concatenates the string representation of each items in this array , with the given string as a separator between each item", "bleu": 1.0, "rouge": 1.0}, {"predict": "write 16 - bit value to output stream , ls b first", "true": "write 16 - bit value to output stream , ls b first", "bleu": 1.0, "rouge": 1.0}, {"predict": "specifies the order by clause", "true": "the fields of the named entity to order the result set by ; optionally add a \" as c \" for ascending or \" desc \" for descending note : each successive call to any of the order by (", "bleu": 0.00046335708914984806, "rouge": 0.11693290734824281}, {"predict": "create a stemmed string from one char string ( stemmed ) and one string ( original )", "true": "create a stemmed string from two strings", "bleu": 0.2646015952359329, "rouge": 0.4505169867060562}, {"predict": "creates a log stream based on the properties of the given log", "true": "merges all logs on each node based on time stamp", "bleu": 0.1367440667823257, "rouge": 0.18484848484848485}, {"predict": "pack cipher names of an array of cipher names into a string of cipher names", "true": "converts an array of ciphers into a single string", "bleu": 0.1892240568795935, "rouge": 0.5236051502145923}, {"predict": "creates a new file filter for the given extension and desc pri pti on", "true": "creates a new instance", "bleu": 0.16451929399933107, "rouge": 0.37044534412955465}, {"predict": "ensure the tuple array exists", "true": "ensure the tuple array exists", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the argument is a \" argument \"", "true": "given a string like \" - foo \" or \" - 5 \" or \" - <unk>", "bleu": 0.07444363397302332, "rouge": 0.21229698375870074}, {"predict": "removes children from the document", "true": "removes child elements from a specific type", "bleu": 0.20252884954471367, "rouge": 0.32360742705570295}, {"predict": "eventually sets to the given value", "true": "eventually sets to the given value", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the name is a valid save point", "true": "checks whether a save point is valid", "bleu": 0.2295748846661433, "rouge": 0.5115303983228512}, {"predict": "for the given columns , loads the key contained in a result set", "true": "use the supplied table editor to create columns for the supplied result set", "bleu": 0.17194656088289215, "rouge": 0.38461538461538464}, {"predict": "write a collection of strings to a file", "true": "write source code to file", "bleu": 0.19070828081828378, "rouge": 0.48157894736842105}, {"predict": "remove all elements from the list", "true": "remove all elements from the list", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the u u id validity", "true": "sets and returns a new u id validity for this folder", "bleu": 0.17867793336200125, "rouge": 0.33516483516483514}, {"predict": "pseudo moves all moves from a possibly point ( by local position )", "true": "generate and return a list of pseudo - legal moves", "bleu": 0.1135935489027116, "rouge": 0.1781021897810219}, {"predict": "writes an ogg page header to the given byte array", "true": "writes an ogg page header to the given byte array", "bleu": 1.0, "rouge": 1.0}, {"predict": "inserts any necessary separators and whitespace before a name", "true": "inserts any necessary separators and whitespace before a name", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates one buffer for the camera preview callback", "true": "creates one buffer for the camera preview callback", "bleu": 1.0, "rouge": 1.0}, {"predict": "produce a static site request", "true": "handle a fancy new - f angled static site request", "bleu": 0.19765609300943976, "rouge": 0.5030927835051546}, {"predict": "subscribe to a room", "true": "remove subscription to a room", "bleu": 0.5208154731870476, "rouge": 0.6535714285714286}, {"predict": "discharges an i energized item with the defined amount of energy", "true": "discharges an i energized item with the defined amount of energy", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns an array containing all of the elements in this de que , in proper sequence ( from first to last element )", "true": "returns an array containing all of the elements in this de que , in proper sequence ( from first to last element )", "bleu": 1.0, "rouge": 1.0}, {"predict": "add all of the specified elements to the selection", "true": "add all of the specified elements to the selection", "bleu": 1.0, "rouge": 1.0}, {"predict": "test if the dom implementation supports a specific \" feature \"", "true": "checks if a particular feature or mode is supported by the system", "bleu": 0.1307847403141535, "rouge": 0.25884016973125884}, {"predict": "backup storage for backup", "true": "get backup partitions for specified node id", "bleu": 0.1878296463217631, "rouge": 0.346590909090909}, {"predict": "inserts the string representation of the string argument into this string buffer", "true": "inserts the string into this string buffer", "bleu": 0.38677062763523445, "rouge": 0.7735507246376813}, {"predict": "load the image file url", "true": "just pass http url and then you have to call view ( image view )", "bleu": 0.040889869516541145, "rouge": 0.09172932330827067}, {"predict": "create a tree for deciding what keys can legally be typed", "true": "create a tree for deciding what keys can legally be typed", "bleu": 1.0, "rouge": 1.0}, {"predict": "builds a step in the matrix", "true": "build the pivot - transform - reverse matrix ptr", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "transform binary to hex", "true": "transform binary to hex", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new string resulting from replacing all occurrences of old char in this string with new char", "true": "copies this string replacing occurrences of the specified character with another character", "bleu": 0.12257617673006654, "rouge": 0.34580498866213155}, {"predict": "create a bidi bidi", "true": "create a bidi object representing the bidi information on a line of text within the paragraph represented by the current bidi", "bleu": 0.010086336525484466, "rouge": 0.2850467289719626}, {"predict": "returns whether the callers of the current transaction contains a package that matches the give authentication requirements", "true": "returns whether the callers of the current transaction contains a package that matches the give authentication requirements", "bleu": 1.0, "rouge": 1.0}, {"predict": "paints the background of an internal frame title pane", "true": "paints the background of an internal frame title pane", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a graph listener", "true": "add a graph listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "restart the current controller and installs a directory", "true": "find any pending patches under the given sdk root that require studio to be restarted , and if there are any , restart and install them", "bleu": 0.020100504915773375, "rouge": 0.1073943661971831}, {"predict": "recursive call using quickly - faster way", "true": "helper function for missing values in the labels and missing predictions ( i", "bleu": 0.06628576403773602, "rouge": 0.0}, {"predict": "return true if this product is a category", "true": "is product in category", "bleu": 0.19070828081828378, "rouge": 0.3546511627906977}, {"predict": "it creates a new instance of this panel", "true": "it creates a new instance of this panel", "bleu": 1.0, "rouge": 1.0}, {"predict": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "true": "if the normalized scale is equal to 1 , then the image is made to fit the screen", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method appends data to the remote server to a file", "true": "this method uploads a file to the remote server", "bleu": 0.4063798282013442, "rouge": 0.6110183639398998}, {"predict": "provide white list , entry in white list will not be shown in ui list", "true": "provide white list , entry in white list will not be shown in ui list", "bleu": 1.0, "rouge": 1.0}, {"predict": "scoped name is valid for this class", "true": "used to detect scoped attributes", "bleu": 0.18575057999133598, "rouge": 0.17183098591549298}, {"predict": "creates an input stream backed by the dex file", "true": "creates input object for amf 3 from byte buffer", "bleu": 0.15619699684601276, "rouge": 0.2222222222222222}, {"predict": "loads a properties file into a properties object", "true": "searching the specified configuration file and return a properties", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "we have an of message we didn ' t expect given the current state and we want to treat this as an error", "true": "we have an of message we didn ' t expect given the current state and we want to treat this as an error", "bleu": 1.0, "rouge": 1.0}, {"predict": "pretty printing accumulator function for boolean s", "true": "pretty printing accumulator function for boolean s", "bleu": 1.0, "rouge": 1.0}, {"predict": "renders the clause in textual views", "true": "renders the views on to the projected stream", "bleu": 0.2238400777155271, "rouge": 0.4178082191780822}, {"predict": "remove all database listeners", "true": "removes all database listeners added", "bleu": 0.5208154731870476, "rouge": 0.6535714285714286}, {"predict": "loads and validates audio map", "true": "loads and validates audio map", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a generic attribute to the class file", "true": "add a generic attribute to the field", "bleu": 0.7259795291154771, "rouge": 0.8097345132743362}, {"predict": "adds internal event to plain text", "true": "link <unk> r <unk> events to the corresponding fa <unk> event", "bleu": 0.10624253482403696, "rouge": 0.1117216117216117}, {"predict": "try to construct using new service loader initialized the given provider class loader", "true": "try to construct using new transformer factory no service loader method if available", "bleu": 0.3934995962231127, "rouge": 0.5384615384615383}, {"predict": "check that the given u u id matches the u u id", "true": "check unique id and generated hash code", "bleu": 0.11498759556447223, "rouge": 0.22101449275362317}, {"predict": "prepare the write lock", "true": "creates the output stream that elements will be written to", "bleu": 0.08017158404431235, "rouge": 0.13260869565217392}, {"predict": "a map of server ' s state info and load them for a server", "true": "monitoring logic used by background thread", "bleu": 0.07432998184513635, "rouge": 0.0}, {"predict": "writes this vector out to a stream", "true": "writes an instance of this class to a file", "bleu": 0.20873176328735715, "rouge": 0.48897795591182364}, {"predict": "convert the supplied value into an internal representation as packed long iv", "true": "convert the supplied value into an internal representation as packed long iv", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds the given header to the group", "true": "adds the supplied request header", "bleu": 0.2626909894424158, "rouge": 0.5154929577464789}, {"predict": "adds a child leaf to this container", "true": "adds a child leaf to this container", "bleu": 1.0, "rouge": 1.0}, {"predict": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "true": "we only rebuild the journal when it will halve the size of the journal and eliminate at least 2000 ops", "bleu": 1.0, "rouge": 1.0}, {"predict": "cumulative density function of the normal distribution", "true": "computes an approximation to normal cd f ( x )", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "removes a result from the list", "true": "removes one of the result buffers from the history", "bleu": 0.20034704329441452, "rouge": 0.5147679324894514}, {"predict": "adds the record to the table", "true": "adds a new feature type constraint entry", "bleu": 0.1869843520537038, "rouge": 0.1517412935323383}, {"predict": "mod when modulus is negative", "true": "mod when modulus is negative", "bleu": 1.0, "rouge": 1.0}, {"predict": "calculates double 2 d array 2 d + 1 ) 2 : n ! = inverse cd f 2", "true": "calculates the points for drawing the <unk> var i ogram", "bleu": 0.06439931429457924, "rouge": 0.07305389221556886}, {"predict": "creates a new d export private key dialog", "true": "creates a new d export private key openssl dialog", "bleu": 0.7846630356446556, "rouge": 0.931297709923664}, {"predict": "computes sum of two sql operators", "true": "sum sql expression for items that match query criteria", "bleu": 0.14827340167306757, "rouge": 0.2573839662447257}, {"predict": "snaps the given position to the given position when the current scroll was created , when the given position is end , and the screen method will be exceeded", "true": "smoothly snaps to a given position", "bleu": 0.062443859512347225, "rouge": 0.259298618490967}, {"predict": "calculates the offset of this point in the sample view", "true": "calculates the x - offset for drawing the shadow image relative to the source", "bleu": 0.1263574671511449, "rouge": 0.32360742705570295}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "runs the test file", "true": "write a bundle with an xml writer and verify the output is expected", "bleu": 0.037870374782798366, "rouge": 0.1073943661971831}, {"predict": "adds one days to the output", "true": "get the date x days from now", "bleu": 0.20693220168471366, "rouge": 0.1517412935323383}, {"predict": "creates a temporary file in the passed cache", "true": "create a temporary file in the cache directory on either internal or external storage , whichever is available and has more free space", "bleu": 0.09361915616973586, "rouge": 0.3560311284046693}, {"predict": "returns an enumeration describing the available options", "true": "returns an enumeration describing the available options", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes the entry object at the given index from the data set at the specified index", "true": "removes the entry object at the given x index from the data set at the specified index", "bleu": 0.8397085972233151, "rouge": 0.9644268774703558}, {"predict": "runs read a read , runs the specified mode , and then waits for the specified mode", "true": "run a single read test , writing and reading back input with the given compression mode", "bleu": 0.09880782578056979, "rouge": 0.36563436563436563}, {"predict": "closes given resource logging possible checked exception", "true": "closes given resource logging possible checked exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "identity - based version for use in it r", "true": "identity - based version for use in it r", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a raster with the same layout but using a different width and height , and with new zeroed data arrays", "true": "creates a raster with the same band layout but using a different width and height , and with new zeroed data arrays", "bleu": 0.8788691261950415, "rouge": 0.9726651480637813}, {"predict": "calculate matrix for fit center", "true": "calculate matrix for fit center", "bleu": 1.0, "rouge": 1.0}, {"predict": "scheduler a scheduler to a cluster with a free ports", "true": "util method to get the arguments to the her on scheduler", "bleu": 0.12623203108004888, "rouge": 0.09442724458204334}, {"predict": "add a so lr input document to this document", "true": "adds a document to be analyzed", "bleu": 0.19960198807747329, "rouge": 0.4149659863945578}, {"predict": "the implementation for the use key only present on the base key", "true": "executes the next phase of this key agreement with the given key that was received from one of the other parties involved in this key agreement", "bleu": 0.042582543247209274, "rouge": 0.24676375404530745}, {"predict": "add a curve to the shape", "true": "add a curve to the shape", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads the values from preferences and load bucket id", "true": "restore the auto mix buckets stored in shared preferences", "bleu": 0.15619699684601276, "rouge": 0.2222222222222222}, {"predict": "returns the next character", "true": "returns the next character", "bleu": 1.0, "rouge": 1.0}, {"predict": "accept app offer from offers list", "true": "accept app offer remove from app offers list update corresponding app usage", "bleu": 0.18693159143202892, "rouge": 0.6288659793814433}, {"predict": "verify that the given public key successfully handles and confirms the signature associated with this signer", "true": "verify that the given public key successfully handles and confirms the signature associated with this signer", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates activity scope graph using activity module plus additional modules provided by inheritance", "true": "generates activity scope graph using activity module plus additional modules provided by inheritance", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the request to the write lock", "true": "request the write lock", "bleu": 0.3655552228545123, "rouge": 0.7648902821316614}, {"predict": "reads a local date from the input stream", "true": "reads a date value from the input stream", "bleu": 0.5307712171072443, "rouge": 0.875}, {"predict": "removes the listener from the list of listeners", "true": "removes the listener from the collection of listeners who will be notified when the user changes the receiver ' s value", "bleu": 0.1300863238669636, "rouge": 0.4466527196652719}, {"predict": "equivalent to , but cheaper than writing integer", "true": "equivalent to , but cheaper than writing integer", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads an input stream and returns a string object", "true": "read an <unk> stream reader", "bleu": 0.15619699684601276, "rouge": 0.3012345679012346}, {"predict": "creates a list of type parameters from a list of type parameters", "true": "create a list of maps from the list of type parameters", "bleu": 0.39832871551569504, "rouge": 0.7011494252873562}, {"predict": "find free space on the * nix platform using the ' df ' command", "true": "find free space on the * nix platform using the ' df ' command", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads all data from stream and close it silently", "true": "reads all data from stream and close it silently", "bleu": 1.0, "rouge": 1.0}, {"predict": "see if within two moves of solution", "true": "see if within two moves of solution", "bleu": 1.0, "rouge": 1.0}, {"predict": "constructs a new corpus reader of a single view name", "true": "reads the specified sections from penn tree bank", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "processes ssl v 2 hello message", "true": "processes ssl v 2 hello message", "bleu": 1.0, "rouge": 1.0}, {"predict": "closes the write half of the stream", "true": "closes the write half of the stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "apply row change data to a data row", "true": "apply one or more row changes", "bleu": 0.17747405280050269, "rouge": 0.2932692307692307}, {"predict": "writes the contents of this cache header to the specified output stream", "true": "writes the contents of this cache header to the specified output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "the ' avg requests per second ' field will make everything look like it changed", "true": "the ' avg requests per second ' field will make everything look like it changed", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if this float value is infinitely large in magnitude", "true": "returns true if this double value is infinitely large in magnitude", "bleu": 0.7348889200874658, "rouge": 0.9090909090909091}, {"predict": "get the name of the in progress z node", "true": "get the name of the in progress z node", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a new value to the series", "true": "adds a new value to the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "receive stores on the z set as well as they are received in the memory", "true": "receive socket redundancy data", "bleu": 0.08225964699966554, "rouge": 0.11753371868978806}, {"predict": "output the doc type declaration", "true": "output the doc type declaration", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a stack store , and try to populate the stack", "true": "create and open the store", "bleu": 0.1354599427337814, "rouge": 0.2681318681318681}, {"predict": "are these two vectors x and y values are valid", "true": "check a vector", "bleu": 0.10600313379512592, "rouge": 0.0}, {"predict": "resolve relative url - s and fix a java", "true": "resolve relative url - s and fix a few java", "bleu": 0.8085785995823291, "rouge": 0.9384615384615386}, {"predict": "given the depth of depth - get child nodes of a given node , depth return the new depth", "true": "compute the depth of the graph", "bleu": 0.12673718536830808, "rouge": 0.3531114327062228}, {"predict": "determines the height of this view", "true": "determines the height of this view", "bleu": 1.0, "rouge": 1.0}, {"predict": "utility method for converting a search path string to an array of directory and jar file urls", "true": "convert a string containing a space - separated list of urls into a corresponding array of url objects , throwing a malformed url exception if any of the urls are invalid", "bleu": 0.04962012628689051, "rouge": 0.19792342634652824}, {"predict": "use this to add an use to the curve", "true": "separates the recipe into an input and output list", "bleu": 0.15619699684601276, "rouge": 0.1111111111111111}, {"predict": "fire a connection closed event", "true": "helper method to fire the connection closed event", "bleu": 0.2948682411907622, "rouge": 0.5907990314769976}, {"predict": "stores an in t ( volatile ) to the specified object", "true": "stores integer value with volatile semantic", "bleu": 0.12605968092174913, "rouge": 0.2484725050916497}, {"predict": "construct a strategy that parses a number field", "true": "construct a strategy that parses a number field", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a uri from server and sets the trailing server ' s path to the local host", "true": "returns the uri of a random server", "bleu": 0.09083627868206415, "rouge": 0.18020679468242246}, {"predict": "creates a new plot plot with the given plot values", "true": "initializes a new instance that is responsible for zooming and panning the axes with the specified names of the specified plot", "bleu": 0.07267966230959672, "rouge": 0.30318091451292245}, {"predict": "ensures there is enough space in the buffer for the given number of additional bytes", "true": "ensures there is enough space in the buffer for the given number of additional bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a column to the table", "true": "set the attributes of the column", "bleu": 0.24446151121745047, "rouge": 0.16666666666666666}, {"predict": "construct the point with dimension and dimension", "true": "constructs a new comparator on the given dimension", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "adds a new element to the xml node", "true": "helper method to add elements to the test data schema", "bleu": 0.1643685581109115, "rouge": 0.21785714285714283}, {"predict": "flush the internal buffer", "true": "flush the internal buffer", "bleu": 1.0, "rouge": 1.0}, {"predict": "add a character to the start of the queue ( will be the next character )", "true": "add a character to the start of the queue ( will be the next character retrieved )", "bleu": 0.8918923467418739, "rouge": 0.9644268774703558}, {"predict": "adds an instance of a class to the list of of instances", "true": "add an class name which property values must implement", "bleu": 0.11498759556447223, "rouge": 0.19551282051282048}, {"predict": "read the specified number of bytes into an array", "true": "read the specified number of bytes into an array", "bleu": 1.0, "rouge": 1.0}, {"predict": "check that the displayed components backed by the search window", "true": "this check contains a workaround for an issue in aem 6", "bleu": 0.11406351620367239, "rouge": 0.09442724458204334}, {"predict": "processes the given tag", "true": "parses and stores the test identifier ( class and test name )", "bleu": 0.04862652376060361, "rouge": 0.11466165413533834}, {"predict": "inserts a character at the specified offset of the character", "true": "inserts the character at the given offset", "bleu": 0.28997844147152074, "rouge": 0.6075697211155379}, {"predict": "adds the root to this element", "true": "add a root element to the model", "bleu": 0.23512037509993022, "rouge": 0.3034825870646766}, {"predict": "expands all ancestors of the given element or tree path so that the given element is expanded", "true": "expands all ancestors of the given element or tree path so that the given element becomes visible in this viewer ' s tree control , and then expands the subtree rooted at the given element to the given level", "bleu": 0.24074614262033087, "rouge": 0.5002733734281029}, {"predict": "appends a new cell to the current row containing the provided double value", "true": "appends a new cell to the current row containing the provided float value", "bleu": 0.855526185871245, "rouge": 0.9230769230769234}, {"predict": "instantiate s a new set collector", "true": "constructs a new svn change set collector used to collect incoming change sets", "bleu": 0.1138350749157144, "rouge": 0.39482200647249194}, {"predict": "ensure that we have a list of dimensions", "true": "ensure a max size for the image", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "check whether a sequence of char values", "true": "determines if the given sequence of char values is normalized", "bleu": 0.3367765041827165, "rouge": 0.45607476635514016}, {"predict": "for debugging , string", "true": "a string representation of this item , ( i", "bleu": 0.11392443929712959, "rouge": 0.14386792452830188}, {"predict": "un escapes a som string fragment replacing \"", "true": "un escapes a som string fragment replacing \" \\", "bleu": 0.8824969025845955, "rouge": 0.931297709923664}, {"predict": "save the entity into the cache", "true": "saves an entity asynchronously", "bleu": 0.22089591134157885, "rouge": 0.2074829931972789}, {"predict": "reads all the content from the given input stream and returns the copy of the specified input", "true": "pulls copy state off the wire", "bleu": 0.07994607499472013, "rouge": 0.19032761310452417}, {"predict": "inserts any necessary separators and whitespace before a name", "true": "inserts any necessary separators and whitespace before a name", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates redeem token for pay - to - address , and prepares the token for space", "true": "checks whether a token can be <unk> and then <unk> it i", "bleu": 0.08513012360883544, "rouge": 0.14663461538461536}, {"predict": "compare a color to an in t", "true": "lighten the given color by the factor", "bleu": 0.18575057999133598, "rouge": 0.14285714285714285}, {"predict": "convert condition for unsigned short", "true": "returns the database string of a given operand size", "bleu": 0.1031546451143688, "rouge": 0.0}, {"predict": "returns the name of the given class file name from the given class name", "true": "get the file name of a class", "bleu": 0.15310245441182443, "rouge": 0.4053156146179402}, {"predict": "write process variable for output variable", "true": "write a process variable as xml to an output stream", "bleu": 0.16959011078459055, "rouge": 0.47843137254901963}, {"predict": "adds new values to the series", "true": "adds new values to the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "parameter asserts that a struct namespace is set", "true": "parameter asserts that a qualifier namespace is set", "bleu": 0.5969491792019646, "rouge": 0.875}, {"predict": "formats the float array d with the specified number format", "true": "formats the float array d with the specified number format", "bleu": 1.0, "rouge": 1.0}, {"predict": "pack from string into array", "true": "pack from string into array", "bleu": 1.0, "rouge": 1.0}, {"predict": "remove a viewpoint in the list", "true": "remove a viewpoint from the list", "bleu": 0.488923022434901, "rouge": 0.8333333333333334}, {"predict": "remove all listeners that are notified of any changes in scroll state or position", "true": "remove all listeners that are notified of any changes in scroll state or position", "bleu": 1.0, "rouge": 1.0}, {"predict": "update in the new break point parser", "true": "updates the color of the input field depending on whether the entered formula string is valid or not", "bleu": 0.038589346254072475, "rouge": 0.07411907654921021}, {"predict": "if there were some view you don ' t want reside menu to intercept their touch event , it from the ignored views", "true": "remove a view from ignored views ;", "bleu": 0.07913247271422609, "rouge": 0.2950423216444981}, {"predict": "writes the contents of this cache header to the specified output stream", "true": "writes the contents of this cache header to the specified output stream", "bleu": 1.0, "rouge": 1.0}, {"predict": "ensures that the resource has been passed in this descriptor , if the descriptor has passed", "true": "utility method that check for valid resource", "bleu": 0.08513012360883544, "rouge": 0.1871165644171779}, {"predict": "returns the maximum number of entries that can be filled before rehashing", "true": "returns the maximum number of entries that can be filled before rehashing", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes all the existing values from the series", "true": "removes all the existing values from the series", "bleu": 1.0, "rouge": 1.0}, {"predict": "set the selection for the selected section , or removes selection if any", "true": "toggle selection state of an entire section", "bleu": 0.10571070857151538, "rouge": 0.21143847487001732}, {"predict": "copy file from output files ( e", "true": "simple combine r sox file 0 file 1", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "stop the instance", "true": "tell the instance scroller to stop scrolling", "bleu": 0.20029051217596075, "rouge": 0.3730886850152905}, {"predict": "don ' t want to create the next auto - recorded steps because the colour is built", "true": "layout time has changed to a new minute", "bleu": 0.07223943354597204, "rouge": 0.08555399719495091}, {"predict": "in pseudo 8 , see for negative input", "true": "simplified version of execute ( data in 1 , double in 2 ) without exception handling and casts", "bleu": 0.050847167445562676, "rouge": 0.14386792452830188}, {"predict": "create a text response with known length", "true": "create a text response with known length", "bleu": 1.0, "rouge": 1.0}, {"predict": "get the next xml event ( at the top level )", "true": "check the next xml event without reading it from the stream", "bleu": 0.33180774028439425, "rouge": 0.45454545454545453}, {"predict": "replace the end point with an end of a url", "true": "replace the url end point ( schema + host + port ) with the given end point", "bleu": 0.11651058361579869, "rouge": 0.42459396751740147}, {"predict": "computes the length of a vector", "true": "computes the length of a vector", "bleu": 1.0, "rouge": 1.0}, {"predict": "not to be zi er and pieces of this object , using the given angle", "true": "make the path to show", "bleu": 0.09103526405546068, "rouge": 0.10990990990990988}, {"predict": "this method uses the trust manager to trust the trust manager", "true": "set the default x 509 trust manager to an instance of a fake class that trust all certificates , even the self - signed ones", "bleu": 0.06829199202264531, "rouge": 0.31148936170212765}, {"predict": "adds a new member", "true": "adds a new member", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string object representing this double ' s value", "true": "returns a string representation of this float object", "bleu": 0.25965358893403384, "rouge": 0.4535315985130111}, {"predict": "returns a list of strings with whitespace character values", "true": "adds leading and trailing whitespace characters to all members in this list", "bleu": 0.11192003885776355, "rouge": 0.0928462709284627}, {"predict": "computes a unique widget name for a given widget", "true": "computes the fully qualified name for the widget - derived type at the given node", "bleu": 0.11341174240707225, "rouge": 0.3189542483660131}, {"predict": "writes the second atom data", "true": "process an ft y p atom to determine whether the media is <unk>", "bleu": 0.061000517228105004, "rouge": 0.10286677908937607}, {"predict": "extracts a map of name / value pairs from the given string", "true": "extracts a map of name / value pairs from the given string", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "deletes an entry and assert the response status code", "true": "issue an http delete and assert the response status code", "bleu": 0.5911602603314157, "rouge": 0.7299145299145299}, {"predict": "constructs sum of all the attributes from the bounds to do another scale", "true": "compute running sum of density values and weights", "bleu": 0.12571192676522522, "rouge": 0.19902120717781402}, {"predict": "returns a copy of the tuple values ( updates the n - best list ( as the new n )", "true": "returns a copy of the probability table", "bleu": 0.22374677077485589, "rouge": 0.40558510638297873}, {"predict": "creates a new configuration object from the sub configuration", "true": "return a sub configuration from this instance that has the keys equal to either prefix", "bleu": 0.11341174240707225, "rouge": 0.3189542483660131}, {"predict": "converts a set of configuration names to the display name", "true": "maps service internal names to displayable ( localized ) names via their resource names", "bleu": 0.1112086898712083, "rouge": 0.16180371352785147}, {"predict": "create a new in t column", "true": "create a new in t column", "bleu": 1.0, "rouge": 1.0}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of the object", "true": "returns a string representation of the object", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the current work has been canceled or if there was no work in progress on this image view", "true": "returns true if the current work has been canceled or if there was no work in progress on this image view", "bleu": 1.0, "rouge": 1.0}, {"predict": "queue a bitmap to queue on top of a native card", "true": "temporarily store a bitmap", "bleu": 0.14991106946711685, "rouge": 0.2911694510739857}, {"predict": "analyze the location path and return 32 bits that give information about the location path as a whole", "true": "analyze the location path and return 32 bits that give information about the location path as a whole", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a listener to the set of listeners", "true": "adds a new after start listener for post - startup cleanup", "bleu": 0.15587146574232644, "rouge": 0.3070469798657718}, {"predict": "adds a marker to this log with the specified name", "true": "adds a marker to this log with the specified name", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates a list of acceptable preview sizes", "true": "generates a list of acceptable preview sizes", "bleu": 1.0, "rouge": 1.0}, {"predict": "attempts to read more data", "true": "attempts to read more data", "bleu": 1.0, "rouge": 1.0}, {"predict": "instantiate s a new relation notification", "true": "creates a notification for either a relation creation ( relation support object created internally in the relation service , or an mbe an added as a relation ) or for a relation removal from the relation service", "bleu": 0.0014982709296198647, "rouge": 0.08232118758434548}, {"predict": "below method will be used to add row to store", "true": "below method will be used to add row to store", "bleu": 1.0, "rouge": 1.0}, {"predict": "checks if the given domain is in the local host or not", "true": "is true if the host name matches exactly the specified host name , or if there is no domain name part in the host name , but the unqualified host name matches", "bleu": 0.03761728813526929, "rouge": 0.25206611570247933}, {"predict": "returns a entropy in a data , as an entropy of a given data , as an in a data array", "true": "helper function to compute entropy from z / w values", "bleu": 0.05809665204409193, "rouge": 0.06892655367231638}, {"predict": "write the distribution to the writer", "true": "write the distribution for * distribution model", "bleu": 0.34801709319446883, "rouge": 0.45522388059701485}, {"predict": "save the working instances to a file in a format", "true": "queries the user for a file to save instances as , then saves the instances in a background process", "bleu": 0.09824141563703365, "rouge": 0.3265524625267666}, {"predict": "calculate the color selected by the pointer on the bar", "true": "calculate the color selected by the pointer on the bar", "bleu": 1.0, "rouge": 1.0}, {"predict": "reads characters into a portion of an array", "true": "reads characters into a portion of an array", "bleu": 1.0, "rouge": 1.0}, {"predict": "adjust a manifest , which can be repeated or repeated lines", "true": "adjusts indent of the current block", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "append the specified field to this clause", "true": "adds the text for an initialization of a variable from a field to the string builder", "bleu": 0.0726217243534906, "rouge": 0.2436750998668442}, {"predict": "constructs a new dialogue system that is an empty system", "true": "constructs a forward <unk> for the dialogue system", "bleu": 0.2086130724305753, "rouge": 0.4535315985130111}, {"predict": "add a button to a button", "true": "adds a pre configured j button to the specified container using the specified alignment constraint", "bleu": 0.06970452184190923, "rouge": 0.26521739130434785}, {"predict": "returns true if the given attribute value is in the attributes of the tag", "true": "searches the attribute set for a tag , both of which are passed in as a parameter", "bleu": 0.09389419352536649, "rouge": 0.19022869022869024}, {"predict": "returns a string representation of the business object data key", "true": "returns a string representation of the business object data key", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns true if the given if d is a valid if d", "true": "returns true if the given if d is a valid if d", "bleu": 1.0, "rouge": 1.0}, {"predict": "create the system requirements of the system", "true": "get talk incoming / outgoing info from the json file and save in cache", "bleu": 0.06833381956448398, "rouge": 0.08983799705449189}, {"predict": "gets the first enclosing call from the stream , invoking the non existing call", "true": "returns enclosing method call of a given context ' s place", "bleu": 0.09782375748961449, "rouge": 0.16353887399463804}, {"predict": "generates an iso image of the following file", "true": "generate ov fen v iso image which will be then saved to ov fen v partition", "bleu": 0.07764220917386241, "rouge": 0.15721649484536082}, {"predict": "creates a text event from a sql stream", "true": "creates an <unk> event and persists to the database", "bleu": 0.15662030188557857, "rouge": 0.232824427480916}, {"predict": "creates a new word and initializes the specified byte provider", "true": "instantiate s a new rational", "bleu": 0.16590387014219712, "rouge": 0.2837209302325582}, {"predict": "remove notification that the notification no notification is in the notification", "true": "removes all the timer notifications corresponding to the specified type from the list of notifications", "bleu": 0.08762962180865386, "rouge": 0.14969325153374236}, {"predict": "treat the same as parent ' s are equal and u id", "true": "propagate variables to child via a relation atom ( atom variables are bound )", "bleu": 0.0879520090657992, "rouge": 0.07587064676616916}, {"predict": "add a u u id node to the type", "true": "adds u u id value to given node as u u id most and u u id least tags", "bleu": 0.09570146075296027, "rouge": 0.2684268426842684}, {"predict": "removes wheel changing listener", "true": "removes wheel changing listener", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets the raw byte offset from the start of an object ' s memory to the memory used to store the indicated instance field", "true": "gets the raw byte offset from the start of an object ' s memory to the memory used to store the indicated instance field", "bleu": 1.0, "rouge": 1.0}, {"predict": "determines the number of consecutive characters that are en cod able using numeric compaction", "true": "determines the number of consecutive characters that are en cod able using numeric compaction", "bleu": 1.0, "rouge": 1.0}, {"predict": "generates the xml representation of the object ( without xml headers or enclosing p list - tags )", "true": "generates the xml representation of the object ( without xml headers or enclosing p list - tags )", "bleu": 1.0, "rouge": 1.0}, {"predict": "when the window closes , stop any sequences running", "true": "when the window closes , stop any sequences running", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a new instance which has the additional source to be merged together with the current array of sources", "true": "returns a new instance which has the additional first source to be concatenated together with the current array of sources", "bleu": 0.724386543179998, "rouge": 0.9188284518828452}, {"predict": "shut down the web server", "true": "closes the server socket and all client sockets", "bleu": 0.1658165975077607, "rouge": 0.2953995157384988}, {"predict": "check whether local id is local id", "true": "returns true if local id has the right basic format for a local id", "bleu": 0.1130839610732672, "rouge": 0.35935198821796754}, {"predict": "bind the server to the server", "true": "creates the server socket", "bleu": 0.2907153684841096, "rouge": 0.4149659863945578}, {"predict": "checks for interrupt , returning throw ie if interrupted before signalled , re interrupt if after signalled , or 0 if not interrupted", "true": "checks for interrupt , returning throw ie if interrupted before signalled , re interrupt if after signalled , or 0 if not interrupted", "bleu": 1.0, "rouge": 1.0}, {"predict": "resets the list of output buffer and clears out the visual state", "true": "reset both output builders", "bleu": 0.10390302174233558, "rouge": 0.13738738738738737}, {"predict": "this method is used to convert the byte buffer to an xml file , or data type", "true": "read this segment from a byte buffer using the given dictionary for lookups", "bleu": 0.10802314890908067, "rouge": 0.20492721164613661}, {"predict": "writes carriers and their plans into a xml - file", "true": "writes carriers and their plans into a xml - file", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes a listener from the system", "true": "un - registers a listener to the system", "bleu": 0.2619317629190374, "rouge": 0.5570776255707762}, {"predict": "test that a manifest with an activity with a launcher intent reports an error", "true": "test that a manifest with an activity with a launcher intent has no warnings", "bleu": 0.7760114635728618, "rouge": 0.7857142857142857}, {"predict": "appends message if the given name is similar to the candidate", "true": "appends message if the given name is similar to the candidate", "bleu": 1.0, "rouge": 1.0}, {"predict": "write the header to the file", "true": "this is called by superclass when attempt to write data from file", "bleu": 0.09663861439684919, "rouge": 0.20962199312714777}, {"predict": "returns the vendor vendor for the jvm", "true": "returns the vendor for the java version used to generate this build", "bleu": 0.235517380711658, "rouge": 0.5024711696869852}, {"predict": "creates an instance of a voice result", "true": "creates an instance of a voice result", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the set of nodes of the given tab", "true": "forms tree of the nodes linked from this node", "bleu": 0.19960198807747329, "rouge": 0.2222222222222222}, {"predict": "add a category node to the tree", "true": "this recursive method is a hack : directory items flattens the directory structure , but it provides useful functionality , so this method will reconstruct the directory structure for the j tree", "bleu": 0.006210634283218926, "rouge": 0.13790504898266767}, {"predict": "adds the specified listener to the list of listeners that will be notified of drawer events", "true": "adds the specified listener to the list of listeners that will be notified of drawer events", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method starts an activity", "true": "method used to enter note edition mode", "bleu": 0.1830054742374001, "rouge": 0.16180371352785147}, {"predict": "adds the entry at the given position in the map", "true": "adds an entry to the source map ( entry must be added in order )", "bleu": 0.10062578380622589, "rouge": 0.30886075949367087}, {"predict": "turn the hide action bar", "true": "onclick handler - un hide action bar", "bleu": 0.3406115671352173, "rouge": 0.48541114058355433}, {"predict": "formats time for a long - separated time , y constraints with the definitions for the job , and sent the resulting line", "true": "formats a time delta in human readable format", "bleu": 0.06293173924458136, "rouge": 0.21205098493626884}, {"predict": "blocks the device for sending / machine", "true": "the main execution loop which should be executed in its own thread", "bleu": 0.0909326471926252, "rouge": 0.10049423393739704}, {"predict": "used to check whether there is a specialized handler for a given intent", "true": "used to check whether there is a specialized handler for a given intent", "bleu": 1.0, "rouge": 1.0}, {"predict": "set bounds for the right text view including clip padding", "true": "set bounds for the right text view including clip padding", "bleu": 1.0, "rouge": 1.0}, {"predict": "merge this sketch with the given coefficients", "true": "takes a probability distribution and reduces higher - order terms by contributions <unk> from combinations of lower order terms", "bleu": 0.028129878312564863, "rouge": 0.0}, {"predict": "remove / collapse multiple newline characters", "true": "remove / collapse multiple newline characters", "bleu": 1.0, "rouge": 1.0}, {"predict": "read object is called to restore the state of the exec permission from a stream", "true": "read object is called to restore the state of the exec option permission from a stream", "bleu": 0.828578563340278, "rouge": 0.9621451104100947}, {"predict": "returns the total of the values in one row of the supplied data table", "true": "returns the total of the values in one column of the supplied data table by taking only the row numbers in the array into account", "bleu": 0.37112761535796757, "rouge": 0.6344}, {"predict": "opens an analysis of the given file", "true": "opens the analysis", "bleu": 0.22089591134157885, "rouge": 0.43109540636042404}, {"predict": "bean context membership listener method", "true": "method for bean context membership interface", "bleu": 0.43989172475842214, "rouge": 0.5366568914956013}, {"predict": "performs some processing on the given item", "true": "performs some processing on the given item", "bleu": 1.0, "rouge": 1.0}, {"predict": "removes instances from containers during scaling down", "true": "removes instances from containers during scaling down", "bleu": 1.0, "rouge": 1.0}, {"predict": "draws a normal message", "true": "draws a message which is sent between two different lifelines", "bleu": 0.11337974147240094, "rouge": 0.3978260869565217}, {"predict": "kills the loco net address field with the loco net id value", "true": "kills consist using lead loco address", "bleu": 0.1235622127262679, "rouge": 0.3546511627906977}, {"predict": "start a listening listening on the listening / button", "true": "listen on the default address", "bleu": 0.18575057999133596, "rouge": 0.3012345679012346}, {"predict": "returns best guess type instance of the given type , suitable for type", "true": "parses a sum of flags as numerical values ( bit mask ) and translates it to set of e num values", "bleu": 0.05162238035793421, "rouge": 0.05642923219241442}, {"predict": "defines a new package using the information extracted from the specified manifest", "true": "defines a new package using the information extracted from the specified manifest", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses an entity input stream", "true": "parse the xml document content using specified handlers and an input source", "bleu": 0.07450619999160439, "rouge": 0.2190305206463196}, {"predict": "verifies the signature bytes", "true": "verifies the signature bytes", "bleu": 1.0, "rouge": 1.0}, {"predict": "adds a match string to the list of strings", "true": "add string to see if it matches in the query", "bleu": 0.17861170664603615, "rouge": 0.31282051282051276}, {"predict": "closes the cache and deletes all of its stored values", "true": "closes the cache and deletes all of its stored values", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns the time ago that the amount of milliseconds", "true": "get time ago that milliseconds date occurred", "bleu": 0.2777619034011791, "rouge": 0.5115303983228512}, {"predict": "converts hex string to byte array", "true": "converts a string with an even number of hexadecimal characters to a byte array", "bleu": 0.09113100941873914, "rouge": 0.4663608562691131}, {"predict": "stops list and releases rest job", "true": "called when we want to remove a job status object that we ' ve finished executing", "bleu": 0.041721848418993325, "rouge": 0.0840220385674931}, {"predict": "returns the polar coefficient", "true": "returns the coefficient of variance", "bleu": 0.39573418216703893, "rouge": 0.6535714285714286}, {"predict": "transfers node , if necessary , to sync queue after a cancelled wait", "true": "transfers node , if necessary , to sync queue after a cancelled wait", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a string representation of this predictor term", "true": "prints out a representation of the term", "bleu": 0.239802967618271, "rouge": 0.5398230088495575}, {"predict": "creates a new skeleton ( iterator ) instance", "true": "creates an instance , loads requirements file", "bleu": 0.17747405280050269, "rouge": 0.26991150442477874}, {"predict": "creates an attribute schema i mpl for the given attribute ( if not one )", "true": "this is called when the service is added for the first time and it will change the default install value of an attribute", "bleu": 0.07985983961609196, "rouge": 0.1521197007481297}, {"predict": "converts an android class identifier to an android - typed name", "true": "convert a canonical java class name to dal vi k flavor", "bleu": 0.1354599427337814, "rouge": 0.18181818181818182}, {"predict": "emit a method that ensures a collection is initialized", "true": "emit a method that ensures a collection is initialized", "bleu": 1.0, "rouge": 1.0}, {"predict": "un registers client membership from the proxy server", "true": "un registers a client to be monitored", "bleu": 0.22679164443904004, "rouge": 0.4048672566371681}, {"predict": "returns a double value based on the given resource", "true": "this method handles double quotes", "bleu": 0.14113991930789777, "rouge": 0.1506172839506173}, {"predict": "allocate a new container to be ignored", "true": "allocate a new container of a given capacity", "bleu": 0.44815260192961937, "rouge": 0.5269978401727862}, {"predict": "check if uri represents local resource", "true": "check if uri represents local resource", "bleu": 1.0, "rouge": 1.0}, {"predict": "check if mines h after is present", "true": "check if mines h after is present", "bleu": 1.0, "rouge": 1.0}, {"predict": "waits for a path to be run", "true": "helper to synchronously wait until we can get a path for a given o bb file", "bleu": 0.08498002895756986, "rouge": 0.16245006657789615}, {"predict": "volume is not a zone level resource", "true": "block consistency group is not a zone level resource", "bleu": 0.631914561891573, "rouge": 0.7334669338677354}, {"predict": "validate a message with a given name", "true": "protocol safety checks for the server returned message", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "close databases ( and system resources )", "true": "closes target and source databases", "bleu": 0.20556680845025982, "rouge": 0.17183098591549298}, {"predict": "update the md 5 digest of an array", "true": "cal cola il md 5 del mess a gg io , usan do la crypto api", "bleu": 0.07764220917386241, "rouge": 0.15721649484536082}, {"predict": "runs a thrift thrift job that represents a thrift stream", "true": "runs the job to s can the meta store for directory locations", "bleu": 0.11421946507590645, "rouge": 0.1788856304985337}, {"predict": "helper method for over scrolling that encapsulates all of the necessary function", "true": "helper method for over scrolling that encapsulates all of the necessary function", "bleu": 1.0, "rouge": 1.0}, {"predict": "delete the circle from the parent state", "true": "deletes sub people containers in this people container", "bleu": 0.13540372457315733, "rouge": 0.0}, {"predict": "test of find recent s so that u ids in the list of recent messages", "true": "test of find recent message u ids in mailbox method , of class h base message mapper", "bleu": 0.27599063668991264, "rouge": 0.4944275582573455}, {"predict": "queue an \" event \" to be run on the gl rendering thread", "true": "queue an \" event \" to be run on the gl rendering thread", "bleu": 1.0, "rouge": 1.0}, {"predict": "add an error message to the error", "true": "return list of error messages found while parsing last template", "bleu": 0.12100518276540287, "rouge": 0.11401869158878504}, {"predict": "ensure that the buffer has at least capacity to hold the target size", "true": "ensure that the buffer has at least capacity to hold the target size", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method writes a new value into the cache", "true": "performs the best effort of updating z k node { base path } / { key } to the provided value", "bleu": 0.04117308135088016, "rouge": 0.06218144750254842}, {"predict": "timing target implementation : calculate and set the current car position based on the animation fraction", "true": "timing target implementation : calculate and set the current car position based on the animation fraction", "bleu": 1.0, "rouge": 1.0}, {"predict": "process the source tree to the output result", "true": "process the source tree to the output result", "bleu": 1.0, "rouge": 1.0}, {"predict": "processes a \" query \" using a user constructed so lr query request , and closes the request at the end", "true": "processes a \" query \" using a user constructed so lr query request , and closes the request at the end", "bleu": 1.0, "rouge": 1.0}, {"predict": "writes the header for link statistics", "true": "compare link attributes", "bleu": 0.22089591134157885, "rouge": 0.2364341085271318}, {"predict": "generate a unique id suitable for the default language of which happens as its unique id", "true": "generate a unique id - that is friendly for a url or file system", "bleu": 0.2240750868020436, "rouge": 0.3373893805309734}, {"predict": "removes the provider at the specified 1 - based position", "true": "removes the provider at the specified 1 - based position", "bleu": 1.0, "rouge": 1.0}, {"predict": "parses an xml element and returns an object", "true": "parses a ( non - top ) xml element", "bleu": 0.20014292374951972, "rouge": 0.34923664122137404}, {"predict": "formats amount of money like a ' until ' may be less than or greater than or greater than or greater than or greater than or greater than or greater", "true": "formats a given monetary value in a default format ( 2 decimals , padded left to 10 characters )", "bleu": 0.044644767873512764, "rouge": 0.08507670850767085}, {"predict": "delete an instance of the entry class , and remove the class from entry classes if this is the last such instance", "true": "delete an instance of the entry class , and remove the class from entry classes if this is the last such instance", "bleu": 1.0, "rouge": 1.0}, {"predict": "loads the settings and stores them in a properties map", "true": "loads the settings and stores them in a properties map", "bleu": 1.0, "rouge": 1.0}, {"predict": "logs a warning to the warning", "true": "logs a warning message using the logger of this interpreter", "bleu": 0.2231931376573339, "rouge": 0.47843137254901963}, {"predict": "reads an input stream into a string ' s does not contain only the same as a string", "true": "reads an input stream into a single string result", "bleu": 0.3187271473320672, "rouge": 0.5516795865633075}, {"predict": "construct an array vector with preset values", "true": "construct a vector with preset values", "bleu": 0.5410822690539396, "rouge": 0.7800511508951408}, {"predict": "un registers a transaction service listener", "true": "remove a transaction service listener", "bleu": 0.6147881529512643, "rouge": 0.7393939393939394}, {"predict": "used to communicate a progress update between a plugin tool and the main white box user interface", "true": "used to communicate a progress update between a plugin tool and the main white box user interface", "bleu": 1.0, "rouge": 1.0}, {"predict": "pushes a new type on to the output frame stack", "true": "pushes a new type on to the output frame stack", "bleu": 1.0, "rouge": 1.0}, {"predict": "this method performs the pro xie d input by reading", "true": "this methods sorts the vertices in level according to their <unk> s in bc , using insertion sort", "bleu": 0.06268497150209275, "rouge": 0.1358574610244989}, {"predict": "test that the taxonomy is generated for two model", "true": "tests whether model classes can identified correctly as consistent", "bleu": 0.14113991930789777, "rouge": 0.1111111111111111}, {"predict": "called from within an object that is called from within the bean context", "true": "look at the object received in a map handler status message and connect to it if necessary", "bleu": 0.07771232681365989, "rouge": 0.06510138740661686}, {"predict": "removes all layers from the status", "true": "removes all layers from the map", "bleu": 0.8091067115702212, "rouge": 0.8333333333333334}, {"predict": "returns the number of productions contained in this rule", "true": "returns the number of productions contained in this rule", "bleu": 1.0, "rouge": 1.0}, {"predict": "asynchronously create zookeeper path recursively and optimistically", "true": "asynchronously create zookeeper path recursively and optimistically", "bleu": 1.0, "rouge": 1.0}, {"predict": "write this object to a safe serialization format", "true": "write this object to a stream", "bleu": 0.5873949094699213, "rouge": 0.7331730769230769}, {"predict": "check for net amount", "true": "is net amount equal ?", "bleu": 0.36827215283744186, "rouge": 0.43571428571428567}, {"predict": "this method was generated by my bat is generator", "true": "this method was generated by my bat is generator", "bleu": 1.0, "rouge": 1.0}, {"predict": "for given object name , look for field types and field", "true": "creates an attribute which reads values from the field indicated using reflection", "bleu": 0.10400927574124633, "rouge": 0.08628005657708629}, {"predict": "process the host event to host host", "true": "processes a log event", "bleu": 0.18575057999133598, "rouge": 0.19122257053291536}, {"predict": "removes membership listener , if any", "true": "remove listener from the list to receive notification when a pro <unk> is added or removed", "bleu": 0.041721848418993325, "rouge": 0.0840220385674931}, {"predict": "adds an email to the given uri", "true": "add an sms to the given uri with thread id specified", "bleu": 0.3055589628318379, "rouge": 0.5341506129597198}, {"predict": "updates the current frame at the current frame", "true": "present the final image on the screen / view port", "bleu": 0.13821693129588736, "rouge": 0.21785714285714283}, {"predict": "add a calendar to the next calendar", "true": "increment a calendar by one day", "bleu": 0.24446151121745047, "rouge": 0.31202046035805625}, {"predict": "binds in the notebook holder", "true": "push the given angular variable to the target interpreter angular registry given a not <unk> and a paragraph id", "bleu": 0.01660188206357524, "rouge": 0.0754017305315204}, {"predict": "remove all elements from the list", "true": "removes from the given list the elements at the given indexes", "bleu": 0.1435549295013305, "rouge": 0.33516483516483514}, {"predict": "creates the new project tree", "true": "creates a new project tree component", "bleu": 0.43989172475842214, "rouge": 0.7155425219941348}, {"predict": "determine whether the object is an object", "true": "determine if the expression is an object", "bleu": 0.38260294162784475, "rouge": 0.7142857142857143}, {"predict": "use interpol at or to get t", "true": "use interpol at or to get t", "bleu": 1.0, "rouge": 1.0}, {"predict": "displays one request until the connection has been joined in the / mods list , and removes them if the connection is still starts them", "true": "if enabled in the settings , requests / mods for one currently joined channel ( and only one ) , ignoring the ones it was already requested for", "bleu": 0.08685604274423767, "rouge": 0.22412737293325172}, {"predict": "calculate the asset of depreciation over m", "true": "build depreciation ( a depreciation exp ) entries", "bleu": 0.16102307266026747, "rouge": 0.13174946004319654}, {"predict": "checks whether the specified object is present in this step list", "true": "iterates over all values and returns true if one value matches", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "rename the database row in the database", "true": "updates the filename field to the new value", "bleu": 0.17820132316770915, "rouge": 0.2634989200863931}, {"predict": "check if there is still nodes to read at the end of the stream", "true": "checks if another objects is available by attempting to read another byte from the stream", "bleu": 0.14814869013357976, "rouge": 0.41123595505617977}, {"predict": "handle error occurred in the formatter used by this formatter", "true": "non - zero exit status when any violation messages have severity", "bleu": 0.0959156018869021, "rouge": 0.0}, {"predict": "remove the specified sensor from this sensor selection model", "true": "remove the specified sensor from this sensor selection model", "bleu": 1.0, "rouge": 1.0}, {"predict": "prints all blocks for a way", "true": "prints a way entity", "bleu": 0.31239399369202553, "rouge": 0.6224489795918368}, {"predict": "returns a string representation of the data row", "true": "returns a string representation of the data row", "bleu": 1.0, "rouge": 1.0}, {"predict": "return the path associated with an \" managed \" , \" - objects \" in the tree", "true": "walks up the tree until a root object is found", "bleu": 0.09507244120026236, "rouge": 0.15541401273885352}, {"predict": "returns true if there ' s another proxy to try", "true": "returns true if there ' s another proxy to try", "bleu": 1.0, "rouge": 1.0}, {"predict": "event on exit ( on ' button )", "true": "encapsulate logic for determining the case where no object ( neuron node , syn pas e node , etc ) was clicked on at the beginning of this drag sequence", "bleu": 0.012191572507121056, "rouge": 0.0953125}, {"predict": "return a hash code value for this object", "true": "this operation is not supported because sets are mutable", "bleu": 0.1415224185897875, "rouge": 0.116412213740458}, {"predict": "set of setup mappings for a given set of measurement mappings", "true": "map measurement to a defined measurement name , where the key is the measurement name and the value is the re q ex the measurement should be mapped by", "bleu": 0.024542144331975803, "rouge": 0.09249431387414707}, {"predict": "given the location of the ' middle snake ' , split the diff in two parts and re curse", "true": "given the location of the ' middle snake ' , split the diff in two parts and re curse", "bleu": 1.0, "rouge": 1.0}, {"predict": "validate credit card number is valid", "true": "validate credit card number", "bleu": 0.6147881529512643, "rouge": 0.8299319727891156}, {"predict": "fills the reader with a given file with the given visitor", "true": "extract the contents of a zip file to a directory", "bleu": 0.1354599427337814, "rouge": 0.28818897637795277}, {"predict": "create a new configuration object", "true": "creates a new config within the config directory , using the filename provided", "bleu": 0.07254224910650854, "rouge": 0.20573355817875214}, {"predict": "creates new form goto line dialog", "true": "creates new form goto line dialog", "bleu": 1.0, "rouge": 1.0}, {"predict": "attempts to prepare the request for a retry", "true": "attempts to prepare the request for a retry", "bleu": 1.0, "rouge": 1.0}, {"predict": "sets up the y - axis labels", "true": "sets up the y - axis labels", "bleu": 1.0, "rouge": 1.0}, {"predict": "forges and sends the tear down request", "true": "forges and sends the tear down request", "bleu": 1.0, "rouge": 1.0}, {"predict": "if this is the first time calling this method , the buffer will be checked to make sure it starts with so i marker ( 0 xff d 8 )", "true": "if this is the first time calling this method , the buffer will be checked to make sure it starts with so i marker ( 0 xff d 8 )", "bleu": 1.0, "rouge": 1.0}, {"predict": "test deploying a simple ear", "true": "test deploying a simple ear", "bleu": 1.0, "rouge": 1.0}, {"predict": "compares this attribute to the specified object", "true": "equals method to be consistent with comparable", "bleu": 0.18575057999133598, "rouge": 0.14285714285714285}, {"predict": "notify the wi fi wi fi state to notify the new wi fi", "true": "send a notification via the mw if i monitor when the wi fi state changes", "bleu": 0.20061216213411467, "rouge": 0.2820809248554913}, {"predict": "check whether a key value exists in the post", "true": "checks whether the value exists in an array list of certain key", "bleu": 0.2164910073203448, "rouge": 0.3713850837138508}, {"predict": "removes the given listener from the list of diagram change listeners", "true": "removes the given listener from the list of diagram change listeners", "bleu": 1.0, "rouge": 1.0}, {"predict": "gets a grid object that corresponds to the grid bounds", "true": "returns a connectivity grid object based on a hash value", "bleu": 0.17827531042796255, "rouge": 0.3}, {"predict": "strips the given string of a given string", "true": "removes any leading $ from the given string", "bleu": 0.2984745896009823, "rouge": 0.375}, {"predict": "clears the \" host context \" system property", "true": "clears the \" host context \" system property", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates a new p normalization attribute for this attribute", "true": "creates a new p norm", "bleu": 0.392814650900513, "rouge": 0.6024691358024692}, {"predict": "adds a separator to the log", "true": "add separator routines are not used in peers", "bleu": 0.15827883685397307, "rouge": 0.13926940639269406}, {"predict": "adds a chart viewer to the stage and displays it", "true": "adds a chart viewer to the stage and displays it", "bleu": 1.0, "rouge": 1.0}, {"predict": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "true": "returns a buffer to the pool , throwing away old buffers if the pool would exceed its allotted size", "bleu": 1.0, "rouge": 1.0}, {"predict": "accept a data point", "true": "accept a data point ( encapsulated in a chart event ) to plot", "bleu": 0.10539922456186433, "rouge": 0.4295774647887324}, {"predict": "moves this range to a particular range", "true": "assumptions : ranges are disjoint , non - contiguous , and ordered", "bleu": 0.07646493705380929, "rouge": 0.0}, {"predict": "support for get parent of node ; walks a dom tree until it finds the element which owns the at tr", "true": "support for get parent of node ; walks a dom tree until it finds the element which owns the at tr", "bleu": 1.0, "rouge": 1.0}, {"predict": "creates and starts a tail er for the given file", "true": "creates and starts a tail er for the given file", "bleu": 1.0, "rouge": 1.0}, {"predict": "is operating system os x", "true": "is operating system mac os ?", "bleu": 0.43989172475842214, "rouge": 0.7155425219941348}, {"predict": "returns the number of elements in this array", "true": "returns the number of items in the collection", "bleu": 0.46713797772820004, "rouge": 0.625}, {"predict": "creates new d view as n 1 dump dialog", "true": "creates new d view as n 1 dump dialog where the parent is a dialog", "bleu": 0.513417119032592, "rouge": 0.7176470588235294}, {"predict": "trims the string and trim the left", "true": "remove all spaces on right", "bleu": 0.1561969968460128, "rouge": 0.0}, {"predict": "add an object in the buffer", "true": "add a message in the buffer", "bleu": 0.4347208719449915, "rouge": 0.6666666666666666}, {"predict": "dispose of the request", "true": "closes the current form and returns to the previous form , releasing the edt in the process", "bleu": 0.013931732312048943, "rouge": 0.08567415730337079}, {"predict": "the result will be positive , if the line is on the left of p point else negative", "true": "returns the signed distance of this line from p point", "bleu": 0.10657284485555579, "rouge": 0.3012345679012346}, {"predict": "expands the given number string as a real number", "true": "expands the given number string as a real number", "bleu": 1.0, "rouge": 1.0}, {"predict": "compute a vector initialized with a single one", "true": "ones - return a vector full of 1 s", "bleu": 0.1862539773562041, "rouge": 0.232824427480916}, {"predict": "submits a requests for a set of permissions for an activity", "true": "submits a requests for a set of permissions for an activity", "bleu": 1.0, "rouge": 1.0}, {"predict": "tell the user of an error , and probably throw an exception", "true": "tell the user of an error , and probably throw an exception", "bleu": 1.0, "rouge": 1.0}, {"predict": "unit test for creating null ( ) of the deploy able property", "true": "setting a null property is the way maven 2 operates when the user specifies an empty property", "bleu": 0.08145723098662616, "rouge": 0.2006578947368421}, {"predict": "creates a new delete - xxx sub - command for an existing relation", "true": "creates a new delete - xxx sub - command for a set relation", "bleu": 0.7744031410142033, "rouge": 0.8461538461538461}, {"predict": "remove relative vertices and project from the graph", "true": "the following two methods remove cycles from the graph", "bleu": 0.2785146580372046, "rouge": 0.465648854961832}, {"predict": "returns a string representation of the given matrix", "true": "returns a string representation of the given matrix", "bleu": 1.0, "rouge": 1.0}, {"predict": "given a ' from ' pattern ( a la xsl : number ) , a match pattern and a context , find the first ancestor that matches the pattern ( including the context handed in )", "true": "given a ' from ' pattern ( a la xsl : number ) , a match pattern and a context , find the first ancestor that matches the pattern ( including the context handed in )", "bleu": 1.0, "rouge": 1.0}, {"predict": "kills a shell command", "true": "try to clean up as much as possible from a shell that ' s gotten itself wedged", "bleu": 0.018335190851298155, "rouge": 0.17134831460674158}, {"predict": "this is a facade method for the encoding operation", "true": "this is a facade method for the encoding operation", "bleu": 1.0, "rouge": 1.0}, {"predict": "a generic map of metrics map", "true": "creates a metrics object with the dimensions map immutable", "bleu": 0.1593301391270729, "rouge": 0.3860759493670886}, {"predict": "resolve class name into a class loader", "true": "resolve class is extended to acquire ( if present ) the location from which to load the specified class", "bleu": 0.047308627669118, "rouge": 0.21303841676367868}, {"predict": "check if a point is a creature", "true": "checks whether a re spawn point is within this area", "bleu": 0.17112717058426782, "rouge": 0.34205607476635513}, {"predict": "inserts an array of bytes at the specified position in the buffer", "true": "inserts a byte array", "bleu": 0.11498759556447223, "rouge": 0.27477477477477474}, {"predict": "this method will load the level file", "true": "below method will be used to fill the level cache", "bleu": 0.20024850746991507, "rouge": 0.45607476635514016}, {"predict": "helper to validate the file is not null and not valid values", "true": "helper to validate the contents of a \" long \" file on our o <unk> the format of the files are sequential 0 ' s of type long", "bleu": 0.07978146244503113, "rouge": 0.23318042813455656}, {"predict": "write the gathered data tab - separated into the given stream", "true": "saving method", "bleu": 0.09578464408619825, "rouge": 0.0}, {"predict": "get mask index", "true": "makes a masked value of a value", "bleu": 0.11909345107359583, "rouge": 0.0}, {"predict": "computes the duration for the next operation", "true": "computes the duration by subtracting start to the current time in milliseconds", "bleu": 0.17895451045590982, "rouge": 0.40197693574958815}, {"predict": "size + value 1 type id + value length + value 1 binary content +", "true": "size + value 1 type id + value length + value 1 binary content +", "bleu": 1.0, "rouge": 1.0}, {"predict": "handle the header of a file", "true": "checks to see if the file is in n <unk> or not , and then puts the file pointer in the right place to start reading the header for the file", "bleu": 0.004843310743411003, "rouge": 0.14454976303317535}, {"predict": "returns the buffered image that should be called on to run on con program", "true": "convenience method that takes a screenshot of the device and returns a buffered image for further processing", "bleu": 0.11165964299780826, "rouge": 0.19022869022869024}, {"predict": "inside the order root n , right , right of each widget , right by right selection in right ) , right inside those adjacent horizontally , right", "true": "find and connect widget s centered over other widget s", "bleu": 0.04327969719414172, "rouge": 0.05754716981132076}]